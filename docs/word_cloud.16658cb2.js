// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"l7Q1":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = ['about', 'above', 'after', 'again', 'all', 'also', 'am', 'an', 'and', 'another', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'before', 'being', 'below', 'between', 'both', 'but', 'by', 'came', 'can', 'cannot', 'come', 'could', 'did', 'do', 'does', 'doing', 'during', 'each', 'few', 'for', 'from', 'further', 'get', 'got', 'has', 'had', 'he', 'have', 'her', 'here', 'him', 'himself', 'his', 'how', 'if', 'in', 'into', 'is', 'it', 'its', 'itself', 'like', 'make', 'many', 'me', 'might', 'more', 'most', 'much', 'must', 'my', 'myself', 'never', 'now', 'of', 'on', 'only', 'or', 'other', 'our', 'ours', 'ourselves', 'out', 'over', 'own', 'said', 'same', 'see', 'should', 'since', 'so', 'some', 'still', 'such', 'take', 'than', 'that', 'the', 'their', 'theirs', 'them', 'themselves', 'then', 'there', 'these', 'they', 'this', 'those', 'through', 'to', 'too', 'under', 'until', 'up', 'very', 'was', 'way', 'we', 'well', 'were', 'what', 'where', 'when', 'which', 'while', 'who', 'whom', 'with', 'would', 'why', 'you', 'your', 'yours', 'yourself', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '$', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_']; // tell the world about the noise words.

exports.words = words;
},{}],"ZemB":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/**
 * \@todo Use .bind() in Tokenizer.prototype.attach().
 */
var Tokenizer = function () {};

Tokenizer.prototype.trim = function (array) {
  while (array[array.length - 1] == '') array.pop();

  while (array[0] == '') array.shift();

  return array;
}; // Expose an attach function that will patch String with new methods.


Tokenizer.prototype.attach = function () {
  var self = this;

  String.prototype.tokenize = function () {
    return self.tokenize(this);
  };
};

Tokenizer.prototype.tokenize = function () {};

module.exports = Tokenizer;
},{}],"gADh":[function(require,module,exports) {
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],"Bm0n":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],"pBGv":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"nq70":[function(require,module,exports) {
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {
  var keys = Object.keys(obj);
  var descriptors = {};

  for (var i = 0; i < keys.length; i++) {
    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
  }

  return descriptors;
};

var formatRegExp = /%[sdj%]/g;

exports.format = function (f) {
  if (!isString(f)) {
    var objects = [];

    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }

    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function (x) {
    if (x === '%%') return '%';
    if (i >= len) return x;

    switch (x) {
      case '%s':
        return String(args[i++]);

      case '%d':
        return Number(args[i++]);

      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }

      default:
        return x;
    }
  });

  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }

  return str;
}; // Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.


exports.deprecate = function (fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  } // Allow for deprecating things in the process of starting up.


  if (typeof process === 'undefined') {
    return function () {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;

  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }

      warned = true;
    }

    return fn.apply(this, arguments);
  }

  return deprecated;
};

var debugs = {};
var debugEnviron;

exports.debuglog = function (set) {
  if (isUndefined(debugEnviron)) debugEnviron = undefined || '';
  set = set.toUpperCase();

  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;

      debugs[set] = function () {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function () {};
    }
  }

  return debugs[set];
};
/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */

/* legacy: obj, showHidden, depth, colors*/


function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  }; // legacy...

  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];

  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  } // set default options


  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}

exports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics

inspect.colors = {
  'bold': [1, 22],
  'italic': [3, 23],
  'underline': [4, 24],
  'inverse': [7, 27],
  'white': [37, 39],
  'grey': [90, 39],
  'black': [30, 39],
  'blue': [34, 39],
  'cyan': [36, 39],
  'green': [32, 39],
  'magenta': [35, 39],
  'red': [31, 39],
  'yellow': [33, 39]
}; // Don't use 'blue' not visible on cmd.exe

inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};

function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}

function stylizeNoColor(str, styleType) {
  return str;
}

function arrayToHash(array) {
  var hash = {};
  array.forEach(function (val, idx) {
    hash[val] = true;
  });
  return hash;
}

function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.
  !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);

    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }

    return ret;
  } // Primitive types cannot have properties


  var primitive = formatPrimitive(ctx, value);

  if (primitive) {
    return primitive;
  } // Look up the keys of the object.


  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  } // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx


  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  } // Some type of object without properties can be shortcutted.


  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }

    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }

    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }

    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '',
      array = false,
      braces = ['{', '}']; // Make Array say that they are Array

  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  } // Make functions say that they are functions


  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  } // Make RegExps say that they are RegExps


  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  } // Make dates with properties first say the date


  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  } // Make error with message first say the error


  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);
  var output;

  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function (key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();
  return reduceToSingleString(output, base, braces);
}

function formatPrimitive(ctx, value) {
  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');

  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }

  if (isNumber(value)) return ctx.stylize('' + value, 'number');
  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is "object", so special case here.

  if (isNull(value)) return ctx.stylize('null', 'null');
}

function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}

function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];

  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
    } else {
      output.push('');
    }
  }

  keys.forEach(function (key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
    }
  });
  return output;
}

function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || {
    value: value[key]
  };

  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }

  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }

  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }

      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function (line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function (line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }

  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }

    name = JSON.stringify('' + key);

    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}

function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function (prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
} // NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.


function isArray(ar) {
  return Array.isArray(ar);
}

exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}

exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}

exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}

exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}

exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}

exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}

exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}

exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}

exports.isDate = isDate;

function isError(e) {
  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
}

exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}

exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
  typeof arg === 'undefined';
}

exports.isPrimitive = isPrimitive;
exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}

var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34

function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
} // log is just a thin wrapper to console.log that prepends a timestamp


exports.log = function () {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};
/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */


exports.inherits = require('inherits');

exports._extend = function (origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;
  var keys = Object.keys(add);
  var i = keys.length;

  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }

  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function') throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];

    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }

    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn,
      enumerable: false,
      writable: false,
      configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });
    var args = [];

    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn,
    enumerable: false,
    writable: false,
    configurable: true
  });
  return Object.defineProperties(fn, getOwnPropertyDescriptors(original));
};

exports.promisify.custom = kCustomPromisifiedSymbol;

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }

  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  } // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.


  function callbackified() {
    var args = [];

    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();

    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }

    var self = this;

    var cb = function () {
      return maybeCb.apply(self, arguments);
    }; // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)


    original.apply(this, args).then(function (ret) {
      process.nextTick(cb, null, ret);
    }, function (rej) {
      process.nextTick(callbackifyOnRejected, rej, cb);
    });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));
  return callbackified;
}

exports.callbackify = callbackify;
},{"./support/isBuffer":"gADh","inherits":"Bm0n","process":"pBGv"}],"nbJc":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.trim(text.split(/\W+/));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"aFPt":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords');

var Tokenizer = require('../tokenizers/aggressive_tokenizer'),
    tokenizer = new Tokenizer();

module.exports = function () {
  this.compare = function (stringA, stringB) {
    return this.process(stringA) == this.process(stringB);
  };

  this.attach = function () {
    var phonetic = this;

    String.prototype.soundsLike = function (compareTo) {
      return phonetic.compare(this, compareTo);
    };

    String.prototype.phonetics = function () {
      return phonetic.process(this);
    };

    String.prototype.tokenizeAndPhoneticize = function (keepStops) {
      var phoneticizedTokens = [];
      tokenizer.tokenize(this).forEach(function (token) {
        if (keepStops || stopwords.words.indexOf(token) < 0) phoneticizedTokens.push(token.phonetics());
      });
      return phoneticizedTokens;
    };
  };
};
},{"../util/stopwords":"l7Q1","../tokenizers/aggressive_tokenizer":"nbJc"}],"fHeJ":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Phonetic = require('./phonetic');

function transformLipps(token) {
  return token.replace(/[bfpv]/g, '1');
}

function transformThroats(token) {
  return token.replace(/[cgjkqsxz]/g, '2');
}

function transformToungue(token) {
  return token.replace(/[dt]/g, '3');
}

function transformL(token) {
  return token.replace(/l/g, '4');
}

function transformHum(token) {
  return token.replace(/[mn]/g, '5');
}

function transformR(token) {
  return token.replace(/r/g, '6');
}

function condense(token) {
  return token.replace(/(\d)?\1+/g, '$1');
}

function padRight0(token) {
  if (token.length < 4) return token + Array(4 - token.length).join('0');else return token;
}

function transform(token) {
  return transformLipps(transformThroats(transformToungue(transformL(transformHum(transformR(token))))));
}

var SoundEx = new Phonetic();
module.exports = SoundEx;

SoundEx.process = function (token, maxLength) {
  token = token.toLowerCase();
  var transformed = condense(transform(token.substr(1, token.length - 1))); // anything that isn't a digit goes
  // deal with duplicate INITIAL consonant SOUNDS

  transformed = transformed.replace(new RegExp("^" + transform(token.charAt(0))), '');
  return token.charAt(0).toUpperCase() + padRight0(transformed.replace(/\D/g, '')).substr(0, maxLength && maxLength - 1 || 3);
}; // export for tests;


SoundEx.transformLipps = transformLipps;
SoundEx.transformThroats = transformThroats;
SoundEx.transformToungue = transformToungue;
SoundEx.transformL = transformL;
SoundEx.transformHum = transformHum;
SoundEx.transformR = transformR;
SoundEx.condense = condense;
SoundEx.padRight0 = padRight0;
},{"./phonetic":"aFPt"}],"WElW":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Phonetic = require('./phonetic');

function dedup(token) {
  return token.replace(/([^c])\1/g, '$1');
}

function dropInitialLetters(token) {
  if (token.match(/^(kn|gn|pn|ae|wr)/)) return token.substr(1, token.length - 1);
  return token;
}

function dropBafterMAtEnd(token) {
  return token.replace(/mb$/, 'm');
}

function cTransform(token) {
  token = token.replace(/([^s]|^)(c)(h)/g, '$1x$3').trim();
  token = token.replace(/cia/g, 'xia');
  token = token.replace(/c(i|e|y)/g, 's$1');
  token = token.replace(/c/g, 'k');
  return token;
}

function dTransform(token) {
  token = token.replace(/d(ge|gy|gi)/g, 'j$1');
  token = token.replace(/d/g, 't');
  return token;
}

function dropG(token) {
  token = token.replace(/gh(^$|[^aeiou])/g, 'h$1');
  token = token.replace(/g(n|ned)$/g, '$1');
  return token;
}

function transformG(token) {
  token = token.replace(/gh/g, 'f');
  token = token.replace(/([^g]|^)(g)(i|e|y)/g, '$1j$3');
  token = token.replace(/gg/g, 'g');
  token = token.replace(/g/g, 'k');
  return token;
}

function dropH(token) {
  return token.replace(/([aeiou])h([^aeiou]|$)/g, '$1$2');
}

function transformCK(token) {
  return token.replace(/ck/g, 'k');
}

function transformPH(token) {
  return token.replace(/ph/g, 'f');
}

function transformQ(token) {
  return token.replace(/q/g, 'k');
}

function transformS(token) {
  return token.replace(/s(h|io|ia)/g, 'x$1');
}

function transformT(token) {
  token = token.replace(/t(ia|io)/g, 'x$1');
  token = token.replace(/th/, '0');
  return token;
}

function dropT(token) {
  return token.replace(/tch/g, 'ch');
}

function transformV(token) {
  return token.replace(/v/g, 'f');
}

function transformWH(token) {
  return token.replace(/^wh/, 'w');
}

function dropW(token) {
  return token.replace(/w([^aeiou]|$)/g, '$1');
}

function transformX(token) {
  token = token.replace(/^x/, 's');
  token = token.replace(/x/g, 'ks');
  return token;
}

function dropY(token) {
  return token.replace(/y([^aeiou]|$)/g, '$1');
}

function transformZ(token) {
  return token.replace(/z/, 's');
}

function dropVowels(token) {
  return token.charAt(0) + token.substr(1, token.length).replace(/[aeiou]/g, '');
}

var Metaphone = new Phonetic();
module.exports = Metaphone;

Metaphone.process = function (token, maxLength) {
  maxLength == maxLength || 32;
  token = token.toLowerCase();
  token = dedup(token);
  token = dropInitialLetters(token);
  token = dropBafterMAtEnd(token);
  token = transformCK(token);
  token = cTransform(token);
  token = dTransform(token);
  token = dropG(token);
  token = transformG(token);
  token = dropH(token);
  token = transformPH(token);
  token = transformQ(token);
  token = transformS(token);
  token = transformX(token);
  token = transformT(token);
  token = dropT(token);
  token = transformV(token);
  token = transformWH(token);
  token = dropW(token);
  token = dropY(token);
  token = transformZ(token);
  token = dropVowels(token);
  token.toUpperCase();
  if (token.length >= maxLength) token = token.substring(0, maxLength);
  return token.toUpperCase();
}; // expose functions for testing    


Metaphone.dedup = dedup;
Metaphone.dropInitialLetters = dropInitialLetters;
Metaphone.dropBafterMAtEnd = dropBafterMAtEnd;
Metaphone.cTransform = cTransform;
Metaphone.dTransform = dTransform;
Metaphone.dropG = dropG;
Metaphone.transformG = transformG;
Metaphone.dropH = dropH;
Metaphone.transformCK = transformCK;
Metaphone.transformPH = transformPH;
Metaphone.transformQ = transformQ;
Metaphone.transformS = transformS;
Metaphone.transformT = transformT;
Metaphone.dropT = dropT;
Metaphone.transformV = transformV;
Metaphone.transformWH = transformWH;
Metaphone.dropW = dropW;
Metaphone.transformX = transformX;
Metaphone.dropY = dropY;
Metaphone.transformZ = transformZ;
Metaphone.dropVowels = dropVowels;
},{"./phonetic":"aFPt"}],"IUBO":[function(require,module,exports) {

/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Phonetic = require('./phonetic');

var DoubleMetaphone = new Phonetic();
module.exports = DoubleMetaphone;

function isVowel(c) {
  return c && c.match(/[aeiouy]/i);
}

function truncate(string, length) {
  if (string.length >= length) string = string.substring(0, length);
  return string;
}

function process(token, maxLength) {
  token = token.toUpperCase();
  var primary = '',
      secondary = '';
  var pos = 0;
  maxLength == maxLength || 32;

  function subMatch(startOffset, stopOffset, terms) {
    return subMatchAbsolute(pos + startOffset, pos + stopOffset, terms);
  }

  function subMatchAbsolute(startOffset, stopOffset, terms) {
    return terms.indexOf(token.substring(startOffset, stopOffset)) > -1;
  }

  function addSecondary(primaryAppendage, secondaryAppendage) {
    primary += primaryAppendage;
    secondary += secondaryAppendage;
  }

  function add(primaryAppendage) {
    addSecondary(primaryAppendage, primaryAppendage);
  }

  function addCompressedDouble(c, encoded) {
    if (token[pos + 1] == c) pos++;
    add(encoded || c);
  }

  function handleC() {
    if (pos >= 1 && !isVowel(token[pos - 2]) && token[pos - 1] == 'A' && token[pos + 1] == 'H' && token[pos + 2] != 'I' || subMatch(-2, 4, ['BACHER', 'MACHER'])) {
      add('K');
      pos++;
    } else if (pos == 0 && token.substring(1, 6) == 'EASAR') {
      add('S');
      add('S');
      add('R');
      pos += 6;
    } else if (token.substring(pos + 1, pos + 4) == 'HIA') {
      add('K');
      pos++;
    } else if (token[pos + 1] == 'H') {
      if (pos > 0 && token.substring(pos + 2, pos + 4) == 'AE') {
        addSecondary('K', 'X');
        pos++;
      } else if (pos == 0 && (subMatch(1, 6, ['HARAC', 'HARIS']) || subMatch(1, 4, ['HOR', 'HUM', 'HIA', 'HEM'])) && token.substring(pos + 1, pos + 5) != 'HORE') {
        add('K');
        pos++;
      } else {
        if (subMatchAbsolute(0, 3, ['VAN', 'VON']) || token.substring(0, 3) == 'SCH' || subMatch(-2, 4, ['ORCHES', 'ARCHIT', 'ORCHID']) || subMatch(2, 3, ['T', 'S']) || (subMatch(-1, 0, ['A', 'O', 'U', 'E']) || pos == 0) && subMatch(2, 3, ['B', 'F', 'H', 'L', 'M', 'N', 'R', 'V', 'W'])) {
          add('K');
        } else if (pos > 0) {
          if (token.substring(0, 2) == 'MC') {
            add('K');
          } else {
            addSecondary('X', 'K');
          }
        } else {
          add('X');
        }

        pos++;
      }
    } else if (token.substring(pos, pos + 2) == 'CZ' && token.substring(pos - 2, pos + 1) != 'WICZ') {
      addSecondary('S', 'X');
      pos++;
    } else if (token.substring(pos, pos + 3) == 'CIA') {
      add('X');
      pos += 2;
    } else if (token[pos + 1] == 'C' && pos != 1 && token[0] != 'M') {
      if (['I', 'E', 'H'].indexOf(token[pos + 2]) > -1 && token.substring(pos + 2, pos + 4) != 'HU') {
        if (pos == 1 && token[pos - 1] == 'A' || subMatch(-1, 4, ['UCCEE', 'UCCES'])) {
          add('KS');
        } else {
          add('X');
        }

        pos += 2;
      } else {
        add('K');
        pos++;
      }
    } else if (['K', 'G', 'Q'].indexOf(token[pos + 1]) > -1) {
      add('K');
      pos++;
    } else if (['E', 'I', 'Y'].indexOf(token[pos + 1]) > -1) {
      if (subMatch(1, 3, ['IA', 'IE', 'IO'])) {
        addSecondary('S', 'X');
      } else {
        add('S');
      }

      pos++;
    } else {
      add('K');

      if (token[pos + 1] == ' ' && ['C', 'Q', 'G'].indexOf(token[pos + 2])) {
        pos += 2;
      } else if (['C', 'K', 'Q'].indexOf(token[pos + 1]) > -1 && !subMatch(1, 3, ['CE', 'CI'])) {
        pos++;
      }
    }
  }

  function handleD() {
    if (token[pos + 1] == 'G') {
      if (['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1) {
        add('J');
        pos += 2;
      } else {
        add('TK');
        pos++;
      }
    } else if (token[pos + 1] == 'T') {
      add('T');
      pos++;
    } else addCompressedDouble('D', 'T');
  }

  function handleG() {
    if (token[pos + 1] == 'H') {
      if (pos > 0 && !isVowel(token[pos - 1])) {
        add('K');
        pos++;
      } else if (pos == 0) {
        if (token[pos + 2] == 'I') {
          add('J');
        } else {
          add('K');
        }

        pos++;
      } else if (pos > 1 && (['B', 'H', 'D'].indexOf(token[pos - 2]) > -1 || ['B', 'H', 'D'].indexOf(token[pos - 3]) > -1 || ['B', 'H'].indexOf(token[pos - 4]) > -1)) {
        pos++;
      } else {
        if (pos > 2 && token[pos - 1] == 'U' && ['C', 'G', 'L', 'R', 'T'].indexOf(token[pos - 3]) > -1) {
          add('F');
        } else if (token[pos - 1] != 'I') {
          add('K');
        }

        pos++;
      }
    } else if (token[pos + 1] == 'N') {
      if (pos == 1 && startsWithVowel && !slavoGermanic) {
        addSecondary('KN', 'N');
      } else {
        if (token.substring(pos + 2, pos + 4) != 'EY' && token[pos + 1] != 'Y' && !slavoGermanic) {
          addSecondary('N', 'KN');
        } else add('KN');
      }

      pos++;
    } else if (token.substring(pos + 1, pos + 3) == 'LI' && !slavoGermanic) {
      addSecondary('KL', 'L');
      pos++;
    } else if (pos == 0 && (token[pos + 1] == 'Y' || subMatch(1, 3, ['ES', 'EP', 'EB', 'EL', 'EY', 'IB', 'IL', 'IN', 'IE', 'EI', 'ER']))) {
      addSecondary('K', 'J');
    } else {
      addCompressedDouble('G', 'K');
    }
  }

  function handleH() {
    // keep if starts a word or is surrounded by vowels
    if ((pos == 0 || isVowel(token[pos - 1])) && isVowel(token[pos + 1])) {
      add('H');
      pos++;
    }
  }

  function handleJ() {
    var jose = token.substring(pos + 1, pos + 4) == 'OSE';

    if (san || jose) {
      if (pos == 0 && token[pos + 4] == ' ' || san) {
        add('H');
      } else add('J', 'H');
    } else {
      if (pos == 0
      /* && !jose*/
      ) {
          addSecondary('J', 'A');
        } else if (isVowel(token[pos - 1]) && !slavoGermanic && (token[pos + 1] == 'A' || token[pos + 1] == 'O')) {
        addSecondary('J', 'H');
      } else if (pos == token.length - 1) {
        addSecondary('J', ' ');
      } else addCompressedDouble('J');
    }
  }

  function handleL() {
    if (token[pos + 1] == 'L') {
      if (pos == token.length - 3 && (subMatch(-1, 3, ['ILLO', 'ILLA', 'ALLE']) || token.substring(pos - 1, pos + 3) == 'ALLE' && (subMatch(-2, -1, ['AS', 'OS']) > -1 || ['A', 'O'].indexOf(token[token.length - 1]) > -1))) {
        addSecondary('L', '');
        pos++;
        return;
      }

      pos++;
    }

    add('L');
  }

  function handleM() {
    addCompressedDouble('M');
    if (token[pos - 1] == 'U' && token[pos + 1] == 'B' && (pos == token.length - 2 || token.substring(pos + 2, pos + 4) == 'ER')) pos++;
  }

  function handleP() {
    if (token[pos + 1] == 'H') {
      add('F');
      pos++;
    } else {
      addCompressedDouble('P');
      if (token[pos + 1] == 'B') pos++;
    }
  }

  function handleR() {
    if (pos == token.length - 1 && !slavoGermanic && token.substring(pos - 2, pos) == 'IE' && !subMatch(-4, -3, ['ME', 'MA'])) {
      addSecondary('', 'R');
    } else addCompressedDouble('R');
  }

  function handleS() {
    if (pos == 0 && token.substring(0, 5) == 'SUGAR') {
      addSecondary('X', 'S');
    } else if (token[pos + 1] == 'H') {
      if (subMatch(2, 5, ['EIM', 'OEK', 'OLM', 'OLZ'])) {
        add('S');
      } else {
        add('X');
      }

      pos++;
    } else if (subMatch(1, 3, ['IO', 'IA'])) {
      if (slavoGermanic) {
        add('S');
      } else {
        addSecondary('S', 'X');
      }

      pos++;
    } else if (pos == 0 && ['M', 'N', 'L', 'W'].indexOf(token[pos + 1]) > -1 || token[pos + 1] == 'Z') {
      addSecondary('S', 'X');
      if (token[pos + 1] == 'Z') pos++;
    } else if (token.substring(pos, pos + 2) == 'SC') {
      if (token[pos + 2] == 'H') {
        if (subMatch(3, 5, ['ER', 'EN'])) {
          addSecondary('X', 'SK');
        } else if (subMatch(3, 5, ['OO', 'UY', 'ED', 'EM'])) {
          add('SK');
        } else if (pos == 0 && !isVowel(token[3]) && token[3] != 'W') {
          addSecondary('X', 'S');
        } else {
          add('X');
        }
      } else if (['I', 'E', 'Y'].indexOf(token[pos + 2]) > -1) {
        add('S');
      } else {
        add('SK');
      }

      pos += 2;
    } else if (pos == token.length - 1 && subMatch(-2, 0, ['AI', 'OI'])) {
      addSecondary('', 'S');
    } else if (token[pos + 1] != 'L' && token[pos - 1] != 'A' && token[pos - 1] != 'I') {
      addCompressedDouble('S');
      if (token[pos + 1] == 'Z') pos++;
    }
  }

  function handleT() {
    if (token.substring(pos + 1, pos + 4) == 'ION') {
      add('XN');
      pos += 3;
    } else if (subMatch(1, 3, ['IA', 'CH'])) {
      add('X');
      pos += 2;
    } else if (token[pos + 1] == 'H' || token.substring(1, 2) == 'TH') {
      if (subMatch(2, 4, ['OM', 'AM']) || ['VAN ', 'VON '].indexOf(token.substring(0, 4)) > -1 || token.substring(0, 3) == 'SCH') {
        add('T');
      } else addSecondary('0', 'T');

      pos++;
    } else {
      addCompressedDouble('T');
      if (token[pos + 1] == 'D') pos++;
    }
  }

  function handleX() {
    if (pos == 0) {
      add('S');
    } else if (!(pos == token.length - 1 && (['IAU', 'EAU', 'IEU'].indexOf(token.substring(pos - 3, pos)) > -1 || ['AU', 'OU'].indexOf(token.substring(pos - 2, pos)) > -1))) {
      add('KS');
    }
  }

  function handleW() {
    if (pos == 0) {
      if (token[1] == 'H') {
        add('A');
      } else if (isVowel(token[1])) {
        addSecondary('A', 'F');
      }
    } else if (pos == token.length - 1 && isVowel(token[pos - 1]) || subMatch(-1, 4, ['EWSKI', 'EWSKY', 'OWSKI', 'OWSKY']) || token.substring(0, 3) == 'SCH') {
      addSecondary('', 'F');
      pos++;
    } else if (['ICZ', 'ITZ'].indexOf(token.substring(pos + 1, pos + 4)) > -1) {
      addSecondary('TS', 'FX');
      pos += 3;
    }
  }

  function handleZ() {
    if (token[pos + 1] == 'H') {
      add('J');
      pos++;
    } else if (subMatch(1, 3, ['ZO', 'ZI', 'ZA']) || slavoGermanic && pos > 0 && token[pos - 1] != 'T') {
      addSecondary('S', 'TS');
      pos++;
    } else addCompressedDouble('Z', 'S');
  }

  var san = token.substring(0, 3) == 'SAN';
  var startsWithVowel = isVowel(token[0]);
  var slavoGermanic = token.match(/(W|K|CZ|WITZ)/);

  if (subMatch(0, 2, ['GN', 'KN', 'PN', 'WR', 'PS'])) {
    pos++;
  }

  while (pos < token.length) {
    switch (token[pos]) {
      case 'A':
      case 'E':
      case 'I':
      case 'O':
      case 'U':
      case 'Y':
      case 'Ê':
      case 'É':
      case 'É':
      case 'À':
        if (pos == 0) add('A');
        break;

      case 'B':
        addCompressedDouble('B', 'P');
        break;

      case 'C':
        handleC();
        break;

      case 'Ç':
        add("S");
        break;

      case 'D':
        handleD();
        break;

      case 'F':
      case 'K':
      case 'N':
        addCompressedDouble(token[pos]);
        break;

      case 'G':
        handleG();
        break;

      case 'H':
        handleH();
        break;

      case 'J':
        handleJ();
        break;

      case 'L':
        handleL();
        break;

      case 'M':
        handleM();
        break;

      case 'Ñ':
        add('N');
        break;

      case 'P':
        handleP();
        break;

      case 'Q':
        addCompressedDouble('Q', 'K');
        break;

      case 'R':
        handleR();
        break;

      case 'S':
        handleS();
        break;

      case 'T':
        handleT();
        break;

      case 'V':
        addCompressedDouble('V', 'F');
        break;

      case 'W':
        handleW();
        break;

      case 'X':
        handleX();
        break;

      case 'Z':
        handleZ();
        break;
    }

    if (primary.length >= maxLength && secondary.length >= maxLength) {
      break;
    }

    pos++;
  }

  return [truncate(primary, maxLength), truncate(secondary, maxLength)];
}

function compare(stringA, stringB) {
  var encodingsA = process(stringA),
      encodingsB = process(stringB);
  return encodingsA[0] == encodingsB[0] || encodingsA[1] == encodingsB[1];
}

;
DoubleMetaphone.compare = compare;
DoubleMetaphone.process = process;
DoubleMetaphone.isVowel = isVowel;
},{"./phonetic":"aFPt"}],"yBLz":[function(require,module,exports) {

/*
Copyright (c) 2012, Alexy Maslenninkov

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/*
 * Daitch-Mokotoff Soundex Coding
 *
 * The Daitch-Mokotoff Soundex System was created by Randy Daitch and Gary
 * Mokotoff of the Jewish Genealogical Society because they concluded the system
 * developed by Robert Russell in 1918, and in use today by the U.S. National
 * Archives and Records Administration (NARA) does not apply well to many Slavic
 * and Yiddish surnames.  It also includes refinements that are independent of
 * ethnic considerations.
 *
 * The rules for converting surnames into D-M Code numbers are listed below.
 * They are followed by the coding chart.
 *
 * 1. Names are coded to six digits, each digit representing a sound listed in
 * the coding chart (below).
 *
 * 2. When a name lacks enough coded sounds for six digits, use zeros to fill to
 * six digits. GOLDEN which has only four coded sounds [G-L-D-N] is coded as
 * 583600.
 *
 * 3. The letters A, E, I, O, U, J, and Y are always coded at the beginning of a
 * name as in Alpert 087930. In any other situation, they are ignored except
 * when two of them form a pair and the pair comes before a vowel, as in Breuer
 * 791900 but not Freud.
 *
 * 4. The letter H is coded at the beginning of a name, as in Haber 579000, or
 * preceding a vowel, as in Manheim 665600, otherwise it is not coded.
 *
 * 5. When adjacent sounds can combine to form a larger sound, they are given
 * the code number of the larger sound.  Mintz which is not coded MIN-T-Z but
 * MIN-TZ 664000.
 *
 * 6. When adjacent letters have the same code number, they are coded as one
 * sound, as in TOPF, which is not coded TO-P-F 377000 but TO-PF 370000.
 * Exceptions to this rule are the letter combinations MN and NM, whose letters
 * are coded separately, as in Kleinman, which is coded 586660 not 586600.
 *
 * 7. When a surname consists or more than one word, it is coded as if one word,
 * such as Ben Aron which is treated as Benaron.
 *
 * 8. Several letter and letter combinations pose the problem that they may
 * sound in one of two ways.  The letter and letter combinations CH, CK, C, J,
 * and RS are assigned two possible code numbers.
 *
 * For more info, see http://www.jewishgen.org/InfoFiles/soundex.html
 */

/**
 * D-M transformation table in the form of finite-state machine.
 * Every element of the table having member with zero index represents
 * legal FSM state; every non-zero key is the transition rule.
 *
 * Every legal state comprises tree values chosen according to the position
 * of the letter combination in the word:
 *   0: start of a word;
 *   1: before a vowel;
 *   2: any other situation.
 */
var codes = {
  A: {
    0: [0, -1, -1],
    I: [[0, 1, -1]],
    J: [[0, 1, -1]],
    Y: [[0, 1, -1]],
    U: [[0, 7, -1]]
  },
  B: [[7, 7, 7]],
  C: {
    0: [5, 5, 5],
    Z: {
      0: [4, 4, 4],
      S: [[4, 4, 4]]
    },
    S: {
      0: [4, 4, 4],
      Z: [[4, 4, 4]]
    },
    K: [[5, 5, 5], [45, 45, 45]],
    H: {
      0: [5, 5, 5],
      S: [[5, 54, 54]]
    }
  },
  D: {
    0: [3, 3, 3],
    T: [[3, 3, 3]],
    Z: {
      0: [4, 4, 4],
      H: [[4, 4, 4]],
      S: [[4, 4, 4]]
    },
    S: {
      0: [4, 4, 4],
      H: [[4, 4, 4]],
      Z: [[4, 4, 4]]
    },
    R: {
      S: [[4, 4, 4]],
      Z: [[4, 4, 4]]
    }
  },
  E: {
    0: [0, -1, -1],
    I: [[0, 1, -1]],
    J: [[0, 1, -1]],
    Y: [[0, 1, -1]],
    U: [[1, 1, -1]],
    W: [[1, 1, -1]]
  },
  F: {
    0: [7, 7, 7],
    B: [[7, 7, 7]]
  },
  G: [[5, 5, 5]],
  H: [[5, 5, -1]],
  I: {
    0: [0, -1, -1],
    A: [[1, -1, -1]],
    E: [[1, -1, -1]],
    O: [[1, -1, -1]],
    U: [[1, -1, -1]]
  },
  J: [[4, 4, 4]],
  K: {
    0: [5, 5, 5],
    H: [[5, 5, 5]],
    S: [[5, 54, 54]]
  },
  L: [[8, 8, 8]],
  M: {
    0: [6, 6, 6],
    N: [[66, 66, 66]]
  },
  N: {
    0: [6, 6, 6],
    M: [[66, 66, 66]]
  },
  O: {
    0: [0, -1, -1],
    I: [[0, 1, -1]],
    J: [[0, 1, -1]],
    Y: [[0, 1, -1]]
  },
  P: {
    0: [7, 7, 7],
    F: [[7, 7, 7]],
    H: [[7, 7, 7]]
  },
  Q: [[5, 5, 5]],
  R: {
    0: [9, 9, 9],
    Z: [[94, 94, 94], [94, 94, 94]],
    S: [[94, 94, 94], [94, 94, 94]]
  },
  S: {
    0: [4, 4, 4],
    Z: {
      0: [4, 4, 4],
      T: [[2, 43, 43]],
      C: {
        Z: [[2, 4, 4]],
        S: [[2, 4, 4]]
      },
      D: [[2, 43, 43]]
    },
    D: [[2, 43, 43]],
    T: {
      0: [2, 43, 43],
      R: {
        Z: [[2, 4, 4]],
        S: [[2, 4, 4]]
      },
      C: {
        H: [[2, 4, 4]]
      },
      S: {
        H: [[2, 4, 4]],
        C: {
          H: [[2, 4, 4]]
        }
      }
    },
    C: {
      0: [2, 4, 4],
      H: {
        0: [4, 4, 4],
        T: {
          0: [2, 43, 43],
          S: {
            C: {
              H: [[2, 4, 4]]
            },
            H: [[2, 4, 4]]
          },
          C: {
            H: [[2, 4, 4]]
          }
        },
        D: [[2, 43, 43]]
      }
    },
    H: {
      0: [4, 4, 4],
      T: {
        0: [2, 43, 43],
        C: {
          H: [[2, 4, 4]]
        },
        S: {
          H: [[2, 4, 4]]
        }
      },
      C: {
        H: [[2, 4, 4]]
      },
      D: [[2, 43, 43]]
    }
  },
  T: {
    0: [3, 3, 3],
    C: {
      0: [4, 4, 4],
      H: [[4, 4, 4]]
    },
    Z: {
      0: [4, 4, 4],
      S: [[4, 4, 4]]
    },
    S: {
      0: [4, 4, 4],
      Z: [[4, 4, 4]],
      H: [[4, 4, 4]],
      C: {
        H: [[4, 4, 4]]
      }
    },
    T: {
      S: {
        0: [4, 4, 4],
        Z: [[4, 4, 4]],
        C: {
          H: [[4, 4, 4]]
        }
      },
      C: {
        H: [[4, 4, 4]]
      },
      Z: [[4, 4, 4]]
    },
    H: [[3, 3, 3]],
    R: {
      Z: [[4, 4, 4]],
      S: [[4, 4, 4]]
    }
  },
  U: {
    0: [0, -1, -1],
    E: [[0, -1, -1]],
    I: [[0, 1, -1]],
    J: [[0, 1, -1]],
    Y: [[0, 1, -1]]
  },
  V: [[7, 7, 7]],
  W: [[7, 7, 7]],
  X: [[5, 54, 54]],
  Y: [[1, -1, -1]],
  Z: {
    0: [4, 4, 4],
    D: {
      0: [2, 43, 43],
      Z: {
        0: [2, 4, 4],
        H: [[2, 4, 4]]
      }
    },
    H: {
      0: [4, 4, 4],
      D: {
        0: [2, 43, 43],
        Z: {
          H: [[2, 4, 4]]
        }
      }
    },
    S: {
      0: [4, 4, 4],
      H: [[4, 4, 4]],
      C: {
        H: [[4, 4, 4]]
      }
    }
  }
};

function process(word, codeLength) {
  codeLength = codeLength || 6;
  word = word.toUpperCase();
  var output = '';
  var pos = 0,
      lastCode = -1;

  while (pos < word.length) {
    var substr = word.slice(pos);
    var rules = findRules(substr);
    var code;

    if (pos == 0) {
      // at the beginning of the word
      code = rules.mapping[0];
    } else if (substr[rules.length] && findRules(substr[rules.length]).mapping[0] == 0) {
      // before a vowel
      code = rules.mapping[1];
    } else {
      // any other situation
      code = rules.mapping[2];
    }

    if (code != -1 && code != lastCode) output += code;
    lastCode = code;
    pos += rules.length;
  }

  return normalizeLength(output, codeLength);
}

function findRules(str) {
  var state = codes[str[0]];
  var legalState = state || [[-1, -1, -1]],
      charsInvolved = 1;

  for (var offs = 1; offs < str.length; offs++) {
    if (!state || !state[str[offs]]) break;
    state = state[str[offs]];

    if (state[0]) {
      legalState = state;
      charsInvolved = offs + 1;
    }
  }

  return {
    length: charsInvolved,
    mapping: legalState[0]
  };
}
/**
 * Pad right with zeroes or cut excess symbols to fit length
 */


function normalizeLength(token, length) {
  length = length || 6;

  if (token.length < length) {
    token += new Array(length - token.length + 1).join('0');
  }

  return token.slice(0, length);
}

var Phonetic = require('./phonetic');

var soundex = new Phonetic();
soundex.process = process;
module.exports = soundex;
},{"./phonetic":"aFPt"}],"W4ba":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords');

var Tokenizer = require('../tokenizers/aggressive_tokenizer');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.addStopWord = function (stopWord) {
    stopwords.words.push(stopWord);
  };

  stemmer.addStopWords = function (moreStopWords) {
    stopwords.words = stopwords.words.concat(moreStopWords);
  };

  stemmer.removeStopWord = function (stopWord) {
    this.removeStopWords([stopWord]);
  };

  stemmer.removeStopWords = function (moreStopWords) {
    moreStopWords.forEach(function (stopWord) {
      var idx = stopwords.words.indexOf(stopWord);

      if (idx >= 0) {
        stopwords.words.splice(idx, 1);
      }
    });
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    var lowercaseText = text.toLowerCase();
    var tokens = new Tokenizer().tokenize(lowercaseText);

    if (keepStops) {
      tokens.forEach(function (token) {
        stemmedTokens.push(stemmer.stem(token));
      });
    } else {
      tokens.forEach(function (token) {
        if (stopwords.words.indexOf(token) == -1) stemmedTokens.push(stemmer.stem(token));
      });
    }

    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords":"l7Q1","../tokenizers/aggressive_tokenizer":"nbJc"}],"hFgZ":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Stemmer = require('./stemmer'); // denote groups of consecutive consonants with a C and consecutive vowels
// with a V.


function categorizeGroups(token) {
  return token.replace(/[^aeiouy]+y/g, 'CV').replace(/[aeiou]+/g, 'V').replace(/[^V]+/g, 'C');
} // denote single consonants with a C and single vowels with a V


function categorizeChars(token) {
  return token.replace(/[^aeiouy]y/g, 'CV').replace(/[aeiou]/g, 'V').replace(/[^V]/g, 'C');
} // calculate the "measure" M of a word. M is the count of VC sequences dropping
// an initial C if it exists and a trailing V if it exists.


function measure(token) {
  if (!token) return -1;
  return categorizeGroups(token).replace(/^C/, '').replace(/V$/, '').length / 2;
} // determine if a token end with a double consonant i.e. happ


function endsWithDoublCons(token) {
  return token.match(/([^aeiou])\1$/);
} // replace a pattern in a word. if a replacement occurs an optional callback
// can be called to post-process the result. if no match is made NULL is
// returned.


function attemptReplace(token, pattern, replacement, callback) {
  var result = null;
  if (typeof pattern == 'string' && token.substr(0 - pattern.length) == pattern) result = token.replace(new RegExp(pattern + '$'), replacement);else if (pattern instanceof RegExp && token.match(pattern)) result = token.replace(pattern, replacement);
  if (result && callback) return callback(result);else return result;
} // attempt to replace a list of patterns/replacements on a token for a minimum
// measure M.


function attemptReplacePatterns(token, replacements, measureThreshold) {
  var replacement = token;

  for (var i = 0; i < replacements.length; i++) {
    if (measureThreshold == null || measure(attemptReplace(token, replacements[i][0], replacements[i][1])) > measureThreshold) {
      replacement = attemptReplace(replacement, replacements[i][0], replacements[i][2]) || replacement;
    }
  }

  return replacement;
} // replace a list of patterns/replacements on a word. if no match is made return
// the original token.


function replacePatterns(token, replacements, measureThreshold) {
  return attemptReplacePatterns(token, replacements, measureThreshold) || token;
} // TODO: this should replace all of the messy replacement stuff above


function replaceRegex(token, regex, includeParts, minimumMeasure) {
  var parts;
  var result = '';

  if (regex.test(token)) {
    parts = regex.exec(token);
    includeParts.forEach(function (i) {
      result += parts[i];
    });
  }

  if (measure(result) > minimumMeasure) {
    return result;
  }

  return null;
} // step 1a as defined for the porter stemmer algorithm. 


function step1a(token) {
  if (token.match(/(ss|i)es$/)) {
    return token.replace(/(ss|i)es$/, '$1');
  }

  if (token.substr(-1) == 's' && token.substr(-2, 1) != 's' && token.length > 2) {
    return token.replace(/s?$/, '');
  }

  return token;
} // step 1b as defined for the porter stemmer algorithm. 


function step1b(token) {
  if (token.substr(-3) == 'eed') {
    if (measure(token.substr(0, token.length - 3)) > 0) return token.replace(/eed$/, 'ee');
  } else {
    var result = attemptReplace(token, /(ed|ing)$/, '', function (token) {
      if (categorizeGroups(token).indexOf('V') >= 0) {
        result = attemptReplacePatterns(token, [['at', '', 'ate'], ['bl', '', 'ble'], ['iz', '', 'ize']]);

        if (result != token) {
          return result;
        } else {
          if (endsWithDoublCons(token) && token.match(/[^lsz]$/)) {
            return token.replace(/([^aeiou])\1$/, '$1');
          }

          if (measure(token) == 1 && categorizeChars(token).substr(-3) == 'CVC' && token.match(/[^wxy]$/)) {
            return token + 'e';
          }
        }

        return token;
      }

      return null;
    });

    if (result) {
      return result;
    }
  }

  return token;
} // step 1c as defined for the porter stemmer algorithm. 


function step1c(token) {
  var categorizedGroups = categorizeGroups(token);

  if (token.substr(-1) == 'y' && categorizedGroups.substr(0, categorizedGroups.length - 1).indexOf('V') > -1) {
    return token.replace(/y$/, 'i');
  }

  return token;
} // step 2 as defined for the porter stemmer algorithm. 


function step2(token) {
  token = replacePatterns(token, [['ational', '', 'ate'], ['tional', '', 'tion'], ['enci', '', 'ence'], ['anci', '', 'ance'], ['izer', '', 'ize'], ['abli', '', 'able'], ['bli', '', 'ble'], ['alli', '', 'al'], ['entli', '', 'ent'], ['eli', '', 'e'], ['ousli', '', 'ous'], ['ization', '', 'ize'], ['ation', '', 'ate'], ['ator', '', 'ate'], ['alism', '', 'al'], ['iveness', '', 'ive'], ['fulness', '', 'ful'], ['ousness', '', 'ous'], ['aliti', '', 'al'], ['iviti', '', 'ive'], ['biliti', '', 'ble'], ['logi', '', 'log']], 0);
  return token;
} // step 3 as defined for the porter stemmer algorithm. 


function step3(token) {
  return replacePatterns(token, [['icate', '', 'ic'], ['ative', '', ''], ['alize', '', 'al'], ['iciti', '', 'ic'], ['ical', '', 'ic'], ['ful', '', ''], ['ness', '', '']], 0);
} // step 4 as defined for the porter stemmer algorithm. 


function step4(token) {
  return replaceRegex(token, /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/, [1], 1) || replaceRegex(token, /^(.+?)(s|t)(ion)$/, [1, 2], 1) || token;
} // step 5a as defined for the porter stemmer algorithm. 


function step5a(token) {
  var m = measure(token.replace(/e$/, ''));

  if (m > 1 || m == 1 && !(categorizeChars(token).substr(-4, 3) == 'CVC' && token.match(/[^wxy].$/))) {
    token = token.replace(/e$/, '');
  }

  return token;
} // step 5b as defined for the porter stemmer algorithm. 


function step5b(token) {
  if (measure(token) > 1) {
    return token.replace(/ll$/, 'l');
  }

  return token;
}

var PorterStemmer = new Stemmer();
module.exports = PorterStemmer; // perform full stemming algorithm on a single word

PorterStemmer.stem = function (token) {
  if (token.length < 3) return token;
  return step5b(step5a(step4(step3(step2(step1c(step1b(step1a(token.toLowerCase())))))))).toString();
}; //exports for tests


PorterStemmer.categorizeGroups = categorizeGroups;
PorterStemmer.measure = measure;
PorterStemmer.step1a = step1a;
PorterStemmer.step1b = step1b;
PorterStemmer.step1c = step1c;
PorterStemmer.step2 = step2;
PorterStemmer.step3 = step3;
PorterStemmer.step4 = step4;
PorterStemmer.step5a = step5a;
PorterStemmer.step5b = step5b;
},{"./stemmer":"W4ba"}],"Ir2F":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel
Farsi Stop Words by Fardin Koochaki <me@fardinak.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = [// Words
'از', 'با', 'یه', 'برای', 'و', 'باید', 'شاید', // Symbols
'؟', '!', '٪', '.', '،', '؛', ':', ';', ',', // Numbers
'۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹', '۰']; // tell the world about the noise words.    

exports.words = words;
},{}],"q7Gk":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel
Farsi Aggressive Tokenizer by Fardin Koochaki <me@fardinak.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.clearEmptyString = function (array) {
  return array.filter(function (a) {
    return a != '';
  });
};

AggressiveTokenizer.prototype.clearText = function (text) {
  return text.replace(new RegExp('\.\:\+\-\=\(\)\"\'\!\?\،\,\؛\;', 'g'), ' ');
};

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  text = this.clearText(text);
  return this.clearEmptyString(text.split(/\s+/));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"vgNB":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel
Farsi Stemmer by Fardin Koochaki <me@fardinak.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords_fa');

var Tokenizer = require('../tokenizers/aggressive_tokenizer_fa');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token) == -1) stemmedTokens.push(stemmer.stem(token));
    });
    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords_fa":"Ir2F","../tokenizers/aggressive_tokenizer_fa":"q7Gk"}],"xje2":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel
Farsi Porter Stemmer by Fardin Koochaki <me@fardinak.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Stemmer = require('./stemmer_fa');

var PorterStemmer = new Stemmer();
module.exports = PorterStemmer; // disabled stemming for Farsi
// Farsi stemming will be supported soon

PorterStemmer.stem = function (token) {
  return token;
};
},{"./stemmer_fa":"vgNB"}],"ezsZ":[function(require,module,exports) {
/*
 Copyright (c) 2014, Ismaël Héry

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
// A list of commonly used french words that have little meaning and can be excluded
// from analysis.
var words = ['être', 'avoir', 'faire', 'a', 'au', 'aux', 'avec', 'ce', 'ces', 'dans', 'de', 'des', 'du', 'elle', 'en', 'et', 'eux', 'il', 'je', 'la', 'le', 'leur', 'lui', 'ma', 'mais', 'me', 'même', 'mes', 'moi', 'mon', 'ne', 'nos', 'notre', 'nous', 'on', 'ou', 'où', 'par', 'pas', 'pour', 'qu', 'que', 'qui', 'sa', 'se', 'ses', 'son', 'sur', 'ta', 'te', 'tes', 'toi', 'ton', 'tu', 'un', 'une', 'vos', 'votre', 'vous', 'c', 'd', 'j', 'l', 'à', 'm', 'n', 's', 't', 'y', 'été', 'étée', 'étées', 'étés', 'étant', 'suis', 'es', 'est', 'sommes', 'êtes', 'sont', 'serai', 'seras', 'sera', 'serons', 'serez', 'seront', 'serais', 'serait', 'serions', 'seriez', 'seraient', 'étais', 'était', 'étions', 'étiez', 'étaient', 'fus', 'fut', 'fûmes', 'fûtes', 'furent', 'sois', 'soit', 'soyons', 'soyez', 'soient', 'fusse', 'fusses', 'fût', 'fussions', 'fussiez', 'fussent', 'ayant', 'eu', 'eue', 'eues', 'eus', 'ai', 'as', 'avons', 'avez', 'ont', 'aurai', 'auras', 'aura', 'aurons', 'aurez', 'auront', 'aurais', 'aurait', 'aurions', 'auriez', 'auraient', 'avais', 'avait', 'avions', 'aviez', 'avaient', 'eut', 'eûmes', 'eûtes', 'eurent', 'aie', 'aies', 'ait', 'ayons', 'ayez', 'aient', 'eusse', 'eusses', 'eût', 'eussions', 'eussiez', 'eussent', 'ceci', 'cela', 'cet', 'cette', 'ici', 'ils', 'les', 'leurs', 'quel', 'quels', 'quelle', 'quelles', 'sans', 'soi'];
exports.words = words;
},{}],"CrSh":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.trim(text.split(/[^a-z0-9äâàéèëêïîöôùüûœç]+/i));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"oP98":[function(require,module,exports) {
/*
Copyright (c) 2014, Ismaël Héry

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords_fr');

var Tokenizer = require('../tokenizers/aggressive_tokenizer_fr');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token) == -1) {
        var resultToken = token.toLowerCase();

        if (resultToken.match(/[a-zâàëéêèïîôûùç0-9]/gi)) {
          resultToken = stemmer.stem(resultToken);
        }

        stemmedTokens.push(resultToken);
      }
    });
    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords_fr":"ezsZ","../tokenizers/aggressive_tokenizer_fr":"CrSh"}],"q7pO":[function(require,module,exports) {
'use strict';
/*
Copyright (c) 2014, Ismaël Héry

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/*
 * Spec for the French Porter Stemmer can be found at:
 * http://snowball.tartarus.org/algorithms/french/stemmer.html
 */

var Stemmer = require('./stemmer_fr');

var PorterStemmer = new Stemmer();
module.exports = PorterStemmer; // Export

PorterStemmer.stem = stem; // Exports for test purpose

PorterStemmer.prelude = prelude;
PorterStemmer.regions = regions;
PorterStemmer.endsinArr = endsinArr;
/**
 * Stem a word thanks to Porter Stemmer rules
 * @param  {String} token Word to be stemmed
 * @return {String}       Stemmed word
 */

function stem(token) {
  token = prelude(token.toLowerCase());
  if (token.length == 1) return token;
  var regs = regions(token);
  var r1_txt, r2_txt, rv_txt;
  r1_txt = token.substring(regs.r1);
  r2_txt = token.substring(regs.r2);
  rv_txt = token.substring(regs.rv); // Step 1

  var beforeStep1 = token;
  var suf, pref2, pref3, letterBefore, letter2Before, i;
  var doStep2a = false;

  if ((suf = endsinArr(r2_txt, ['ance', 'iqUe', 'isme', 'able', 'iste', 'eux', 'ances', 'iqUes', 'ismes', 'ables', 'istes'])) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(token, ['icatrice', 'icateur', 'ication', 'icatrices', 'icateurs', 'ications'])) != '') {
    if (endsinArr(r2_txt, ['icatrice', 'icateur', 'ication', 'icatrices', 'icateurs', 'ications']) != '') {
      token = token.slice(0, -suf.length); // delete
    } else {
      token = token.slice(0, -suf.length) + 'iqU'; // replace by iqU
    }
  } else if ((suf = endsinArr(r2_txt, ['atrice', 'ateur', 'ation', 'atrices', 'ateurs', 'ations'])) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(r2_txt, ['logie', 'logies'])) != '') {
    token = token.slice(0, -suf.length) + 'log'; // replace with log
  } else if ((suf = endsinArr(r2_txt, ['usion', 'ution', 'usions', 'utions'])) != '') {
    token = token.slice(0, -suf.length) + 'u'; // replace with u
  } else if ((suf = endsinArr(r2_txt, ['ence', 'ences'])) != '') {
    token = token.slice(0, -suf.length) + 'ent'; // replace with ent
  } // ement(s)
  else if ((suf = endsinArr(r1_txt, ['issement', 'issements'])) != '') {
      if (!isVowel(token[token.length - suf.length - 1])) {
        token = token.slice(0, -suf.length); // delete

        r1_txt = token.substring(regs.r1);
        r2_txt = token.substring(regs.r2);
        rv_txt = token.substring(regs.rv);
      }
    } else if ((suf = endsinArr(r2_txt, ['ativement', 'ativements'])) != '') {
      token = token.slice(0, -suf.length); // delete
    } else if ((suf = endsinArr(r2_txt, ['ivement', 'ivements'])) != '') {
      token = token.slice(0, -suf.length); // delete
    } else if ((suf = endsinArr(token, ['eusement', 'eusements'])) != '') {
      if ((suf = endsinArr(r2_txt, ['eusement', 'eusements'])) != '') token = token.slice(0, -suf.length); // delete
      else if ((suf = endsinArr(r1_txt, ['eusement', 'eusements'])) != '') token = token.slice(0, -suf.length) + 'eux'; // replace by eux
        else if ((suf = endsinArr(rv_txt, ['ement', 'ements'])) != '') token = token.slice(0, -suf.length); // delete
    } else if ((suf = endsinArr(r2_txt, ['ablement', 'ablements', 'iqUement', 'iqUements'])) != '') {
      token = token.slice(0, -suf.length); // delete
    } else if ((suf = endsinArr(rv_txt, ['ièrement', 'ièrements', 'Ièrement', 'Ièrements'])) != '') {
      token = token.slice(0, -suf.length) + 'i'; // replace by i
    } else if ((suf = endsinArr(rv_txt, ['ement', 'ements'])) != '') {
      token = token.slice(0, -suf.length); // delete
    } // ité(s)
    else if ((suf = endsinArr(token, ['icité', 'icités'])) != '') {
        if (endsinArr(r2_txt, ['icité', 'icités']) != '') token = token.slice(0, -suf.length); // delete
        else token = token.slice(0, -suf.length) + 'iqU'; // replace by iqU
      } else if ((suf = endsinArr(token, ['abilité', 'abilités'])) != '') {
        if (endsinArr(r2_txt, ['abilité', 'abilités']) != '') token = token.slice(0, -suf.length); // delete
        else token = token.slice(0, -suf.length) + 'abl'; // replace by abl
      } else if ((suf = endsinArr(r2_txt, ['ité', 'ités'])) != '') {
        token = token.slice(0, -suf.length); // delete if in R2
      } else if ((suf = endsinArr(token, ['icatif', 'icative', 'icatifs', 'icatives'])) != '') {
        if ((suf = endsinArr(r2_txt, ['icatif', 'icative', 'icatifs', 'icatives'])) != '') {
          token = token.slice(0, -suf.length); // delete

          r2_txt = token.substring(regs.r2);
          rv_txt = token.substring(regs.rv);
        }

        if ((suf = endsinArr(r2_txt, ['atif', 'ative', 'atifs', 'atives'])) != '') {
          token = token.slice(0, -suf.length - 2) + 'iqU'; // replace with iqU

          r2_txt = token.substring(regs.r2);
          rv_txt = token.substring(regs.rv);
        }
      } else if ((suf = endsinArr(r2_txt, ['atif', 'ative', 'atifs', 'atives'])) != '') {
        token = token.slice(0, -suf.length); // delete
      } else if ((suf = endsinArr(r2_txt, ['if', 'ive', 'ifs', 'ives'])) != '') {
        token = token.slice(0, -suf.length); // delete
      } else if ((suf = endsinArr(token, ['eaux'])) != '') {
        token = token.slice(0, -suf.length) + 'eau'; // replace by eau
      } else if ((suf = endsinArr(r1_txt, ['aux'])) != '') {
        token = token.slice(0, -suf.length) + 'al'; // replace by al
      } else if ((suf = endsinArr(r2_txt, ['euse', 'euses'])) != '') {
        token = token.slice(0, -suf.length); // delete
      } else if ((suf = endsinArr(r1_txt, ['euse', 'euses'])) != '') {
        token = token.slice(0, -suf.length) + 'eux'; // replace by eux
      } else if ((suf = endsinArr(rv_txt, ['amment'])) != '') {
        token = token.slice(0, -suf.length) + 'ant'; // replace by ant

        doStep2a = true;
      } else if ((suf = endsinArr(rv_txt, ['emment'])) != '') {
        token = token.slice(0, -suf.length) + 'ent'; // replace by ent

        doStep2a = true;
      } else if ((suf = endsinArr(rv_txt, ['ment', 'ments'])) != '') {
        // letter before must be a vowel in RV
        letterBefore = token[token.length - suf.length - 1];

        if (isVowel(letterBefore) && endsin(rv_txt, letterBefore + suf)) {
          token = token.slice(0, -suf.length); // delete

          doStep2a = true;
        }
      } // re compute regions


  r1_txt = token.substring(regs.r1);
  r2_txt = token.substring(regs.r2);
  rv_txt = token.substring(regs.rv); // Step 2a

  var beforeStep2a = token;
  var step2aDone = false;

  if (beforeStep1 === token || doStep2a) {
    step2aDone = true;

    if ((suf = endsinArr(rv_txt, ['îmes', 'ît', 'îtes', 'i', 'ie', 'Ie', 'ies', 'ir', 'ira', 'irai', 'iraIent', 'irais', 'irait', 'iras', 'irent', 'irez', 'iriez', 'irions', 'irons', 'iront', 'is', 'issaIent', 'issais', 'issait', 'issant', 'issante', 'issantes', 'issants', 'isse', 'issent', 'isses', 'issez', 'issiez', 'issions', 'issons', 'it'])) != '') {
      letterBefore = token[token.length - suf.length - 1];
      if (!isVowel(letterBefore) && endsin(rv_txt, letterBefore + suf)) token = token.slice(0, -suf.length); // delete
    }
  } // Step 2b


  if (step2aDone && token === beforeStep2a) {
    if ((suf = endsinArr(rv_txt, ['é', 'ée', 'ées', 'és', 'èrent', 'er', 'era', 'erai', 'eraIent', 'erais', 'erait', 'eras', 'erez', 'eriez', 'erions', 'erons', 'eront', 'ez', 'iez', 'Iez'])) != '') {
      token = token.slice(0, -suf.length); // delete

      r2_txt = token.substring(regs.r2);
      rv_txt = token.substring(regs.rv);
    } else if ((suf = endsinArr(rv_txt, ['ions'])) != '' && endsinArr(r2_txt, ['ions'])) {
      token = token.slice(0, -suf.length); // delete

      r2_txt = token.substring(regs.r2);
      rv_txt = token.substring(regs.rv);
    } // add 'Ie' suffix to pass test for 'évanouie'
    else if ((suf = endsinArr(rv_txt, ['âmes', 'ât', 'âtes', 'a', 'ai', 'aIent', 'ais', 'ait', 'ant', 'ante', 'antes', 'ants', 'as', 'asse', 'assent', 'asses', 'assiez', 'assions'])) != '') {
        token = token.slice(0, -suf.length); // delete

        letterBefore = token[token.length - 1];
        if (letterBefore === 'e' && endsin(rv_txt, 'e' + suf)) token = token.slice(0, -1);
        r2_txt = token.substring(regs.r2);
        rv_txt = token.substring(regs.rv);
      }
  } // Step 3


  if (!(token === beforeStep1)) {
    if (token[token.length - 1] === 'Y') token = token.slice(0, -1) + 'i';
    if (token[token.length - 1] === 'ç') token = token.slice(0, -1) + 'c';
  } // Step 4
  else {
      letterBefore = token[token.length - 1];
      letter2Before = token[token.length - 2];

      if (letterBefore === 's' && ['a', 'i', 'o', 'u', 'è', 's'].indexOf(letter2Before) == -1) {
        token = token.slice(0, -1);
        r1_txt = token.substring(regs.r1);
        r2_txt = token.substring(regs.r2);
        rv_txt = token.substring(regs.rv);
      }

      if ((suf = endsinArr(r2_txt, ['ion'])) != '') {
        letterBefore = token[token.length - suf.length - 1];

        if (letterBefore === 's' || letterBefore === 't') {
          token = token.slice(0, -suf.length); // delete

          r1_txt = token.substring(regs.r1);
          r2_txt = token.substring(regs.r2);
          rv_txt = token.substring(regs.rv);
        }
      }

      if ((suf = endsinArr(rv_txt, ['ier', 'ière', 'Ier', 'Ière'])) != '') {
        token = token.slice(0, -suf.length) + 'i'; // replace by i

        r1_txt = token.substring(regs.r1);
        r2_txt = token.substring(regs.r2);
        rv_txt = token.substring(regs.rv);
      }

      if ((suf = endsinArr(rv_txt, 'e')) != '') {
        token = token.slice(0, -suf.length); // delete

        r1_txt = token.substring(regs.r1);
        r2_txt = token.substring(regs.r2);
        rv_txt = token.substring(regs.rv);
      }

      if ((suf = endsinArr(rv_txt, 'ë')) != '') {
        if (token.slice(token.length - 3, -1) === 'gu') token = token.slice(0, -suf.length); // delete
      }
    } // Step 5


  if ((suf = endsinArr(token, ['enn', 'onn', 'ett', 'ell', 'eill'])) != '') {
    token = token.slice(0, -1); // delete last letter
  } // Step 6


  i = token.length - 1;

  while (i > 0) {
    if (!isVowel(token[i])) {
      i--;
    } else if (i !== token.length - 1 && (token[i] === 'é' || token[i] === 'è')) {
      token = token.substring(0, i) + 'e' + token.substring(i + 1, token.length);
      break;
    } else {
      break;
    }
  }

  return token.toLowerCase();
}

;
/**
 * Compute r1, r2, rv regions as required by french porter stemmer algorithm
 * @param  {String} token Word to compute regions on
 * @return {Object}       Regions r1, r2, rv as offsets from the begining of the word
 */

function regions(token) {
  var r1, r2, rv, len;
  var i;
  r1 = r2 = rv = len = token.length; // R1 is the region after the first non-vowel following a vowel,

  for (var i = 0; i < len - 1 && r1 == len; i++) {
    if (isVowel(token[i]) && !isVowel(token[i + 1])) {
      r1 = i + 2;
    }
  } // Or is the null region at the end of the word if there is no such non-vowel.
  // R2 is the region after the first non-vowel following a vowel in R1


  for (i = r1; i < len - 1 && r2 == len; i++) {
    if (isVowel(token[i]) && !isVowel(token[i + 1])) {
      r2 = i + 2;
    }
  } // Or is the null region at the end of the word if there is no such non-vowel.
  // RV region


  var three = token.slice(0, 3);

  if (isVowel(token[0]) && isVowel(token[1])) {
    rv = 3;
  }

  if (three === 'par' || three == 'col' || three === 'tap') rv = 3; // the region after the first vowel not at the beginning of the word or null
  else {
      for (i = 1; i < len - 1 && rv == len; i++) {
        if (isVowel(token[i])) {
          rv = i + 1;
        }
      }
    }
  return {
    r1: r1,
    r2: r2,
    rv: rv
  };
}

;
/**
 * Pre-process/prepare words as required by french porter stemmer algorithm
 * @param  {String} token Word to be prepared
 * @return {String}       Prepared word
 */

function prelude(token) {
  token = token.toLowerCase();
  var result = '';
  var i = 0; // special case for i = 0 to avoid '-1' index

  if (token[i] === 'y' && isVowel(token[i + 1])) {
    result += token[i].toUpperCase();
  } else {
    result += token[i];
  }

  for (i = 1; i < token.length; i++) {
    if ((token[i] === 'u' || token[i] === 'i') && isVowel(token[i - 1]) && isVowel(token[i + 1])) {
      result += token[i].toUpperCase();
    } else if (token[i] === 'y' && (isVowel(token[i - 1]) || isVowel(token[i + 1]))) {
      result += token[i].toUpperCase();
    } else if (token[i] === 'u' && token[i - 1] === 'q') {
      result += token[i].toUpperCase();
    } else {
      result += token[i];
    }
  }

  return result;
}

;
/**
 * Return longest matching suffixes for a token or '' if no suffix match
 * @param  {String} token    Word to find matching suffix
 * @param  {Array} suffixes  Array of suffixes to test matching
 * @return {String}          Longest found matching suffix or ''
 */

function endsinArr(token, suffixes) {
  var i,
      longest = '';

  for (i = 0; i < suffixes.length; i++) {
    if (endsin(token, suffixes[i]) && suffixes[i].length > longest.length) longest = suffixes[i];
  }

  return longest;
}

;

function isVowel(letter) {
  return letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' || letter == 'y' || letter == 'â' || letter == 'à' || letter == 'ë' || letter == 'é' || letter == 'ê' || letter == 'è' || letter == 'ï' || letter == 'î' || letter == 'ô' || letter == 'û' || letter == 'ù';
}

;

function endsin(token, suffix) {
  if (token.length < suffix.length) return false;
  return token.slice(-suffix.length) == suffix;
}

;
},{"./stemmer_fr":"oP98"}],"FAgS":[function(require,module,exports) {
/*
Copyright (c) 2011, Polyakov Vladimir, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = ['о', 'после', 'все', 'также', 'и', 'другие', 'все', 'как', 'во', 'быть', 'потому', 'был', 'до', 'являюсь', 'между', 'все', 'но', 'от', 'иди', 'могу', 'подойди', 'мог', 'делал', 'делаю', 'каждый', 'для', 'откуда', 'иметь', 'имел', 'он', 'имеет', 'её', 'здесь', 'его', 'как', 'если', 'в', 'оно', 'за', 'делать', 'много', 'я', 'может быть', 'более', 'самый', 'должен', 'мой', 'никогда', 'сейчас', 'из', 'на', 'только', 'или', 'другой', 'другая', 'другое', 'наше', 'вне', 'конец', 'сказал', 'сказала', 'также', 'видел', 'c', 'немного', 'все еще', 'так', 'затем', 'тот', 'их', 'там', 'этот', 'они', 'те', 'через', 'тоже', 'под', 'над', 'очень', 'был', 'путь', 'мы', 'хорошо', 'что', 'где', 'который', 'пока', 'кто', 'с кем', 'хотел бы', 'ты', 'твои', 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'o', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я', '$', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_']; // tell the world about the noise words.    

exports.words = words;
},{}],"qWaQ":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.withoutEmpty = function (array) {
  return array.filter(function (a) {
    return a;
  });
};

AggressiveTokenizer.prototype.clearText = function (text) {
  return text.replace(/[^a-zа-яё0-9]/gi, ' ').replace(/[\s\n]+/g, ' ').trim();
};

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.withoutEmpty(this.clearText(text).split(' '));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"XKxT":[function(require,module,exports) {
/*
Copyright (c) 2012, Polyakov Vladimir, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords_ru');

var Tokenizer = require('../tokenizers/aggressive_tokenizer_ru');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token) == -1) {
        var resultToken = token.toLowerCase();

        if (resultToken.match(new RegExp('[а-яё0-9]+', 'gi'))) {
          resultToken = stemmer.stem(resultToken);
        }

        stemmedTokens.push(resultToken);
      }
    });
    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords_ru":"FAgS","../tokenizers/aggressive_tokenizer_ru":"qWaQ"}],"jwxo":[function(require,module,exports) {
/*
Copyright (c) 2012, Polyakov Vladimir, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Stemmer = require('./stemmer_ru');

var PorterStemmer = new Stemmer();
module.exports = PorterStemmer;

function attemptReplacePatterns(token, patterns) {
  var replacement = null;
  var i = 0,
      isReplaced = false;

  while (i < patterns.length && !isReplaced) {
    if (patterns[i][0].test(token)) {
      replacement = token.replace(patterns[i][0], patterns[i][1]);
      isReplaced = true;
    }

    i++;
  }

  return replacement;
}

;

function perfectiveGerund(token) {
  var result = attemptReplacePatterns(token, [[/[ая]в(ши|шись)$/g, ''], [/(ив|ивши|ившись|ывши|ывшись|ыв)$/g, '']]);
  return result;
}

;

function adjectival(token) {
  var result = adjective(token);

  if (result != null) {
    var pariticipleResult = participle(result);
    result = pariticipleResult ? pariticipleResult : result;
  }

  return result;
}

;

function adjective(token) {
  var result = attemptReplacePatterns(token, [[/(ее|ие|ые|ое|ими|ыми|ей|ий|ый|ой|ем|им|ым|ом|его|ого|ему|ому|их|ых|ую|юю|ая|яя|ою|ею)$/g, '']]);
  return result;
}

;

function participle(token) {
  var result = attemptReplacePatterns(token, [[/([ая])(ем|нн|вш|ющ|щ)$/g, '$1'], [/(ивш|ывш|ующ)$/g, '']]);
  return result;
}

;

function reflexive(token) {
  var result = attemptReplacePatterns(token, [[/(ся|сь)$/g, '']]);
  return result;
}

;

function verb(token) {
  var result = attemptReplacePatterns(token, [[/([ая])(ла|на|ете|йте|ли|й|л|ем|н|ло|но|ет|ют|ны|ть|ешь|нно)$/g, '$1'], [/(ила|ыла|ена|ейте|уйте|ите|или|ыли|ей|уй|ил|ыл|им|ым|ен|ило|ыло|ено|ят|ует|ит|ыт|ены|ить|ыть|ишь|ую|ю)$/g, '']]);
  return result;
}

;

function noun(token) {
  var result = attemptReplacePatterns(token, [[/(а|ев|ов|ие|ье|е|иями|ями|ами|еи|ии|и|ией|ей|ой|ий|й|иям|ям|ием|ем|ам|ом|о|у|ах|иях|ях|ы|ь|ию|ью|ю|ия|ья|я)$/g, '']]);
  return result;
}

;

function superlative(token) {
  var result = attemptReplacePatterns(token, [[/(ейш|ейше)$/g, '']]);
  return result;
}

;

function derivational(token) {
  var result = attemptReplacePatterns(token, [[/(ост|ость)$/g, '']]);
  return result;
}

; // perform full stemming algorithm on a single word

PorterStemmer.stem = function (token) {
  token = token.toLowerCase().replace(/ё/g, 'е');
  var volwesRegexp = /^(.*?[аеиоюяуыиэ])(.*)$/g;
  var RV = volwesRegexp.exec(token);

  if (!RV || RV.length < 3) {
    return token;
  }

  var head = RV[1];
  RV = RV[2];
  volwesRegexp.lastIndex = 0;
  var R2 = volwesRegexp.exec(RV);
  var result = perfectiveGerund(RV);

  if (result === null) {
    var resultReflexive = reflexive(RV) || RV;
    result = adjectival(resultReflexive);

    if (result === null) {
      result = verb(resultReflexive);

      if (result === null) {
        result = noun(resultReflexive);

        if (result === null) {
          result = resultReflexive;
        }
      }
    }
  }

  result = result.replace(/и$/g, '');
  var derivationalResult = result;

  if (R2 && R2[2]) {
    derivationalResult = derivational(R2[2]);

    if (derivationalResult != null) {
      derivationalResult = derivational(result);
    } else {
      derivationalResult = result;
    }
  }

  var superlativeResult = superlative(derivationalResult) || derivationalResult;
  superlativeResult = superlativeResult.replace(/(н)н/g, '$1');
  superlativeResult = superlativeResult.replace(/ь$/g, '');
  return head + superlativeResult;
};
},{"./stemmer_ru":"XKxT"}],"iTBC":[function(require,module,exports) {
/*
Copyright (c) 2011, David Przybilla, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = ['a', 'un', 'el', 'ella', 'y', 'sobre', 'de', 'la', 'que', 'en', 'los', 'del', 'se', 'las', 'por', 'un', 'para', 'con', 'no', 'una', 'su', 'al', 'lo', 'como', 'más', 'pero', 'sus', 'le', 'ya', 'o', 'porque', 'cuando', 'muy', 'sin', 'sobre', 'también', 'me', 'hasta', 'donde', 'quien', 'desde', 'nos', 'durante', 'uno', 'ni', 'contra', 'ese', 'eso', 'mí', 'qué', 'otro', 'él', 'cual', 'poco', 'mi', 'tú', 'te', 'ti', 'sí', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_']; // tell the world about the noise words.    

exports.words = words;
},{}],"WaGX":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel,David Przybilla

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.trim(text.split(/[^a-zA-Zá-úÁ-ÚñÑüÜ]+/));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"mWmA":[function(require,module,exports) {
/*
Copyright (c) 2012, 2018 David Przybilla, Chris Umbel, Hugo W.L. ter Doest 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords_es');

var Tokenizer = require('../tokenizers/aggressive_tokenizer_es');

class Stemmer {
  constructor() {}

  stem(token) {
    return token;
  }

  tokenizeAndStem(text, keepStops) {
    var stemmedTokens = [];
    var that = this;
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token) == -1) {
        var resultToken = token.toLowerCase();

        if (resultToken.match(new RegExp('[a-záéíóúüñ0-9]+', 'gi'))) {
          resultToken = that.stem(resultToken);
        }

        stemmedTokens.push(resultToken);
      }
    });
    return stemmedTokens;
  }

  attach() {
    var that = this;

    String.prototype.stem = function () {
      return that.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return that.tokenizeAndStem(this, keepStops);
    };
  }

}

module.exports = Stemmer;
},{"../util/stopwords_es":"iTBC","../tokenizers/aggressive_tokenizer_es":"WaGX"}],"sT5O":[function(require,module,exports) {
/*
  Copyright (c) 2018, Domingo Martín Mancera

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
'use strict';

var Stemmer = require('./stemmer_es'); // Inherit from the utility class in stemmer_es


class PorterStemmer extends Stemmer {
  constructor() {
    super();
  }

  isVowel(c) {
    var regex = /[aeiouáéíóú]/gi;
    return regex.test(c);
  }

  nextVowelPosition(word, start = 0) {
    var length = word.length;

    for (var position = start; position < length; position++) {
      if (this.isVowel(word[position])) {
        return position;
      }
    }

    return length;
  }

  nextConsonantPosition(word, start = 0) {
    var length = word.length;

    for (var position = start; position < length; position++) {
      if (!this.isVowel(word[position])) {
        return position;
      }
    }

    return length;
  }

  endsIn(word, suffix) {
    if (word.length < suffix.length) {
      return false;
    }

    return word.slice(-suffix.length) === suffix;
  }

  endsInArr(word, suffixes) {
    var matches = [];

    for (var i in suffixes) {
      if (this.endsIn(word, suffixes[i])) {
        matches.push(suffixes[i]);
      }
    }

    var longest = matches.sort(function (a, b) {
      return b.length - a.length;
    })[0];

    if (longest) {
      return longest;
    } else {
      return '';
    }
  }

  removeAccent(word) {
    var accentedVowels = ['á', 'é', 'í', 'ó', 'ú'];
    var vowels = ['a', 'e', 'i', 'o', 'u'];

    for (var i in accentedVowels) {
      word = word.replace(accentedVowels[i], vowels[i]);
    }

    return word;
  }

  stem(word) {
    var length = word.length;
    word.toLowerCase();

    if (length < 2) {
      return this.removeAccent(word);
    }

    var r1, r2, rv;
    r1 = length;
    r2 = length;
    rv = length; // R1 is the region after the first non-vowel following a vowel, or is the null region
    // at the end of the word if there is no such non-vowel.

    for (var i = 0; i < length - 1 && r1 == length; i++) {
      if (this.isVowel(word[i]) && !this.isVowel(word[i + 1])) {
        r1 = i + 2;
      }
    } // R2 is the region after the first non-vowel following a vowel in R1,
    // or is the null region at the end of the word if there is no such non-vowel.


    for (var i = r1; i < length - 1 && r2 == length; i++) {
      if (this.isVowel(word[i]) && !this.isVowel(word[i + 1])) {
        r2 = i + 2;
      }
    }

    if (length > 3) {
      if (!this.isVowel(word[1])) {
        rv = this.nextVowelPosition(word, 2) + 1;
      } else if (this.isVowel(word[0]) && this.isVowel(word[1])) {
        rv = this.nextConsonantPosition(word, 2) + 1;
      } else {
        rv = 3;
      }
    }

    var r1Text = word.slice(r1);
    var r2Text = word.slice(r2);
    var rvText = word.slice(rv);
    var originalWord = word; // Step 0: Attached pronoun

    var pronounSuffix = ['me', 'se', 'sela', 'selo', 'selas', 'selos', 'la', 'le', 'lo', 'las', 'les', 'los', 'nos'];
    var pronounSuffixPre1 = ['iéndo', 'ándo', 'ár', 'ér', 'ír'];
    var pronounSuffixPre2 = ['iendo', 'ando', 'ar', 'er', 'ir'];
    var suffix = this.endsInArr(word, pronounSuffix);

    if (suffix != '') {
      var preSuffix = this.endsInArr(rvText.slice(0, -suffix.length), pronounSuffixPre1);

      if (preSuffix != '') {
        word = this.removeAccent(word.slice(0, -suffix.length));
      } else {
        preSuffix = this.endsInArr(rvText.slice(0, -suffix.length), pronounSuffixPre2);

        if (preSuffix != '' || this.endsIn(word.slice(0, -suffix.length), 'uyendo')) {
          word = word.slice(0, -suffix.length);
        }
      }
    }

    if (word != originalWord) {
      r1Text = word.slice(r1);
      r2Text = word.slice(r2);
      rvText = word.slice(rv);
    }

    var wordAfter0 = word;

    if ((suf = this.endsInArr(r2Text, ['anza', 'anzas', 'ico', 'ica', 'icos', 'icas', 'ismo', 'ismos', 'able', 'ables', 'ible', 'ibles', 'ista', 'istas', 'oso', 'osa', 'osos', 'osas', 'amiento', 'amientos', 'imiento', 'imientos'])) != '') {
      word = word.slice(0, -suf.length);
    } else if ((suf = this.endsInArr(r2Text, ['icadora', 'icador', 'icación', 'icadoras', 'icadores', 'icaciones', 'icante', 'icantes', 'icancia', 'icancias', 'adora', 'ador', 'ación', 'adoras', 'adores', 'aciones', 'ante', 'antes', 'ancia', 'ancias'])) != '') {
      word = word.slice(0, -suf.length);
    } else if ((suf = this.endsInArr(r2Text, ['logía', 'logías'])) != '') {
      word = word.slice(0, -suf.length) + 'log';
    } else if ((suf = this.endsInArr(r2Text, ['ución', 'uciones'])) != '') {
      word = word.slice(0, -suf.length) + 'u';
    } else if ((suf = this.endsInArr(r2Text, ['encia', 'encias'])) != '') {
      word = word.slice(0, -suf.length) + 'ente';
    } else if ((suf = this.endsInArr(r2Text, ['ativamente', 'ivamente', 'osamente', 'icamente', 'adamente'])) != '') {
      word = word.slice(0, -suf.length);
    } else if ((suf = this.endsInArr(r1Text, ['amente'])) != '') {
      word = word.slice(0, -suf.length);
    } else if ((suf = this.endsInArr(r2Text, ['antemente', 'ablemente', 'iblemente', 'mente'])) != '') {
      word = word.slice(0, -suf.length);
    } else if ((suf = this.endsInArr(r2Text, ['abilidad', 'abilidades', 'icidad', 'icidades', 'ividad', 'ividades', 'idad', 'idades'])) != '') {
      word = word.slice(0, -suf.length);
    } else if ((suf = this.endsInArr(r2Text, ['ativa', 'ativo', 'ativas', 'ativos', 'iva', 'ivo', 'ivas', 'ivos'])) != '') {
      word = word.slice(0, -suf.length);
    }

    if (word != wordAfter0) {
      r1Text = word.slice(r1);
      r2Text = word.slice(r2);
      rvText = word.slice(rv);
    }

    var wordAfter1 = word;

    if (wordAfter0 === wordAfter1) {
      // Do step 2a if no ending was removed by step 1.
      var suf = this.endsInArr(rvText, ['ya', 'ye', 'yan', 'yen', 'yeron', 'yendo', 'yo', 'yó', 'yas', 'yes', 'yais', 'yamos']);

      if (suf != '' && word.slice(-suf.length - 1, -suf.length) == 'u') {
        word = word.slice(0, -suf.length);
      }

      if (word != wordAfter1) {
        r1Text = word.slice(r1);
        r2Text = word.slice(r2);
        rvText = word.slice(rv);
      }

      var wordAfter2a = word; // Do Step 2b if step 2a was done, but failed to remove a suffix.

      if (wordAfter2a == wordAfter1) {
        if ((suf = this.endsInArr(rvText, ['arían', 'arías', 'arán', 'arás', 'aríais', 'aría', 'aréis', 'aríamos', 'aremos', 'ará', 'aré', 'erían', 'erías', 'erán', 'erás', 'eríais', 'ería', 'eréis', 'eríamos', 'eremos', 'erá', 'eré', 'irían', 'irías', 'irán', 'irás', 'iríais', 'iría', 'iréis', 'iríamos', 'iremos', 'irá', 'iré', 'aba', 'ada', 'ida', 'ía', 'ara', 'iera', 'ad', 'ed', 'id', 'ase', 'iese', 'aste', 'iste', 'an', 'aban', 'ían', 'aran', 'ieran', 'asen', 'iesen', 'aron', 'ieron', 'ado', 'ido', 'ando', 'iendo', 'ió', 'ar', 'er', 'ir', 'as', 'abas', 'adas', 'idas', 'ías', 'aras', 'ieras', 'ases', 'ieses', 'ís', 'áis', 'abais', 'íais', 'arais', 'ierais', '  aseis', 'ieseis', 'asteis', 'isteis', 'ados', 'idos', 'amos', 'ábamos', 'íamos', 'imos', 'áramos', 'iéramos', 'iésemos', 'ásemos'])) != '') {
          word = word.slice(0, -suf.length);
        } else if ((suf = this.endsInArr(rvText, ['en', 'es', 'éis', 'emos'])) != '') {
          word = word.slice(0, -suf.length);

          if (this.endsIn(word, 'gu')) {
            word = word.slice(0, -1);
          }
        }
      }
    }

    r1Text = word.slice(r1);
    r2Text = word.slice(r2);
    rvText = word.slice(rv);

    if ((suf = this.endsInArr(rvText, ['os', 'a', 'o', 'á', 'í', 'ó'])) != '') {
      word = word.slice(0, -suf.length);
    } else if (this.endsInArr(rvText, ['e', 'é']) != '') {
      word = word.slice(0, -1);
      rvText = word.slice(rv);

      if (this.endsIn(rvText, 'u') && this.endsIn(word, 'gu')) {
        word = word.slice(0, -1);
      }
    }

    return this.removeAccent(word);
  }

}

module.exports = new PorterStemmer();
},{"./stemmer_es":"mWmA"}],"JTvQ":[function(require,module,exports) {
/*
Copyright (c) 2011, David Przybilla, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = ['ad', 'al', 'allo', 'ai', 'agli', 'all', 'agl', 'alla', 'alle', 'con', 'col', 'coi', 'da', 'dal', 'dallo', 'dai', 'dagli', 'dall', 'dagl', 'dalla', 'dalle', 'di', 'del', 'dello', 'dei', 'degli', 'dell', 'degl', 'della', 'delle', 'in', 'nel', 'nello', 'nei', 'negli', 'nell', 'negl', 'nella', 'nelle', 'su', 'sul', 'sullo', 'sui', 'sugli', 'sull', 'sugl', 'sulla', 'sulle', 'per', 'tra', 'contro', 'io', 'tu', 'lui', 'lei', 'noi', 'voi', 'loro', 'mio', 'mia', 'miei', 'mie', 'tuo', 'tua', 'tuoi', 'tue', 'suo', 'sua', 'suoi', 'sue', 'nostro', 'nostra', 'nostri', 'nostre', 'vostro', 'vostra', 'vostri', 'vostre', 'mi', 'ti', 'ci', 'vi', 'lo', 'la', 'li', 'le', 'gli', 'ne', 'il', 'un', 'uno', 'una', 'ma', 'ed', 'se', 'perché', 'anche', 'come', 'dov', 'dove', 'che', 'chi', 'cui', 'non', 'più', 'quale', 'quanto', 'quanti', 'quanta', 'quante', 'quello', 'quelli', 'quella', 'quelle', 'questo', 'questi', 'questa', 'queste', 'si', 'tutto', 'tutti', 'a', 'c', 'e', 'i', 'l', 'o', 'ho', 'hai', 'ha', 'abbiamo', 'avete', 'hanno', 'abbia', 'abbiate', 'abbiano', 'avrò', 'avrai', 'avrà', 'avremo', 'avrete', 'avranno', 'avrei', 'avresti', 'avrebbe', 'avremmo', 'avreste', 'avrebbero', 'avevo', 'avevi', 'aveva', 'avevamo', 'avevate', 'avevano', 'ebbi', 'avesti', 'ebbe', 'avemmo', 'aveste', 'ebbero', 'avessi', 'avesse', 'avessimo', 'avessero', 'avendo', 'avuto', 'avuta', 'avuti', 'avute', 'sono', 'sei', 'è', 'siamo', 'siete', 'sia', 'siate', 'siano', 'sarò', 'sarai', 'sarà', 'saremo', 'sarete', 'saranno', 'sarei', 'saresti', 'sarebbe', 'saremmo', 'sareste', 'sarebbero', 'ero', 'eri', 'era', 'eravamo', 'eravate', 'erano', 'fui', 'fosti', 'fu', 'fummo', 'foste', 'furono', 'fossi', 'fosse', 'fossimo', 'fossero', 'essendo', 'faccio', 'fai', 'facciamo', 'fanno', 'faccia', 'facciate', 'facciano', 'farò', 'farai', 'farà', 'faremo', 'farete', 'faranno', 'farei', 'faresti', 'farebbe', 'faremmo', 'fareste', 'farebbero', 'facevo', 'facevi', 'faceva', 'facevamo', 'facevate', 'facevano', 'feci', 'facesti', 'fece', 'facemmo', 'faceste', 'fecero', 'facessi', 'facesse', 'facessimo', 'facessero', 'facendo', 'sto', 'stai', 'sta', 'stiamo', 'stanno', 'stia', 'stiate', 'stiano', 'starò', 'starai', 'starà', 'staremo', 'starete', 'staranno', 'starei', 'staresti', 'starebbe', 'staremmo', 'stareste', 'starebbero', 'stavo', 'stavi', 'stava', 'stavamo', 'stavate', 'stavano', 'stetti', 'stesti', 'stette', 'stemmo', 'steste', 'stettero', 'stessi', 'stesse', 'stessimo', 'stessero', 'stando', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_']; // tell the world about the noise words.    

exports.words = words;
},{}],"v6r3":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel,David Przybilla

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.trim(text.split(/\W+/));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"i9ev":[function(require,module,exports) {
var stopwords = require('../util/stopwords_it');

var Tokenizer = require('../tokenizers/aggressive_tokenizer_it');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token) == -1) {
        var resultToken = token.toLowerCase();

        if (resultToken.match(/[a-zàèìòù0-9]/gi)) {
          resultToken = stemmer.stem(resultToken);
        }

        stemmedTokens.push(resultToken);
      }
    });
    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords_it":"JTvQ","../tokenizers/aggressive_tokenizer_it":"v6r3"}],"fYpG":[function(require,module,exports) {
/*
Copyright (c) 2012, Leonardo Fenu, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Stemmer = require('./stemmer_it');

var PorterStemmer = new Stemmer();
module.exports = PorterStemmer;

function isVowel(letter) {
  return letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u' || letter == 'à' || letter == 'è' || letter == 'ì' || letter == 'ò' || letter == 'ù';
}

;

function getNextVowelPos(token, start) {
  start = start + 1;
  var length = token.length;

  for (var i = start; i < length; i++) {
    if (isVowel(token[i])) {
      return i;
    }
  }

  return length;
}

;

function getNextConsonantPos(token, start) {
  length = token.length;

  for (var i = start; i < length; i++) if (!isVowel(token[i])) return i;

  return length;
}

;

function endsin(token, suffix) {
  if (token.length < suffix.length) return false;
  return token.slice(-suffix.length) == suffix;
}

;

function endsinArr(token, suffixes) {
  for (var i = 0; i < suffixes.length; i++) {
    if (endsin(token, suffixes[i])) return suffixes[i];
  }

  return '';
}

;

function replaceAcute(token) {
  var str = token.replace(/á/gi, 'à');
  str = str.replace(/é/gi, 'è');
  str = str.replace(/í/gi, 'ì');
  str = str.replace(/ó/gi, 'ò');
  str = str.replace(/ú/gi, 'ù');
  return str;
}

;

function vowelMarking(token) {
  function replacer(match, p1, p2, p3) {
    return p1 + p2.toUpperCase() + p3;
  }

  ;
  str = token.replace(/([aeiou])(i|u)([aeiou])/g, replacer);
  return str;
} // perform full stemming algorithm on a single word


PorterStemmer.stem = function (token) {
  token = token.toLowerCase();
  token = replaceAcute(token);
  token = token.replace(/qu/g, 'qU');
  token = vowelMarking(token);

  if (token.length < 3) {
    return token;
  }

  var r1 = r2 = rv = len = token.length; // R1 is the region after the first non-vowel following a vowel, 

  for (var i = 0; i < token.length - 1 && r1 == len; i++) {
    if (isVowel(token[i]) && !isVowel(token[i + 1])) {
      r1 = i + 2;
    }
  } // Or is the null region at the end of the word if there is no such non-vowel.  
  // R2 is the region after the first non-vowel following a vowel in R1


  for (var i = r1; i < token.length - 1 && r2 == len; i++) {
    if (isVowel(token[i]) && !isVowel(token[i + 1])) {
      r2 = i + 2;
    }
  } // Or is the null region at the end of the word if there is no such non-vowel. 
  // If the second letter is a consonant, RV is the region after the next following vowel, 
  // RV as follow


  if (len > 3) {
    if (!isVowel(token[1])) {
      // If the second letter is a consonant, RV is the region after the next following vowel
      rv = getNextVowelPos(token, 1) + 1;
    } else if (isVowel(token[0]) && isVowel(token[1])) {
      // or if the first two letters are vowels, RV is the region after the next consonant
      rv = getNextConsonantPos(token, 2) + 1;
    } else {
      //otherwise (consonant-vowel case) RV is the region after the third letter. But RV is the end of the word if these positions cannot be found.
      rv = 3;
    }
  }

  var r1_txt = token.substring(r1);
  var r2_txt = token.substring(r2);
  var rv_txt = token.substring(rv);
  var token_orig = token; // Step 0: Attached pronoun

  var pronoun_suf = new Array('glieli', 'glielo', 'gliene', 'gliela', 'gliele', 'sene', 'tene', 'cela', 'cele', 'celi', 'celo', 'cene', 'vela', 'vele', 'veli', 'velo', 'vene', 'mela', 'mele', 'meli', 'melo', 'mene', 'tela', 'tele', 'teli', 'telo', 'gli', 'ci', 'la', 'le', 'li', 'lo', 'mi', 'ne', 'si', 'ti', 'vi');
  var pronoun_suf_pre1 = new Array('ando', 'endo');
  var pronoun_suf_pre2 = new Array('ar', 'er', 'ir');
  var suf = endsinArr(token, pronoun_suf);

  if (suf != '') {
    var pre_suff1 = endsinArr(rv_txt.slice(0, -suf.length), pronoun_suf_pre1);
    var pre_suff2 = endsinArr(rv_txt.slice(0, -suf.length), pronoun_suf_pre2);

    if (pre_suff1 != '') {
      token = token.slice(0, -suf.length);
    }

    if (pre_suff2 != '') {
      token = token.slice(0, -suf.length) + 'e';
    }
  }

  if (token != token_orig) {
    r1_txt = token.substring(r1);
    r2_txt = token.substring(r2);
    rv_txt = token.substring(rv);
  }

  var token_after0 = token; // Step 1:  Standard suffix removal

  if ((suf = endsinArr(r2_txt, new Array('ativamente', 'abilamente', 'ivamente', 'osamente', 'icamente'))) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(r2_txt, new Array('icazione', 'icazioni', 'icatore', 'icatori', 'azione', 'azioni', 'atore', 'atori'))) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(r2_txt, new Array('logia', 'logie'))) != '') {
    token = token.slice(0, -suf.length) + 'log'; // replace with log
  } else if ((suf = endsinArr(r2_txt, new Array('uzione', 'uzioni', 'usione', 'usioni'))) != '') {
    token = token.slice(0, -suf.length) + 'u'; // replace with u
  } else if ((suf = endsinArr(r2_txt, new Array('enza', 'enze'))) != '') {
    token = token.slice(0, -suf.length) + 'ente'; // replace with ente
  } else if ((suf = endsinArr(rv_txt, new Array('amento', 'amenti', 'imento', 'imenti'))) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(r1_txt, new Array('amente'))) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(r2_txt, new Array('atrice', 'atrici', 'abile', 'abili', 'ibile', 'ibili', 'mente', 'ante', 'anti', 'anza', 'anze', 'iche', 'ichi', 'ismo', 'ismi', 'ista', 'iste', 'isti', 'istà', 'istè', 'istì', 'ico', 'ici', 'ica', 'ice', 'oso', 'osi', 'osa', 'ose'))) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(r2_txt, new Array('abilità', 'icità', 'ività', 'ità'))) != '') {
    token = token.slice(0, -suf.length); // delete
  } else if ((suf = endsinArr(r2_txt, new Array('icativa', 'icativo', 'icativi', 'icative', 'ativa', 'ativo', 'ativi', 'ative', 'iva', 'ivo', 'ivi', 'ive'))) != '') {
    token = token.slice(0, -suf.length);
  }

  if (token != token_after0) {
    r1_txt = token.substring(r1);
    r2_txt = token.substring(r2);
    rv_txt = token.substring(rv);
  }

  var token_after1 = token; // Step 2:  Verb suffixes

  if (token_after0 == token_after1) {
    if ((suf = endsinArr(rv_txt, new Array('erebbero', 'irebbero', 'assero', 'assimo', 'eranno', 'erebbe', 'eremmo', 'ereste', 'eresti', 'essero', 'iranno', 'irebbe', 'iremmo', 'ireste', 'iresti', 'iscano', 'iscono', 'issero', 'arono', 'avamo', 'avano', 'avate', 'eremo', 'erete', 'erono', 'evamo', 'evano', 'evate', 'iremo', 'irete', 'irono', 'ivamo', 'ivano', 'ivate', 'ammo', 'ando', 'asse', 'assi', 'emmo', 'enda', 'ende', 'endi', 'endo', 'erai', 'Yamo', 'iamo', 'immo', 'irai', 'irei', 'isca', 'isce', 'isci', 'isco', 'erei', 'uti', 'uto', 'ita', 'ite', 'iti', 'ito', 'iva', 'ivi', 'ivo', 'ono', 'uta', 'ute', 'ano', 'are', 'ata', 'ate', 'ati', 'ato', 'ava', 'avi', 'avo', 'erà', 'ere', 'erò', 'ete', 'eva', 'evi', 'evo', 'irà', 'ire', 'irò', 'ar', 'ir'))) != '') {
      token = token.slice(0, -suf.length);
    }
  }

  r1_txt = token.substring(r1);
  r2_txt = token.substring(r2);
  rv_txt = token.substring(rv); // Always do step 3. 

  if ((suf = endsinArr(rv_txt, new Array('ia', 'ie', 'ii', 'io', 'ià', 'iè', 'iì', 'iò', 'a', 'e', 'i', 'o', 'à', 'è', 'ì', 'ò'))) != '') {
    token = token.slice(0, -suf.length);
  }

  r1_txt = token.substring(r1);
  r2_txt = token.substring(r2);
  rv_txt = token.substring(rv);

  if ((suf = endsinArr(rv_txt, new Array('ch'))) != '') {
    token = token.slice(0, -suf.length) + 'c'; // replace with c
  } else if ((suf = endsinArr(rv_txt, new Array('gh'))) != '') {
    token = token.slice(0, -suf.length) + 'g'; // replace with g
  }

  r1_txt = token.substring(r1);
  r2_txt = token.substring(r2);
  rv_txt = token.substring(rv);
  return token.toLowerCase();
};
},{"./stemmer_it":"i9ev"}],"eAl0":[function(require,module,exports) {
/*
Copyright (c) 2014, Kristoffer Brabrand

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = ['og', 'i', 'jeg', 'det', 'at', 'en', 'et', 'den', 'til', 'er', 'som', 'på', 'de', 'med', 'han', 'av', 'ikke', 'der', 'så', 'var', 'meg', 'seg', 'men', 'ett', 'har', 'om', 'vi', 'min', 'mitt', 'ha', 'hadde', 'hun', 'nå', 'over', 'da', 'ved', 'fra', 'du', 'ut', 'sin', 'dem', 'oss', 'opp', 'man', 'kan', 'hans', 'hvor', 'eller', 'hva', 'skal', 'selv', 'sjøl', 'her', 'alle', 'vil', 'bli', 'ble', 'blitt', 'kunne', 'inn', 'når', 'være', 'kom', 'noen', 'noe', 'ville', 'dere', 'som', 'deres', 'kun', 'ja', 'etter', 'ned', 'skulle', 'denne', 'for', 'deg', 'si', 'sine', 'sitt', 'mot', 'å', 'meget', 'hvorfor', 'dette', 'disse', 'uten', 'hvordan', 'ingen', 'din', 'ditt', 'blir', 'samme', 'hvilken', 'hvilke', 'sånn', 'inni', 'mellom', 'vår', 'hver', 'hvem', 'vors', 'hvis', 'både', 'bare', 'enn', 'fordi', 'før', 'mange', 'også', 'slik', 'vært', 'være', 'begge', 'siden', 'henne', 'hennar', 'hennes', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_']; // tell the world about the noise words.

exports.words = words;
},{}],"cW10":[function(require,module,exports) {
/*
 Copyright (c) 2014, Kristoffer Brabrand

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * Remove commonly used diacritic marks from a string as these
 * are not used in a consistent manner. Leave only ä, ö, ü.
 */
var remove_diacritics = function (text) {
  text = text.replace('à', 'a');
  text = text.replace('À', 'A');
  text = text.replace('á', 'a');
  text = text.replace('Á', 'A');
  text = text.replace('â', 'a');
  text = text.replace('Â', 'A');
  text = text.replace('ç', 'c');
  text = text.replace('Ç', 'C');
  text = text.replace('è', 'e');
  text = text.replace('È', 'E');
  text = text.replace('é', 'e');
  text = text.replace('É', 'E');
  text = text.replace('ê', 'e');
  text = text.replace('Ê', 'E');
  text = text.replace('î', 'i');
  text = text.replace('Î', 'I');
  text = text.replace('ñ', 'n');
  text = text.replace('Ñ', 'N');
  text = text.replace('ó', 'o');
  text = text.replace('Ó', 'O');
  text = text.replace('ô', 'o');
  text = text.replace('Ô', 'O');
  text = text.replace('û', 'u');
  text = text.replace('Û', 'U');
  text = text.replace('š', 's');
  text = text.replace('Š', 'S');
  return text;
}; // export the relevant stuff.


exports.remove_diacritics = remove_diacritics;
},{}],"Cv9T":[function(require,module,exports) {
/*
Copyright (c) 2014, Kristoffer Brabrand

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    normalizer = require('../normalizers/normalizer_no'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.tokenize = function (text) {
  text = normalizer.remove_diacritics(text); // break a string up into an array of tokens by anything non-word

  return this.trim(text.split(/[^A-Za-z0-9_æøåÆØÅäÄöÖüÜ]+/));
};
},{"./tokenizer":"ZemB","../normalizers/normalizer_no":"cW10","util":"nq70"}],"FB2d":[function(require,module,exports) {
/*
Copyright (c) 2014, Kristoffer Brabrand

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords_no');

var Tokenizer = require('../tokenizers/aggressive_tokenizer_no');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.addStopWord = function (stopWord) {
    stopwords.words.push(stopWord);
  };

  stemmer.addStopWords = function (moreStopWords) {
    stopwords.words = stopwords.words.concat(moreStopWords);
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token.toLowerCase()) == -1) stemmedTokens.push(stemmer.stem(token));
    });
    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords_no":"eAl0","../tokenizers/aggressive_tokenizer_no":"Cv9T"}],"d9Kl":[function(require,module,exports) {
/*
Copyright (c) 2014, Kristoffer Brabrand

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Stemmer = require('./stemmer_no'); // Get the part of the token after the first non-vowel following a vowel


function getR1(token) {
  var match = token.match(/[aeiouyæåø]{1}[^aeiouyæåø]([A-Za-z0-9_æøåÆØÅäÄöÖüÜ]+)/);

  if (match) {
    var preR1Length = match.index + 2;

    if (preR1Length < 3 && preR1Length > 0) {
      return token.slice(3);
    } else if (preR1Length >= 3) {
      return match[1];
    } else {
      return token;
    }
  }

  return null;
}

function step1(token) {
  // Perform step 1a-c
  var step1aResult = step1a(token),
      step1bResult = step1b(token),
      step1cResult = step1c(token); // Returne the shortest result string (from 1a, 1b and 1c)

  if (step1aResult.length < step1bResult.length) {
    return step1aResult.length < step1cResult.length ? step1aResult : step1cResult;
  } else {
    return step1bResult.length < step1cResult.length ? step1bResult : step1cResult;
  }
} // step 1a as defined for the porter stemmer algorithm.


function step1a(token) {
  var r1 = getR1(token);

  if (!r1) {
    return token;
  }

  var r1Match = r1.match(/(a|e|ede|ande|ende|ane|ene|hetene|en|heten|ar|er|heter|as|es|edes|endes|enes|hetenes|ens|hetens|ers|ets|et|het|ast)$/);

  if (r1Match) {
    return token.replace(new RegExp(r1Match[1] + '$'), '');
  }

  return token;
} // step 1b as defined for the porter stemmer algorithm.


function step1b(token) {
  var r1 = getR1(token);

  if (!r1) {
    return token;
  }

  if (token.match(/(b|c|d|f|g|h|j|l|m|n|o|p|r|t|v|y|z)s$/)) {
    return token.slice(0, -1);
  }

  if (token.match(/([^aeiouyæåø]k)s$/)) {
    return token.slice(0, -1);
  }

  return token;
} // step 1c as defined for the porter stemmer algorithm.


function step1c(token) {
  var r1 = getR1(token);

  if (!r1) {
    return token;
  }

  if (r1.match(/(erte|ert)$/)) {
    return token.replace(/(erte|ert)$/, 'er');
  }

  return token;
} // step 2 as defined for the porter stemmer algorithm.


function step2(token) {
  var r1 = getR1(token);

  if (!r1) {
    return token;
  }

  if (r1.match(/(d|v)t$/)) {
    return token.slice(0, -1);
  }

  return token;
} // step 3 as defined for the porter stemmer algorithm.


function step3(token) {
  var r1 = getR1(token);
  if (!r1) return token;
  var r1Match = r1.match(/(leg|eleg|ig|eig|lig|elig|els|lov|elov|slov|hetslov)$/);

  if (r1Match) {
    return token.replace(new RegExp(r1Match[1] + '$'), '');
  }

  return token;
}

var PorterStemmer = new Stemmer();
module.exports = PorterStemmer; // perform full stemming algorithm on a single word

PorterStemmer.stem = function (token) {
  return step3(step2(step1(token.toLowerCase()))).toString();
}; //exports for tests


PorterStemmer.getR1 = getR1;
PorterStemmer.step1 = step1;
PorterStemmer.step1a = step1a;
PorterStemmer.step1b = step1b;
PorterStemmer.step1c = step1c;
PorterStemmer.step2 = step2;
PorterStemmer.step3 = step3;
},{"./stemmer_no":"FB2d"}],"vvpR":[function(require,module,exports) {
/*
Copyright (c) 2017, Dogan Yazar

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
const words = ["aderton", "adertonde", "adjö", "aldrig", "alla", "allas", "allt", "alltid", "alltså", "andra", "andras", "annan", "annat", "artonde", "artonn", "att", "av", "bakom", "bara", "behöva", "behövas", "behövde", "behövt", "beslut", "beslutat", "beslutit", "bland", "blev", "bli", "blir", "blivit", "bort", "borta", "bra", "bäst", "bättre", "båda", "bådas", "dag", "dagar", "dagarna", "dagen", "de", "del", "delen", "dem", "den", "denna", "deras", "dess", "dessa", "det", "detta", "dig", "din", "dina", "dit", "ditt", "dock", "dom", "du", "där", "därför", "då", "e", "efter", "eftersom", "ej", "elfte", "eller", "elva", "emot", "en", "enkel", "enkelt", "enkla", "enligt", "ens", "er", "era", "ers", "ert", "ett", "ettusen", "fanns", "fem", "femte", "femtio", "femtionde", "femton", "femtonde", "fick", "fin", "finnas", "finns", "fjorton", "fjortonde", "fjärde", "fler", "flera", "flesta", "fram", "framför", "från", "fyra", "fyrtio", "fyrtionde", "få", "får", "fått", "följande", "för", "före", "förlåt", "förra", "första", "genast", "genom", "gick", "gjorde", "gjort", "god", "goda", "godare", "godast", "gott", "gälla", "gäller", "gällt", "gärna", "gå", "går", "gått", "gör", "göra", "ha", "hade", "haft", "han", "hans", "har", "heller", "hellre", "helst", "helt", "henne", "hennes", "hit", "hon", "honom", "hundra", "hundraen", "hundraett", "hur", "här", "hög", "höger", "högre", "högst", "i", "ibland", "icke", "idag", "igen", "igår", "imorgon", "in", "inför", "inga", "ingen", "ingenting", "inget", "innan", "inne", "inom", "inte", "inuti", "ja", "jag", "jo", "ju", "just", "jämfört", "kan", "kanske", "knappast", "kom", "komma", "kommer", "kommit", "kr", "kunde", "kunna", "kunnat", "kvar", "legat", "ligga", "ligger", "lika", "likställd", "likställda", "lilla", "lite", "liten", "litet", "länge", "längre", "längst", "lätt", "lättare", "lättast", "långsam", "långsammare", "långsammast", "långsamt", "långt", "låt", "man", "med", "mej", "mellan", "men", "mer", "mera", "mest", "mig", "min", "mina", "mindre", "minst", "mitt", "mittemot", "mot", "mycket", "många", "måste", "möjlig", "möjligen", "möjligt", "möjligtvis", "ned", "nederst", "nedersta", "nedre", "nej", "ner", "ni", "nio", "nionde", "nittio", "nittionde", "nitton", "nittonde", "nog", "noll", "nr", "nu", "nummer", "när", "nästa", "någon", "någonting", "något", "några", "nån", "nånting", "nåt", "nödvändig", "nödvändiga", "nödvändigt", "nödvändigtvis", "och", "också", "ofta", "oftast", "olika", "olikt", "om", "oss", "på", "rakt", "redan", "rätt", "sa", "sade", "sagt", "samma", "sedan", "senare", "senast", "sent", "sex", "sextio", "sextionde", "sexton", "sextonde", "sig", "sin", "sina", "sist", "sista", "siste", "sitt", "sitta", "sju", "sjunde", "sjuttio", "sjuttionde", "sjutton", "sjuttonde", "själv", "sjätte", "ska", "skall", "skulle", "slutligen", "små", "smått", "snart", "som", "stor", "stora", "stort", "större", "störst", "säga", "säger", "sämre", "sämst", "så", "sådan", "sådana", "sådant", "ta", "tack", "tar", "tidig", "tidigare", "tidigast", "tidigt", "till", "tills", "tillsammans", "tio", "tionde", "tjugo", "tjugoen", "tjugoett", "tjugonde", "tjugotre", "tjugotvå", "tjungo", "tolfte", "tolv", "tre", "tredje", "trettio", "trettionde", "tretton", "trettonde", "två", "tvåhundra", "under", "upp", "ur", "ursäkt", "ut", "utan", "utanför", "ute", "va", "vad", "var", "vara", "varför", "varifrån", "varit", "varje", "varken", "vars", "varsågod", "vart", "vem", "vems", "verkligen", "vi", "vid", "vidare", "viktig", "viktigare", "viktigast", "viktigt", "vilka", "vilkas", "vilken", "vilket", "vill", "väl", "vänster", "vänstra", "värre", "vår", "våra", "vårt", "än", "ännu", "är", "även", "åt", "åtminstone", "åtta", "åttio", "åttionde", "åttonde", "över", "övermorgon", "överst", "övre", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0"]; // tell the world about the noise words.

exports.words = words;
},{}],"aR8y":[function(require,module,exports) {
/*
 Copyright (c) 2017, Dogan Yazar

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * Remove commonly used diacritic marks from a string as these
 * are not used in a consistent manner. Leave only ä, ö, å.
 */
var remove_diacritics = function (text) {
  text = text.replace('à', 'a');
  text = text.replace('À', 'A');
  text = text.replace('á', 'a');
  text = text.replace('Á', 'A');
  text = text.replace('è', 'e');
  text = text.replace('È', 'E');
  text = text.replace('é', 'e');
  text = text.replace('É', 'E');
  return text;
}; // export the relevant stuff.


exports.remove_diacritics = remove_diacritics;
},{}],"vQpl":[function(require,module,exports) {
/*
Copyright (c) 2017, Dogan Yazar

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    normalizer = require('../normalizers/normalizer_sv'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.tokenize = function (text) {
  text = normalizer.remove_diacritics(text); // break a string up into an array of tokens by anything non-word
  // Ü is not part of swedish alphabet but there are words using it like müsli and München 

  return this.trim(text.split(/[^A-Za-z0-9_åÅäÄöÖüÜ\-]+/));
};
},{"./tokenizer":"ZemB","../normalizers/normalizer_sv":"aR8y","util":"nq70"}],"MbE4":[function(require,module,exports) {
/*
Copyright (c) 2017, Dogan Yazar

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords_sv');

var Tokenizer = require('../tokenizers/aggressive_tokenizer_sv');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.addStopWord = function (stopWord) {
    stopwords.words.push(stopWord);
  };

  stemmer.addStopWords = function (moreStopWords) {
    stopwords.words = stopwords.words.concat(moreStopWords);
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token.toLowerCase()) == -1) stemmedTokens.push(stemmer.stem(token));
    });
    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords_sv":"vvpR","../tokenizers/aggressive_tokenizer_sv":"vQpl"}],"BtZF":[function(require,module,exports) {
/*
Copyright (c) 2017, Dogan Yazar

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Stemmer = require('./stemmer_sv'); //Get R1 region


function getRegions(str) {
  const match = str.match(/[aeiouyäåö][^aeiouyäåö]([a-zåäö]+)/);
  let r1 = '';

  if (match && match[1]) {
    r1 = match[1];

    if (match.index + 2 < 3) {
      //Not clear why we need this! Algorithm does not describe this part!
      r1 = str.slice(3);
    }
  }

  return {
    r1,
    rest: str.slice(0, str.length - r1.length)
  };
}

function step1a(str, regions = getRegions(str)) {
  const r1 = regions.r1;

  if (!r1) {
    return str;
  }

  const regEx = /(heterna|hetens|anden|andes|andet|arens|arnas|ernas|heten|heter|ornas|ande|ades|aren|arna|arne|aste|erna|erns|orna|ade|are|ast|ens|ern|het|ad|ar|as|at|en|er|es|or|a|e)$/;
  const match = r1.match(regEx);
  return match ? regions.rest + r1.slice(0, match.index) : str;
}

function step1b(str, regions = getRegions(str)) {
  if (regions.r1 && str.match(/(b|c|d|f|g|h|j|k|l|m|n|o|p|r|t|v|y)s$/)) {
    return str.slice(0, -1);
  }

  return str;
}

function step1(str) {
  const regions = getRegions(str);
  const resA = step1a(str, regions);
  const resB = step1b(str, regions);
  return resA.length < resB.length ? resA : resB;
}

function step2(str, regions = getRegions(str)) {
  const r1 = regions.r1;

  if (r1 && r1.match(/(dd|gd|nn|dt|gt|kt|tt)$/)) {
    return str.slice(0, -1);
  }

  return str;
}

function step3(str, regions = getRegions(str)) {
  const r1 = regions.r1;

  if (r1) {
    if (r1.match(/(lös|full)t$/)) {
      return str.slice(0, -1);
    }

    const match = r1.match(/(lig|ig|els)$/);
    return match ? regions.rest + r1.slice(0, match.index) : str;
  }

  return str;
}

function stem(_str) {
  const str = _str.toLowerCase();

  return step3(step2(step1(str)));
}

var PorterStemmer = new Stemmer();
module.exports = PorterStemmer; // perform full stemming algorithm on a single word

PorterStemmer.stem = stem;
},{"./stemmer_sv":"MbE4"}],"AOSE":[function(require,module,exports) {
/*
Copyright (c) 2011, Luís Rodrigues

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = ['a', 'à', 'ao', 'aos', 'aquela', 'aquelas', 'aquele', 'aqueles', 'aquilo', 'as', 'às', 'até', 'com', 'como', 'da', 'das', 'de', 'dela', 'delas', 'dele', 'deles', 'depois', 'do', 'dos', 'e', 'ela', 'elas', 'ele', 'eles', 'em', 'entre', 'essa', 'essas', 'esse', 'esses', 'esta', 'estas', 'este', 'estes', 'eu', 'isso', 'isto', 'já', 'lhe', 'lhes', 'mais', 'mas', 'me', 'mesmo', 'meu', 'meus', 'minha', 'minhas', 'muito', 'muitos', 'na', 'não', 'nas', 'nem', 'no', 'nos', 'nós', 'nossa', 'nossas', 'nosso', 'nossos', 'num', 'nuns', 'numa', 'numas', 'o', 'os', 'ou', 'para', 'pela', 'pelas', 'pelo', 'pelos', 'por', 'quais', 'qual', 'quando', 'que', 'quem', 'se', 'sem', 'seu', 'seus', 'só', 'sua', 'suas', 'também', 'te', 'teu', 'teus', 'tu', 'tua', 'tuas', 'um', 'uma', 'umas', 'você', 'vocês', 'vos', 'vosso', 'vossos', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_']; // tell the world about the noise words.

exports.words = words;
},{}],"IWGI":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel,David Przybilla

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.withoutEmpty = function (array) {
  return array.filter(function (a) {
    return a;
  });
};

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.withoutEmpty(this.trim(text.split(/[^a-zA-Zà-úÀ-Ú]/)));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"AanW":[function(require,module,exports) {
/*
Copyright (c) 2014, Ismaël Héry

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
module.exports = function () {
  'use strict';

  var Stemmer = this,
      stopwords = require('../util/stopwords_pt'),
      Tokenizer = require('../tokenizers/aggressive_tokenizer_pt');

  Stemmer.stem = function (token) {
    return token;
  };

  Stemmer.addStopWords = function (word) {
    stopwords.words.push(word);
  };

  Stemmer.addStopWords = function (words) {
    stopwords.words = stopwords.words.concat(words);
  };

  Stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];

    var tokenStemmer = function (token) {
      if (keepStops || stopwords.words.indexOf(token.toLowerCase()) === -1) {
        stemmedTokens.push(Stemmer.stem(token));
      }
    };

    new Tokenizer().tokenize(text).forEach(tokenStemmer);
    return stemmedTokens;
  };

  Stemmer.attach = function () {
    String.prototype.stem = function () {
      return Stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return Stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../util/stopwords_pt":"AOSE","../tokenizers/aggressive_tokenizer_pt":"IWGI"}],"a9CL":[function(require,module,exports) {
/*
Copyright (c) 2015, Luís Rodrigues

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
module.exports = function () {
  'use strict';
  /**
   * Stemmer token constructor.
   *
   * @param {String} string Token string.
   */

  var Token = function (string) {
    this.vowels = '';
    this.regions = {};
    this.string = string;
    this.original = string;
  };
  /**
   * Set vowels.
   *
   * @param  {String|Array} vowels List of vowels.
   * @return {Token}               Token instance.
   */


  Token.prototype.usingVowels = function (vowels) {
    this.vowels = vowels;
    return this;
  };
  /**
   * Marks a region by defining its starting index or providing a callback
   * function that does.
   *
   * @param  {String}       region   Region name.
   * @param  {Array|Number} args     Callback arguments or region start index.
   * @param  {Function}     callback Function that determines the start index (optional).
   * @param  {Object}       context  Callback context (optional, defaults to this).
   * @return {Token}                 Token instance.
   */


  Token.prototype.markRegion = function (region, args, callback, context) {
    if (typeof callback === 'function') {
      this.regions[region] = callback.apply(context || this, [].concat(args));
    } else if (!isNaN(args)) {
      this.regions[region] = args;
    }

    return this;
  };
  /**
   * Replaces all instances of a string with another.
   *
   * @param  {String} find    String to be replaced.
   * @param  {String} replace Replacement string.
   * @return {Token}          Token instance.
   */


  Token.prototype.replaceAll = function (find, replace) {
    this.string = this.string.split(find).join(replace);
    return this;
  };
  /**
   * Replaces the token suffix if in a region.
   *
   * @param  {String} suffix  Suffix to replace.
   * @param  {String} replace Replacement string.
   * @param  {String} region  Region name.
   * @return {Token}          Token instance.
   */


  Token.prototype.replaceSuffixInRegion = function (suffix, replace, region) {
    var suffixes = [].concat(suffix);

    for (var i = 0; i < suffixes.length; i++) {
      if (this.hasSuffixInRegion(suffixes[i], region)) {
        this.string = this.string.slice(0, -suffixes[i].length) + replace;
        return this;
      }
    }

    return this;
  };
  /**
   * Determines whether the token has a vowel at the provided index.
   *
   * @param  {Integer} index Character index.
   * @return {Boolean}       Whether the token has a vowel at the provided index.
   */


  Token.prototype.hasVowelAtIndex = function (index) {
    return this.vowels.indexOf(this.string[index]) !== -1;
  };
  /**
   * Finds the next vowel in the token.
   *
   * @param  {Integer} start Starting index offset.
   * @return {Integer}       Vowel index, or the end of the string.
   */


  Token.prototype.nextVowelIndex = function (start) {
    var index = start >= 0 && start < this.string.length ? start : this.string.length;

    while (index < this.string.length && !this.hasVowelAtIndex(index)) {
      index++;
    }

    return index;
  };
  /**
   * Finds the next consonant in the token.
   *
   * @param  {Integer} start Starting index offset.
   * @return {Integer}       Consonant index, or the end of the string.
   */


  Token.prototype.nextConsonantIndex = function (start) {
    var index = start >= 0 && start < this.string.length ? start : this.string.length;

    while (index < this.string.length && this.hasVowelAtIndex(index)) {
      index++;
    }

    return index;
  };
  /**
   * Determines whether the token has the provided suffix.
   * @param  {String}  suffix Suffix to match.
   * @return {Boolean}        Whether the token string ends in suffix.
   */


  Token.prototype.hasSuffix = function (suffix) {
    return this.string.slice(-suffix.length) === suffix;
  };
  /**
   * Determines whether the token has the provided suffix within the specified
   * region.
   *
   * @param  {String}  suffix Suffix to match.
   * @param  {String}  region Region name.
   * @return {Boolean}        Whether the token string ends in suffix.
   */


  Token.prototype.hasSuffixInRegion = function (suffix, region) {
    var regionStart = this.regions[region] || 0,
        suffixStart = this.string.length - suffix.length;
    return this.hasSuffix(suffix) && suffixStart >= regionStart;
  };

  return Token;
}();
},{}],"vN4u":[function(require,module,exports) {
/*
Copyright (c) 2015, Luís Rodrigues

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
module.exports = function () {
  'use strict';

  var Stemmer = require('./stemmer_pt'),
      Token = require('./token'),
      PorterStemmer = new Stemmer();
  /**
   * Marks a region after the first non-vowel following a vowel, or the
   * null region at the end of the word if there is no such non-vowel.
   *
   * @param {Object} token Token to stem.
   * @param {Number} start Start index (defaults to 0).
   * @param {Number}       Region start index.
   */


  var markRegionN = function (start) {
    var index = start || 0,
        length = this.string.length,
        region = length;

    while (index < length - 1 && region === length) {
      if (this.hasVowelAtIndex(index) && !this.hasVowelAtIndex(index + 1)) {
        region = index + 2;
      }

      index++;
    }

    return region;
  };
  /**
   * Mark RV.
   *
   * @param  {Object} token Token to stem.
   * @return {Number}       Region start index.
   */


  var markRegionV = function () {
    var rv = this.string.length;

    if (rv > 3) {
      if (!this.hasVowelAtIndex(1)) {
        rv = this.nextVowelIndex(2) + 1;
      } else if (this.hasVowelAtIndex(0) && this.hasVowelAtIndex(1)) {
        rv = this.nextConsonantIndex(2) + 1;
      } else {
        rv = 3;
      }
    }

    return rv;
  };
  /**
   * Prelude.
   *
   * Nasalised vowel forms should be treated as a vowel followed by a consonant.
   *
   * @param  {String} token Word to stem.
   * @return {String}       Stemmed token.
   */


  function prelude(token) {
    return token.replaceAll('ã', 'a~').replaceAll('õ', 'o~');
  }
  /**
   * Step 1: Standard suffix removal.
   *
   * This step should always be performed.
   *
   * @param  {Token} token Word to stem.
   * @return {Token}       Stemmed token.
   */


  function standardSuffix(token) {
    token.replaceSuffixInRegion(['amentos', 'imentos', 'aço~es', 'adoras', 'adores', 'amento', 'imento', 'aça~o', 'adora', 'ância', 'antes', 'ismos', 'istas', 'ador', 'ante', 'ável', 'ezas', 'icas', 'icos', 'ismo', 'ista', 'ível', 'osas', 'osos', 'eza', 'ica', 'ico', 'osa', 'oso'], '', 'r2');
    token.replaceSuffixInRegion(['logias', 'logia'], 'log', 'r2'); // token.replaceSuffixInRegion(['uço~es', 'uça~o'], 'u', 'r1');

    token.replaceSuffixInRegion(['ências', 'ência'], 'ente', 'r2');
    token.replaceSuffixInRegion(['ativamente', 'icamente', 'ivamente', 'osamente', 'adamente'], '', 'r2');
    token.replaceSuffixInRegion('amente', '', 'r1');
    token.replaceSuffixInRegion(['antemente', 'avelmente', 'ivelmente', 'mente'], '', 'r2');
    token.replaceSuffixInRegion(['abilidades', 'abilidade', 'icidades', 'icidade', 'ividades', 'ividade', 'idades', 'idade'], '', 'r2');
    token.replaceSuffixInRegion(['ativas', 'ativos', 'ativa', 'ativo', 'ivas', 'ivos', 'iva', 'ivo'], '', 'r2');

    if (token.hasSuffix('eiras') || token.hasSuffix('eira')) {
      token.replaceSuffixInRegion(['iras', 'ira'], 'ir', 'rv');
    }

    return token;
  }
  /**
   * Step 2: Verb suffix removal.
   *
   * Perform this step if no ending was removed in step 1.
   *
   * @param  {Token} token   Token to stem.
   * @return {Token}         Stemmed token.
   */


  function verbSuffix(token) {
    token.replaceSuffixInRegion(['aríamos', 'ássemos', 'eríamos', 'êssemos', 'iríamos', 'íssemos', 'áramos', 'aremos', 'aríeis', 'ásseis', 'ávamos', 'éramos', 'eremos', 'eríeis', 'ésseis', 'íramos', 'iremos', 'iríeis', 'ísseis', 'ara~o', 'ardes', 'areis', 'áreis', 'ariam', 'arias', 'armos', 'assem', 'asses', 'astes', 'áveis', 'era~o', 'erdes', 'ereis', 'éreis', 'eriam', 'erias', 'ermos', 'essem', 'esses', 'estes', 'íamos', 'ira~o', 'irdes', 'ireis', 'íreis', 'iriam', 'irias', 'irmos', 'issem', 'isses', 'istes', 'adas', 'ados', 'amos', 'ámos', 'ando', 'aram', 'aras', 'arás', 'arei', 'arem', 'ares', 'aria', 'asse', 'aste', 'avam', 'avas', 'emos', 'endo', 'eram', 'eras', 'erás', 'erei', 'erem', 'eres', 'eria', 'esse', 'este', 'idas', 'idos', 'íeis', 'imos', 'indo', 'iram', 'iras', 'irás', 'irei', 'irem', 'ires', 'iria', 'isse', 'iste', 'ada', 'ado', 'ais', 'ara', 'ará', 'ava', 'eis', 'era', 'erá', 'iam', 'ias', 'ida', 'ido', 'ira', 'irá', 'am', 'ar', 'as', 'ei', 'em', 'er', 'es', 'eu', 'ia', 'ir', 'is', 'iu', 'ou'], '', 'rv');
    return token;
  }
  /**
   * Step 3: Delete suffix i.
   *
   * Perform this step if the word was changed, in RV and preceded by c.
   *
   * @param  {Token} token   Token to stem.
   * @return {Token}         Stemmed token.
   */


  function iPrecededByCSuffix(token) {
    if (token.hasSuffix('ci')) {
      token.replaceSuffixInRegion('i', '', 'rv');
    }

    return token;
  }
  /**
   * Step 4: Residual suffix.
   *
   * Perform this step if steps 1 and 2 did not alter the word.
   *
   * @param  {Token} token Token to stem.
   * @return {Token}       Stemmed token.
   */


  function residualSuffix(token) {
    token.replaceSuffixInRegion(['os', 'a', 'i', 'o', 'á', 'í', 'ó'], '', 'rv');
    return token;
  }
  /**
   * Step 5: Residual form.
   *
   * This step should always be performed.
   *
   * @param  {Token} token Token to stem.
   * @return {Token}       Stemmed token.
   */


  function residualForm(token) {
    var tokenString = token.string;

    if (token.hasSuffix('gue') || token.hasSuffix('gué') || token.hasSuffix('guê')) {
      token.replaceSuffixInRegion(['ue', 'ué', 'uê'], '', 'rv');
    }

    if (token.hasSuffix('cie') || token.hasSuffix('cié') || token.hasSuffix('ciê')) {
      token.replaceSuffixInRegion(['ie', 'ié', 'iê'], '', 'rv');
    }

    if (tokenString === token.string) {
      token.replaceSuffixInRegion(['e', 'é', 'ê'], '', 'rv');
    }

    token.replaceSuffixInRegion('ç', 'c', 'all');
    return token;
  }
  /**
   * Postlude.
   *
   * Turns a~, o~ back into ã, õ.
   *
   * @param  {String} token Word to stem.
   * @return {String}       Stemmed token.
   */


  function postlude(token) {
    return token.replaceAll('a~', 'ã').replaceAll('o~', 'õ');
  }
  /**
   * Stems a word using a Porter stemmer algorithm.
   *
   * @param  {String} word Word to stem.
   * @return {String}      Stemmed token.
   */


  PorterStemmer.stem = function (word) {
    var token = new Token(word.toLowerCase()),
        original;
    token = prelude(token);
    token.usingVowels('aeiouáéíóúâêôàãõ').markRegion('all', 0).markRegion('r1', null, markRegionN).markRegion('r2', token.regions.r1, markRegionN).markRegion('rv', null, markRegionV);
    original = token.string; // Always do step 1.

    token = standardSuffix(token); // Do step 2 if no ending was removed by step 1.

    if (token.string === original) {
      token = verbSuffix(token);
    } // If the last step to be obeyed — either step 1 or 2 — altered the word,
    // do step 3. Alternatively, if neither steps 1 nor 2 altered the word, do
    // step 4.


    token = token.string !== original ? iPrecededByCSuffix(token) : residualSuffix(token); // Always do step 5.

    token = residualForm(token);
    token = postlude(token);
    return token.string;
  };

  return PorterStemmer;
}();
},{"./stemmer_pt":"AanW","./token":"a9CL"}],"Bt0H":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel, Martijn de Boer, Damien van Holten

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
// This dutch wordlist has been parsed from a list created by Damien van Holten
// source: http://www.damienvanholten.com/blog/dutch-stop-words/
var words = ['aan', 'af', 'al', 'alles', 'als', 'altijd', 'andere', 'ben', 'bij', 'daar', 'dan', 'dat', 'de', 'der', 'deze', 'die', 'dit', 'doch', 'doen', 'door', 'dus', 'een', 'eens', 'en', 'er', 'ge', 'geen', 'geweest', 'haar', 'had', 'heb', 'hebben', 'heeft', 'hem', 'het', 'hier', 'hij', 'hoe', 'hun', 'iemand', 'iets', 'ik', 'in', 'is', 'ja', 'je ', 'kan', 'kon', 'kunnen', 'maar', 'me', 'meer', 'men', 'met', 'mij', 'mijn', 'moet', 'na', 'naar', 'niet', 'niets', 'nog', 'nu', 'of', 'om', 'omdat', 'ons', 'ook', 'op', 'over', 'reeds', 'te', 'tegen', 'toch', 'toen', 'tot', 'u', 'uit', 'uw', 'van', 'veel', 'voor', 'want', 'waren', 'was', 'wat', 'we', 'wel', 'werd', 'wezen', 'wie', 'wij', 'wil', 'worden', 'zal', 'ze', 'zei', 'zelf', 'zich', 'zij', 'zijn', 'zo', 'zonder', 'zou', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '$', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '_', '-']; // tell the world about the noise words.

exports.words = words;
},{}],"uWxa":[function(require,module,exports) {
/*
Copyright (c) 2018 Hugo W.L. ter Doest 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../util/stopwords_nl');

var Tokenizer = require('../tokenizers/aggressive_tokenizer');

class Stemmer {
  constructor() {}

  stem(token) {
    return token;
  }

  tokenizeAndStem(text, keepStops) {
    var stemmedTokens = [];
    var that = this;
    new Tokenizer().tokenize(text).forEach(function (token) {
      if (keepStops || stopwords.words.indexOf(token) == -1) {
        var resultToken = token.toLowerCase();

        if (resultToken.match(new RegExp('[a-zäëïöüáéíóúè0-9]+', 'gi'))) {
          resultToken = that.stem(resultToken);
        }

        stemmedTokens.push(resultToken);
      }
    });
    return stemmedTokens;
  }

  attach() {
    var that = this;

    String.prototype.stem = function () {
      return that.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return that.tokenizeAndStem(this, keepStops);
    };
  }

}

module.exports = Stemmer;
},{"../util/stopwords_nl":"Bt0H","../tokenizers/aggressive_tokenizer":"nbJc"}],"Bi3x":[function(require,module,exports) {
/*
Copyright (c) 2018, Hugo W.L. ter Doest

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/*
 * Spec for the Dutch Porter Stemmer can be found at:
 * http://snowball.tartarus.org/algorithms/dutch/stemmer.html
 */
'use strict';

var Stemmer = require('./stemmer_nl');

const DEBUG = false;
const vowels = "aeiouèy";

function isVowel(x) {
  return vowels.indexOf(x) > -1;
} // * Return longest matching suffixes for a token or '' if no suffix match


String.prototype.endsinArr = function (suffixes) {
  var i,
      longest = '';

  for (i = 0; i < suffixes.length; i++) {
    if (this.endsin(suffixes[i]) && suffixes[i].length > longest.length) longest = suffixes[i];
  }

  if (DEBUG && longest != "") {
    console.log("Matched suffix: " + longest);
  }

  return longest;
}; // Returns true if token has suffix


String.prototype.endsin = function (suffix) {
  if (this.length < suffix.length) return false;
  return this.slice(-suffix.length) == suffix;
}; // Removes a suffix of len characters and returns the string


String.prototype.removeSuffix = function (len) {
  return this.substr(0, this.length - len);
}; // Define undoubling the ending as removing the last letter if the word ends kk, dd or tt.


String.prototype.undoubleEnding = function () {
  if (this.substr(-2) == "kk" || this.substr(-2) == "tt" || this.substr(-2) == "dd") {
    return this.substr(0, this.length - 1);
  } else {
    return this;
  }
};

class PorterStemmer extends Stemmer {
  constructor() {
    super();
  }

  replaceAccentedCharacters(word) {
    var accentedCharactersMapping = {
      "ä": "a",
      "ë": "e",
      "ï": "i",
      "ö": "o",
      "ü": "u",
      "á": "a",
      "é": "e",
      "í": "i",
      "ó": "o",
      "ú": "u"
    };
    var result = word;

    for (var x in accentedCharactersMapping) {
      result = result.replace(new RegExp(x, "g"), accentedCharactersMapping[x]);
    }

    if (DEBUG) {
      console.log("replaceAccentedCharacters: " + result);
    }

    return result;
  } //Put initial y, y after a vowel, and i between vowels into upper case.


  handleYI(word) {
    // Initial y
    var result = word.replace(/^y/, "Y");

    if (DEBUG) {
      console.log("handleYI: initial y: " + result);
    } // y after vowel


    result = result.replace(/([aeioué])y/g, "$1Y");

    if (DEBUG) {
      console.log("handleYI: y after vowel: " + result);
    } // i between vowels


    var result = result.replace(/([aeioué])i([aeioué])/g, "$1I$2");

    if (DEBUG) {
      console.log("handleYI: i between vowels:" + result);
    }

    return result;
  } // Determines R1 and R2; adapted from the French Porter Stemmer


  markRegions(token) {
    var r1, r2, len;
    r1 = r2 = len = token.length; // R1 is the region after the first non-vowel following a vowel,

    for (var i = 0; i < len - 1 && r1 == len; i++) {
      if (isVowel(token[i]) && !isVowel(token[i + 1])) {
        r1 = i + 2;
      }
    } // Or is the null region at the end of the word if there is no such non-vowel.
    // R1 is adjusted such that the region before it contains at least 3 characters


    if (r1 != len) {
      // R1 is not null
      if (r1 < 3) {
        // Region before does not contain at least 3 characters
        if (len > 3) {
          r1 = 3; // Now R1 contains at least 3 characters
        } else {
          // It is not possible to make the region before long enough
          r1 = len;
        }
      }
    } // R2 is the region after the first non-vowel following a vowel in R1


    for (i = r1; i < len - 1 && r2 == len; i++) {
      if (isVowel(token[i]) && !isVowel(token[i + 1])) {
        r2 = i + 2;
      }
    } // Or is the null region at the end of the word if there is no such non-vowel.


    if (DEBUG) {
      console.log("Regions r1 = " + r1 + " r2 = " + r2);
    }

    this.r1 = r1;
    this.r2 = r2;
  }

  prelude(word) {
    var result = this.replaceAccentedCharacters(word);
    result = this.handleYI(result);
    this.markRegions(result);

    if (DEBUG) {
      console.log("Prelude: " + result);
    }

    return result;
  } // (1b) en   ene => delete if in R1 and preceded by a valid en-ending, and then undouble the ending
  // Define a valid en-ending as a non-vowel, and not gem.
  // Define undoubling the ending as removing the last letter if the word ends kk, dd or tt.


  step1b(word, suffixes) {
    var result = word;
    var match = result.endsinArr(suffixes);

    if (match != "") {
      var pos = result.length - match.length;

      if (pos >= this.r1) {
        // check the character before the matched en/ene AND check for gem
        if (!isVowel(result[pos - 1]) && result.substr(pos - 3, 3) !== "gem") {
          // delete
          result = result.removeSuffix(match.length); // Undouble the ending

          result = result.undoubleEnding();
        }
      }
    }

    if (DEBUG) {
      console.log("step 1b: " + result);
    }

    return result;
  }

  step1(word) {
    var result = word; // (1a) heden => replace with heid if in R1

    if (result.endsin("heden") && result.length - 5 >= this.r1) {
      result = result.removeSuffix(5);
      result += "heid";
    }

    if (DEBUG) {
      console.log("step 1a: " + result);
    }

    result = this.step1b(result, ["en", "ene"]); // (1c) s   se => delete if in R1 and preceded by a valid s-ending
    // Define a valid s-ending as a non-vowel other than j.

    var match = result.endsinArr(["se", "s"]);

    if (match != "") {
      var pos = result.length - match.length;

      if (pos >= this.r1) {
        // check the character before the matched s/se
        // HtD: if there is a s before the s/se the suffix should stay
        //if (!isVowel(result[pos - 1]) && result[pos - 1] != "j") {
        if (!isVowel(result[pos - 1]) && !result.match(/[js]se?$/)) {
          result = result.removeSuffix(match.length);
        }
      }
    }

    if (DEBUG) {
      console.log("step 1c: " + result);
    }

    return result;
  } // Delete suffix e if in R1 and preceded by a non-vowel, and then undouble the ending


  step2(word) {
    var result = word;

    if (result.endsin("e") && this.r1 < result.length) {
      if (result.length > 1 && !isVowel(result[result.length - 2])) {
        // Delete
        result = result.removeSuffix(1);
        this.suffixeRemoved = true; // Undouble the ending

        result = result.undoubleEnding();
      }
    }

    if (DEBUG) {
      console.log("step2: " + result);
    }

    return result;
  } // Step 3a: heid => delete heid if in R2 and not preceded by c, and treat a preceding en as in step 1(b)


  step3a(word) {
    var result = word;

    if (result.endsin("heid") && result.length - 4 >= this.r2 && result[result.length - 5] != "c") {
      // Delete
      result = result.removeSuffix(4); // Treat a preceding en as in step 1b

      result = this.step1b(result, ["en"]);
    }

    if (DEBUG) {
      console.log("step 3a: " + result);
    }

    return result;
  } // d suffixes: Search for the longest among the following suffixes, and perform the action indicated.


  step3b(word) {
    var result = word; // end   ing => delete if in R2; if preceded by ig, delete if in R2 and not preceded by e, otherwise undouble the ending

    var suf = "";

    if (suf = result.endsinArr(["end", "ing"])) {
      if (result.length - 3 >= this.r2) {
        // Delete suffix
        result = result.removeSuffix(3); //this.regions(result);

        if (result.endsin("ig") && result.length - 2 >= this.r2 && result[result.length - 3] != "e") {
          // Delete suffix
          result = result.removeSuffix(2);
        } else {
          result = result.undoubleEnding();
        }
      }
    } // ig => delete if in R2 and not preceded by e


    if (result.endsin("ig") && this.r2 <= result.length - 2 && result[result.length - 3] != "e") {
      result = result.removeSuffix(2);
    } // lijk => delete if in R2, and then repeat step 2


    if (result.endsin("lijk") && this.r2 <= result.length - 4) {
      result = result.removeSuffix(4); // repeat step 2

      result = this.step2(result);
    } // baar => delete if in R2


    if (result.endsin("baar") && this.r2 <= result.length - 4) {
      result = result.removeSuffix(4);
    } // bar => delete if in R2 and if step 2 actually removed an e


    if (result.endsin("bar") && this.r2 <= result.length - 3 && this.suffixeRemoved) {
      result = result.removeSuffix(3);
    }

    if (DEBUG) {
      console.log("step 3b: " + result);
    }

    return result;
  } // undouble vowel => If the words ends CVD, where C is a non-vowel,
  // D is a non-vowel other than I, and V is double a, e, o or u,
  // remove one of the vowels from V (for example, maan -> man, brood -> brod)


  step4(word) {
    var result = word;

    if (result.match(/[bcdfghjklmnpqrstvwxz](aa|ee|oo|uu)[bcdfghjklmnpqrstvwxz]$/)) {
      result = result.substr(0, result.length - 2) + result[result.length - 1];
    }

    if (DEBUG) {
      console.log("step4: " + result);
    }

    return result;
  } // Turn I and Y back into lower case.


  postlude(word) {
    return word.toLowerCase();
  }

  stem(word) {
    return this.postlude(this.step4(this.step3b(this.step3a(this.step2(this.step1(this.prelude(word)))))));
  }

}

module.exports = new PorterStemmer();
},{"./stemmer_nl":"uWxa"}],"mZOq":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
exports.rules = {
  "a": [{
    "continuation": false,
    "intact": true,
    "pattern": "ia",
    "size": "2"
  }, {
    "continuation": false,
    "intact": true,
    "pattern": "a",
    "size": "1"
  }],
  "b": [{
    "continuation": false,
    "intact": false,
    "pattern": "bb",
    "size": "1"
  }],
  "c": [{
    "appendage": "s",
    "continuation": false,
    "intact": false,
    "pattern": "ytic",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ic",
    "size": "2"
  }, {
    "appendage": "t",
    "continuation": true,
    "intact": false,
    "pattern": "nc",
    "size": "1"
  }],
  "d": [{
    "continuation": false,
    "intact": false,
    "pattern": "dd",
    "size": "1"
  }, {
    "appendage": "y",
    "continuation": true,
    "intact": false,
    "pattern": "ied",
    "size": "3"
  }, {
    "appendage": "ss",
    "continuation": false,
    "intact": false,
    "pattern": "ceed",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "eed",
    "size": "1"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ed",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "hood",
    "size": "4"
  }],
  "e": [{
    "continuation": true,
    "intact": false,
    "pattern": "e",
    "size": "1"
  }],
  "f": [{
    "appendage": "v",
    "continuation": false,
    "intact": false,
    "pattern": "lief",
    "size": "1"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "if",
    "size": "2"
  }],
  "g": [{
    "continuation": true,
    "intact": false,
    "pattern": "ing",
    "size": "3"
  }, {
    "appendage": "y",
    "continuation": false,
    "intact": false,
    "pattern": "iag",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ag",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "gg",
    "size": "1"
  }],
  "h": [{
    "continuation": false,
    "intact": true,
    "pattern": "th",
    "size": "2"
  }, {
    "appendage": "ct",
    "continuation": false,
    "intact": false,
    "pattern": "guish",
    "size": "5"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ish",
    "size": "3"
  }],
  "i": [{
    "continuation": false,
    "intact": true,
    "pattern": "i",
    "size": "1"
  }, {
    "appendage": "y",
    "continuation": true,
    "intact": false,
    "pattern": "i",
    "size": "1"
  }],
  "j": [{
    "appendage": "d",
    "continuation": false,
    "intact": false,
    "pattern": "ij",
    "size": "1"
  }, {
    "appendage": "s",
    "continuation": false,
    "intact": false,
    "pattern": "fuj",
    "size": "1"
  }, {
    "appendage": "d",
    "continuation": false,
    "intact": false,
    "pattern": "uj",
    "size": "1"
  }, {
    "appendage": "d",
    "continuation": false,
    "intact": false,
    "pattern": "oj",
    "size": "1"
  }, {
    "appendage": "r",
    "continuation": false,
    "intact": false,
    "pattern": "hej",
    "size": "1"
  }, {
    "appendage": "t",
    "continuation": false,
    "intact": false,
    "pattern": "verj",
    "size": "1"
  }, {
    "appendage": "t",
    "continuation": false,
    "intact": false,
    "pattern": "misj",
    "size": "2"
  }, {
    "appendage": "d",
    "continuation": false,
    "intact": false,
    "pattern": "nj",
    "size": "1"
  }, {
    "appendage": "s",
    "continuation": false,
    "intact": false,
    "pattern": "j",
    "size": "1"
  }],
  "l": [{
    "continuation": false,
    "intact": false,
    "pattern": "ifiabl",
    "size": "6"
  }, {
    "appendage": "y",
    "continuation": false,
    "intact": false,
    "pattern": "iabl",
    "size": "4"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "abl",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ibl",
    "size": "3"
  }, {
    "appendage": "l",
    "continuation": true,
    "intact": false,
    "pattern": "bil",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "cl",
    "size": "1"
  }, {
    "appendage": "y",
    "continuation": false,
    "intact": false,
    "pattern": "iful",
    "size": "4"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ful",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ul",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ial",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ual",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "al",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ll",
    "size": "1"
  }],
  "m": [{
    "continuation": false,
    "intact": false,
    "pattern": "ium",
    "size": "3"
  }, {
    "continuation": false,
    "intact": true,
    "pattern": "um",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ism",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "mm",
    "size": "1"
  }],
  "n": [{
    "appendage": "j",
    "continuation": true,
    "intact": false,
    "pattern": "sion",
    "size": "4"
  }, {
    "appendage": "ct",
    "continuation": false,
    "intact": false,
    "pattern": "xion",
    "size": "4"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ion",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ian",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "an",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "een",
    "size": "0"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "en",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "nn",
    "size": "1"
  }],
  "p": [{
    "continuation": true,
    "intact": false,
    "pattern": "ship",
    "size": "4"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "pp",
    "size": "1"
  }],
  "r": [{
    "continuation": true,
    "intact": false,
    "pattern": "er",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ear",
    "size": "0"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ar",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "or",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ur",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "rr",
    "size": "1"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "tr",
    "size": "1"
  }, {
    "appendage": "y",
    "continuation": true,
    "intact": false,
    "pattern": "ier",
    "size": "3"
  }],
  "s": [{
    "appendage": "y",
    "continuation": true,
    "intact": false,
    "pattern": "ies",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "sis",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "is",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ness",
    "size": "4"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ss",
    "size": "0"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ous",
    "size": "3"
  }, {
    "continuation": false,
    "intact": true,
    "pattern": "us",
    "size": "2"
  }, {
    "continuation": true,
    "intact": true,
    "pattern": "s",
    "size": "1"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "s",
    "size": "0"
  }],
  "t": [{
    "appendage": "y",
    "continuation": false,
    "intact": false,
    "pattern": "plicat",
    "size": "4"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "at",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ment",
    "size": "4"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ent",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ant",
    "size": "3"
  }, {
    "appendage": "b",
    "continuation": false,
    "intact": false,
    "pattern": "ript",
    "size": "2"
  }, {
    "appendage": "b",
    "continuation": false,
    "intact": false,
    "pattern": "orpt",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "duct",
    "size": "1"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "sumpt",
    "size": "2"
  }, {
    "appendage": "iv",
    "continuation": false,
    "intact": false,
    "pattern": "cept",
    "size": "2"
  }, {
    "appendage": "v",
    "continuation": false,
    "intact": false,
    "pattern": "olut",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "sist",
    "size": "0"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ist",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "tt",
    "size": "1"
  }],
  "u": [{
    "continuation": false,
    "intact": false,
    "pattern": "iqu",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ogu",
    "size": "1"
  }],
  "v": [{
    "appendage": "j",
    "continuation": true,
    "intact": false,
    "pattern": "siv",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "eiv",
    "size": "0"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "iv",
    "size": "2"
  }],
  "y": [{
    "continuation": true,
    "intact": false,
    "pattern": "bly",
    "size": "1"
  }, {
    "appendage": "y",
    "continuation": true,
    "intact": false,
    "pattern": "ily",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ply",
    "size": "0"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ly",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ogy",
    "size": "1"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "phy",
    "size": "1"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "omy",
    "size": "1"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "opy",
    "size": "1"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ity",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ety",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "lty",
    "size": "2"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "istry",
    "size": "5"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ary",
    "size": "3"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "ory",
    "size": "3"
  }, {
    "continuation": false,
    "intact": false,
    "pattern": "ify",
    "size": "3"
  }, {
    "appendage": "t",
    "continuation": true,
    "intact": false,
    "pattern": "ncy",
    "size": "2"
  }, {
    "continuation": true,
    "intact": false,
    "pattern": "acy",
    "size": "3"
  }],
  "z": [{
    "continuation": true,
    "intact": false,
    "pattern": "iz",
    "size": "2"
  }, {
    "appendage": "s",
    "continuation": false,
    "intact": false,
    "pattern": "yz",
    "size": "1"
  }]
};
},{}],"QfRu":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Stemmer = require('./stemmer');

var ruleTable = require('./lancaster_rules').rules;

function acceptable(candidate) {
  if (candidate.match(/^[aeiou]/)) return candidate.length > 1;else return candidate.length > 2 && candidate.match(/[aeiouy]/);
} // take a token, look up the applicatble rule section and attempt some stemming!


function applyRuleSection(token, intact) {
  var section = token.substr(-1);
  var rules = ruleTable[section];

  if (rules) {
    for (var i = 0; i < rules.length; i++) {
      if ((intact || !rules[i].intact) && // only apply intact rules to intact tokens
      token.substr(0 - rules[i].pattern.length) == rules[i].pattern) {
        // hack off only as much as the rule indicates
        var result = token.substr(0, token.length - rules[i].size); // if the rules wants us to apply an appendage do so

        if (rules[i].appendage) result += rules[i].appendage;

        if (acceptable(result)) {
          token = result; // see what the rules wants to do next

          if (rules[i].continuation) {
            // this rule thinks there still might be stem left. keep at it.
            // since we've applied a change we'll pass false in for intact
            return applyRuleSection(result, false);
          } else {
            // the rule thinks we're done stemming. drop out.
            return result;
          }
        }
      }
    }
  }

  return token;
}

var LancasterStemmer = new Stemmer();
module.exports = LancasterStemmer;

LancasterStemmer.stem = function (token) {
  return applyRuleSection(token.toLowerCase(), true);
};
},{"./stemmer":"W4ba","./lancaster_rules":"mZOq"}],"Jjya":[function(require,module,exports) {
/*
 Copyright (c) 2012, Guillaume Marty

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * Generate a replacing function given a table of patterns. Inspired by:
 * http://code.google.com/p/jslibs/wiki/JavascriptTips#String_converter
 * The order of elements is significant. Longer elements should be listed first.
 * @see Speed test http://jsperf.com/build-a-regexp-table
 *
 * @param {Object.<string, string>} translationTable The translation table of key value.
 * @return {function(string): string} A translating function.
 */
function replacer(translationTable) {
  /**
   * An array of translationTable keys.
   * @type {Array.<string>}
   */
  var pattern = [];
  /**
   * The regular expression doing the replacement job.
   * @type {RegExp}
   */

  var regExp;
  /**
   * Used to iterate over translationTable.
   * @type {string}
   */

  var key;

  for (key in translationTable) {
    // Escaping regexp special chars.
    // @see Speed test for type casting to string http://jsperf.com/string-type-casting/2
    // @see http://closure-library.googlecode.com/svn/docs/closure_goog_string_string.js.source.html#line956
    key = ('' + key).replace(/([-()\[\]{}+?*.$\^|,:#<!\\\/])/g, '\\$1').replace(/\x08/g, '\\x08');
    pattern.push(key);
  }

  regExp = new RegExp(pattern.join('|'), 'g');
  /**
   * @param {string} str Input string.
   * @return {string} The string replaced.
   */

  return function (str) {
    return str.replace(regExp, function (str) {
      return translationTable[str];
    });
  };
}
/**
 * Exchanges all keys with their associated values in an object.
 *
 * @param {Object.<string, string>} obj An object of strings.
 * @return {Object.<string, string>} An object of strings.
 */


function flip(obj) {
  var newObj = Object.create(null),
      key;

  for (key in obj) {
    newObj[obj[key]] = key;
  }

  return newObj;
}
/**
 * Merge several objects. Properties from earlier objects are overwritten by
 * laters's in case of conflict.
 *
 * @param {...Object.<string, string>} var_args One or more objects of strings.
 * @return {!Object.<string, string>} An object of strings.
 */


function merge(var_args) {
  var args = [].slice.call(arguments),
      newObj = Object.create(null),
      id = 0,
      key;

  while (args[id]) {
    for (key in args[id]) {
      newObj[key] = args[id][key];
    }

    id++;
  }

  return newObj;
}

exports.replacer = replacer;
exports.flip = flip;
exports.merge = merge;
},{}],"bYkY":[function(require,module,exports) {
/*
 Copyright (c) 2012, Guillaume Marty

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * Normalize Japanese inputs and expose function to perform several conversions.
 *
 * Note: The space character is treated like a roman character as it usually
 *   has the same width as them in Japanese texts.
 *
 * \@todo Replace characters range from ㈠ to ㉃, ㊀ to ㊰ and ㇰ to ㇿ.
 * \@todo Lazy initializations of conversionTables and converters.
 * \@todo Would fixHalfwidthKana be useful?
 *
 * Descriptions of functions exposed:
 * normalizeJapanese 「全角」英字・数字を「半角」、「半角」記・カタカナを「全角」に変換
 * converters.fullwidthToHalfwidth.alphabet    「全角」英字を「半角」に変換
 * converters.halfwidthToFullwidth.alphabet    「半角」英字を「全角」に変換
 * converters.fullwidthToHalfwidth.numbers     「全角」数字を「半角」に変換
 * converters.halfwidthToFullwidth.numbers     「半角」数字を「全角」に変換 「全角」スペースを「半角」
 * converters.fullwidthToHalfwidth.punctuation 「全角」記号を「半角」に変換 「半角」スペースを「全角」
 * converters.halfwidthToFullwidth.punctuation 「半角」記号を「全角」に変換
 * converters.fullwidthToHalfwidth.katakana    「全角カタカナ」を「半角カタカナ」に変換
 * converters.halfwidthToFullwidth.katakana    「半角カタカナ」を「全角カタカナ」に変換
 * converters.hiraganaToKatakana               「カタカナ」を「ひらがな」に変換
 * converters.katakanaToHiragana               「ひらがな」を「カタカナ」に変換
 */
var flip = require('../util/utils.js').flip;

var merge = require('../util/utils.js').merge;

var replacer = require('../util/utils').replacer; // From http://fernweh.jp/b/mb_convert_kana_js/


var conversionTables = {
  fullwidthToHalfwidth: {
    alphabet: {
      'ａ': 'a',
      'ｂ': 'b',
      'ｃ': 'c',
      'ｄ': 'd',
      'ｅ': 'e',
      'ｆ': 'f',
      'ｇ': 'g',
      'ｈ': 'h',
      'ｉ': 'i',
      'ｊ': 'j',
      'ｋ': 'k',
      'ｌ': 'l',
      'ｍ': 'm',
      'ｎ': 'n',
      'ｏ': 'o',
      'ｐ': 'p',
      'ｑ': 'q',
      'ｒ': 'r',
      'ｓ': 's',
      'ｔ': 't',
      'ｕ': 'u',
      'ｖ': 'v',
      'ｗ': 'w',
      'ｘ': 'x',
      'ｙ': 'y',
      'ｚ': 'z',
      'Ａ': 'A',
      'Ｂ': 'B',
      'Ｃ': 'C',
      'Ｄ': 'D',
      'Ｅ': 'E',
      'Ｆ': 'F',
      'Ｇ': 'G',
      'Ｈ': 'H',
      'Ｉ': 'I',
      'Ｊ': 'J',
      'Ｋ': 'K',
      'Ｌ': 'L',
      'Ｍ': 'M',
      'Ｎ': 'N',
      'Ｏ': 'O',
      'Ｐ': 'P',
      'Ｑ': 'Q',
      'Ｒ': 'R',
      'Ｓ': 'S',
      'Ｔ': 'T',
      'Ｕ': 'U',
      'Ｖ': 'V',
      'Ｗ': 'W',
      'Ｘ': 'X',
      'Ｙ': 'Y',
      'Ｚ': 'Z',
      '　': ' ' // Fullwidth space

    },
    numbers: {
      '０': '0',
      '１': '1',
      '２': '2',
      '３': '3',
      '４': '4',
      '５': '5',
      '６': '6',
      '７': '7',
      '８': '8',
      '９': '9'
    },
    symbol: {
      '＿': '_',
      '－': '-',
      '，': ',',
      '；': ';',
      '：': ':',
      '！': '!',
      '？': '?',
      '．': '.',
      '（': '(',
      '）': ')',
      '［': '[',
      '］': ']',
      '｛': '{',
      '｝': '}',
      '＠': '@',
      '＊': '*',
      '＼': '\\',
      '／': '/',
      '＆': '&',
      '＃': '#',
      '％': '%',
      '｀': '`',
      '＾': '^',
      '＋': '+',
      '＜': '<',
      '＝': '=',
      '＞': '>',
      '｜': '|',
      // Never converted: '～': '~',
      '≪': '«',
      '≫': '»',
      '─': '-',
      '＄': '$',
      '＂': '"'
    },
    purePunctuation: {
      '、': '､',
      '。': '｡',
      '・': '･',
      '「': '｢',
      '」': '｣'
    },
    punctuation: {},
    katakana: {
      '゛': 'ﾞ',
      '゜': 'ﾟ',
      'ー': 'ｰ',
      'ヴ': 'ｳﾞ',
      'ガ': 'ｶﾞ',
      'ギ': 'ｷﾞ',
      'グ': 'ｸﾞ',
      'ゲ': 'ｹﾞ',
      'ゴ': 'ｺﾞ',
      'ザ': 'ｻﾞ',
      'ジ': 'ｼﾞ',
      'ズ': 'ｽﾞ',
      'ゼ': 'ｾﾞ',
      'ゾ': 'ｿﾞ',
      'ダ': 'ﾀﾞ',
      'ヂ': 'ﾁﾞ',
      'ヅ': 'ﾂﾞ',
      'デ': 'ﾃﾞ',
      'ド': 'ﾄﾞ',
      'バ': 'ﾊﾞ',
      'パ': 'ﾊﾟ',
      'ビ': 'ﾋﾞ',
      'ピ': 'ﾋﾟ',
      'ブ': 'ﾌﾞ',
      'プ': 'ﾌﾟ',
      'ベ': 'ﾍﾞ',
      'ペ': 'ﾍﾟ',
      'ボ': 'ﾎﾞ',
      'ポ': 'ﾎﾟ',
      'ァ': 'ｧ',
      'ア': 'ｱ',
      'ィ': 'ｨ',
      'イ': 'ｲ',
      'ゥ': 'ｩ',
      'ウ': 'ｳ',
      'ェ': 'ｪ',
      'エ': 'ｴ',
      'ォ': 'ｫ',
      'オ': 'ｵ',
      'カ': 'ｶ',
      'キ': 'ｷ',
      'ク': 'ｸ',
      'ケ': 'ｹ',
      'コ': 'ｺ',
      'サ': 'ｻ',
      'シ': 'ｼ',
      'ス': 'ｽ',
      'セ': 'ｾ',
      'ソ': 'ｿ',
      'タ': 'ﾀ',
      'チ': 'ﾁ',
      'ッ': 'ｯ',
      'ツ': 'ﾂ',
      'テ': 'ﾃ',
      'ト': 'ﾄ',
      'ナ': 'ﾅ',
      'ニ': 'ﾆ',
      'ヌ': 'ﾇ',
      'ネ': 'ﾈ',
      'ノ': 'ﾉ',
      'ハ': 'ﾊ',
      'ヒ': 'ﾋ',
      'フ': 'ﾌ',
      'ヘ': 'ﾍ',
      'ホ': 'ﾎ',
      'マ': 'ﾏ',
      'ミ': 'ﾐ',
      'ム': 'ﾑ',
      'メ': 'ﾒ',
      'モ': 'ﾓ',
      'ャ': 'ｬ',
      'ヤ': 'ﾔ',
      'ュ': 'ｭ',
      'ユ': 'ﾕ',
      'ョ': 'ｮ',
      'ヨ': 'ﾖ',
      'ラ': 'ﾗ',
      'リ': 'ﾘ',
      'ル': 'ﾙ',
      'レ': 'ﾚ',
      'ロ': 'ﾛ',
      'ワ': 'ﾜ',
      'ヲ': 'ｦ',
      'ン': 'ﾝ'
    }
  },
  halfwidthToFullwidth: {}
};
var fixFullwidthKana = {
  'ゝ゛': 'ゞ',
  'ヽ゛': 'ヾ',
  'う゛': 'ゔ',
  'か゛': 'が',
  'き゛': 'ぎ',
  'く゛': 'ぐ',
  'け゛': 'げ',
  'こ゛': 'ご',
  'さ゛': 'ざ',
  'し゛': 'じ',
  'す゛': 'ず',
  'せ゛': 'ぜ',
  'そ゛': 'ぞ',
  'た゛': 'だ',
  'ち゛': 'ぢ',
  'つ゛': 'づ',
  'て゛': 'で',
  'と゛': 'ど',
  'は゛': 'ば',
  'は゜': 'ぱ',
  'ひ゛': 'び',
  'ひ゜': 'ぴ',
  'ふ゛': 'ぶ',
  'ふ゜': 'ぷ',
  'へ゛': 'べ',
  'へ゜': 'ぺ',
  'ほ゛': 'ぼ',
  'ほ゜': 'ぽ',
  'っな': 'んな',
  'っに': 'んに',
  'っぬ': 'んぬ',
  'っね': 'んね',
  'っの': 'んの',
  'ウ゛': 'ヴ',
  'カ゛': 'ガ',
  'キ゛': 'ギ',
  'ク゛': 'グ',
  'ケ゛': 'ゲ',
  'コ゛': 'ゴ',
  'サ゛': 'ザ',
  'シ゛': 'ジ',
  'ス゛': 'ズ',
  'セ゛': 'ゼ',
  'ソ゛': 'ゾ',
  'タ゛': 'ダ',
  'チ゛': 'ヂ',
  'ツ゛': 'ヅ',
  'テ゛': 'デ',
  'ト゛': 'ド',
  'ハ゛': 'バ',
  'ハ゜': 'パ',
  'ヒ゛': 'ビ',
  'ヒ゜': 'ピ',
  'フ゛': 'ブ',
  'フ゜': 'プ',
  'ヘ゛': 'ベ',
  'ヘ゜': 'ペ',
  'ホ゛': 'ボ',
  'ホ゜': 'ポ',
  'ッナ': 'ンナ',
  'ッニ': 'ンニ',
  'ッヌ': 'ンヌ',
  'ッネ': 'ンネ',
  'ッノ': 'ンノ'
};
var fixCompositeSymbolsTable = {
  '㋀': '1月',
  '㋁': '2月',
  '㋂': '3月',
  '㋃': '4月',
  '㋄': '5月',
  '㋅': '6月',
  '㋆': '7月',
  '㋇': '8月',
  '㋈': '9月',
  '㋉': '10月',
  '㋊': '11月',
  '㋋': '12月',
  '㏠': '1日',
  '㏡': '2日',
  '㏢': '3日',
  '㏣': '4日',
  '㏤': '5日',
  '㏥': '6日',
  '㏦': '7日',
  '㏧': '8日',
  '㏨': '9日',
  '㏩': '10日',
  '㏪': '11日',
  '㏫': '12日',
  '㏬': '13日',
  '㏭': '14日',
  '㏮': '15日',
  '㏯': '16日',
  '㏰': '17日',
  '㏱': '18日',
  '㏲': '19日',
  '㏳': '20日',
  '㏴': '21日',
  '㏵': '22日',
  '㏶': '23日',
  '㏷': '24日',
  '㏸': '25日',
  '㏹': '26日',
  '㏺': '27日',
  '㏻': '28日',
  '㏼': '29日',
  '㏽': '30日',
  '㏾': '31日',
  '㍘': '0点',
  '㍙': '1点',
  '㍚': '2点',
  '㍛': '3点',
  '㍜': '4点',
  '㍝': '5点',
  '㍞': '6点',
  '㍟': '7点',
  '㍠': '8点',
  '㍡': '9点',
  '㍢': '10点',
  '㍣': '11点',
  '㍤': '12点',
  '㍥': '13点',
  '㍦': '14点',
  '㍧': '15点',
  '㍨': '16点',
  '㍩': '17点',
  '㍪': '18点',
  '㍫': '19点',
  '㍬': '20点',
  '㍭': '21点',
  '㍮': '22点',
  '㍯': '23点',
  '㍰': '24点',
  '㍻': '平成',
  '㍼': '昭和',
  '㍽': '大正',
  '㍾': '明治',
  '㍿': '株式会社',
  '㌀': 'アパート',
  '㌁': 'アルファ',
  '㌂': 'アンペア',
  '㌃': 'アール',
  '㌄': 'イニング',
  '㌅': 'インチ',
  '㌆': 'ウオン',
  '㌇': 'エスクード',
  '㌈': 'エーカー',
  '㌉': 'オンス',
  '㌊': 'オーム',
  '㌋': 'カイリ',
  //海里
  '㌌': 'カラット',
  '㌍': 'カロリー',
  '㌎': 'ガロン',
  '㌏': 'ガンマ',
  '㌐': 'ギガ',
  '㌑': 'ギニー',
  '㌒': 'キュリー',
  '㌓': 'ギルダー',
  '㌔': 'キロ',
  '㌕': 'キログラム',
  '㌖': 'キロメートル',
  '㌗': 'キロワット',
  '㌘': 'グラム',
  '㌙': 'グラムトン',
  '㌚': 'クルゼイロ',
  '㌛': 'クローネ',
  '㌜': 'ケース',
  '㌝': 'コルナ',
  '㌞': 'コーポ',
  '㌟': 'サイクル',
  '㌠': 'サンチーム',
  '㌡': 'シリング',
  '㌢': 'センチ',
  '㌣': 'セント',
  '㌤': 'ダース',
  '㌥': 'デシ',
  '㌦': 'ドル',
  '㌧': 'トン',
  '㌨': 'ナノ',
  '㌩': 'ノット',
  '㌪': 'ハイツ',
  '㌫': 'パーセント',
  '㌬': 'パーツ',
  '㌭': 'バーレル',
  '㌮': 'ピアストル',
  '㌯': 'ピクル',
  '㌰': 'ピコ',
  '㌱': 'ビル',
  '㌲': 'ファラッド',
  '㌳': 'フィート',
  '㌴': 'ブッシェル',
  '㌵': 'フラン',
  '㌶': 'ヘクタール',
  '㌷': 'ペソ',
  '㌸': 'ペニヒ',
  '㌹': 'ヘルツ',
  '㌺': 'ペンス',
  '㌻': 'ページ',
  '㌼': 'ベータ',
  '㌽': 'ポイント',
  '㌾': 'ボルト',
  '㌿': 'ホン',
  '㍀': 'ポンド',
  '㍁': 'ホール',
  '㍂': 'ホーン',
  '㍃': 'マイクロ',
  '㍄': 'マイル',
  '㍅': 'マッハ',
  '㍆': 'マルク',
  '㍇': 'マンション',
  '㍈': 'ミクロン',
  '㍉': 'ミリ',
  '㍊': 'ミリバール',
  '㍋': 'メガ',
  '㍌': 'メガトン',
  '㍍': 'メートル',
  '㍎': 'ヤード',
  '㍏': 'ヤール',
  '㍐': 'ユアン',
  '㍑': 'リットル',
  '㍒': 'リラ',
  '㍓': 'ルピー',
  '㍔': 'ルーブル',
  '㍕': 'レム',
  '㍖': 'レントゲン',
  '㍗': 'ワット'
}; // punctuation is pure_punctuation

conversionTables.fullwidthToHalfwidth.punctuation = merge(conversionTables.fullwidthToHalfwidth.symbol, conversionTables.fullwidthToHalfwidth.purePunctuation); // Fill in the conversion tables with the flipped tables.

conversionTables.halfwidthToFullwidth.alphabet = flip(conversionTables.fullwidthToHalfwidth.alphabet);
conversionTables.halfwidthToFullwidth.numbers = flip(conversionTables.fullwidthToHalfwidth.numbers);
conversionTables.halfwidthToFullwidth.symbol = flip(conversionTables.fullwidthToHalfwidth.symbol);
conversionTables.halfwidthToFullwidth.purePunctuation = flip(conversionTables.fullwidthToHalfwidth.purePunctuation);
conversionTables.halfwidthToFullwidth.punctuation = flip(conversionTables.fullwidthToHalfwidth.punctuation);
conversionTables.halfwidthToFullwidth.katakana = flip(conversionTables.fullwidthToHalfwidth.katakana); // Build the normalization table.

conversionTables.normalize = merge(conversionTables.fullwidthToHalfwidth.alphabet, conversionTables.fullwidthToHalfwidth.numbers, conversionTables.fullwidthToHalfwidth.symbol, conversionTables.halfwidthToFullwidth.purePunctuation, conversionTables.halfwidthToFullwidth.katakana);
var converters = {
  fullwidthToHalfwidth: {
    alphabet: replacer(conversionTables.fullwidthToHalfwidth.alphabet),
    numbers: replacer(conversionTables.fullwidthToHalfwidth.numbers),
    symbol: replacer(conversionTables.fullwidthToHalfwidth.symbol),
    purePunctuation: replacer(conversionTables.fullwidthToHalfwidth.purePunctuation),
    punctuation: replacer(conversionTables.fullwidthToHalfwidth.punctuation),
    katakana: replacer(conversionTables.fullwidthToHalfwidth.katakana)
  },
  halfwidthToFullwidth: {
    alphabet: replacer(conversionTables.halfwidthToFullwidth.alphabet),
    numbers: replacer(conversionTables.halfwidthToFullwidth.numbers),
    symbol: replacer(conversionTables.halfwidthToFullwidth.symbol),
    purePunctuation: replacer(conversionTables.halfwidthToFullwidth.purePunctuation),
    punctuation: replacer(conversionTables.halfwidthToFullwidth.punctuation),
    katakana: replacer(conversionTables.halfwidthToFullwidth.katakana)
  },
  fixFullwidthKana: replacer(fixFullwidthKana),
  normalize: replacer(conversionTables.normalize)
};
var fixCompositeSymbols = replacer(fixCompositeSymbolsTable);
/**
 * Convert hiragana to fullwidth katakana.
 * According to http://jsperf.com/converting-japanese, these implementations are
 * faster than using lookup tables.
 *
 * @param {string} str A string.
 * @return {string} A string not containing hiragana.
 */

converters.hiraganaToKatakana = function (str) {
  str = converters.halfwidthToFullwidth.katakana(str);
  str = converters.fixFullwidthKana(str);
  str = str.replace(/ゝ/g, 'ヽ');
  str = str.replace(/ゞ/g, 'ヾ'); //str = str.replace(/?/g, '𛀀'); // Letter archaic E

  str = str.replace(/[ぁ-ゖ]/g, function (str) {
    return String.fromCharCode(str.charCodeAt(0) + 96);
  });
  return str;
};
/**
 * Convert katakana to hiragana.
 *
 * @param {string} str A string.
 * @return {string} A string not containing katakana.
 */


converters.katakanaToHiragana = function (str) {
  str = converters.halfwidthToFullwidth.katakana(str);
  str = converters.fixFullwidthKana(str);
  str = str.replace(/ヽ/g, 'ゝ');
  str = str.replace(/ヾ/g, 'ゞ'); //str = str.replace(/?/g, '𛀁'); // Letter archaic E

  str = str.replace(/[ァ-ヶ]/g, function (str) {
    return String.fromCharCode(str.charCodeAt(0) - 96);
  });
  return str;
};
/**
 * Fix kana and apply the following processes;
 * * Replace repeat characters
 * * Alphabet to halfwidth
 * * Numbers to halfwidth
 * * Punctuation to fullwidth
 * * Katakana to fullwidth
 * * Fix fullwidth kana
 * * Replace composite symbols
 *
 * @param {string} str
 * @return {string}
 */


var normalize_ja = function (str) {
  // Replace repeat characters.
  str = str.replace(/(..)々々/g, '$1$1').replace(/(.)々/g, '$1$1');
  str = converters.normalize(str);
  str = converters.fixFullwidthKana(str); // Replace composite symbols.

  str = fixCompositeSymbols(str);
  return str;
};

exports.normalize_ja = normalize_ja;
exports.converters = converters;
},{"../util/utils.js":"Jjya","../util/utils":"Jjya"}],"Fain":[function(require,module,exports) {
// Original copyright:

/*
 Copyright (c) 2008, Taku Kudo

 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice,
 this list of conditions and the following disclaimer.
 * Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 documentation and/or other materials provided with the distribution.
 * Neither the name of the <ORGANIZATION> nor the names of its
 contributors may be used to endorse or promote products derived from this
 software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
// This version:

/*
 Copyright (c) 2012, Guillaume Marty

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
// TinySegmenter 0.1 -- Super compact Japanese tokenizer in Javascript
// (c) 2008 Taku Kudo <taku@chasen.org>
// TinySegmenter is freely distributable under the terms of a new BSD licence.
// For details, see http://chasen.org/~taku/software/TinySegmenter/LICENCE.txt
var Tokenizer = require('./tokenizer'),
    normalize = require('../normalizers/normalizer_ja').normalize_ja,
    util = require('util');
/**
 * @constructor
 */


var TokenizerJa = function () {
  this.chartype_ = [[/[〇一二三四五六七八九十百千万億兆]/, 'M'], [/[一-鿌〆]/, 'H'], [/[ぁ-ゟ]/, 'I'], [/[゠-ヿ]/, 'K'], [/[a-zA-Z]/, 'A'], [/[0-9]/, 'N']];
  this.BIAS__ = -332;
  this.BC1__ = {
    'HH': 6,
    'II': 2461,
    'KH': 406,
    'OH': -1378
  };
  this.BC2__ = {
    'AA': -3267,
    'AI': 2744,
    'AN': -878,
    'HH': -4070,
    'HM': -1711,
    'HN': 4012,
    'HO': 3761,
    'IA': 1327,
    'IH': -1184,
    'II': -1332,
    'IK': 1721,
    'IO': 5492,
    'KI': 3831,
    'KK': -8741,
    'MH': -3132,
    'MK': 3334,
    'OO': -2920
  };
  this.BC3__ = {
    'HH': 996,
    'HI': 626,
    'HK': -721,
    'HN': -1307,
    'HO': -836,
    'IH': -301,
    'KK': 2762,
    'MK': 1079,
    'MM': 4034,
    'OA': -1652,
    'OH': 266
  };
  this.BP1__ = {
    'BB': 295,
    'OB': 304,
    'OO': -125,
    'UB': 352
  };
  this.BP2__ = {
    'BO': 60,
    'OO': -1762
  };
  this.BQ1__ = {
    'BHH': 1150,
    'BHM': 1521,
    'BII': -1158,
    'BIM': 886,
    'BMH': 1208,
    'BNH': 449,
    'BOH': -91,
    'BOO': -2597,
    'OHI': 451,
    'OIH': -296,
    'OKA': 1851,
    'OKH': -1020,
    'OKK': 904,
    'OOO': 2965
  };
  this.BQ2__ = {
    'BHH': 118,
    'BHI': -1159,
    'BHM': 466,
    'BIH': -919,
    'BKK': -1720,
    'BKO': 864,
    'OHH': -1139,
    'OHM': -181,
    'OIH': 153,
    'UHI': -1146
  };
  this.BQ3__ = {
    'BHH': -792,
    'BHI': 2664,
    'BII': -299,
    'BKI': 419,
    'BMH': 937,
    'BMM': 8335,
    'BNN': 998,
    'BOH': 775,
    'OHH': 2174,
    'OHM': 439,
    'OII': 280,
    'OKH': 1798,
    'OKI': -793,
    'OKO': -2242,
    'OMH': -2402,
    'OOO': 11699
  };
  this.BQ4__ = {
    'BHH': -3895,
    'BIH': 3761,
    'BII': -4654,
    'BIK': 1348,
    'BKK': -1806,
    'BMI': -3385,
    'BOO': -12396,
    'OAH': 926,
    'OHH': 266,
    'OHK': -2036,
    'ONN': -973
  };
  this.BW1__ = {
    '，と': 660,
    '，同': 727,
    'B1あ': 1404,
    'B1同': 542,
    '、と': 660,
    '、同': 727,
    '｣と': 1682,
    'あっ': 1505,
    'いう': 1743,
    'いっ': -2055,
    'いる': 672,
    'うし': -4817,
    'うん': 665,
    'から': 3472,
    'がら': 600,
    'こう': -790,
    'こと': 2083,
    'こん': -1262,
    'さら': -4143,
    'さん': 4573,
    'した': 2641,
    'して': 1104,
    'すで': -3399,
    'そこ': 1977,
    'それ': -871,
    'たち': 1122,
    'ため': 601,
    'った': 3463,
    'つい': -802,
    'てい': 805,
    'てき': 1249,
    'でき': 1127,
    'です': 3445,
    'では': 844,
    'とい': -4915,
    'とみ': 1922,
    'どこ': 3887,
    'ない': 5713,
    'なっ': 3015,
    'など': 7379,
    'なん': -1113,
    'にし': 2468,
    'には': 1498,
    'にも': 1671,
    'に対': -912,
    'の一': -501,
    'の中': 741,
    'ませ': 2448,
    'まで': 1711,
    'まま': 2600,
    'まる': -2155,
    'やむ': -1947,
    'よっ': -2565,
    'れた': 2369,
    'れで': -913,
    'をし': 1860,
    'を見': 731,
    '亡く': -1886,
    '京都': 2558,
    '取り': -2784,
    '大き': -2604,
    '大阪': 1497,
    '平方': -2314,
    '引き': -1336,
    '日本': -195,
    '本当': -2423,
    '毎日': -2113,
    '目指': -724
  };
  this.BW2__ = {
    '11': -669,
    '．．': -11822,
    '――': -5730,
    '−−': -13175,
    'いう': -1609,
    'うか': 2490,
    'かし': -1350,
    'かも': -602,
    'から': -7194,
    'かれ': 4612,
    'がい': 853,
    'がら': -3198,
    'きた': 1941,
    'くな': -1597,
    'こと': -8392,
    'この': -4193,
    'させ': 4533,
    'され': 13168,
    'さん': -3977,
    'しい': -1819,
    'しか': -545,
    'した': 5078,
    'して': 972,
    'しな': 939,
    'その': -3744,
    'たい': -1253,
    'たた': -662,
    'ただ': -3857,
    'たち': -786,
    'たと': 1224,
    'たは': -939,
    'った': 4589,
    'って': 1647,
    'っと': -2094,
    'てい': 6144,
    'てき': 3640,
    'てく': 2551,
    'ては': -3110,
    'ても': -3065,
    'でい': 2666,
    'でき': -1528,
    'でし': -3828,
    'です': -4761,
    'でも': -4203,
    'とい': 1890,
    'とこ': -1746,
    'とと': -2279,
    'との': 720,
    'とみ': 5168,
    'とも': -3941,
    'ない': -2488,
    'なが': -1313,
    'など': -6509,
    'なの': 2614,
    'なん': 3099,
    'にお': -1615,
    'にし': 2748,
    'にな': 2454,
    'によ': -7236,
    'に対': -14943,
    'に従': -4688,
    'に関': -11388,
    'のか': 2093,
    'ので': -7059,
    'のに': -6041,
    'のの': -6125,
    'はい': 1073,
    'はが': -1033,
    'はず': -2532,
    'ばれ': 1813,
    'まし': -1316,
    'まで': -6621,
    'まれ': 5409,
    'めて': -3153,
    'もい': 2230,
    'もの': -10713,
    'らか': -944,
    'らし': -1611,
    'らに': -1897,
    'りし': 651,
    'りま': 1620,
    'れた': 4270,
    'れて': 849,
    'れば': 4114,
    'ろう': 6067,
    'われ': 7901,
    'を通': -11877,
    'んだ': 728,
    'んな': -4115,
    '一人': 602,
    '一方': -1375,
    '一日': 970,
    '一部': -1051,
    '上が': -4479,
    '会社': -1116,
    '出て': 2163,
    '分の': -7758,
    '同党': 970,
    '同日': -913,
    '大阪': -2471,
    '委員': -1250,
    '少な': -1050,
    '年度': -8669,
    '年間': -1626,
    '府県': -2363,
    '手権': -1982,
    '新聞': -4066,
    '日新': -722,
    '日本': -7068,
    '日米': 3372,
    '曜日': -601,
    '朝鮮': -2355,
    '本人': -2697,
    '東京': -1543,
    '然と': -1384,
    '社会': -1276,
    '立て': -990,
    '第に': -1612,
    '米国': -4268
  };
  this.BW3__ = {
    'あた': -2194,
    'あり': 719,
    'ある': 3846,
    'い．': -1185,
    'い。': -1185,
    'いい': 5308,
    'いえ': 2079,
    'いく': 3029,
    'いた': 2056,
    'いっ': 1883,
    'いる': 5600,
    'いわ': 1527,
    'うち': 1117,
    'うと': 4798,
    'えと': 1454,
    'か．': 2857,
    'か。': 2857,
    'かけ': -743,
    'かっ': -4098,
    'かに': -669,
    'から': 6520,
    'かり': -2670,
    'が，': 1816,
    'が、': 1816,
    'がき': -4855,
    'がけ': -1127,
    'がっ': -913,
    'がら': -4977,
    'がり': -2064,
    'きた': 1645,
    'けど': 1374,
    'こと': 7397,
    'この': 1542,
    'ころ': -2757,
    'さい': -714,
    'さを': 976,
    'し，': 1557,
    'し、': 1557,
    'しい': -3714,
    'した': 3562,
    'して': 1449,
    'しな': 2608,
    'しま': 1200,
    'す．': -1310,
    'す。': -1310,
    'する': 6521,
    'ず，': 3426,
    'ず、': 3426,
    'ずに': 841,
    'そう': 428,
    'た．': 8875,
    'た。': 8875,
    'たい': -594,
    'たの': 812,
    'たり': -1183,
    'たる': -853,
    'だ．': 4098,
    'だ。': 4098,
    'だっ': 1004,
    'った': -4748,
    'って': 300,
    'てい': 6240,
    'てお': 855,
    'ても': 302,
    'です': 1437,
    'でに': -1482,
    'では': 2295,
    'とう': -1387,
    'とし': 2266,
    'との': 541,
    'とも': -3543,
    'どう': 4664,
    'ない': 1796,
    'なく': -903,
    'など': 2135,
    'に，': -1021,
    'に、': -1021,
    'にし': 1771,
    'にな': 1906,
    'には': 2644,
    'の，': -724,
    'の、': -724,
    'の子': -1000,
    'は，': 1337,
    'は、': 1337,
    'べき': 2181,
    'まし': 1113,
    'ます': 6943,
    'まっ': -1549,
    'まで': 6154,
    'まれ': -793,
    'らし': 1479,
    'られ': 6820,
    'るる': 3818,
    'れ，': 854,
    'れ、': 854,
    'れた': 1850,
    'れて': 1375,
    'れば': -3246,
    'れる': 1091,
    'われ': -605,
    'んだ': 606,
    'んで': 798,
    'カ月': 990,
    '会議': 860,
    '入り': 1232,
    '大会': 2217,
    '始め': 1681,
    '市': 965,
    '新聞': -5055,
    '日，': 974,
    '日、': 974,
    '社会': 2024
  };
  this.TC1__ = {
    'AAA': 1093,
    'HHH': 1029,
    'HHM': 580,
    'HII': 998,
    'HOH': -390,
    'HOM': -331,
    'IHI': 1169,
    'IOH': -142,
    'IOI': -1015,
    'IOM': 467,
    'MMH': 187,
    'OOI': -1832
  };
  this.TC2__ = {
    'HHO': 2088,
    'HII': -1023,
    'HMM': -1154,
    'IHI': -1965,
    'KKH': 703,
    'OII': -2649
  };
  this.TC3__ = {
    'AAA': -294,
    'HHH': 346,
    'HHI': -341,
    'HII': -1088,
    'HIK': 731,
    'HOH': -1486,
    'IHH': 128,
    'IHI': -3041,
    'IHO': -1935,
    'IIH': -825,
    'IIM': -1035,
    'IOI': -542,
    'KHH': -1216,
    'KKA': 491,
    'KKH': -1217,
    'KOK': -1009,
    'MHH': -2694,
    'MHM': -457,
    'MHO': 123,
    'MMH': -471,
    'NNH': -1689,
    'NNO': 662,
    'OHO': -3393
  };
  this.TC4__ = {
    'HHH': -203,
    'HHI': 1344,
    'HHK': 365,
    'HHM': -122,
    'HHN': 182,
    'HHO': 669,
    'HIH': 804,
    'HII': 679,
    'HOH': 446,
    'IHH': 695,
    'IHO': -2324,
    'IIH': 321,
    'III': 1497,
    'IIO': 656,
    'IOO': 54,
    'KAK': 4845,
    'KKA': 3386,
    'KKK': 3065,
    'MHH': -405,
    'MHI': 201,
    'MMH': -241,
    'MMM': 661,
    'MOM': 841
  };
  this.TQ1__ = {
    'BHHH': -227,
    'BHHI': 316,
    'BHIH': -132,
    'BIHH': 60,
    'BIII': 1595,
    'BNHH': -744,
    'BOHH': 225,
    'BOOO': -908,
    'OAKK': 482,
    'OHHH': 281,
    'OHIH': 249,
    'OIHI': 200,
    'OIIH': -68
  };
  this.TQ2__ = {
    'BIHH': -1401,
    'BIII': -1033,
    'BKAK': -543,
    'BOOO': -5591
  };
  this.TQ3__ = {
    'BHHH': 478,
    'BHHM': -1073,
    'BHIH': 222,
    'BHII': -504,
    'BIIH': -116,
    'BIII': -105,
    'BMHI': -863,
    'BMHM': -464,
    'BOMH': 620,
    'OHHH': 346,
    'OHHI': 1729,
    'OHII': 997,
    'OHMH': 481,
    'OIHH': 623,
    'OIIH': 1344,
    'OKAK': 2792,
    'OKHH': 587,
    'OKKA': 679,
    'OOHH': 110,
    'OOII': -685
  };
  this.TQ4__ = {
    'BHHH': -721,
    'BHHM': -3604,
    'BHII': -966,
    'BIIH': -607,
    'BIII': -2181,
    'OAAA': -2763,
    'OAKK': 180,
    'OHHH': -294,
    'OHHI': 2446,
    'OHHO': 480,
    'OHIH': -1573,
    'OIHH': 1935,
    'OIHI': -493,
    'OIIH': 626,
    'OIII': -4007,
    'OKAK': -8156
  };
  this.TW1__ = {
    'につい': -4681,
    '東京都': 2026
  };
  this.TW2__ = {
    'ある程': -2049,
    'いった': -1256,
    'ころが': -2434,
    'しょう': 3873,
    'その後': -4430,
    'だって': -1049,
    'ていた': 1833,
    'として': -4657,
    'ともに': -4517,
    'もので': 1882,
    '一気に': -792,
    '初めて': -1512,
    '同時に': -8097,
    '大きな': -1255,
    '対して': -2721,
    '社会党': -3216
  };
  this.TW3__ = {
    'いただ': -1734,
    'してい': 1314,
    'として': -4314,
    'につい': -5483,
    'にとっ': -5989,
    'に当た': -6247,
    'ので，': -727,
    'ので、': -727,
    'のもの': -600,
    'れから': -3752,
    '十二月': -2287
  };
  this.TW4__ = {
    'いう．': 8576,
    'いう。': 8576,
    'からな': -2348,
    'してい': 2958,
    'たが，': 1516,
    'たが、': 1516,
    'ている': 1538,
    'という': 1349,
    'ました': 5543,
    'ません': 1097,
    'ようと': -4258,
    'よると': 5865
  };
  this.UC1__ = {
    'A': 484,
    'K': 93,
    'M': 645,
    'O': -505
  };
  this.UC2__ = {
    'A': 819,
    'H': 1059,
    'I': 409,
    'M': 3987,
    'N': 5775,
    'O': 646
  };
  this.UC3__ = {
    'A': -1370,
    'I': 2311
  };
  this.UC4__ = {
    'A': -2643,
    'H': 1809,
    'I': -1032,
    'K': -3450,
    'M': 3565,
    'N': 3876,
    'O': 6646
  };
  this.UC5__ = {
    'H': 313,
    'I': -1238,
    'K': -799,
    'M': 539,
    'O': -831
  };
  this.UC6__ = {
    'H': -506,
    'I': -253,
    'K': 87,
    'M': 247,
    'O': -387
  };
  this.UP1__ = {
    'O': -214
  };
  this.UP2__ = {
    'B': 69,
    'O': 935
  };
  this.UP3__ = {
    'B': 189
  };
  this.UQ1__ = {
    'BH': 21,
    'BI': -12,
    'BK': -99,
    'BN': 142,
    'BO': -56,
    'OH': -95,
    'OI': 477,
    'OK': 410,
    'OO': -2422
  };
  this.UQ2__ = {
    'BH': 216,
    'BI': 113,
    'OK': 1759
  };
  this.UQ3__ = {
    'BA': -479,
    'BH': 42,
    'BI': 1913,
    'BK': -7198,
    'BM': 3160,
    'BN': 6427,
    'BO': 14761,
    'OI': -827,
    'ON': -3212
  };
  this.UW1__ = {
    '，': 156,
    '、': 156,
    '｢': -463,
    'あ': -941,
    'う': -127,
    'が': -553,
    'き': 121,
    'こ': 505,
    'で': -201,
    'と': -547,
    'ど': -123,
    'に': -789,
    'の': -185,
    'は': -847,
    'も': -466,
    'や': -470,
    'よ': 182,
    'ら': -292,
    'り': 208,
    'れ': 169,
    'を': -446,
    'ん': -137,
    '・': -135,
    '主': -402,
    '京': -268,
    '区': -912,
    '午': 871,
    '国': -460,
    '大': 561,
    '委': 729,
    '市': -411,
    '日': -141,
    '理': 361,
    '生': -408,
    '県': -386,
    '都': -718
  };
  this.UW2__ = {
    '，': -829,
    '、': -829,
    '〇': 892,
    '｢': -645,
    '｣': 3145,
    'あ': -538,
    'い': 505,
    'う': 134,
    'お': -502,
    'か': 1454,
    'が': -856,
    'く': -412,
    'こ': 1141,
    'さ': 878,
    'ざ': 540,
    'し': 1529,
    'す': -675,
    'せ': 300,
    'そ': -1011,
    'た': 188,
    'だ': 1837,
    'つ': -949,
    'て': -291,
    'で': -268,
    'と': -981,
    'ど': 1273,
    'な': 1063,
    'に': -1764,
    'の': 130,
    'は': -409,
    'ひ': -1273,
    'べ': 1261,
    'ま': 600,
    'も': -1263,
    'や': -402,
    'よ': 1639,
    'り': -579,
    'る': -694,
    'れ': 571,
    'を': -2516,
    'ん': 2095,
    'ア': -587,
    'カ': 306,
    'キ': 568,
    'ッ': 831,
    '三': -758,
    '不': -2150,
    '世': -302,
    '中': -968,
    '主': -861,
    '事': 492,
    '人': -123,
    '会': 978,
    '保': 362,
    '入': 548,
    '初': -3025,
    '副': -1566,
    '北': -3414,
    '区': -422,
    '大': -1769,
    '天': -865,
    '太': -483,
    '子': -1519,
    '学': 760,
    '実': 1023,
    '小': -2009,
    '市': -813,
    '年': -1060,
    '強': 1067,
    '手': -1519,
    '揺': -1033,
    '政': 1522,
    '文': -1355,
    '新': -1682,
    '日': -1815,
    '明': -1462,
    '最': -630,
    '朝': -1843,
    '本': -1650,
    '東': -931,
    '果': -665,
    '次': -2378,
    '民': -180,
    '気': -1740,
    '理': 752,
    '発': 529,
    '目': -1584,
    '相': -242,
    '県': -1165,
    '立': -763,
    '第': 810,
    '米': 509,
    '自': -1353,
    '行': 838,
    '西': -744,
    '見': -3874,
    '調': 1010,
    '議': 1198,
    '込': 3041,
    '開': 1758,
    '間': -1257
  };
  this.UW3__ = {
    '1': -800,
    '，': 4889,
    '−': -1723,
    '、': 4889,
    '々': -2311,
    '〇': 5827,
    '｣': 2670,
    '〓': -3573,
    'あ': -2696,
    'い': 1006,
    'う': 2342,
    'え': 1983,
    'お': -4864,
    'か': -1163,
    'が': 3271,
    'く': 1004,
    'け': 388,
    'げ': 401,
    'こ': -3552,
    'ご': -3116,
    'さ': -1058,
    'し': -395,
    'す': 584,
    'せ': 3685,
    'そ': -5228,
    'た': 842,
    'ち': -521,
    'っ': -1444,
    'つ': -1081,
    'て': 6167,
    'で': 2318,
    'と': 1691,
    'ど': -899,
    'な': -2788,
    'に': 2745,
    'の': 4056,
    'は': 4555,
    'ひ': -2171,
    'ふ': -1798,
    'へ': 1199,
    'ほ': -5516,
    'ま': -4384,
    'み': -120,
    'め': 1205,
    'も': 2323,
    'や': -788,
    'よ': -202,
    'ら': 727,
    'り': 649,
    'る': 5905,
    'れ': 2773,
    'わ': -1207,
    'を': 6620,
    'ん': -518,
    'ア': 551,
    'グ': 1319,
    'ス': 874,
    'ッ': -1350,
    'ト': 521,
    'ム': 1109,
    'ル': 1591,
    'ロ': 2201,
    'ン': 278,
    '・': -3794,
    '一': -1619,
    '下': -1759,
    '世': -2087,
    '両': 3815,
    '中': 653,
    '主': -758,
    '予': -1193,
    '二': 974,
    '人': 2742,
    '今': 792,
    '他': 1889,
    '以': -1368,
    '低': 811,
    '何': 4265,
    '作': -361,
    '保': -2439,
    '元': 4858,
    '党': 3593,
    '全': 1574,
    '公': -3030,
    '六': 755,
    '共': -1880,
    '円': 5807,
    '再': 3095,
    '分': 457,
    '初': 2475,
    '別': 1129,
    '前': 2286,
    '副': 4437,
    '力': 365,
    '動': -949,
    '務': -1872,
    '化': 1327,
    '北': -1038,
    '区': 4646,
    '千': -2309,
    '午': -783,
    '協': -1006,
    '口': 483,
    '右': 1233,
    '各': 3588,
    '合': -241,
    '同': 3906,
    '和': -837,
    '員': 4513,
    '国': 642,
    '型': 1389,
    '場': 1219,
    '外': -241,
    '妻': 2016,
    '学': -1356,
    '安': -423,
    '実': -1008,
    '家': 1078,
    '小': -513,
    '少': -3102,
    '州': 1155,
    '市': 3197,
    '平': -1804,
    '年': 2416,
    '広': -1030,
    '府': 1605,
    '度': 1452,
    '建': -2352,
    '当': -3885,
    '得': 1905,
    '思': -1291,
    '性': 1822,
    '戸': -488,
    '指': -3973,
    '政': -2013,
    '教': -1479,
    '数': 3222,
    '文': -1489,
    '新': 1764,
    '日': 2099,
    '旧': 5792,
    '昨': -661,
    '時': -1248,
    '曜': -951,
    '最': -937,
    '月': 4125,
    '期': 360,
    '李': 3094,
    '村': 364,
    '東': -805,
    '核': 5156,
    '森': 2438,
    '業': 484,
    '氏': 2613,
    '民': -1694,
    '決': -1073,
    '法': 1868,
    '海': -495,
    '無': 979,
    '物': 461,
    '特': -3850,
    '生': -273,
    '用': 914,
    '町': 1215,
    '的': 7313,
    '直': -1835,
    '省': 792,
    '県': 6293,
    '知': -1528,
    '私': 4231,
    '税': 401,
    '立': -960,
    '第': 1201,
    '米': 7767,
    '系': 3066,
    '約': 3663,
    '級': 1384,
    '統': -4229,
    '総': 1163,
    '線': 1255,
    '者': 6457,
    '能': 725,
    '自': -2869,
    '英': 785,
    '見': 1044,
    '調': -562,
    '財': -733,
    '費': 1777,
    '車': 1835,
    '軍': 1375,
    '込': -1504,
    '通': -1136,
    '選': -681,
    '郎': 1026,
    '郡': 4404,
    '部': 1200,
    '金': 2163,
    '長': 421,
    '開': -1432,
    '間': 1302,
    '関': -1282,
    '雨': 2009,
    '電': -1045,
    '非': 2066,
    '駅': 1620
  };
  this.UW4__ = {
    '，': 3930,
    '．': 3508,
    '―': -4841,
    '、': 3930,
    '。': 3508,
    '〇': 4999,
    '｢': 1895,
    '｣': 3798,
    '〓': -5156,
    'あ': 4752,
    'い': -3435,
    'う': -640,
    'え': -2514,
    'お': 2405,
    'か': 530,
    'が': 6006,
    'き': -4482,
    'ぎ': -3821,
    'く': -3788,
    'け': -4376,
    'げ': -4734,
    'こ': 2255,
    'ご': 1979,
    'さ': 2864,
    'し': -843,
    'じ': -2506,
    'す': -731,
    'ず': 1251,
    'せ': 181,
    'そ': 4091,
    'た': 5034,
    'だ': 5408,
    'ち': -3654,
    'っ': -5882,
    'つ': -1659,
    'て': 3994,
    'で': 7410,
    'と': 4547,
    'な': 5433,
    'に': 6499,
    'ぬ': 1853,
    'ね': 1413,
    'の': 7396,
    'は': 8578,
    'ば': 1940,
    'ひ': 4249,
    'び': -4134,
    'ふ': 1345,
    'へ': 6665,
    'べ': -744,
    'ほ': 1464,
    'ま': 1051,
    'み': -2082,
    'む': -882,
    'め': -5046,
    'も': 4169,
    'ゃ': -2666,
    'や': 2795,
    'ょ': -1544,
    'よ': 3351,
    'ら': -2922,
    'り': -9726,
    'る': -14896,
    'れ': -2613,
    'ろ': -4570,
    'わ': -1783,
    'を': 13150,
    'ん': -2352,
    'カ': 2145,
    'コ': 1789,
    'セ': 1287,
    'ッ': -724,
    'ト': -403,
    'メ': -1635,
    'ラ': -881,
    'リ': -541,
    'ル': -856,
    'ン': -3637,
    '・': -4371,
    'ー': -11870,
    '一': -2069,
    '中': 2210,
    '予': 782,
    '事': -190,
    '井': -1768,
    '人': 1036,
    '以': 544,
    '会': 950,
    '体': -1286,
    '作': 530,
    '側': 4292,
    '先': 601,
    '党': -2006,
    '共': -1212,
    '内': 584,
    '円': 788,
    '初': 1347,
    '前': 1623,
    '副': 3879,
    '力': -302,
    '動': -740,
    '務': -2715,
    '化': 776,
    '区': 4517,
    '協': 1013,
    '参': 1555,
    '合': -1834,
    '和': -681,
    '員': -910,
    '器': -851,
    '回': 1500,
    '国': -619,
    '園': -1200,
    '地': 866,
    '場': -1410,
    '塁': -2094,
    '士': -1413,
    '多': 1067,
    '大': 571,
    '子': -4802,
    '学': -1397,
    '定': -1057,
    '寺': -809,
    '小': 1910,
    '屋': -1328,
    '山': -1500,
    '島': -2056,
    '川': -2667,
    '市': 2771,
    '年': 374,
    '庁': -4556,
    '後': 456,
    '性': 553,
    '感': 916,
    '所': -1566,
    '支': 856,
    '改': 787,
    '政': 2182,
    '教': 704,
    '文': 522,
    '方': -856,
    '日': 1798,
    '時': 1829,
    '最': 845,
    '月': -9066,
    '木': -485,
    '来': -442,
    '校': -360,
    '業': -1043,
    '氏': 5388,
    '民': -2716,
    '気': -910,
    '沢': -939,
    '済': -543,
    '物': -735,
    '率': 672,
    '球': -1267,
    '生': -1286,
    '産': -1101,
    '田': -2900,
    '町': 1826,
    '的': 2586,
    '目': 922,
    '省': -3485,
    '県': 2997,
    '空': -867,
    '立': -2112,
    '第': 788,
    '米': 2937,
    '系': 786,
    '約': 2171,
    '経': 1146,
    '統': -1169,
    '総': 940,
    '線': -994,
    '署': 749,
    '者': 2145,
    '能': -730,
    '般': -852,
    '行': -792,
    '規': 792,
    '警': -1184,
    '議': -244,
    '谷': -1000,
    '賞': 730,
    '車': -1481,
    '軍': 1158,
    '輪': -1433,
    '込': -3370,
    '近': 929,
    '道': -1291,
    '選': 2596,
    '郎': -4866,
    '都': 1192,
    '野': -1100,
    '銀': -2213,
    '長': 357,
    '間': -2344,
    '院': -2297,
    '際': -2604,
    '電': -878,
    '領': -1659,
    '題': -792,
    '館': -1984,
    '首': 1749,
    '高': 2120
  };
  this.UW5__ = {
    '1': -514,
    '，': 465,
    '．': -299,
    'E2': -32768,
    '］': -2762,
    '、': 465,
    '。': -299,
    '｢': 363,
    'あ': 1655,
    'い': 331,
    'う': -503,
    'え': 1199,
    'お': 527,
    'か': 647,
    'が': -421,
    'き': 1624,
    'ぎ': 1971,
    'く': 312,
    'げ': -983,
    'さ': -1537,
    'し': -1371,
    'す': -852,
    'だ': -1186,
    'ち': 1093,
    'っ': 52,
    'つ': 921,
    'て': -18,
    'で': -850,
    'と': -127,
    'ど': 1682,
    'な': -787,
    'に': -1224,
    'の': -635,
    'は': -578,
    'べ': 1001,
    'み': 502,
    'め': 865,
    'ゃ': 3350,
    'ょ': 854,
    'り': -208,
    'る': 429,
    'れ': 504,
    'わ': 419,
    'を': -1264,
    'ん': 327,
    'イ': 241,
    'ル': 451,
    'ン': -343,
    '中': -871,
    '京': 722,
    '会': -1153,
    '党': -654,
    '務': 3519,
    '区': -901,
    '告': 848,
    '員': 2104,
    '大': -1296,
    '学': -548,
    '定': 1785,
    '嵐': -1304,
    '市': -2991,
    '席': 921,
    '年': 1763,
    '思': 872,
    '所': -814,
    '挙': 1618,
    '新': -1682,
    '日': 218,
    '月': -4353,
    '査': 932,
    '格': 1356,
    '機': -1508,
    '氏': -1347,
    '田': 240,
    '町': -3912,
    '的': -3149,
    '相': 1319,
    '省': -1052,
    '県': -4003,
    '研': -997,
    '社': -278,
    '空': -813,
    '統': 1955,
    '者': -2233,
    '表': 663,
    '語': -1073,
    '議': 1219,
    '選': -1018,
    '郎': -368,
    '長': 786,
    '間': 1191,
    '題': 2368,
    '館': -689
  };
  this.UW6__ = {
    '1': -270,
    '，': 227,
    '．': 808,
    'E1': 306,
    '、': 227,
    '。': 808,
    'あ': -307,
    'う': 189,
    'か': 241,
    'が': -73,
    'く': -121,
    'こ': -200,
    'じ': 1782,
    'す': 383,
    'た': -428,
    'っ': 573,
    'て': -1014,
    'で': 101,
    'と': -105,
    'な': -253,
    'に': -149,
    'の': -417,
    'は': -236,
    'も': -206,
    'り': 187,
    'る': -135,
    'を': 195,
    'ル': -673,
    'ン': -496,
    '一': -277,
    '中': 201,
    '件': -800,
    '会': 624,
    '前': 302,
    '区': 1792,
    '員': -1212,
    '委': 798,
    '学': -960,
    '市': 887,
    '広': -695,
    '後': 535,
    '業': -697,
    '相': 753,
    '社': -507,
    '福': 974,
    '空': -822,
    '者': 1811,
    '連': 463,
    '郎': 1082
  };
  return this;
};

util.inherits(TokenizerJa, Tokenizer);
/**
 * @param {string} str
 * @return {string}
 * @private
 */

TokenizerJa.prototype.ctype_ = function (str) {
  for (var i = 0, length = this.chartype_.length; i < length; i++) {
    if (str.match(this.chartype_[i][0])) {
      return this.chartype_[i][1];
    }
  }

  return 'O';
};
/**
 * @param {string} v
 * @return {number}
 * @private
 */


TokenizerJa.prototype.ts_ = function (v) {
  if (v) {
    return v;
  }

  return 0;
};
/**
 * Remove punctuations signs from tokens.
 *
 * @param {Array.<string>} tokens An array of tokens.
 * @return {Array.<string>} An array of tokens.
 * @private
 */


TokenizerJa.prototype.removePuncTokens = function (tokens) {
  return tokens.map(function (token) {
    return token.replace(/[＿－・，、；：！？．。（）［］｛｝｢｣＠＊＼／＆＃％｀＾＋＜＝＞｜～≪≫─＄＂_\-･,､;:!?.｡()[\]{}「」@*\/&#%`^+<=>|~«»$"\s]+/g, '');
  }).filter(function (token) {
    return token != '';
  });
};
/**
 * @param {string} text
 * @return {Array.<string>}
 */


TokenizerJa.prototype.tokenize = function (text) {
  if (text == null || text == undefined || text == '') {
    return [];
  }

  text = normalize(text);
  var result = [];
  var seg = ['B3', 'B2', 'B1'];
  var ctype = ['O', 'O', 'O'];
  var o = text.split('');
  var i;
  var length;

  for (i = 0, length = o.length; i < length; ++i) {
    seg.push(o[i]);
    ctype.push(this.ctype_(o[i]));
  }

  seg.push('E1');
  seg.push('E2');
  seg.push('E3');
  ctype.push('O');
  ctype.push('O');
  ctype.push('O');
  var word = seg[3];
  var p1 = 'U';
  var p2 = 'U';
  var p3 = 'U';

  for (i = 4, length = seg.length - 3; i < length; ++i) {
    var score = this.BIAS__;
    var w1 = seg[i - 3];
    var w2 = seg[i - 2];
    var w3 = seg[i - 1];
    var w4 = seg[i];
    var w5 = seg[i + 1];
    var w6 = seg[i + 2];
    var c1 = ctype[i - 3];
    var c2 = ctype[i - 2];
    var c3 = ctype[i - 1];
    var c4 = ctype[i];
    var c5 = ctype[i + 1];
    var c6 = ctype[i + 2];
    score += this.ts_(this.UP1__[p1]);
    score += this.ts_(this.UP2__[p2]);
    score += this.ts_(this.UP3__[p3]);
    score += this.ts_(this.BP1__[p1 + p2]);
    score += this.ts_(this.BP2__[p2 + p3]);
    score += this.ts_(this.UW1__[w1]);
    score += this.ts_(this.UW2__[w2]);
    score += this.ts_(this.UW3__[w3]);
    score += this.ts_(this.UW4__[w4]);
    score += this.ts_(this.UW5__[w5]);
    score += this.ts_(this.UW6__[w6]);
    score += this.ts_(this.BW1__[w2 + w3]);
    score += this.ts_(this.BW2__[w3 + w4]);
    score += this.ts_(this.BW3__[w4 + w5]);
    score += this.ts_(this.TW1__[w1 + w2 + w3]);
    score += this.ts_(this.TW2__[w2 + w3 + w4]);
    score += this.ts_(this.TW3__[w3 + w4 + w5]);
    score += this.ts_(this.TW4__[w4 + w5 + w6]);
    score += this.ts_(this.UC1__[c1]);
    score += this.ts_(this.UC2__[c2]);
    score += this.ts_(this.UC3__[c3]);
    score += this.ts_(this.UC4__[c4]);
    score += this.ts_(this.UC5__[c5]);
    score += this.ts_(this.UC6__[c6]);
    score += this.ts_(this.BC1__[c2 + c3]);
    score += this.ts_(this.BC2__[c3 + c4]);
    score += this.ts_(this.BC3__[c4 + c5]);
    score += this.ts_(this.TC1__[c1 + c2 + c3]);
    score += this.ts_(this.TC2__[c2 + c3 + c4]);
    score += this.ts_(this.TC3__[c3 + c4 + c5]);
    score += this.ts_(this.TC4__[c4 + c5 + c6]); //score += this.ts_(this.TC5__[c4 + c5 + c6]);

    score += this.ts_(this.UQ1__[p1 + c1]);
    score += this.ts_(this.UQ2__[p2 + c2]);
    score += this.ts_(this.UQ3__[p3 + c3]);
    score += this.ts_(this.BQ1__[p2 + c2 + c3]);
    score += this.ts_(this.BQ2__[p2 + c3 + c4]);
    score += this.ts_(this.BQ3__[p3 + c2 + c3]);
    score += this.ts_(this.BQ4__[p3 + c3 + c4]);
    score += this.ts_(this.TQ1__[p2 + c1 + c2 + c3]);
    score += this.ts_(this.TQ2__[p2 + c2 + c3 + c4]);
    score += this.ts_(this.TQ3__[p3 + c1 + c2 + c3]);
    score += this.ts_(this.TQ4__[p3 + c2 + c3 + c4]);
    var p = 'O';

    if (score > 0) {
      result.push(word);
      word = '';
      p = 'B';
    }

    p1 = p2;
    p2 = p3;
    p3 = p;
    word += seg[i];
  }

  result.push(word);
  result = this.removePuncTokens(result);
  return result;
};

module.exports = TokenizerJa;
},{"./tokenizer":"ZemB","../normalizers/normalizer_ja":"bYkY","util":"nq70"}],"yEFa":[function(require,module,exports) {
// Original copyright:

/*
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
// This version:

/*
Copyright (c) 2012, Guillaume Marty

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
// Original location:
// http://svn.apache.org/repos/asf/lucene/dev/trunk/lucene/analysis/kuromoji/src/resources/org/apache/lucene/analysis/ja/stopwords.txt
var words = ['の', 'に', 'は', 'を', 'た', 'が', 'で', 'て', 'と', 'し', 'れ', 'さ', 'ある', 'いる', 'も', 'する', 'から', 'な', 'こと', 'として', 'い', 'や', 'れる', 'など', 'なっ', 'ない', 'この', 'ため', 'その', 'あっ', 'よう', 'また', 'もの', 'という', 'あり', 'まで', 'られ', 'なる', 'へ', 'か', 'だ', 'これ', 'によって', 'により', 'おり', 'より', 'による', 'ず', 'なり', 'られる', 'において', 'ば', 'なかっ', 'なく', 'しかし', 'について', 'せ', 'だっ', 'その後', 'できる', 'それ', 'う', 'ので', 'なお', 'のみ', 'でき', 'き', 'つ', 'における', 'および', 'いう', 'さらに', 'でも', 'ら', 'たり', 'その他', 'に関する', 'たち', 'ます', 'ん', 'なら', 'に対して', '特に', 'せる', '及び', 'これら', 'とき', 'では', 'にて', 'ほか', 'ながら', 'うち', 'そして', 'とともに', 'ただし', 'かつて', 'それぞれ', 'または', 'お', 'ほど', 'ものの', 'に対する', 'ほとんど', 'と共に', 'といった', 'です', 'とも', 'ところ', 'ここ']; // tell the world about the noise words.

module.exports = words;
},{}],"DyXv":[function(require,module,exports) {
/*
 Copyright (c) 2012, Guillaume Marty

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * A very basic stemmer that performs the following steps:
 * * Stem katakana.
 * Inspired by:
 * http://svn.apache.org/repos/asf/lucene/dev/trunk/lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseKatakanaStemFilter.java
 *
 * This script assumes input is normalized using normalizer_ja().
 *
 * \@todo Use .bind() in StemmerJa.prototype.attach().
 */
var Tokenizer = require('../tokenizers/tokenizer_ja');

var stopwords = require('../util/stopwords_ja');
/**
 * @constructor
 */


var StemmerJa = function () {};
/**
 * Tokenize and stem a text.
 * Stop words are excluded except if the second argument is true.
 *
 * @param {string} text
 * @param {boolean} keepStops Whether to keep stop words from the output or not.
 * @return {Array.<string>}
 */


StemmerJa.prototype.tokenizeAndStem = function (text, keepStops) {
  var self = this;
  var stemmedTokens = [];
  var tokens = new Tokenizer().tokenize(text); // This is probably faster than an if at each iteration.

  if (keepStops) {
    tokens.forEach(function (token) {
      var resultToken = token.toLowerCase();
      resultToken = self.stem(resultToken);
      stemmedTokens.push(resultToken);
    });
  } else {
    tokens.forEach(function (token) {
      if (stopwords.indexOf(token) == -1) {
        var resultToken = token.toLowerCase();
        resultToken = self.stem(resultToken);
        stemmedTokens.push(resultToken);
      }
    });
  }

  return stemmedTokens;
};
/**
 * Stem a term.
 *
 * @param {string} token
 * @return {string}
 */


StemmerJa.prototype.stem = function (token) {
  token = this.stemKatakana(token);
  return token;
};
/**
 * Remove the final prolonged sound mark on katakana if length is superior to
 * a threshold.
 *
 * @param {string} token A katakana string to stem.
 * @return {string} A katakana string stemmed.
 */


StemmerJa.prototype.stemKatakana = function (token) {
  var HIRAGANA_KATAKANA_PROLONGED_SOUND_MARK = 'ー';
  var DEFAULT_MINIMUM_LENGTH = 4;

  if (token.length >= DEFAULT_MINIMUM_LENGTH && token.slice(-1) === HIRAGANA_KATAKANA_PROLONGED_SOUND_MARK && this.isKatakana(token)) {
    token = token.slice(0, token.length - 1);
  }

  return token;
};
/**
 * Is a string made of fullwidth katakana only?
 * This implementation is the fastest I know:
 * http://jsperf.com/string-contain-katakana-only/2
 *
 * @param {string} str A string.
 * @return {boolean} True if the string has katakana only.
 */


StemmerJa.prototype.isKatakana = function (str) {
  return !!str.match(/^[゠-ヿ]+$/);
}; // Expose an attach function that will patch String with new methods.


StemmerJa.prototype.attach = function () {
  var self = this;

  String.prototype.stem = function () {
    return self.stem(this);
  };

  String.prototype.tokenizeAndStem = function (keepStops) {
    return self.tokenizeAndStem(this, keepStops);
  };
};

module.exports = StemmerJa;
},{"../tokenizers/tokenizer_ja":"Fain","../util/stopwords_ja":"yEFa"}],"Niew":[function(require,module,exports) {
/*
Copyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var words = ['a', 'ada', 'adalah', 'adanya', 'adapun', 'agak', 'agaknya', 'agar', 'akan', 'akankah', 'akhir', 'akhiri', 'akhirnya', 'aku', 'akulah', 'amat', 'amatlah', 'anda', 'andalah', 'antar', 'antara', 'antaranya', 'apa', 'apaan', 'apabila', 'apakah', 'apalagi', 'apatah', 'arti', 'artinya', 'asal', 'asalkan', 'atas', 'atau', 'ataukah', 'ataupun', 'awal', 'awalnya', 'b', 'bagai', 'bagaikan', 'bagaimana', 'bagaimanakah', 'bagaimanapun', 'bagainamakah', 'bagi', 'bagian', 'bahkan', 'bahwa', 'bahwasannya', 'bahwasanya', 'baik', 'baiklah', 'bakal', 'bakalan', 'balik', 'banyak', 'bapak', 'baru', 'bawah', 'beberapa', 'begini', 'beginian', 'beginikah', 'beginilah', 'begitu', 'begitukah', 'begitulah', 'begitupun', 'bekerja', 'belakang', 'belakangan', 'belum', 'belumlah', 'benar', 'benarkah', 'benarlah', 'berada', 'berakhir', 'berakhirlah', 'berakhirnya', 'berapa', 'berapakah', 'berapalah', 'berapapun', 'berarti', 'berawal', 'berbagai', 'berdatangan', 'beri', 'berikan', 'berikut', 'berikutnya', 'berjumlah', 'berkali-kali', 'berkata', 'berkehendak', 'berkeinginan', 'berkenaan', 'berlainan', 'berlalu', 'berlangsung', 'berlebihan', 'bermacam', 'bermacam-macam', 'bermaksud', 'bermula', 'bersama', 'bersama-sama', 'bersiap', 'bersiap-siap', 'bertanya', 'bertanya-tanya', 'berturut', 'berturut-turut', 'bertutur', 'berujar', 'berupa', 'besar', 'betul', 'betulkah', 'biasa', 'biasanya', 'bila', 'bilakah', 'bisa', 'bisakah', 'boleh', 'bolehkah', 'bolehlah', 'buat', 'bukan', 'bukankah', 'bukanlah', 'bukannya', 'bulan', 'bung', 'c', 'cara', 'caranya', 'cukup', 'cukupkah', 'cukuplah', 'cuma', 'd', 'dahulu', 'dalam', 'dan', 'dapat', 'dari', 'daripada', 'datang', 'dekat', 'demi', 'demikian', 'demikianlah', 'dengan', 'depan', 'di', 'dia', 'diakhiri', 'diakhirinya', 'dialah', 'diantara', 'diantaranya', 'diberi', 'diberikan', 'diberikannya', 'dibuat', 'dibuatnya', 'didapat', 'didatangkan', 'digunakan', 'diibaratkan', 'diibaratkannya', 'diingat', 'diingatkan', 'diinginkan', 'dijawab', 'dijelaskan', 'dijelaskannya', 'dikarenakan', 'dikatakan', 'dikatakannya', 'dikerjakan', 'diketahui', 'diketahuinya', 'dikira', 'dilakukan', 'dilalui', 'dilihat', 'dimaksud', 'dimaksudkan', 'dimaksudkannya', 'dimaksudnya', 'diminta', 'dimintai', 'dimisalkan', 'dimulai', 'dimulailah', 'dimulainya', 'dimungkinkan', 'dini', 'dipastikan', 'diperbuat', 'diperbuatnya', 'dipergunakan', 'diperkirakan', 'diperlihatkan', 'diperlukan', 'diperlukannya', 'dipersoalkan', 'dipertanyakan', 'dipunyai', 'diri', 'dirinya', 'disampaikan', 'disebut', 'disebutkan', 'disebutkannya', 'disini', 'disinilah', 'ditambahkan', 'ditandaskan', 'ditanya', 'ditanyai', 'ditanyakan', 'ditegaskan', 'ditujukan', 'ditunjuk', 'ditunjuki', 'ditunjukkan', 'ditunjukkannya', 'ditunjuknya', 'dituturkan', 'dituturkannya', 'diucapkan', 'diucapkannya', 'diungkapkan', 'dong', 'dua', 'dulu', 'e', 'empat', 'enak', 'enggak', 'enggaknya', 'entah', 'entahlah', 'f', 'g', 'guna', 'gunakan', 'h', 'hadap', 'hai', 'hal', 'halo', 'hallo', 'hampir', 'hanya', 'hanyalah', 'hari', 'harus', 'haruslah', 'harusnya', 'helo', 'hello', 'hendak', 'hendaklah', 'hendaknya', 'hingga', 'i', 'ia', 'ialah', 'ibarat', 'ibaratkan', 'ibaratnya', 'ibu', 'ikut', 'ingat', 'ingat-ingat', 'ingin', 'inginkah', 'inginkan', 'ini', 'inikah', 'inilah', 'itu', 'itukah', 'itulah', 'j', 'jadi', 'jadilah', 'jadinya', 'jangan', 'jangankan', 'janganlah', 'jauh', 'jawab', 'jawaban', 'jawabnya', 'jelas', 'jelaskan', 'jelaslah', 'jelasnya', 'jika', 'jikalau', 'juga', 'jumlah', 'jumlahnya', 'justru', 'k', 'kadar', 'kala', 'kalau', 'kalaulah', 'kalaupun', 'kali', 'kalian', 'kami', 'kamilah', 'kamu', 'kamulah', 'kan', 'kapan', 'kapankah', 'kapanpun', 'karena', 'karenanya', 'kasus', 'kata', 'katakan', 'katakanlah', 'katanya', 'ke', 'keadaan', 'kebetulan', 'kecil', 'kedua', 'keduanya', 'keinginan', 'kelamaan', 'kelihatan', 'kelihatannya', 'kelima', 'keluar', 'kembali', 'kemudian', 'kemungkinan', 'kemungkinannya', 'kena', 'kenapa', 'kepada', 'kepadanya', 'kerja', 'kesampaian', 'keseluruhan', 'keseluruhannya', 'keterlaluan', 'ketika', 'khusus', 'khususnya', 'kini', 'kinilah', 'kira', 'kira-kira', 'kiranya', 'kita', 'kitalah', 'kok', 'kurang', 'l', 'lagi', 'lagian', 'lah', 'lain', 'lainnya', 'laku', 'lalu', 'lama', 'lamanya', 'langsung', 'lanjut', 'lanjutnya', 'lebih', 'lewat', 'lihat', 'lima', 'luar', 'm', 'macam', 'maka', 'makanya', 'makin', 'maksud', 'malah', 'malahan', 'mampu', 'mampukah', 'mana', 'manakala', 'manalagi', 'masa', 'masalah', 'masalahnya', 'masih', 'masihkah', 'masing', 'masing-masing', 'masuk', 'mata', 'mau', 'maupun', 'melainkan', 'melakukan', 'melalui', 'melihat', 'melihatnya', 'memang', 'memastikan', 'memberi', 'memberikan', 'membuat', 'memerlukan', 'memihak', 'meminta', 'memintakan', 'memisalkan', 'memperbuat', 'mempergunakan', 'memperkirakan', 'memperlihatkan', 'mempersiapkan', 'mempersoalkan', 'mempertanyakan', 'mempunyai', 'memulai', 'memungkinkan', 'menaiki', 'menambahkan', 'menandaskan', 'menanti', 'menanti-nanti', 'menantikan', 'menanya', 'menanyai', 'menanyakan', 'mendapat', 'mendapatkan', 'mendatang', 'mendatangi', 'mendatangkan', 'menegaskan', 'mengakhiri', 'mengapa', 'mengatakan', 'mengatakannya', 'mengenai', 'mengerjakan', 'mengetahui', 'menggunakan', 'menghendaki', 'mengibaratkan', 'mengibaratkannya', 'mengingat', 'mengingatkan', 'menginginkan', 'mengira', 'mengucapkan', 'mengucapkannya', 'mengungkapkan', 'menjadi', 'menjawab', 'menjelaskan', 'menuju', 'menunjuk', 'menunjuki', 'menunjukkan', 'menunjuknya', 'menurut', 'menuturkan', 'menyampaikan', 'menyangkut', 'menyatakan', 'menyebutkan', 'menyeluruh', 'menyiapkan', 'merasa', 'mereka', 'merekalah', 'merupakan', 'meski', 'meskipun', 'meyakini', 'meyakinkan', 'minta', 'mirip', 'misal', 'misalkan', 'misalnya', 'mohon', 'mula', 'mulai', 'mulailah', 'mulanya', 'mungkin', 'mungkinkah', 'n', 'nah', 'naik', 'namun', 'nanti', 'nantinya', 'nya', 'nyaris', 'nyata', 'nyatanya', 'o', 'oleh', 'olehnya', 'orang', 'p', 'pada', 'padahal', 'padanya', 'pak', 'paling', 'panjang', 'pantas', 'para', 'pasti', 'pastilah', 'penting', 'pentingnya', 'per', 'percuma', 'perlu', 'perlukah', 'perlunya', 'pernah', 'persoalan', 'pertama', 'pertama-tama', 'pertanyaan', 'pertanyakan', 'pihak', 'pihaknya', 'pukul', 'pula', 'pun', 'punya', 'q', 'r', 'rasa', 'rasanya', 'rupa', 'rupanya', 's', 'saat', 'saatnya', 'saja', 'sajalah', 'salam', 'saling', 'sama', 'sama-sama', 'sambil', 'sampai', 'sampai-sampai', 'sampaikan', 'sana', 'sangat', 'sangatlah', 'sangkut', 'satu', 'saya', 'sayalah', 'se', 'sebab', 'sebabnya', 'sebagai', 'sebagaimana', 'sebagainya', 'sebagian', 'sebaik', 'sebaik-baiknya', 'sebaiknya', 'sebaliknya', 'sebanyak', 'sebegini', 'sebegitu', 'sebelum', 'sebelumnya', 'sebenarnya', 'seberapa', 'sebesar', 'sebetulnya', 'sebisanya', 'sebuah', 'sebut', 'sebutlah', 'sebutnya', 'secara', 'secukupnya', 'sedang', 'sedangkan', 'sedemikian', 'sedikit', 'sedikitnya', 'seenaknya', 'segala', 'segalanya', 'segera', 'seharusnya', 'sehingga', 'seingat', 'sejak', 'sejauh', 'sejenak', 'sejumlah', 'sekadar', 'sekadarnya', 'sekali', 'sekali-kali', 'sekalian', 'sekaligus', 'sekalipun', 'sekarang', 'sekaranglah', 'sekecil', 'seketika', 'sekiranya', 'sekitar', 'sekitarnya', 'sekurang-kurangnya', 'sekurangnya', 'sela', 'selain', 'selaku', 'selalu', 'selama', 'selama-lamanya', 'selamanya', 'selanjutnya', 'seluruh', 'seluruhnya', 'semacam', 'semakin', 'semampu', 'semampunya', 'semasa', 'semasih', 'semata', 'semata-mata', 'semaunya', 'sementara', 'semisal', 'semisalnya', 'sempat', 'semua', 'semuanya', 'semula', 'sendiri', 'sendirian', 'sendirinya', 'seolah', 'seolah-olah', 'seorang', 'sepanjang', 'sepantasnya', 'sepantasnyalah', 'seperlunya', 'seperti', 'sepertinya', 'sepihak', 'sering', 'seringnya', 'serta', 'serupa', 'sesaat', 'sesama', 'sesampai', 'sesegera', 'sesekali', 'seseorang', 'sesuatu', 'sesuatunya', 'sesudah', 'sesudahnya', 'setelah', 'setempat', 'setengah', 'seterusnya', 'setiap', 'setiba', 'setibanya', 'setidak-tidaknya', 'setidaknya', 'setinggi', 'seusai', 'sewaktu', 'siap', 'siapa', 'siapakah', 'siapapun', 'sini', 'sinilah', 'soal', 'soalnya', 'suatu', 'sudah', 'sudahkah', 'sudahlah', 'supaya', 't', 'tadi', 'tadinya', 'tahu', 'tak', 'tambah', 'tambahnya', 'tampak', 'tampaknya', 'tandas', 'tandasnya', 'tanpa', 'tanya', 'tanyakan', 'tanyanya', 'tapi', 'tegas', 'tegasnya', 'telah', 'tempat', 'tentang', 'tentu', 'tentulah', 'tentunya', 'tepat', 'terakhir', 'terasa', 'terbanyak', 'terdahulu', 'terdapat', 'terdiri', 'terhadap', 'terhadapnya', 'teringat', 'teringat-ingat', 'terjadi', 'terjadilah', 'terjadinya', 'terkira', 'terlalu', 'terlebih', 'terlihat', 'termasuk', 'ternyata', 'tersampaikan', 'tersebut', 'tersebutlah', 'tertentu', 'tertuju', 'terus', 'terutama', 'tetap', 'tetapi', 'tiap', 'tiba', 'tiba-tiba', 'tidak', 'tidakkah', 'tidaklah', 'tiga', 'toh', 'tuju', 'tunjuk', 'turut', 'tutur', 'tuturnya', 'u', 'ucap', 'ucapnya', 'ujar', 'ujarnya', 'umumnya', 'ungkap', 'ungkapnya', 'untuk', 'usah', 'usai', 'v', 'w', 'waduh', 'wah', 'wahai', 'waktunya', 'walau', 'walaupun', 'wong', 'x', 'y', 'ya', 'yaitu', 'yakin', 'yakni', 'yang', 'z']; // tell the world about the noise words.

exports.words = words;
},{}],"miQx":[function(require,module,exports) {
/*
Copyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer; // Remove all non alphanumeric characters except '-'
// Replace more than one space character to ' '

function normalizeText(text) {
  result = text.replace(/[^a-z0-9 -]/g, ' ').replace(/( +)/g, ' ');
  return result;
}

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by space
  text = normalizeText(text);
  return this.trim(text.split(' '));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"K9OX":[function(require,module,exports) {
/*
Copyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var stopwords = require('../../util/stopwords_id');

var Tokenizer = require('../../tokenizers/aggressive_tokenizer_id');

module.exports = function () {
  var stemmer = this;

  stemmer.stem = function (token) {
    return token;
  };

  stemmer.addStopWord = function (stopWord) {
    stopwords.words.push(stopWord);
  };

  stemmer.addStopWords = function (moreStopWords) {
    stopwords.words = stopwords.words.concat(moreStopWords);
  };

  stemmer.removeStopWord = function (stopWord) {
    this.removeStopWords([stopWord]);
  };

  stemmer.removeStopWords = function (moreStopWords) {
    moreStopWords.forEach(function (stopWord) {
      var idx = stopwords.words.indexOf(stopWord);

      if (idx >= 0) {
        stopwords.words.splice(idx, 1);
      }
    });
  };

  stemmer.tokenizeAndStem = function (text, keepStops) {
    var stemmedTokens = [];
    var lowercaseText = text.toLowerCase();
    var tokens = new Tokenizer().tokenize(lowercaseText);

    if (keepStops) {
      tokens.forEach(function (token) {
        stemmedTokens.push(stemmer.stem(token));
      });
    } else {
      tokens.forEach(function (token) {
        if (stopwords.words.indexOf(token) == -1) stemmedTokens.push(stemmer.stem(token));
      });
    }

    return stemmedTokens;
  };

  stemmer.attach = function () {
    String.prototype.stem = function () {
      return stemmer.stem(this);
    };

    String.prototype.tokenizeAndStem = function (keepStops) {
      return stemmer.tokenizeAndStem(this, keepStops);
    };
  };
};
},{"../../util/stopwords_id":"Niew","../../tokenizers/aggressive_tokenizer_id":"miQx"}],"jQaI":[function(require,module,exports) {
/*
Copyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
function Removal(original_word, result, removedPart, affixType) {
  this.original_word = original_word;
  this.result = result;
  this.removedPart = removedPart;
  this.affixType = affixType;
}

Removal.prototype.getOriginalWord = function () {
  return this.original_word;
};

Removal.prototype.getResult = function () {
  return this.result;
};

Removal.prototype.getRemovedPart = function () {
  return this.removedPart;
};

Removal.prototype.getAffixType = function () {
  return this.affixType;
};

module.exports = Removal;
},{}],"b9X0":[function(require,module,exports) {
/*
Copyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var Removal = require("./removal");

function SuffixRules() {
  var SuffixRules = this;
  this.removal = undefined;
  this.current_word = undefined;

  function createResultObject(result, word, type) {
    if (result != word) {
      var removedPart = word.replace(result, '');
      var removal = new Removal(word, result, removedPart, type);
      this.removal = removal;
    } else {
      this.removal = undefined;
    }

    this.current_word = result;
    return this;
  }

  SuffixRules.RemoveInflectionalParticle = function (word) {
    var result = word.replace(/-*(lah|kah|tah|pun)$/, '');
    return createResultObject(result, word, "P");
  };

  SuffixRules.RemoveInflectionalPossessivePronoun = function (word) {
    var result = word.replace(/-*(ku|mu|nya)$/, '');
    return createResultObject(result, word, "PP");
  };

  SuffixRules.RemoveDerivationalSuffix = function (word) {
    var result = word.replace(/(is|isme|isasi|i|kan|an)$/, '');
    return createResultObject(result, word, "DS");
  };
}

module.exports = SuffixRules; // Initalize suffix rules array

var rules = [];
var sr = new SuffixRules();
rules.push(sr.RemoveInflectionalParticle);
rules.push(sr.RemoveInflectionalPossessivePronoun);
rules.push(sr.RemoveDerivationalSuffix);
SuffixRules.rules = rules;
},{"./removal":"jQaI"}],"rDCW":[function(require,module,exports) {

},{}],"fmNn":[function(require,module,exports) {
module.exports = ["aba", "abad", "abadi", "abadiah", "abah", "abai", "abaimana", "abaka", "abaktinal", "abakus", "abal-abal", "aban", "abang", "abangan", "abangga", "abar", "abatoar", "abau", "abdas", "abdi", "abdikasi", "abdomen", "abdominal", "abdu", "abduksi", "abduktor", "abece", "aben", "aberasi", "abet", "abian", "abid", "abidin", "abilah", "abing", "abiogenesis", "abiosfer", "abiotik", "abis", "abisal", "abiseka", "abiturien", "abjad", "abjadiah", "ablasi", "ablaut", "ablepsia", "abnormal", "abnormalitas", "abnus", "aboi", "abolisi", "abon", "abonemen", "abong-abong", "aborsi", "abortif", "abortiva", "abortus", "abrak", "abrakadabra", "abrar", "abras", "abrasi", "abreaksi", "abrek", "abreviasi", "abrikos", "abrit-abrit", "abrosfer", "absah", "absen", "absensi", "absensia", "absente", "absenteisme", "abses", "absis", "absolusi", "absolut", "absolutisme", "absonan", "absorb", "absorben", "absorbir", "absorpsi", "absorpsiometer", "absorptif", "abstain", "abstinensi", "abstrak", "abstraksi", "absurd", "absurdisme", "abtar", "abu", "abuan", "abuh", "abuk", "abulhayat", "abulia", "abun-abun", "abur", "abus", "abyad", "acah", "acak", "acala", "acan", "acang", "acap", "acar", "acara", "acaram", "acat", "acau", "acawi", "acerang", "aci", "acik", "aco", "acu", "acuh", "acum", "acung", "ada", "adab", "adad", "adagio", "adagium", "adakala", "adakalanya", "adakan", "adaks", "adaktil", "adalah", "adalat", "adam", "adan", "adang", "adap", "adaptabel", "adaptabilitas", "adaptasi", "adaptif", "adaptometer", "adaptor", "adapun", "adar", "adas", "adat", "adati", "adegan", "adeh", "adekuat", "adem", "adempauze", "adendum", "adenoid", "adenoma", "adenosis", "adhesi", "adhesif", "adi", "adiabatik", "adiabatis", "adiaktinik", "adib", "adibangkit", "adibintang", "adiboga", "adibusana", "adicita", "adidaya", "adigang", "adiguna", "adigung", "adik", "adika", "adikara", "adikarya", "adikodrati", "adikong", "adiksi", "adiktif", "adikuasa", "adil", "adiluhung", "adimarga", "adinda", "ading", "adipati", "adipenghantar", "adiposa", "adipositas", "adipura", "adiraja", "adiratna", "adisi", "adisional", "adisiswa", "aditif", "aditokoh", "adiwangsa", "adiwarna", "adiwidia", "adjektif", "adjektiva", "adjektival", "adjuvan", "administrasi", "administratif", "administrator", "admiral", "admisi", "admitans", "adnan", "adolesens", "adon", "adopsi", "adoptif", "adpertensi", "adrenal", "adrenalin", "adrenergik", "adres", "adsorben", "adsorpi", "adsorpsi", "adstringen", "adu", "aduh", "aduhai", "aduk", "aduksi", "aduktor", "adun", "adveksi", "adven", "adventisia", "adventisius", "adverbia", "adverbial", "advertensi", "advis", "advokad", "advokasi", "advokat", "aerasi", "aerator", "aerob", "aerobatik", "aerobik", "aerobika", "aerodinamik", "aerodinamika", "aerofisika", "aerofisiologi", "aerofon", "aerogram", "aerolit", "aerologi", "aerometer", "aeromovel", "aeronautika", "aeroplangton", "aeroplankton", "aeroskop", "aerosol", "aerostat", "aerostatika", "aestetika", "afair", "afal", "afasia", "afdal", "afdeling", "afdruk", "afek", "afeksi", "afektif", "aferesis", "afiat", "afidavit", "afiks", "afiksasi", "afiliasi", "afinitas", "afirmasi", "afirmatif", "afonia", "aforisme", "afotik", "afrasia", "afrikat", "afrit", "afrodisiak", "afsun", "afwah", "aga", "agah", "agak", "agak-agih", "agal", "agalaksia", "agam", "agama", "agamais", "agamawi", "agamen", "agamet", "agami", "agamogenesis", "agan", "agape", "agar", "agas", "agen", "agenda", "agens", "agentif", "agih", "agil", "agio", "agiria", "agitasi", "agitatif", "agitator", "aglikon", "aglomerasi", "aglomerat", "aglutinasi", "aglutinat", "aglutinatif", "aglutinin", "agnosia", "agnostik", "agnostisisme", "agogo", "agometer", "agon", "agonia", "agonis", "agonistik", "agorafobia", "agradasi", "agrafia", "agraria", "agraris", "agregasi", "agregat", "agregatif", "agresi", "agresif", "agresivitas", "agresor", "agriologi", "agripnia", "agrisilvikultur", "agrobis", "agrobisnis", "agroekonomi", "agroekosistem", "agrogeologi", "agroikos", "agroindustri", "agrokimia", "agronom", "agronomi", "agrostologi", "agrowisata", "aguk", "agul", "agun", "agung", "agus", "agustus", "agut", "ahad", "ahadiat", "ahimsa", "ahistoris", "ahkam", "ahlan", "ahli", "ahlulbait", "ahlulkitab", "ahlulkubur", "ahlunujum", "ahlusuluk", "ahlusunah", "ahmak", "ahmar", "aho", "ahsan", "ahwal", "aib", "ain", "ainulbanat", "ainulyakin", "ainunjariah", "air", "aja", "ajab", "ajaib", "ajaibkhanah", "ajak", "ajal", "ajang", "ajar", "ajek", "ajektifa", "ajektiva", "ajengan", "aji", "ajigineng", "ajimumpung", "ajir", "ajisaka", "ajnabi", "ajnas", "ajojing", "ajre", "aju", "ajudan", "ajufan", "ajujah", "ajuk", "ajun", "ajung", "ajur", "ajuster", "akad", "akademi", "akademik", "akademikus", "akademis", "akademisi", "akaid", "akak", "akal", "akan", "akang", "akapela", "akar", "akas", "akasia", "akatalepsia", "akbar", "akene", "akeo", "akh", "akhbar", "akhir", "akhirat", "akhirulkalam", "akhlak", "akhlaki", "akhwan", "aki", "akibat", "akidah", "akik", "akikah", "akil", "aklamasi", "aklasia", "akli", "akliah", "aklimasi", "aklimatisasi", "akmal", "akolade", "akomodasi", "akomodatif", "akor", "akordeon", "akrab", "akrawati", "akreditasi", "akriflavina", "akrilat", "akrilik", "akrobat", "akrobatik", "akrofobia", "akromegali", "akrometer", "akromion", "akronim", "aksa", "aksara", "akseleran", "akselerasi", "akselerator", "akselerometer", "aksen", "aksentologi", "aksentuasi", "aksep", "akseptabel", "akseptabilitas", "akseptasi", "akseptor", "akses", "aksesibilitas", "aksesori", "aksi", "aksidental", "aksila", "aksiologi", "aksioma", "aksiomatis", "aksis", "akson", "aksostil", "akta", "aktentas", "aktif", "akting", "aktinida", "aktinik", "aktinisme", "aktinium", "aktinokimia", "aktinolit", "aktinometer", "aktiva", "aktivis", "aktivisme", "aktivitas", "aktor", "aktris", "aktual", "aktualisasi", "aktuaria", "aktuaris", "aku", "akua", "akuades", "akuaduk", "akuakultur", "akualung", "akuamarin", "akuan", "akuarel", "akuaris", "akuarium", "akuarius", "akuatik", "akuifer", "akuisisi", "akuk", "akulturasi", "akumulasi", "akumulatif", "akumulator", "akun", "akuntabel", "akuntabilitas", "akuntan", "akuntansi", "akupungtur", "akupungturis", "akupunktur", "akur", "akurasi", "akurat", "akusatif", "akustik", "akustika", "akut", "akwal", "ala", "alabangka", "alabio", "alaf", "alai", "alai-belai", "alaihisalam", "alaika", "alaikum", "alak", "alalia", "alam", "alamah", "alamak", "alamanda", "alamas", "alamat", "alamatulhayat", "alami", "alamiah", "alamin", "alan-alan", "alang", "alangkah", "alantois", "alap", "alarm", "alas", "alat", "alau", "alawar", "alazon", "albanat", "albas", "albatros", "albedo", "albedometer", "albinisme", "albino", "albinoid", "albit", "albuginea", "album", "albumen", "albumin", "albuminoit", "albuminometer", "albuminuria", "aldehida", "alegori", "alegoris", "aleksandrit", "aleksia", "aleksin", "alel", "alem", "alergen", "alergi", "alergis", "alf", "alfa", "alfabet", "alfabetis", "alfaktorius", "alfanumerik", "alferes", "alga", "algilik", "algoid", "algojo", "algologi", "algometer", "algoritme", "algrafi", "alhamdulillah", "alhasil", "ali", "aliansi", "alias", "aliase", "alibi", "alienasi", "alif", "alifatik", "alifbata", "alih", "alihragam", "alik", "alikuot", "alim", "alimbubu", "alimentasi", "alimenter", "alimiah", "alimiat", "alimun", "alin", "alinea", "aling", "alip", "alir", "alis", "alisiklik", "alit", "aliterasi", "alizarin", "aljabar", "aljalil", "alkabir", "alkadim", "alkadir", "alkah", "alkali", "alkalinitas", "alkalis", "alkaloid", "alkalometri", "alkamar", "alkana", "alkari", "alkasyaf", "alkausar", "alkena", "alkil", "alkimia", "alkisah", "alkitab", "alkohol", "alkoholis", "alkoholisasi", "alkoholisme", "alkoholometer", "alku", "alkuna", "alkus", "allah", "allahu", "allahuma", "almaktub", "almalik", "almalun", "almamater", "almanak", "almandin", "almandina", "almandit", "almarhum", "almarhumah", "almasih", "almuazam", "almukhlis", "alobar", "alofon", "alograf", "aloi", "alokasi", "alokron", "aloleks", "alomerisme", "alomorf", "alon", "alonim", "alopati", "alopesia", "alot", "alotropi", "alpa", "alpaka", "alperes", "alpukah", "alquran", "altar", "alter", "alteratif", "alternasi", "alternatif", "alternator", "altimeter", "alto", "altokumulus", "altostratus", "altruis", "altruisme", "altruistis", "alu", "alufiru", "alum", "alumina", "aluminium", "alumni", "alumnus", "alun", "alung", "alup", "alur", "alusi", "aluvial", "aluvium", "alveolar", "alveolum", "alveolus", "alwah", "alwasi", "alwasia", "ama", "amabakdu", "amah", "amai-amai", "amal", "amalgam", "amalgamasi", "amalgamator", "amaliah", "aman", "amanah", "amanat", "amandel", "amandemen", "amang", "amanitin", "amar", "amarilis", "amat", "amatir", "amatirisme", "amatol", "ambah", "ambah-ambah", "ambai", "ambai-ambai", "ambak", "ambal", "ambalang", "ambalela", "ambang", "ambar", "ambarau", "ambasade", "ambasador", "ambau", "ambeien", "ambek", "amben", "amberal", "ambergris", "amberit", "ambet", "ambi", "ambigu", "ambiguitas", "ambil", "ambilingual", "ambin", "ambing", "ambisi", "ambisius", "ambivalen", "ambivalensi", "amblas", "amblek", "ambles", "ambliobia", "amboi", "ambreng-ambrengan", "ambring", "ambrol", "ambruk", "ambu-ambu", "ambuh", "ambul", "ambulakral", "ambulans", "ambulatori", "ambung", "ambur", "amburadul", "ambyar", "ameba", "amebiasis", "ameboid", "amebosit", "ameliorasi", "amelioratif", "amen", "amendemen", "amenorea", "amensalisme", "amenta", "amerisium", "amerospora", "amerta", "ametabola", "ametis", "ametobola", "amfetamin", "amfiartrosis", "amfibi", "amfibol", "amfibolisme", "amfiston", "amfiteater", "amfoterik", "ami", "amigdalin", "amikal", "amil", "amilase", "amilopektin", "amin", "amina", "aminisasi", "amino", "amir", "amirulbahar", "amirulhaj", "amirulmukminin", "amis", "amit", "amitosir", "amko", "ammeter", "amnesia", "amnesti", "amnion", "amniotik", "amoi", "amonia", "amonifikasi", "amonit", "amonium", "amor", "amoral", "amorf", "amortisasi", "ampai", "ampang", "ampas", "ampat", "ampe", "ampean", "ampek", "ampel", "ampela", "ampelam", "ampelas", "ampere", "amperemeter", "amperometri", "ampisilin", "amplas", "amplifikasi", "amplitudo", "amplop", "ampo", "amprok", "amprung", "ampu", "ampuh", "ampuk", "ampul", "ampula", "ampun", "amput", "amputasi", "amra", "amril", "amsal", "amtenar", "amuba", "amuh", "amuk", "amulet", "amung", "amunisi", "ana", "anabasis", "anabiosis", "anabolisme", "anadrom", "anaerob", "anaerobik", "anafilaksis", "anafora", "anaforis", "anafrodisiak", "anaglif", "anai-anai", "anak", "anakoluton", "anakronisme", "anakronistis", "anakrus", "anal", "analekta", "analeptik", "analgesik", "analis", "analisis", "analitis", "analog", "analogi", "analseks", "analsit", "anamel", "anamnesis", "anamorfosis", "ananda", "anang", "anani", "anapes", "anaptiksis", "anarki", "anarkis", "anarkisme", "anarkistis", "anasional", "anasir", "anastomosis", "anatase", "anatomi", "anatomis", "anbia", "anca", "ancai", "ancak", "ancala", "ancam", "ancang", "ancar-ancar", "ancoa", "ancol", "ancuk", "anda", "andai", "andak", "andaka", "andal", "andalas", "andalusit", "andam", "andan", "andang", "andapita", "andar", "andarah", "andeng-andeng", "anderak", "andesit", "andewi", "andika", "andiko", "andil", "andilau", "andok", "andong", "andragogi", "andrawina", "androgen", "androgini", "androgogi", "androlog", "andrologi", "anduh", "andur", "aneh", "aneka", "anekdot", "aneksasi", "anemer", "anemia", "anemofili", "anemograf", "anemogram", "anemometer", "aneroid", "anestesi", "anestesia", "anestesiolog", "anestetis", "aneuploid", "aneurisme", "anfas", "angah", "angan", "angel", "angga", "anggai", "anggak", "anggal", "anggan", "anggap", "anggar", "anggara", "anggau", "anggerka", "anggit", "angglap", "anggorokasih", "anggota", "anggrek", "angguh", "angguk", "anggul", "anggun", "anggung", "anggung-anggip", "anggur", "anggut", "anghun", "angin", "angina", "angiogenesis", "angiologi", "angiosperma", "angit", "angka", "angkak", "angkal-angkal", "angkara", "angkasa", "angkat", "angkel", "angker", "angket", "angkin", "angkit", "angklung", "angkong", "angkring", "angku", "angkuh", "angkuk", "angkul-angkul", "angkup", "angkur", "angkus", "angkusa", "angkut", "angler", "anglo", "anglong", "anglung", "angon", "angop", "angot", "angpau", "angsa", "angsana", "angsoka", "angsu", "angsur", "angus", "angut", "anhidrosis", "ani", "aniaya", "anil", "anilina", "animasi", "animis", "animisme", "animo", "aning-aning", "anion", "aniridia", "anis", "anisogamet", "anisogami", "anisokoria", "anisotropis", "anja", "anjak", "anjal", "anjang", "anjangkarya", "anjangsana", "anjar", "anjiman", "anjing", "anjir", "anjlok", "anju", "anjung", "anjur", "ankilosis", "anoa", "anode", "anodin", "anofeles", "anoksemia", "anoksik", "anom", "anomali", "anomi", "anonim", "anonimitas", "anoreksia", "anorganik", "anorgastik", "anortopia", "anosmia", "anotasi", "ansa", "ansambel", "ansar", "ansari", "anta", "antagonis", "antagonisme", "antagonistis", "antah", "antah-berantah", "antakesuma", "antalas", "antalkali", "antamir", "antan", "antap", "antar", "antara", "antarbangsa", "antarbenua", "antardaerah", "antari", "antariksa", "antarkelompok", "antarlingkungan", "antarmaster", "antarmolekul", "antarmuka", "antarnegara", "antarplanet", "antarpribadi", "antarpulau", "antarras", "antarruang", "antarsel", "antarsuku", "antartika", "antarwilayah", "antasid", "antasida", "antawacana", "ante", "antedilivium", "antediluvium", "antefiks", "antek", "anteken", "antelas", "anteliks", "antelmintik", "antelop", "antem", "antemeridiem", "antena", "antenatal", "anteng", "antenul", "antep", "anter", "antera", "anteridium", "anterior", "antero", "anteseden", "anti", "antianemia", "antiartritik", "antibarion", "antibeku", "antibiosis", "antibiotik", "antibodi", "antidepresan", "antidioksida", "antidiuretik", "antidot", "antienzim", "antiflogistik", "antigen", "antigravitasi", "antih", "antihistamin", "antijasad", "antik", "antikarat", "antikatalis", "antiklimaks", "antiklin", "antiklinal", "antiklor", "antikonsepsi", "antikristus", "antikuari", "antikuariat", "antimateri", "antimetari", "antimonium", "antimuntah", "anting", "antinomi", "antinovel", "antipartikel", "antipati", "antipenawar", "antipiretik", "antipode", "antiproton", "antipruritik", "antisemitisme", "antisepsis", "antiseptik", "antisiklogenesis", "antisiklon", "antisiklonal", "antisiklonis", "antisimpul", "antisipasi", "antisipatif", "antitank", "antitesis", "antitoksin", "antitragus", "antiwirawan", "antizarah", "antoi", "antologi", "antonim", "antonimi", "antop", "antosian", "antraknosa", "antraks", "antrasena", "antrasian", "antrasit", "antre", "antri", "antromometer", "antromorfis", "antropobiologi", "antropoda", "antropofagi", "antropogeografi", "antropoid", "antropolog", "antropologi", "antropometer", "antropomorfisme", "antroponimi", "antroposentris", "antroposentrisme", "antroposofi", "antuk", "antul", "antun", "antung-antung", "antup", "anturium", "antusias", "antusiasme", "anu", "anual", "anugerah", "anuitas", "anulir", "anulus", "anumerta", "anunasika", "anuresis", "anuria", "anus", "anuswara", "anut", "anyak", "anyam", "anyang", "anyar", "anyel", "anyelir", "anyep", "anyes", "anyik", "anyir", "aorta", "apa", "apabila", "apak", "apakah", "apakala", "apalagi", "apam", "apanase", "apar", "aparat", "aparatur", "aparatus", "apartemen", "apartemenisasi", "apartheid", "apartotel", "apas", "apatah", "apati", "apatis", "apatride", "ape", "apek", "apel", "apelativa", "apendektomi", "apendiks", "apendisitis", "apepsi", "apersepsi", "apes", "aphelion", "apheliotropisme", "api", "apik", "apikal", "apikultur", "apilan", "aping", "apion", "apit", "apium", "apkir", "aplasi", "aplaus", "aplikasi", "aplikatif", "aplus", "apnea", "apo", "apodal", "apoenzim", "apogami", "apoge", "apograf", "apok", "apokalips", "apokaliptik", "apokope", "apokrifa", "apokrin", "apokromatik", "apolitis", "apologetika", "apologetis", "apologi", "apologia", "apomiksis", "apomorfin", "apopleksi", "aposematik", "aposiopesis", "aposisi", "aposisional", "apositif", "apostasi", "apostel", "aposteriori", "apostolik", "apostrof", "apotek", "apoteker", "apotik", "apraksi", "apraksia", "apresiasi", "apresiatif", "apresorium", "april", "apriori", "aprit", "apron", "apsara", "apsari", "aptasi", "aptiklus", "apu", "apuh", "apung", "apuran", "ara", "arab", "arababu", "arabahu", "arabes", "arabesk", "arabika", "aragonit", "arah", "arai", "arak", "araknitis", "araknoid", "aral", "aram", "aramba", "arang", "aransemen", "ararut", "aras", "arasy", "arau", "arbaa", "arbab", "arbei", "arbiter", "arbitrase", "arbitrer", "arboreal", "arboretum", "arborikultur", "arca", "arcas", "ardi", "are", "area", "areal", "arek", "arem-arem", "aren", "arena", "areografi", "areola", "areometer", "arerut", "ares", "arestasi", "areta", "argari", "argentit", "argentum", "argirodit", "argol", "argometer", "argon", "argot", "argumen", "argumentasi", "argumentatif", "ari", "aria", "aries", "arif", "arifin", "arih", "arik", "aril", "aring", "ariningsun", "arip", "aris", "arisan", "aristokrasi", "aristokrat", "aristokratis", "aristotipe", "arit", "aritenoid", "aritmetika", "arja", "arkade", "arkais", "arkaisme", "arkan", "arkati", "arkegonium", "arkeolog", "arkeologi", "arkeologis", "arkeozoikum", "arketipe", "arkian", "arkifonem", "arkileksem", "arkitraf", "arktika", "arku", "arloji", "armada", "arnal", "arogan", "arogansi", "aroma", "aromatik", "arombai", "aron", "arpus", "arsenal", "arsenik", "arsenikum", "arsip", "arsipelago", "arsir", "arsis", "arsitek", "arsitektur", "arta", "artefak", "arteri", "arteriografi", "arteriola", "arteriosklerosis", "artesis", "artetis", "arti", "articok", "artifak", "artifisial", "artik", "artikel", "artikulasi", "artikulator", "artileri", "artiodaktil", "artis", "artisan", "artistik", "artisyok", "artona", "artotek", "artrobrankium", "artropoda", "aru", "aruan", "aruda", "aruk", "arumba", "arun", "arung", "arus", "arwah", "arwana", "arya", "aryaduta", "arzak", "asa", "asabat", "asabiah", "asabiyah", "asad", "asah", "asai", "asak", "asal", "asali", "asam", "asan", "asana", "asap", "asar", "asas", "asasi", "asbak", "asbes", "asbut", "aseksual", "asemble", "asembling", "asepsis", "aseptik", "aseran", "asese", "aset", "asetabulum", "asetat", "asetilena", "asetimeter", "aseton", "asfal", "asfar", "asfiksia", "asi", "asibilan", "asibilasi", "asid", "asidimeter", "asidosis", "asih", "asiklik", "asil", "asilabis", "asimetris", "asimilasi", "asimilatif", "asimtot", "asimus", "asin", "asindeton", "asing", "asinyor", "asiri", "asisten", "asistensi", "askar", "askariasis", "askarid", "askese", "asket", "asketisisme", "askon", "askriptif", "asli", "asma", "asmara", "asmaradanta", "asmaragama", "asmaraloka", "asmarandana", "asnad", "aso", "asoi", "asonansi", "asong", "asor", "asortimen", "asosial", "asosiasi", "asosiatif", "aspal", "asparaga", "asparagus", "aspartame", "aspek", "asperses", "aspiran", "aspirasi", "aspirasional", "aspirat", "aspiratif", "aspirator", "aspirin", "asprak", "asrama", "asrar", "asri", "assalamualaikum", "asta", "astadikpala", "astaga", "astagfirullah", "astaka", "astakona", "astana", "astasia", "astatik", "astatin", "astenia", "astenik", "astenopia", "asteositoma", "aster", "asteroid", "astigmatis", "astra", "astral", "astringen", "astrofisika", "astrolab", "astrolog", "astrologi", "astronaut", "astronautika", "astronom", "astronomi", "astronomis", "astrosit", "asu", "asuh", "asumsi", "asumtif", "asung", "asurador", "asuransi", "asusila", "aswa", "aswad", "aswasada", "asyera", "asyik", "asytoret", "asyura", "atak", "ataksia", "atap", "atar", "atas", "atase", "atau", "atavisme", "atebrin", "ateis", "ateisme", "ateistis", "atelir", "atensi", "atenuasi", "ateret", "atfal", "ati", "atlas", "atlet", "atletik", "atma", "atman", "atmolisis", "atmologi", "atmometer", "atmosfer", "atmosferis", "ato", "atok", "atol", "atom", "atomisasi", "atomistis", "atop", "atos", "atowa", "atraksi", "atraktan", "atraktif", "atresia", "atret", "atribut", "atributif", "atrisi", "atrium", "atrofi", "atropin", "atung", "atur", "atus", "aubade", "audiensi", "audio", "audiofil", "audiofon", "audiograf", "audiogram", "audiolingual", "audiologi", "audiometer", "audiovisual", "audit", "auditor", "auditorium", "augmentatif", "auk", "auksanometer", "auksi", "auksin", "aula", "aulia", "aum", "aung", "aur", "aura", "aural", "aurat", "aurikularia", "aurora", "aurum", "aus", "auskultasi", "autad", "autarki", "autarkis", "autentik", "autentikasi", "autentisitas", "autisme", "autistik", "auto", "autobiograf", "autobiografi", "autodidak", "autodidaktik", "autodin", "autofon", "autogami", "autogen", "autograf", "autografi", "autogram", "autoklaf", "autoklastik", "autokrasi", "autokrat", "autokton", "autoktonos", "autolisis", "autolitograf", "autologi", "automaton", "automobil", "automotif", "autopsi", "autoskop", "autosom", "autotoksin", "autotrof", "autotrofik", "autotrop", "autotropik", "auzubillah", "avalans", "aven", "aversi", "avertebrata", "avesta", "avgas", "aviari", "aviasi", "aviator", "avifauna", "avikultur", "avirulen", "avitaminosis", "avokad", "avontur", "avonturir", "avtur", "avunkulokal", "awa", "awaair", "awaarang", "awabau", "awabeku", "awabulu", "awabusa", "awadara", "awah", "awahama", "awai", "awak", "awal", "awalengas", "awam", "awamineral", "awan", "awanama", "awang", "awar", "awaracun", "awas", "awasenjata", "awat", "awawarna", "awet", "awewe", "awi", "awik-awik", "awin", "awur", "awut", "ayah", "ayahan", "ayahanda", "ayak", "ayal", "ayam", "ayan", "ayanda", "ayang-ayang", "ayap", "ayar", "ayat", "ayatullah", "ayem", "ayeng", "ayid", "ayit", "ayo", "ayom", "ayu", "ayuk", "ayum", "ayun", "ayunda", "ayut", "azab", "azal", "azali", "azam", "azan", "azeotrop", "azimat", "azimut", "aziz", "azmat", "azoikum", "azospermi", "azurit", "bab", "baba", "babad", "babah", "babak", "babakan", "babal", "baban", "babang", "babar", "babaring", "babas", "babat", "babatan", "babe", "babesiasis", "babet", "babi", "babil", "babit", "bablas", "babon", "babu", "babun", "babur", "babut", "baca", "bacah", "bacak", "bacang", "bacar", "bacek", "bacem", "bacik", "bacin", "baco", "bacok", "bacot", "bacul", "bacut", "bad", "bada", "badai", "badak", "badal", "badam", "badan", "badang", "badani", "badar", "badari", "badasi", "badau", "bade", "badi", "badik", "badminton", "badong", "badui", "baduk", "badung", "badur", "badut", "baduyut", "bafta", "bagai", "bagaimana", "bagak", "bagal", "bagan", "bagang", "bagar", "bagas", "bagasi", "bagat", "bagau", "bagea", "bagi", "baginda", "bagong", "bagor", "baguk", "bagul", "bagur", "bagus", "bah", "bahadur", "bahaduri", "bahagia", "bahak", "bahala", "bahalan", "baham", "bahan", "bahana", "bahang", "bahar", "bahara", "bahari", "baharu", "bahas", "bahasa", "bahaya", "bahenol", "baheula", "bahimiah", "bahkan", "bahri", "bahrulhayat", "bahtera", "bahu", "bahuku", "bahwa", "bahwasanya", "baiat", "baid", "baiduri", "baik", "bain", "bainah", "bais", "bait", "baitulharam", "baitullah", "baitulmakdis", "baitulmakmur", "baitulmal", "baitulmukadas", "baitulmukadis", "baja", "bajaj", "bajak", "bajan", "bajang", "bajar", "bajau", "bajetah", "baji", "bajigur", "bajik", "bajing", "baju", "bajul", "bak", "baka", "bakak", "bakal", "bakalaureat", "bakam", "bakap", "bakar", "bakarat", "bakas", "bakat", "bakau", "bakda", "bakdahu", "bakdu", "bakdul", "bakelit", "bakero", "bakh", "bakhil", "baki", "bakiak", "bakik", "bakir", "bakmi", "bako", "bakpao", "bakpia", "baksi", "baksis", "bakso", "baktau", "bakteremia", "bakteri", "bakterin", "bakteriofag", "bakteriolisis", "bakteriolog", "bakteriologi", "bakteriostatik", "bakterisida", "bakti", "baku", "bakul", "bakung", "bakup", "bakut", "bakwan", "bal", "bala", "balabad", "balad", "balada", "balah", "balai", "balairung", "balak", "balalaika", "balam", "balan", "balang", "balangkep", "balans", "balap", "balar", "balas", "balau", "balela", "balen", "balerina", "balerong", "balet", "balgam", "balian", "balig", "baliho", "balik", "baling", "balistik", "balistika", "baliu", "balkas", "balkon", "balneologi", "balneoterapi", "balok", "balon", "balong", "balot", "balsam", "balseros", "balu", "baluarti", "baluh", "balui", "baluk", "balun", "balung", "balur", "balut", "bam", "bambam", "bambang", "bambu", "bambung", "ban", "bana", "banal", "banang", "banar", "banat", "bancak", "bancang", "bancar", "bancet", "banci", "bancik", "bancuh", "bancut", "banda", "bandan", "bandang", "bandar", "bandara", "bandarsah", "bandasrayan", "bandea", "bandel", "bandela", "bandeng", "bandering", "banderol", "banding", "bandit", "banditisme", "bando", "bandongan", "bandos", "bandot", "bandrek", "bandu", "bandul", "bandung", "bandusa", "bandut", "bang", "bangai", "bangan", "bangang", "bangar", "bangas", "bangat", "bangau", "bangbung", "banget", "bangga", "banggan", "bangir", "bangka", "bangkah", "bangkai", "bangkal", "bangkang", "bangkar", "bangkas", "bangkasan", "bangkeh", "bangket", "bangking", "bangkir", "bangkis", "bangkit", "bangkong", "bangkot", "bangkrut", "bangku", "bangkut", "banglas", "bangle", "banglo", "bango", "bangor", "bangpak", "bangsa", "bangsai", "bangsal", "bangsat", "bangsi", "bangun", "bangus", "bani", "banian", "baning", "banir", "banjang", "banjar", "banjaran", "banji", "banjir", "banjur", "bank", "bankir", "bantah", "bantai", "bantal", "bantam", "bantar", "bantaran", "bantat", "bantau", "banteng", "banter", "banting", "bantu", "bantun", "bantut", "banua", "banyak", "banyo", "banyol", "banyu", "banyun", "banzai", "bao", "bap", "bapa", "bapak", "bapakisme", "bapanda", "bapang", "bapet", "baplang", "baptis", "bar", "bara", "baraat", "baragajul", "barah", "barai", "barak", "barakat", "barakatuh", "baran", "barang", "barangan", "barangkali", "barap", "baras", "barat", "barau-barau", "barbar", "barbarisme", "barbel", "barber", "barbital", "barbiton", "barbiturat", "barbur", "bardi", "bare-bare", "barel", "bareng", "barep", "baret", "barga", "bari", "barid", "barier", "barik", "barikade", "baring", "baringan", "barion", "baris", "barisfer", "barit", "barita", "bariton", "barium", "barjad", "barkas", "barkometer", "barli", "barograf", "barogram", "barok", "barologi", "barometer", "barometri", "baron", "barong", "barongan", "barongsai", "baroskop", "barotermograf", "barso", "barter", "baru", "barua", "baruh", "baruje", "baruna", "barung-barung", "barusan", "barut", "barzakh", "barzanji", "bas", "basa", "basa-basi", "basah", "basal", "basalioma", "basanit", "basat", "basau", "basi", "basil", "basilari", "basilika", "basilus", "basin", "basir", "basirah", "basis", "basit", "baskara", "baskat", "basket", "baskom", "basmi", "bastar", "basuh", "basung", "basut", "bata", "batagor", "batai", "batak", "batako", "batal", "batalion", "batalyon", "batang", "batara", "batari", "batas", "batekeng", "batel", "batela", "baterai", "bati", "batih", "batik", "batil", "batila", "batimetri", "batin", "batiplankton", "batir-batir", "batis", "batisfer", "batok", "batolit", "baton", "batu", "batuk", "batun", "batung", "bau", "baud", "bauk", "bauksit", "baun", "baung", "baur", "baureksa", "bausastra", "bausuku", "baut", "bawa", "bawab", "bawah", "bawak", "bawal", "bawang", "bawasir", "bawat", "bawel", "bawon", "baya", "bayak", "bayam", "bayan", "bayang", "bayangkara", "bayangkari", "bayar", "bayas", "bayat", "bayata", "bayati", "bayem", "bayi", "bayonet", "bayong", "bayu", "bayuh", "bayun", "bayung", "bayur", "bazar", "bazoka", "bea", "beasiswa", "beatifikasi", "bebal", "beban", "bebandos", "bebang", "bebar", "bebaru", "bebas", "bebat", "bebe", "bebek", "bebekel", "bebekisme", "bebel", "bebenah", "beber", "beberapa", "beberas", "bebesaran", "bebi", "bebodoran", "bebotoh", "bebrek", "bebuyutan", "becak", "becek", "beceng", "becokok", "becuk", "becus", "beda", "bedah", "bedak", "bedal", "bedama", "bedan", "bedar", "bedaru", "bedawi", "bedaya", "bedebah", "bedegap", "bedegong", "bedel", "bedeng", "bedil", "bedinde", "bedo", "bedol", "bedudak", "beduk", "bedukang", "bedung", "beeng", "bega", "begadang", "begah", "begal", "begana", "begana-begini", "begandering", "begandring", "begap", "begar", "begawan", "begini", "begitu", "bego", "begonia", "begroting", "begu", "beguk", "begundal", "beha", "behandel", "behena", "bejana", "bejat", "bek", "beka", "bekah", "bekakak", "bekakas", "bekal", "bekam", "bekantan", "bekap", "bekas", "bekat", "bekatul", "bekel", "beken", "beker", "bekerma", "bekicot", "bekil", "beking", "bekisar", "bekleding", "bekles", "beklit", "beksan", "beku", "bekuk", "bekuku", "bekukung", "bel", "bela", "belabas", "belacak", "belacan", "belacu", "belada", "beladau", "beladu", "belah", "belahak", "belahong", "belai", "belak", "belaka", "belakang", "belako", "belalah", "belalai", "belalak", "belalang", "belam", "belambang", "belan", "belanak", "belanda", "belandang", "belandar", "belandong", "belandung", "belang", "belanga", "belangah", "belangir", "belangkas", "belangkin", "belangkon", "belanja", "belantai", "belantan", "belantara", "belantik", "belantika", "belantuk", "belar", "belarak", "belas", "belasah", "belasting", "belasungkawa", "belasut", "belat", "belat-belit", "belata", "belater", "belati", "belatik", "belatuk", "belatung", "belau", "belawan", "beldu", "belebas", "belebat", "belecak", "beleda", "beledang", "beledi", "beledu", "beleid", "belek", "belekek", "belekok", "belel", "belelang", "belembang", "belencong", "belendong", "belendung", "beleng", "belenggu", "belengket", "belengkok", "belengkong", "belengset", "belenting", "belentung", "belepas", "belera", "belerang", "belerong", "beleter", "beli", "belia", "beliak", "belian", "beliau", "belibas", "belibat", "belibis", "belida", "beligat", "beligo", "belik", "belikan", "belikat", "beliku", "belimbing", "belincong", "beling", "belingkang", "belingsat", "belingut", "belinjo", "belintang", "belis", "belit", "belitung", "beliung", "beliut", "beloan", "belobor", "belodok", "beloh", "belok", "belokok", "belolang", "belolok", "belolong", "belon", "belonggok", "belongkang", "belongkeng", "belongkot", "belongkotan", "belongsong", "belontang", "beloon", "belot", "belotong", "belu", "belu-belai", "beluam", "beluas", "belubu", "belubur", "beludak", "beludar", "beludru", "beluhan", "beluk", "belukap", "belukar", "beluku", "belukut", "belulang", "beluluk", "belulung", "belum", "belumpai", "belungkang", "belungkur", "belungsing", "belunjur", "beluntas", "beluru", "belus", "belusuk", "belut", "beluwek", "bembam", "bemban", "bembar", "bembarap", "bembet", "bemo", "bemper", "bena", "benah", "benak", "benalu", "benam", "benang", "benar", "benara", "benatu", "bencah", "bencana", "bencat", "benci", "bencol", "bencong", "benda", "bendahara", "bendahari", "bendala", "bendalu", "bendang", "bendar", "bendara", "bendari", "bendawat", "bendawi", "bende", "bendel", "bendela", "bendera", "benderang", "benderung", "bendesa", "bendi", "bendir", "bendo", "bendoro", "bendu", "benduan", "bendul", "bendung", "benefaktif", "bengah", "bengal", "bengang", "bengang-bengut", "bengap", "bengawan", "bengek", "bengep", "benggal", "benggala", "benggang", "benggil", "benggol", "bengis", "bengkah", "bengkak", "bengkal", "bengkal-bengkil", "bengkalai", "bengkang-bengkok", "bengkang-bengkong", "bengkang-bengkung", "bengkar", "bengkarak", "bengkarap", "bengkaras", "bengkarung", "bengkatak", "bengkawan", "bengkawang", "bengkayang", "bengkel", "bengkelai", "bengkeng", "bengker", "bengkerap", "bengkil", "bengkok", "bengkol", "bengkong", "bengkos", "bengku", "bengkuang", "bengkudu", "bengkunang", "bengkung", "bengoh", "bengok", "bengong", "bengot", "bengu", "benguk", "bengul", "bengung", "beni", "benian", "benih", "bening", "benitan", "benjol", "benjut", "benkap", "bensin", "benta", "bentak", "bentala", "bentan", "bentang", "bentangkan", "bentangur", "bentar", "bentara", "bentaus", "benteh", "benteng", "bentes", "bentet", "bentik", "bentoh", "bentok", "bentol", "bentong", "bentonit", "bentos", "bentrok", "bentuk", "bentul", "bentulu", "bentur", "benturung", "bentus", "benua", "benuang", "benuaron", "benulung", "benum", "benur", "benyai", "benyek", "benyoh", "benyot", "benzedrin", "benzena", "benzil", "benzoat", "benzoil", "benzoin", "benzol", "beo", "beol", "bera", "berabe", "beragan", "berahi", "berai", "beraja", "berak", "berakah", "beraksa", "beram", "berambang", "beramin", "beranang", "beranda", "berandal", "berandang", "berang", "berangai", "berangan", "berangas", "berangasan", "berangga", "berangkal", "berangkat", "berangsang", "berangta", "berangus", "berani", "beranta", "berantak", "berantas", "berapa", "beras", "berat", "bercak", "berdikari", "berdus", "berebes", "beredel", "berek-berek", "beremban", "berembang", "berendeng", "bereng-bereng", "berengau", "berenggil", "berengos", "berengsek", "berengut", "berentang", "bereo", "bererot", "beres", "beresok", "beret", "berewok", "bergajul", "bergas", "berguk", "berhala", "beri", "beriang", "beriani", "berida", "berik", "beril", "berilium", "berinda", "bering-bering", "beringas", "beringin", "beringsang", "berisik", "berita", "berkah", "berkas", "berkat", "berkelium", "berkik", "berkil", "berko", "berkung", "berlau", "berlian", "berma", "bermat", "bermi", "bernas", "bernga", "beroci", "beroga", "berok", "berokat", "beron", "beronang", "berondok", "berondong", "berong", "berongkos", "berongsang", "berongsong", "beronjong", "beronok", "beronsang", "berontak", "berosot", "beroti", "beroya", "bersat", "bersih", "bersil", "bersin", "bersit", "bersut", "bertam", "bertih", "beru", "beruang", "beruas", "berubuh", "berudu", "berui", "beruju", "berujul", "beruk", "berumbun", "berumbung", "berunai", "berunang", "berungut", "beruntus", "beruri", "berus", "berwari", "berzanji", "besalen", "besan", "besar", "besek", "besel", "besengek", "beser", "besero", "beset", "besi", "besikal", "besing", "besit", "beskal", "beskap", "beskat", "beslah", "beslit", "besok", "besot", "bestari", "bestek", "bestel", "bestialitas", "bestik", "bestir", "bestral", "besuk", "besusu", "besut", "besuta", "bet", "beta", "betah", "betahak", "betak-betak", "betang", "betapa", "betara", "betari", "betas", "betatas", "betatron", "betau", "betet", "beti", "betik", "betina", "beting", "betinga", "betis", "betok", "beton", "betonisasi", "betot", "betul", "betung", "betutu", "bewok", "bhayangkara", "biadab", "biadat", "biadi", "biah", "biak", "biang", "bianglala", "biaperi", "biar", "biara", "biarpet", "biarpun", "bias", "biasa", "biat", "biau", "biawak", "biawan", "biawas", "biaya", "bibel", "bibi", "bibinda", "bibir", "bibit", "biblio", "bibliografi", "bibliomania", "bibliotek", "bicana", "bicara", "bicokok", "bicu", "bida", "bidadari", "bidah", "bidai", "bidak", "bidal", "bidan", "bidang", "bidar", "bidara", "bidari", "bidas", "bidet", "bidik", "bido", "biduan", "biduanda", "biduanita", "biduk", "bidur", "biduri", "bienial", "biennale", "bifasial", "bifida", "bigair", "bigami", "bigamis", "bihi", "bihun", "bijak", "bijaksana", "bijan", "bijana", "biji", "bijih", "bik", "bikameral", "bikang", "bikarbonat", "bikin", "bikini", "bikir", "bikonkaf", "bikonveks", "bikromat", "biksah", "biksu", "biksuni", "biku", "bila", "bilabial", "bilah", "bilai", "bilakmata", "bilal", "bilamana", "bilamasa", "bilang", "bilas", "bilateral", "bilateralisme", "bilga", "bilhak", "biliar", "bilik", "bilineal", "bilingual", "bilingualisme", "bilis", "biliun", "billahi", "bilokal", "bilur", "bilyet", "bimasakti", "bimbang", "bimbing", "bimbit", "bimetal", "bin", "bina", "binal", "binar", "binara", "binaraga", "binasa", "binatak", "binatang", "binatu", "binawah", "binayah", "bincacak", "bincang", "bincang-bincut", "bincu", "bincul", "bincut", "bindam", "bindeng", "binder", "bindu", "bineka", "binen", "biner", "bingas", "bingit", "bingka", "bingkah", "bingkai", "bingkas", "bingkatak", "bingkis", "bingung", "bini", "binjai", "binjat", "binokular", "binomial", "bintak", "bintal", "bintalak", "bintan", "bintang", "bintara", "binti", "bintik", "bintil", "bintit", "bintul", "bintulbahar", "bintur", "binturung", "biodata", "biodin", "biofera", "biofilm", "biofilter", "biofisik", "biofisika", "biogas", "biogenesis", "biogenik", "biogeografi", "biografi", "biokimia", "bioklimatologi", "biola", "biolinguistik", "biolit", "biolog", "biologi", "biologis", "bioluminesensi", "biomassa", "biomekani", "biometeorologi", "biometri", "biometrika", "bionomika", "biopendar", "bioplasma", "biopsi", "bioritme", "bioritmik", "biosekuen", "biosfer", "biosida", "bioskop", "biostatika", "biota", "biotek", "bioteknologi", "biotik", "biotin", "biotoksin", "biotron", "bipatride", "bipolar", "bipolaritas", "bipolisentrisme", "biprisma", "bir", "birah", "birai", "biram", "birama", "birang", "biras", "birat", "biri-biri", "biring", "birit", "biro", "birofaks", "birokrasi", "birokrat", "birokratis", "birokratisasi", "birokratisme", "birsam", "biru", "bis", "bisa", "bisai", "bisan", "bisawab", "bisbol", "biseksual", "bisektris", "biseps", "bisik", "bising", "bisinosis", "biskuit", "bismillah", "bismut", "bisnis", "bison", "bissu", "bistik", "bisu", "bisul", "bit", "biti", "biting", "bitisik", "bitumen", "biuku", "biumbai", "bius", "biut", "bivak", "biverbal", "biyuh-biyuh", "bizurai", "blabar", "blabitisme", "blakblakan", "blangko", "blantik", "blantika", "blaster", "blastostil", "blazer", "blek", "blekek", "blekok", "blenda", "blender", "blepot", "blewah", "blirik", "blog", "bloger", "blok", "blokade", "blokir", "bloknot", "blong", "blower", "bludrek", "blues", "blus", "blustru", "bobato", "bobok", "bobol", "bobos", "bobot", "bobotok", "bobrok", "bocah", "bocok", "bocong", "bocor", "bodhi", "bodhisatwa", "bodi", "bodoh", "bodok", "bodong", "bodor", "boga", "bogam", "bogel", "bogem", "bogi", "bogol", "bogor", "bogot", "bohemian", "bohlam", "bohong", "bohorok", "bohsia", "boi", "boikot", "bois", "bokar", "bokca", "bokek", "boko", "bokoh", "bokong", "bokop", "bokor", "boks", "boksen", "bokser", "bokset", "boksu", "boku", "bol", "bola", "bolak", "bolak-balik", "bolang-baling", "boleh", "bolero", "bolide", "boling", "bolometer", "bolong", "bolos", "bolot", "bolotu", "bolpoin", "bolsak", "bolu", "bom", "bombai", "bombardemen", "bombardir", "bombas", "bombastis", "bomber", "bomoh", "bomseks", "bon", "bonafide", "bonafiditas", "bonang", "bonanza", "bonar", "bonbon", "boncel", "bonceng", "boncol", "boncong", "bondol", "bondong", "bondot", "boneka", "bonet", "bong", "bongak", "bonggol", "bongkah", "bongkak", "bongkar", "bongkar-bangkir", "bongkin", "bongko", "bongkol", "bongkong", "bongkor", "bongkot", "bongkrek", "bonglai", "bongmeh", "bongo", "bongok", "bongsang", "bongsor", "bonjol", "bonjor", "bonsai", "bontak", "bonto", "bontok", "bontot", "bonus", "bonyok", "bopeng", "boplang", "bopok", "bopong", "bor", "bora", "borak", "boraks", "borang", "borat", "borci", "border", "bordes", "bordil", "bordir", "bordu", "boreal", "boreh", "borek", "borgol", "borhan", "borjuasi", "borjuis", "borkol", "boro-boro", "borok", "boron", "borong", "boros", "bortel", "bos", "bosan", "boseta", "bosman", "boson", "bosor", "bosun", "bot", "bota", "botak", "botang", "botani", "botanikus", "botanis", "botelir", "botlir", "boto", "botoh", "botok", "botol", "botor", "botridium", "botulisme", "bowo", "boya", "boyak", "boyas", "boyo-boyo", "boyong", "boyongan", "bozah", "bradikardi", "brahma", "brahmana", "brahmani", "brahmi", "brahmin", "braille", "brakiasi", "brakilogi", "brakisefalik", "brakistokron", "brakiurus", "braktea", "bramacorah", "brambang", "brana", "brander", "brankar", "brankas", "branwir", "braseri", "brata", "bratawali", "bredel", "breksi", "breksia", "brem", "bren", "brendi", "brengsek", "bretel", "brevet", "brifing", "brigade", "brigadir", "brigidig", "briket", "brilian", "briofita", "briologi", "briozoa", "brisan", "broiler", "brokade", "brokat", "broker", "brokoli", "brom", "bromat", "bromida", "bromin", "bromisme", "brompit", "brongkos", "bronkioli", "bronkitis", "bronkodilator", "bronkotomi", "bronkus", "brontosaurus", "bros", "brosur", "browser", "bruder", "bruk", "brunai", "brutal", "brutalisme", "bruto", "bua", "buah", "buai", "buak", "bual", "buana", "buang", "buani", "buar", "buari", "buas", "buat", "buaya", "bubar", "bubo", "bubu", "bubuh", "bubuhan", "bubuk", "bubul", "bubun", "bubung", "bubur", "bubus", "bubut", "bucu", "budak", "budanco", "budaya", "buddha", "buddhis", "buddhisme", "bude", "budek", "budi", "budian", "budiman", "budu", "buduk", "budur", "bueng", "bufer", "bufet", "bugar", "bugenfil", "bugenvil", "bugi-bugi", "bugil", "buhuk", "buhul", "bui", "buih", "buil", "bujal", "bujam", "bujang", "bujangga", "bujet", "bujeter", "bujuk", "bujur", "bujut", "buk", "buka", "bukan", "bukankah", "bukantah", "bukat", "bukau", "buket", "bukit", "buklet", "bukti", "buku", "bukung", "bukur", "bukut", "bulai", "bulak", "bulan", "bulang", "bulang-baling", "bulangan", "bular", "bulat", "bulbul", "buldan", "buldog", "buldoser", "bule", "buleng", "buletin", "bulevar", "bulgur", "buli-buli", "bulian", "bulimia", "bulir", "bulsak", "bulu", "bulug", "buluh", "buluk", "bulur", "bulus", "bum", "bumantara", "bumban", "bumbu", "bumbun", "bumbung", "bumel", "bumerang", "bumi", "bumiah", "bumiputra", "bumper", "bumpet", "bumping", "bun", "buna", "bunbunan", "buncah", "buncak", "buncang", "buncis", "buncit", "bunda", "bundak", "bundar", "bundas", "bundel", "bunduk", "bundung", "bung", "bunga", "bungalo", "bungar", "bungkal", "bungkam", "bungkang", "bungkas", "bungker", "bungkil", "bungking", "bungkuk", "bungkul", "bungkus", "bunglai", "bunglon", "bungsil", "bungsu", "bungur", "buni", "bunian", "bunjai", "buntak", "buntal", "buntang", "buntar", "buntat", "buntek", "buntel", "buntet", "buntil", "bunting", "buntu", "buntung", "buntut", "bunuh", "bunut", "bunyi", "bupala", "bupati", "bupet", "bur", "bura", "burai", "burak", "burakah", "buraksa", "buram", "buras", "burat", "burayak", "burdah", "bureng", "buret", "burgundi", "burhan", "burik", "burit", "burjusumbulat", "burkak", "burnout", "buron", "bursa", "buru", "buruh", "buruj", "buruk", "burun", "burung", "burut", "bus", "busa", "busai", "busana", "busar", "buset", "bushido", "busi", "busik", "bustan", "buster", "busuk", "busung", "busur", "busut", "buta", "butadiena", "butala", "butana", "butang", "butarepan", "butbut", "butek", "butik", "butir", "butirat", "butongpai", "butuh", "butul", "butun", "butut", "buwuh", "buya", "buyar", "buyung", "buyur", "buyut", "byarpet", "caba", "cabai", "cabak", "cabang", "cabar", "cabau", "cabe", "cabik", "cabir", "cabo", "cabuh", "cabuk", "cabul", "cabur", "cabut", "caca", "cacah", "cacak", "cacap", "cacar", "cacat", "cacau", "caci", "cacibar", "cacil", "cacing", "cadai", "cadang", "cadar", "cadas", "cadel", "cadik", "cadok", "caduk", "cadung", "caem", "cagak", "cagar", "cagil", "cagu", "caguh", "cagun", "cagut", "cah", "cahang", "cahar", "cahari", "cahaya", "cahi", "cailah", "caima", "caing", "cair", "cais", "caisim", "cak", "cakah", "cakak", "cakalang", "cakalele", "cakap", "cakar", "cakawari", "cakela", "cakep", "caki", "cakiak", "cakil", "cakmar", "cako", "cakra", "cakrabirawa", "cakrabuana", "cakram", "cakrawala", "cakruk", "cakup", "cakur", "cakus", "cal", "calabikang", "caladi", "calak", "calang", "calar", "calecer", "calempong", "caling", "calir", "calit", "calo", "calon", "calui", "caluk", "calung", "calus", "cam", "camar", "camat", "camau", "cambahan", "cambang", "cambuk", "cambul", "cambung", "camca", "camil", "campa", "campah", "campak", "campang", "campin", "camping", "camplungan", "campuh", "campung", "campur", "camuk", "camur", "canai", "canak", "canang", "cancan", "cancang", "cancut", "canda", "candai", "candak", "candala", "candang", "candat", "candi", "candik", "candit", "candra", "candradimuka", "candramawa", "candrasa", "candrasengkala", "candu", "candung", "cang", "cangah", "cangak", "cangam", "cangap", "cangar", "cangcang", "cangga", "canggaan", "canggah", "canggai", "canggal", "cangget", "canggih", "canggu", "canggung", "cangkang", "cangkat", "cangkel", "cangkih", "cangking", "cangkir", "cangklong", "cangkok", "cangkol", "cangkrang", "cangkrim", "cangkriman", "cangkring", "cangkuk", "cangkul", "cangkulan", "cangkum", "cangkung", "cangkup", "canguk", "cangut", "cantas", "cante", "cantel", "canteng", "cantik", "canting", "cantol", "cantrik", "cantum", "caos", "cap", "capa", "capah", "capai", "capak", "capal", "capang", "capar", "capcai", "cape", "capek", "capelin", "capgome", "capik", "capil", "caping", "capit", "capjiki", "caplak", "caplok", "capuk", "capung", "cara", "carah", "carak", "caraka", "caram", "caran", "carang", "caren", "cari", "carik", "caring", "carter", "caruk", "carut", "cas", "casciscus", "cat", "catat", "catek", "catu", "catuk", "catur", "caturjalma", "caturlarik", "caturtunggal", "caturwangsa", "caturwarga", "caturwarna", "caturwulan", "catut", "caul", "caung", "cawai", "cawak", "cawan", "cawangan", "cawat", "cawe-cawe", "cawi", "cawis", "cebak", "ceban", "cebik", "cebikas", "cebil", "cebir", "cebis", "cebok", "cebol", "cebong", "cebur", "cecah", "cecak", "cecap", "cecar", "cecawi", "cece", "ceceh", "ceceng", "cecengklok", "cecer", "cecere", "cecok", "cecongor", "cecunguk", "cedal", "cedayam", "cedera", "ceding", "cedok", "cedong", "ceduk", "cegah", "cegak", "cegar", "cegat", "ceguk", "cek", "cekah", "cekak", "cekakak", "cekakan", "cekal", "cekam", "cekang", "cekarau", "cekat", "cekau", "cekcekcek", "cekcok", "cekdam", "cekdel", "cekek", "cekel", "ceker", "cekeram", "ceki", "cekibar", "cekih", "cekik", "cekikik", "ceking", "cekit", "ceklek", "cekluk", "cekok", "cekrem", "cekres", "ceku", "cekuh", "cekuk", "cekung", "cekup", "cekur", "cekut", "cela", "celaga", "celah", "celak", "celaka", "celampak", "celana", "celang", "celangak", "celangak-celinguk", "celangap", "celapak", "celar", "celari", "celas", "celas-celus", "celat", "celatuk", "cele", "celebuk", "celedang-celedok", "celek", "celekeh", "celemek", "celemotan", "celempong", "celempung", "celeng", "celengan", "celengkak-celengkok", "celengkang", "celentang", "celep", "celepik", "celepuk", "celetuk", "celi", "celih", "celik", "celinguk", "celingus", "celis", "celok", "celomes", "celomok", "celonok", "celopar", "celorot", "celoteh", "celsius", "celuk", "celum", "celung", "celup", "celupak", "celur", "celuring", "celurit", "celurut", "celus", "celutak", "celutuk", "cema", "cemani", "cemar", "cemara", "cemas", "cemat", "cembeng", "cemberut", "cembul", "cembung", "cemburu", "cemeeh", "cemeh", "cemek", "cemekian", "cemengkian", "cemer", "cemerlang", "cemeti", "cemetuk", "cemomot", "cemong", "cemooh", "cempa", "cempaka", "cempal", "cempala", "cempana", "cempe", "cempedak", "cempek", "cempelik", "cempelung", "cempeng", "cempera", "cemperai", "cemperling", "cempiang", "cempil", "cempin", "cemping", "cemplang", "cemplung", "cempor", "cempreng", "cempres", "cempuling", "cempung", "cempurit", "cemuas", "cemuk", "cena", "cenak", "cenal-cenil", "cenangau", "cenangga", "cenangkas", "cenayang", "cencala", "cencaluk", "cencang", "cencaru", "cencawan", "cencawi", "cendala", "cendana", "cendang", "cendawan", "cendekia", "cendera", "cenderai", "cenderasa", "cenderawasih", "cenderung", "cendok", "cendol", "cenduai", "cenela", "ceng", "cengal", "cengam", "cengang", "cengap", "cengar-cengir", "cengbeng", "cengeh", "cengek", "cengeng", "cengengesan", "cenggek", "cengger", "cenggeret", "cengi", "cengir-cengir", "cengis", "cengkal", "cengkam", "cengkar", "cengkaruk", "cengkau", "cengkedi", "cengkeh", "cengkek", "cengkelong", "cengkeram", "cengkerama", "cengkerawak", "cengkerik", "cengkering", "cengkerung", "cengki", "cengkiak", "cengkih", "cengking", "cengkir", "cengkiwing", "cengkok", "cengkol", "cengkong", "cengkung", "cengkurai", "cengli", "cengung", "cengut", "centang", "centangan", "centeng", "centet", "centil", "centong", "centung", "cenung", "cepak", "cepal", "cepat", "cepek", "cepeng", "cepengan", "ceper", "cepiau", "ceplas-ceplos", "ceples", "ceplok", "ceplos", "cepo", "cepol", "cepu", "cepuk", "cerabah", "cerabih", "cerabut", "ceracak", "ceracam", "ceracap", "ceracau", "cerah", "cerai", "cerai-berai", "cerak", "ceraka", "cerakin", "ceramah", "cerana", "cerancang", "cerang", "ceranggah", "cerangka", "cerap", "cerat", "ceratai", "ceratuk", "cerau", "cerawat", "cerbak", "cerca", "cercah", "cercak", "cercap", "cerdas", "cerdik", "cere", "cerecek", "cerek", "ceremai", "cerempung", "cerepu", "ceret", "cerewet", "cergas", "ceri", "ceria", "cericap", "cericau", "cericip", "ceriga", "cerih", "cerita", "ceriwis", "cerkam", "cerkau", "cerlang", "cerlih", "cerling", "cermai", "cermat", "cermin", "cerna", "ceroboh", "cerobong", "cerocok", "cerocos", "cerompong", "ceronggah", "ceropong", "ceroteh", "cerowok", "cerpelai", "cerpen", "cerpenis", "cerpu", "cerucuh", "cerucup", "ceruh", "ceruk", "cerun", "cerup", "cerut", "cerutu", "cespleng", "cetai", "cetak", "cetar", "cetek", "ceteng", "ceter", "cetera", "ceteri", "ceteria", "ceti", "cetok", "cetus", "ceuki", "cewang", "cewek", "ciak", "cialat", "ciap", "ciar", "cibir", "cibit", "ciblon", "cibuk", "cicik", "cicil", "cicinda", "cicip", "cicit", "cidomo", "ciduk", "cigak", "cih", "cihui", "cik", "cika", "cikadas", "cikal", "cikar", "cikok", "cikrak", "ciku", "cikun", "cikut", "cilap", "cilawagi", "cili", "cilik", "ciling", "cilok", "ciluk", "cilukba", "cimplong", "cina", "cincang", "cincau", "cincin", "cincong", "cincu", "cinda", "cindai", "cindaku", "cinde", "cindil", "cindur", "cing", "cingak", "cingam", "cingangah", "cingge", "cingkat", "cingkeh", "cingkrang", "cingur", "cinta", "cintamani", "cinteng", "cintrong", "cip", "cipai", "cipan", "ciplak", "cipok", "ciprat", "cipta", "cir", "circir", "ciri", "cirit", "ciriwangi", "cis", "cit", "cita", "citra", "citraleka", "ciu", "cium", "ciut", "coak", "coang", "coba", "coban", "cobar-cabir", "cobek", "coblos", "cocok", "cocol", "cocor", "codak", "codet", "codot", "cogah", "cogan", "cogok", "cok", "cokar", "cokek", "cokelat", "coket", "coklat", "cokmar", "coko", "cokok", "cokol", "cokor", "cokorda", "cola-cala", "colak", "colak-caling", "colang-caling", "colek", "coleng", "colet", "coli", "colok", "colong", "colot", "comat-comot", "comberan", "comblang", "combong", "comek", "comel", "comor", "comot", "compang-camping", "compeng", "compes", "compoh", "compreng", "comro", "concong", "condong", "conet", "congak", "congeh", "congek", "conggah-canggih", "congget", "conggok", "congkah-cangkih", "congkah-mangkih", "congkak", "congkel", "congki", "congklak", "congklang", "congkok", "congkong", "congo", "congok", "congol", "congor", "congsam", "contek", "conteng", "contoh", "contong", "cop", "copak-capik", "copet", "coplok", "copot", "cor", "corak", "corat-coret", "corek", "coreng", "coret", "coro", "corob", "corong", "corot", "cotet", "cotok", "cowok", "cowokan", "crat-crit", "criping", "cua", "cuaca", "cuai", "cuak", "cual", "cuang", "cuar", "cuat", "cubit", "cublik", "cubung", "cuca", "cucakrawa", "cuci", "cucu", "cucuh", "cucuk", "cucun", "cucunda", "cucung", "cucup", "cucur", "cucurut", "cucut", "cudang", "cuek", "cugat", "cuh", "cuik", "cuil", "cuit", "cuk", "cuka", "cukai", "cuki", "cukil", "cukimai", "cukin", "cukit", "cukong", "cuku", "cukup", "cukur", "cula", "culak", "culan", "culas", "culi", "culiah", "culik", "culika", "culim", "culun", "cuma", "cuman", "cumbu", "cumengkling", "cumepak", "cumi-cumi", "cumil", "cuming", "cun", "cunam", "cundang", "cundrik", "cunduk", "cung", "cungap", "cungkil", "cungkup", "cungo", "cungul", "cungur", "cunia", "cup", "cupai", "cupak", "cupang", "cupar", "cupet", "cuping", "cuplik", "cupu", "cupul", "cur", "cura", "curah", "curai", "curam", "curang", "curat", "cureng", "curi", "curiah", "curiga", "curik", "curna", "curu", "cus", "cut", "cutak", "cutbrai", "cutel", "cuti", "cuwil", "daayah", "dab", "daba", "dabak", "dabal", "dabat", "dabih", "dabik", "dabing", "dabir", "dabit", "dablek", "dabol", "dabung", "dabus", "dacin", "dad", "dada", "dadah", "dadaisme", "dadak", "dadal", "dadali", "dadap", "dadar", "dadek", "dadi", "dadih", "dading", "dadu", "daduh", "daduk", "dadung", "daeng", "daerah", "daerahisme", "dafnah", "daftar", "daga", "dagang", "dage", "dagel", "dagi", "daging", "dagu", "dah", "dahaga", "dahagi", "dahak", "daham", "dahan", "dahanam", "dahar", "dahi", "dahiat", "dahina", "dahlia", "dahriah", "dahsyat", "dahulu", "dai", "daidan", "daidanco", "daif", "daim", "daiman", "daing", "daitia", "dajal", "daka", "dakah", "dakaik", "dakar", "dakhil", "daki", "dakik", "dakocan", "dakon", "dakron", "daksa", "daksina", "daktil", "daktilitis", "daktilologi", "daktiloskopi", "daku", "dakwa", "dakwah", "dal", "dalal", "dalalah", "dalalat", "dalam", "dalang", "daldaru", "dalem", "dalfin", "dali-dali", "dalih", "dalil", "daltonisme", "dalu", "daluang", "dalung", "dam", "damah", "damai", "damak", "damal", "daman", "damar", "damaru", "damas", "damat", "damba", "dambin", "dambir", "dame", "damen", "dami", "damik", "damotin", "dampak", "dampal", "dampan", "dampar", "dampeng", "dampil", "damping", "dampit", "damprat", "dampung", "dan", "dana", "danau", "danawa", "danda", "dandan", "dandang", "dandanggula", "dandapati", "dandi", "dang", "dangai", "dangar", "dangau", "dangdut", "dange", "danghyang", "dangir", "dangka", "dangkal", "dangkap", "dangkar", "dangkung", "danguk", "dansa", "dansanak", "danta", "danuh", "danur", "danyang", "dap", "dapa", "dapar", "dapat", "dapra", "dapur", "dar", "dara", "darab", "darah", "daras", "darat", "darau", "dargah", "dari", "daripada", "darji", "darma", "darmabakti", "darmakelana", "darmasiswa", "darmatirta", "darmawisata", "daro", "darpana", "daru-daru", "darulaitam", "darulakhirat", "darulbaka", "darulfana", "daruljalal", "darun", "darunu", "darurat", "darusalam", "darwis", "das", "dasa", "dasalomba", "dasar", "dasarian", "dasasila", "dasatitah", "dasawarsa", "dasbor", "dasi", "dasin", "daster", "dasun", "data", "datang", "datar", "datatamak", "dati", "datif", "datu", "datuk", "datum", "datung", "dauk", "daulat", "daun", "daur", "dawai", "dawan", "dawat", "dawet", "daya", "dayah", "dayang", "dayu", "dayuh", "dayuk", "dayung", "dayus", "dealat", "deaneksasi", "debah", "debak", "debam", "debap", "debar", "debarkasi", "debas", "debat", "debet", "debik", "debil", "debing", "debirokratisasi", "debit", "debitase", "debitor", "debitur", "debris", "debu", "debug", "debuk", "debum", "debun", "debung", "debup", "debur", "debus", "debut", "decak", "decap", "deceh", "decing", "decit", "decup", "decur", "decut", "dedah", "dedai", "dedak", "dedal", "dedalu", "dedap", "dedar", "dedara", "dedare", "dedas", "dedau", "dedek", "dedel", "dedemit", "dedengkot", "deder", "dederuk", "dedes", "dedikasi", "dedikatif", "deduksi", "deduktif", "dedulang", "deeskalasi", "defaitisme", "defekasi", "defender", "defensi", "defensif", "deferens", "defile", "definisi", "definit", "definitif", "defisien", "defisit", "deflagrasi", "deflagrator", "deflasi", "defleksi", "deflorasi", "defoliasi", "defolisasi", "defonologisasi", "deforestasi", "deformasi", "deformatif", "deg", "degam", "degan", "degap", "degar", "degen", "degenerasi", "degeneratif", "degil", "deging", "degradasi", "degresi", "deguk", "degum", "degung", "degup", "deh", "deham", "dehem", "dehidrasi", "dehidrat", "dehidrogenasi", "dehumanisasi", "deideologisasi", "deifikasi", "deiksis", "deiktis", "deislamisasi", "deisme", "dek", "dekade", "dekaden", "dekadensi", "dekagram", "dekah", "dekak", "dekaliter", "dekam", "dekameter", "dekan", "dekanal", "dekantasi", "dekap", "dekapoda", "dekar", "dekare", "dekat", "dekik", "dekil", "deking", "deklamasi", "deklamator", "deklarasi", "deklaratif", "deklasifikasi", "deklerer", "deklinasi", "deklinometer", "dekode", "dekoder", "dekolonisasi", "dekomposer", "dekomposisi", "dekompresi", "dekongestan", "dekonsentrasi", "dekontekstualisasi", "dekor", "dekorasi", "dekoratif", "dekorator", "dekosistem", "dekremeter", "dekreolisasi", "dekret", "dekriminalisasi", "deksa", "dekstrin", "dekstrosa", "deksura", "deku", "dekunci", "dekung", "dekus", "dekut", "delabialisasi", "delah", "delamak", "delan", "delap", "delapan", "delas", "delat", "delegasi", "delegat", "delegitimasi", "delepak", "deler", "delik", "delikan", "delikat", "delikates", "delima", "delineasi", "delinkuen", "delinkuensi", "delirium", "delman", "delong", "delongop", "delta", "deltoid", "delu", "delusi", "delusif", "demabrasi", "demagog", "demagogi", "demagogis", "demah", "demam", "demang", "demap", "demarkasi", "dembai", "dembam", "dembun", "demek", "demen", "demes", "demi", "demik", "demikian", "demiliterisasi", "demineralisasi", "demisioner", "demo", "demobilisan", "demobilisasi", "demograf", "demografi", "demografis", "demokrasi", "demokrat", "demokratis", "demokratisasi", "demon", "demoniak", "demonopolisasi", "demonstran", "demonstrasi", "demonstratif", "demonstrativa", "demoralisasi", "demosi", "dempak", "dempam", "dempang", "demper", "dempet", "dempir", "demplon", "dempok", "dempuk", "dempul", "dempung", "demung", "den", "dena", "denah", "denai", "denak", "denasalisasi", "denasionalisasi", "denawa", "dencang", "dencing", "denda", "dendam", "dendang", "dendeng", "dendi", "dendrokronologi", "dendrologi", "denervasi", "dengak", "dengan", "dengap", "dengar", "dengih", "denging", "dengkang", "dengkel", "dengki", "dengkik", "dengking", "dengkol", "dengkul", "dengkung", "dengkur", "dengkus", "dengu", "dengue", "denguk", "dengung", "dengus", "dengut", "denim", "denok", "denominal", "denominasi", "denotasi", "denotatif", "densimeter", "densitas", "densitometer", "densitometri", "densometer", "dental", "dentam", "dentang", "dentat", "dentin", "denting", "dentum", "dentung", "dentur", "denudasi", "denuklirisasi", "denyar", "denyit", "denyut", "deodoran", "deoknumisasi", "deontologi", "depa", "depak", "depalatalisasi", "depan", "depang", "depap", "deparpolisasi", "departemen", "departemental", "departementalisasi", "dependen", "dependensi", "depersonalisasi", "depersonifikasi", "depigmentasi", "depilasi", "deplesi", "depo", "depolarisasi", "depolitisasi", "deponir", "depopulasi", "deportasi", "deposan", "deposit", "deposito", "depot", "depresi", "depresiasi", "depresor", "deprok", "deprotonasi", "depun", "depus", "deputasi", "deputi", "dera", "deragem", "derai", "derajah", "derajang", "derajat", "derak", "deram", "deran", "derana", "derang", "derap", "deras", "derau", "derawa", "derebar", "deregulasi", "derek", "derel", "derep", "deres", "deresi", "deret", "dergama", "derik", "dering", "deringo", "deris", "derit", "derita", "deritaan", "derivasi", "derivat", "derivatif", "derji", "derma", "dermaga", "derman", "dermatitis", "dermatofitosis", "dermatolog", "dermatologi", "dermatom", "dermis", "dermoid", "dersana", "dersik", "deru", "deruji", "deruk", "derum", "derun", "derung", "derup", "derus", "derut", "desa", "desah", "desain", "desainer", "desak", "desakralisasi", "desalinasi", "desaneksasi", "desar", "desas-desus", "desau", "desegregasi", "deselerasi", "desember", "desensitisasi", "desentralisasi", "deserebrasi", "desersi", "desertir", "desibel", "desidua", "desigram", "desih", "desik", "desikan", "desikator", "desil", "desiliter", "desiliun", "desimal", "desimeter", "desinens", "desinfeksi", "desinfektan", "desing", "desintegrasi", "desir", "desis", "desit", "deskripsi", "deskriptif", "deskuamasi", "desmonem", "desmoplasia", "desmosom", "desorientasi", "desorpsi", "despot", "despotik", "despotisme", "destabilisasi", "destar", "destinasi", "destroyer", "destruksi", "destruktif", "destruktor", "desuk", "desulfurisasi", "desup", "desur", "desus", "desut", "detail", "detak", "detap", "detar", "detas", "detasemen", "detasering", "detasir", "deteksi", "detektif", "detektofon", "detektor", "detenidos", "detensi", "detente", "detergen", "deteriorasi", "determinan", "determinasi", "determinatif", "determinator", "determinis", "determinisme", "detik", "deting", "detoksifikasi", "detonasi", "detonator", "detritus", "detrusor", "detup", "detus", "deuterium", "deuterokanonika", "deuteron", "deutranomalopia", "deutranopia", "devaluasi", "developer", "deverbal", "deviasi", "devisa", "devosi", "dewa", "dewadaru", "dewala", "dewan", "dewana", "dewanagari", "dewangga", "dewasa", "dewata", "dewe", "dewi", "dia", "diabetes", "diad", "diadem", "diafon", "diaforetik", "diafragma", "diagenesis", "diagnosis", "diagnostik", "diagometer", "diagonal", "diagram", "diaken", "diakon", "diakones", "diakonia", "diakritik", "diakronis", "dialek", "dialektal", "dialektik", "dialektika", "dialektis", "dialektologi", "dialinguistik", "dialisis", "dialog", "dialogis", "diam", "diamagnetisme", "diameter", "diametral", "diamorf", "dian", "diang", "diaper", "diapositif", "diar", "diare", "dias", "diasistem", "diaspora", "diastase", "diastole", "diat", "diaterman", "diatermi", "diatermik", "diatesis", "diatipe", "diatom", "diatomit", "diatonik", "diatopik", "diayah", "dibasa", "didaktik", "didaktikus", "didaktis", "didih", "didik", "didis", "didong", "dielektrik", "diensefalon", "dies", "diesel", "diet", "dietetika", "difabel", "diferensial", "diferensiasi", "difluens", "difluensi", "difraksi", "difteri", "diftong", "difusi", "digdaya", "digenesis", "digestif", "digit", "digital", "digitalin", "digitalis", "digitalisasi", "diglosia", "digraf", "digresi", "digul", "dihedral", "dihidroksil", "dik", "dikara", "dikau", "dikit", "diklorida", "dikotil", "dikotomi", "dikroisme", "dikromat", "dikromatik", "diksa", "diksi", "diktat", "diktator", "diktatorial", "diktatoris", "dikte", "diktum", "dil", "dila", "dilak", "dilam", "dilasi", "dilatasi", "dilatometer", "dilema", "dilematik", "diler", "diletan", "diluvium", "dim", "dimensi", "dimer", "diminutif", "dimorfik", "dimorfisme", "din", "dina", "dinamik", "dinamika", "dinamis", "dinamisator", "dinamisme", "dinamit", "dinamo", "dinamometer", "dinar", "dinas", "dinasti", "dinding", "dingin", "dingkis", "dingkit", "dingklang", "dingklik", "dingo", "dini", "diniah", "diniyah", "dinosaurus", "dinul-islam", "diode", "dioesis", "dioksida", "dioksin", "diopsida", "dioptase", "dioptri", "diorama", "diorit", "dioses", "dipan", "diplo", "diploid", "diploma", "diplomasi", "diplomat", "diplomatik", "diplomatis", "dipsomania", "diptera", "diptotos", "dirah", "diraja", "direk", "direksi", "direktorat", "direktorium", "direktris", "direktur", "dirgahayu", "dirgantara", "dirham", "diri", "dirigen", "diris", "dirus", "disagio", "disain", "disainer", "disakarida", "disastria", "disbursemen", "disdrometer", "disekuilibrium", "disel", "disensus", "disentri", "disertasi", "disfonia", "disfungsi", "disharmoni", "disiden", "disilabik", "disimilasi", "disinfektan", "disinformasi", "disinsentif", "disintegrasi", "disiplin", "disjoki", "disjungsi", "disjungtif", "diska", "disket", "diskiasis", "disklimaks", "disko", "diskoid", "diskon", "diskontinu", "diskontinuitas", "diskonto", "diskordans", "diskorobik", "diskotek", "diskredit", "diskrepansi", "diskresi", "diskriminasi", "diskriminatif", "diskriminator", "diskualifikasi", "diskulpasi", "diskursif", "diskus", "diskusi", "dislalia", "disleksia", "dislokasi", "dismembrasio", "dismenorea", "dismutasi", "disolventia", "disonansi", "disoperasi", "disorder", "disorganisasi", "disorientasi", "disosiasi", "dispareunia", "disparitas", "dispensasi", "dispenser", "dispepsia", "dispersal", "dispersi", "disposisi", "disposotio", "disprosium", "disrupsi", "distabilitas", "distal", "distansi", "distikiasis", "distikon", "distilasi", "distilator", "distingsi", "distingtif", "distoma", "distorsi", "distosia", "distribusi", "distributor", "distrik", "disuasi", "disuria", "dito", "ditransitif", "diuresis", "diuretik", "diurnal", "divergen", "divergensi", "diversifikasi", "diversitas", "divestasi", "dividen", "divisi", "diwala", "doa", "doang", "dobel", "dobi", "doblangan", "doble", "dobol", "dobolo", "dobrak", "dodekagon", "dodekahedron", "dodet", "dodok", "dodol", "dodong", "dodor", "dodos", "dodot", "doeloe", "dog", "dogel", "dogeng", "doger", "dogma", "dogmatik", "dogmatis", "dogmatisme", "dogol", "dohok", "dohyo", "doi", "dok", "dokar", "doko", "dokoh", "dokok-dokok", "doksologi", "dokter", "doktor", "doktoranda", "doktorandus", "doktrin", "doku", "dokumen", "dokumentasi", "dokumenter", "dol", "dolak-dalik", "dolan", "dolar", "doldrum", "dolfin", "dolikosepalik", "dolmen", "dolok", "dolomit", "dom", "domain", "domba", "domblong", "domein", "domestik", "domestikasi", "dominan", "dominansi", "dominasi", "domine", "dominggo", "dominion", "domino", "domisili", "domot", "dompak", "dompet", "domplang", "dompleng", "dompol", "don", "donasi", "donat", "donatur", "doncang", "dondang", "donder", "dondon", "dong", "dongak", "dongan", "dongbret", "dongeng", "dongkak", "dongkel", "dongkok", "dongkol", "dongkrak", "dongkrok", "dongok", "dongpan", "dongsok", "doni", "donor", "donto", "dop", "doping", "dopis", "dor", "dorang", "dorbi", "dorbia", "dorman", "dormansi", "dorna", "dorong", "dorsal", "dorslah", "dorsopalatal", "dorsovelar", "dorsum", "dortrap", "dos", "dosa", "dosen", "dosin", "dosir", "dosis", "dot", "dowel", "dower", "doyak", "doyan", "doyang", "doyo", "doyong", "draf", "dragon", "drai", "drainase", "drakula", "dram", "drama", "dramatik", "dramatikus", "dramatis", "dramatisasi", "dramaturg", "dramaturgi", "draperi", "drastis", "drat", "drel", "dresoar", "dresur", "dribel", "drif", "dril", "drip", "drop", "droping", "dropsi", "drum", "drumben", "drumer", "druwe", "dua", "duafa", "duai", "duaja", "dualis", "dualisme", "dualistis", "duane", "duang", "duangsom", "dub", "dubalang", "dubelir", "dubes", "dubila", "dubing", "dubius", "duble", "dublir", "dubuk", "dubur", "duda", "duduk", "dudur", "dudus", "duel", "duet", "duga", "dugal", "dugang", "dugas", "dugdeng", "dugder", "duh", "duha", "duhai", "duhe", "duhu", "duilah", "duit", "duk", "duka", "dukacarita", "dukacita", "dukan", "dukana", "dukat", "dukaten", "duktulus", "duktus", "duku", "dukuh", "dukun", "dukung", "dula", "dulag", "dulang", "dulang-dulang", "duli", "dulur", "dum", "dumdum", "dumi", "dumping", "dumung", "dunah", "dunak", "dung", "dungas", "dungkelan", "dungkul", "dungu", "dungun", "dunia", "duniawi", "duodenum", "duodesimal", "duodrama", "duopoli", "dup", "dupa", "dupak", "dupleks", "duplik", "duplikasi", "duplikat", "duplikator", "duplisitas", "duplo", "dur", "dura", "duralumin", "duramater", "durasi", "durat", "duratif", "duren", "dureng", "durhaka", "duri", "durian", "durias", "duriat", "durja", "durjana", "durjasa", "durkarsa", "durma", "durna", "durno", "durnois", "durnoisme", "durometer", "dursila", "duru", "duruwiksa", "dus", "dusin", "dusta", "dustur", "dusun", "duta", "duwegan", "duwet", "duyun", "duyung", "dwiarti", "dwibahasa", "dwidarma", "dwidasawarsa", "dwifungsi", "dwiganda", "dwiguna", "dwilingga", "dwimatra", "dwiminggu", "dwimuka", "dwiperan", "dwipurwa", "dwisegi", "dwitarung", "dwitunggal", "dwiwarna", "dzal", "ebam", "eban", "ebek", "ebi", "eboni", "ebonit", "ebro", "eburina", "ecek", "eceng", "ecer", "eco", "edafik", "edafit", "edafologi", "edafon", "edan", "edar", "edema", "edentat", "edisi", "edit", "editor", "editorial", "edukasi", "edukatif", "efedrina", "efek", "efektif", "efektivitas", "efektor", "efelis", "efendi", "efisien", "efisiensi", "efloresensi", "eforus", "efusi", "egah", "egalisasi", "egalitarian", "egalitarianisme", "egalitarisme", "egaliter", "egat", "ego", "egois", "egoisme", "egoistis", "egol", "egomania", "egos", "egosentris", "egosentrisitas", "egosentrisme", "egrang", "egresif", "ehe", "eidetik", "eigendom", "eikosan", "einsteinium", "eja", "ejakulasi", "ejan", "ejawantah", "ejek", "ejektif", "ejektor", "ekabahasa", "ekad", "ekajati", "ekakarsa", "ekamatra", "ekang", "ekaristi", "ekatantri", "ekbalium", "ekdemik", "ekderon", "ekdisis", "ekeh", "ekimosis", "ekiofit", "eklektik", "eklektikus", "eklektis", "eklektisisme", "eklektisme", "eklips", "ekliptika", "ekliptis", "eklosi", "ekofisiologi", "ekofraksia", "ekofrasia", "ekografi", "ekogrup", "ekoklimat", "ekoklimatologi", "ekokronologi", "ekolabel", "ekolalia", "ekologi", "ekologis", "ekon", "ekonom", "ekonometri", "ekonomi", "ekonomis", "ekopolitik", "ekopraksia", "ekor", "ekornia", "ekosfer", "ekosistem", "ekosistematika", "ekospesies", "ekostratigrafi", "ekotipe", "ekotipifikasi", "ekoturisme", "ekozona", "ekrin", "ekrinologi", "eks", "eksak", "eksakta", "eksaltasi", "eksamen", "eksaminasi", "eksaminator", "eksantem", "eksantropus", "eksarasi", "eksegesis", "ekseget", "eksekusi", "eksekutif", "eksekutor", "eksem", "eksemplar", "eksenterasi", "eksentrik", "eksepsi", "ekseptor", "ekses", "eksesif", "eksfoliasi", "ekshalasi", "ekshibisi", "ekshibisionis", "ekshibisionisme", "ekshibitum", "eksikator", "eksin", "eksipien", "eksisi", "eksistensi", "eksistensialis", "eksistensialisme", "eksit", "eksitasi", "eksitus", "ekskavasi", "ekskavator", "eksklave", "eksklusif", "eksklusivisme", "ekskomunikasi", "ekskresi", "ekskreta", "ekskursi", "ekskursif", "eksobiologi", "eksobiotik", "eksodermis", "eksodos", "eksodus", "eksoenzim", "eksoergik", "eksofasia", "eksofora", "eksoftalmia", "eksoftalmos", "eksoftalmus", "eksogam", "eksogami", "eksogen", "eksogin", "eksoisogami", "eksordium", "eksorsis", "eksosfer", "eksospora", "eksostosis", "eksoterik", "eksotermik", "eksotik", "eksotis", "eksotisme", "ekspansi", "ekspansif", "ekspansionis", "ekspansionisme", "ekspansionistis", "ekspatriasi", "ekspatriat", "ekspedisi", "ekspeditor", "ekspektoran", "eksper", "eksperimen", "eksperimental", "ekspirasi", "eksplan", "eksplikasi", "eksplisit", "eksploit", "eksploitasi", "eksploitir", "eksplorasi", "eksploratif", "eksplorator", "eksplosi", "eksplosif", "ekspo", "eksponen", "eksponensial", "ekspor", "eksportir", "ekspos", "ekspose", "eksposisi", "ekspres", "ekspresi", "ekspresif", "ekspresionisme", "ekspresionistik", "ekspresivitas", "ekstase", "ekstasi", "ekstensi", "ekstensif", "ekstensifikasi", "ekstensor", "eksterior", "eksteriorisasi", "eksteritorialitas", "ekstern", "eksternal", "ekstin", "ekstra", "ekstradisi", "ekstrak", "ekstrakardial", "ekstraksi", "ekstraktif", "ekstrakurikuler", "ekstralinguistis", "ekstramarital", "ekstranei", "ekstraparlementer", "ekstrapolasi", "ekstraseluler", "ekstraterestrial", "ekstrateritorialitas", "ekstrauterin", "ekstraversi", "ekstrem", "ekstremis", "ekstremitas", "ekstrinsik", "ekstrospeksi", "ekstrover", "ekstrusi", "eksudasi", "eksudat", "ektoblas", "ektoderm", "ektohormon", "ektoparasit", "ektoplasma", "ektoterm", "ektotermik", "ekualitas", "ekuatif", "ekuator", "ekuilibrium", "ekuinoks", "ekuitas", "ekuiti", "ekuivalen", "ekuivalensi", "ekuivokasi", "ekumene", "ekumenis", "ekumenisme", "ela", "elaborasi", "elak", "elan", "elang", "elastik", "elastin", "elastis", "elastisitas", "elastomer", "elatif", "elefantiasis", "elegan", "elegansi", "elegi", "elektif", "elektorat", "elektret", "elektrifikasi", "elektrik", "elektris", "elektro", "elektrode", "elektrodinamika", "elektroensefalogram", "elektroforesis", "elektrokardiogram", "elektrokimia", "elektrokoagulasi", "elektrokusi", "elektrolisi", "elektrolisis", "elektrolit", "elektromagnet", "elektromagnetik", "elektromagnetisme", "elektrometalurgi", "elektromiografi", "elektromotif", "elektron", "elektronegatif", "elektronik", "elektronika", "elektronis", "elektropatologi", "elektropositif", "elektroskop", "elektrostatika", "elektroteknik", "elektroterapeutika", "elektroterapi", "elektrotipe", "elektrum", "elemen", "elementer", "elemi", "eleng", "elevasi", "elevator", "eliksir", "eliminasi", "eliminir", "eling", "elips", "elipsis", "elipsoid", "elipsometer", "elipsometri", "eliptis", "elite", "elitis", "elitron", "elo", "elok", "elokuensi", "elon", "elongasi", "elpiji", "eltor", "elu", "eluat", "eluen", "elung", "elus", "elusi", "elusian", "elusif", "elutriasi", "eluvial", "eluviasi", "eluvium", "email", "emanasi", "emang", "emansipasi", "emas", "emaskulasi", "emat", "embacang", "embah", "embak", "embal", "embalase", "embalau", "emban", "embar", "embara", "embarau", "embargo", "embarkasi", "embaru", "embat", "embek", "embel", "ember", "embih", "embik", "emblem", "embok", "embol", "emboli", "embolisme", "embolus", "embosur", "embrat", "embrio", "embriogenesis", "embriologi", "embrionik", "embuai", "embuh", "embun", "embung", "embus", "embut", "emendasi", "emeraldin", "emeritus", "emetik", "emetina", "emfisema", "emigran", "emigrasi", "eminen", "eminensi", "emir", "emirat", "emis", "emisi", "emisivitas", "emitans", "emiten", "emoh", "emol", "emolumen", "emong", "emosi", "emosional", "emosionalisme", "emotif", "empal", "empang", "empap", "empar", "empas", "empat", "empati", "empedal", "empedu", "empek", "empela", "empelas", "empenak", "empeng", "emper", "empet", "empiema", "empik", "emping", "empiri", "empiris", "empirisme", "emplasemen", "emplek", "employe", "empo", "empoh", "empok", "emporium", "empos", "empot", "emprak", "empu", "empuan", "empuk", "empul", "empulur", "empunya", "emrat", "emulasi", "emulator", "emulsi", "emulsifikasi", "emut", "enak", "enam", "enamel", "enap", "enartrosis", "enas", "enau", "encal", "encang", "enceh", "encek", "encel", "encer", "encik", "encim", "encit", "encok", "encot", "endak", "endal", "endang", "endap", "endas", "endasan", "endemi", "endemis", "endilau", "endoderm", "endoderma", "endodermis", "endofit", "endogami", "endogen", "endokardia", "endokrin", "endokrinologi", "endolimfa", "endometriosis", "endometrium", "endomiksis", "endomiokarditis", "endomisium", "endon", "endong", "endoparasit", "endoplasma", "endorfin", "endosemen", "endosentris", "endoskeleton", "endoskop", "endoskopi", "endosmosis", "endosperma", "endotel", "endoterm", "endotermal", "endotermis", "endotoksin", "endrin", "enduk", "endul", "enduro", "endus", "endut", "enek", "eneng", "energetik", "energi", "energik", "enes", "enfitotik", "engah", "engap-engap", "engas", "enggak", "enggan", "enggang", "engget", "enggil", "enggok", "engkah", "engkak", "engkang", "engkau", "engket-engket", "engkoh", "engkol", "engkong", "engku", "engkuk", "engsel", "enigma", "enjak", "enjal", "enjambemen", "enjelai", "enjin", "enjut", "enkapsulasi", "enklave", "enklitik", "enkode", "enkripsi", "enkulturasi", "enologi", "enom", "ensambel", "ensefalitis", "ensefalitogen", "ensefalograf", "ensefalografi", "ensefalogram", "ensefalomielitis", "ensefalon", "ensiform", "ensiklik", "ensiklopedia", "ensiklopedis", "ensopor", "entah", "entak", "entalpi", "entar", "entas", "ente", "enten", "enteng", "entente", "enteritis", "enterograf", "enterologi", "enteron", "enteropati", "enterosel", "enterostomi", "enterotoksin", "enterovirus", "entit", "entitas", "entoderm", "entogenus", "entok", "entomofili", "entomolog", "entomologi", "entong", "entot", "entozoa", "entozoik", "entre", "entrepot", "entri", "entropi", "enukleasi", "enumerasi", "enuresis", "envoi", "enyah", "enyak", "enzim", "enzimolisis", "enzimologi", "enzootik", "eolit", "eon", "eosen", "eosin", "eozoikum", "epak", "epek", "epentesis", "epibentos", "epidemi", "epidemiologi", "epidermis", "epidiaskop", "epifaring", "epifil", "epifiotik", "epifisis", "epifit", "epifiton", "epifora", "epigastrium", "epigenesis", "epiglotis", "epigon", "epigraf", "epigrafi", "epigram", "epik", "epikotil", "epikuris", "epilepsi", "epileptik", "epilog", "epimisium", "epinasti", "epinefrina", "epinurim", "episentrum", "episiklik", "episiotomi", "episkopal", "episkopat", "episode", "episodik", "epispora", "epistaksis", "epistel", "epistemologi", "epistola", "epitaf", "epitaksi", "epitel", "epitelioma", "epitermal", "epitet", "epizoik", "epizootik", "epok", "epoksi", "epolet", "eponim", "epos", "epsilon", "era", "eradikasi", "eradiksi", "erak", "eram", "erang", "erat", "erata", "erbis", "erbium", "ercis", "ereh", "erek-erek", "ereksi", "erektor", "ereng", "erepsin", "eret", "erg", "ergasiofit", "ergonomi", "ergonomika", "ergonomis", "ergosterol", "ergot", "ergoterapi", "erik", "ering", "erisipelas", "eritema", "eritroblas", "eritrosit", "erong", "eror", "erosentrisme", "erosi", "erot", "erotik", "erotika", "erotis", "erotisisme", "erotisme", "erpah", "erpak", "erti", "eru", "erupsi", "es", "esa", "esai", "esais", "esak", "esek", "eselon", "esembling", "esens", "esensi", "esensial", "esensialitas", "eskader", "eskadron", "eskalasi", "eskalator", "eskapisme", "eskas", "eskatologi", "eskatologis", "esofagus", "esok", "esot", "esoteris", "estafet", "ester", "estesia", "estetik", "estetika", "estetikus", "estetis", "estimasi", "estriol", "estrogen", "estron", "estrus", "estuari", "estuarin", "eta", "etalase", "etana", "etanol", "etape", "etatisme", "etek", "eter", "eteris", "eternit", "etik", "etika", "etiket", "etil", "etilena", "etimologi", "etimologis", "etimon", "etiolin", "etiologi", "etis", "etmoid", "etnik", "etnis", "etnobotani", "etnograf", "etnografi", "etnografis", "etnolinguistik", "etnolog", "etnologi", "etnologis", "etnomusikolog", "etnomusikologi", "etnopolitik", "etnosentrisme", "etologi", "etos", "etsa", "eudaemonisme", "eufemisme", "eufemistis", "eufoni", "eufonium", "euforia", "euforian", "eugenetika", "eugenika", "eugenol", "eukaliptol", "eukaliptus", "eukarion", "eukariota", "eulogi", "euploid", "eurasia", "eurihalin", "europium", "eurosentris", "euseksual", "eusinantropus", "eutanasia", "eutektik", "eutenika", "eutrofikasi", "evakuasi", "evaluasi", "evaluatif", "evangeli", "evangelis", "evaporasi", "evaporator", "evaporimeter", "evapotranspirasi", "eversi", "eviden", "eviserasi", "evokasi", "evokatif", "evolusi", "evolusioner", "evolusionisme", "ewa", "eyang", "eyel", "faal", "faali", "fabel", "fabula", "faden", "fadihat", "fadil", "fadilat", "faedah", "fafa", "fagosit", "fagositosis", "fagot", "fahombe", "fahrenheit", "fahsya", "fail", "fajar", "fakih", "fakir", "faks", "faksi", "faksimile", "fakta", "faktif", "faktitius", "faktor", "faktual", "faktur", "fakultas", "fakultatif", "falah", "falaj", "falak", "falakiah", "falsafah", "falsafi", "fam", "famili", "familia", "familier", "familiisme", "familisme", "fana", "fanatik", "fanatisme", "fanfare", "fani", "fantasi", "fantastis", "fantom", "farad", "faraid", "faraj", "farak", "fardu", "farik", "faring", "faringal", "faringalisasi", "faringitis", "farisi", "farji", "farmakodinamika", "farmakokinetika", "farmakolog", "farmakologi", "farmakologis", "farmakope", "farmakoseutika", "farmasi", "farsakh", "fasad", "fasakh", "fase", "faset", "fasia", "fasid", "fasih", "fasihat", "fasik", "fasilitas", "fasilitator", "fasis", "fasisme", "fastabikhulkhairat", "fatah", "fatal", "fatala", "fatalis", "fatalisme", "fatalitas", "fatamorgana", "fatanah", "fatihah", "fatimah", "fatir", "fatom", "fatometer", "fatri", "fatsun", "fatur", "fatwa", "fauna", "faunistik", "favorit", "favoritisme", "febrin", "februari", "federal", "federalis", "federalisme", "federalistis", "federasi", "feko", "fekundasi", "fekunditas", "felon", "felspar", "feminin", "feminisme", "fenakit", "fengsui", "fenit", "fenol", "fenologi", "fenomena", "fenomenal", "fenomenalisme", "fenomenologi", "fenosis", "fenotipe", "feodal", "feodalisme", "feodalistis", "feral", "feri", "feritin", "fermen", "fermentasi", "fermion", "fermium", "feromagnetik", "feromagnetisme", "feromon", "feronikel", "fertil", "fertilasi", "fertilisasi", "fertilitas", "fertilizin", "ferum", "feses", "festival", "fetis", "fetor", "fetus", "fiasko", "fiat", "fiber", "fibrasi", "fibriblas", "fibril", "fibrilasi", "fibrin", "fibrinogen", "fibrokistik", "fidah", "fider", "fidiah", "fidusia", "fidyah", "figur", "figuran", "figuratif", "fiil", "fikih", "fikli", "fikologi", "fikrah", "fiksasi", "fiksi", "fiktif", "fikus", "filamen", "filantrop", "filantropi", "filantropis", "filaria", "filariasis", "filateli", "filatelik", "filatelis", "filharmoni", "filial", "filibuster", "film", "filmis", "filo", "filodendron", "filogenesis", "filogeni", "filolog", "filologi", "filologis", "filopur", "filosof", "filosofi", "filosofis", "filsafat", "filsuf", "filter", "filtrasi", "filtrat", "filum", "fimbria", "final", "finansial", "finir", "finis", "fiolaks", "firajullah", "firasat", "firauniah", "firdaus", "firdausi", "firjatullah", "firkah", "firma", "firman", "firn", "fisi", "fisibel", "fisibilitas", "fisik", "fisika", "fisiognomi", "fisiognomis", "fisiologi", "fisiologis", "fisioterapi", "fisis", "fiskal", "fit", "fiting", "fitnah", "fitofag", "fitofogus", "fitogeni", "fitogeografi", "fitokimia", "fitologi", "fitometer", "fiton", "fitopatologi", "fitosanitasi", "fitososiologi", "fitosterol", "fitostrot", "fitotoksin", "fitotoksoid", "fitotopografi", "fitotron", "fitrah", "fitri", "flakon", "flamboyan", "flamingo", "flanel", "flat", "flegma", "flegmatis", "fleksi", "fleksibel", "fleksibilitas", "fleksor", "flensa", "flip-plop", "flis", "floem", "flop", "flora", "floret", "flotasi", "flotet", "flu", "fluensi", "fluida", "fluks", "fluktuasi", "fluktuatif", "fluor", "fluoresen", "fluoresens", "fluorin", "fluorit", "fobia", "fokimeter", "fokstrot", "fokus", "folder", "foli", "folikel", "folio", "folklor", "folksong", "fon", "fonasi", "fondamen", "fondasi", "fonds", "fonem", "fonemik", "fonemis", "fonetik", "fonetis", "fonik", "fonis", "fonograf", "fonografi", "fonologi", "fonologis", "fonon", "fonotaktik", "fonotipi", "foramen", "foraminifera", "forensik", "forklif", "forma", "formal", "formalin", "formalistis", "formalitas", "forman", "formasi", "format", "formatif", "formatir", "formatur", "formika", "formula", "formulasi", "formulator", "formulir", "fornifikasi", "fornikasi", "forsep", "forsir", "forsit", "forte", "fortifikasi", "fortin", "forum", "fosfat", "fosfina", "fosfit", "fosfor", "fosforesens", "fosforilase", "fosforus", "fosgen", "fosil", "foto", "fotodiode", "fotoelektron", "fotoemisi", "fotogenik", "fotograf", "fotografer", "fotografi", "fotografis", "fotograver", "fotogravur", "fotokimia", "fotokonduksi", "fotokonduktivitas", "fotokonduktor", "fotokopi", "fotokromi", "fotokromik", "fotolisis", "fotolitografi", "fotometer", "fotometri", "fotomikrografi", "fotomodel", "foton", "fotoperiodisme", "fotosel", "fotosfer", "fotosintesis", "fotostat", "fototaksis", "fototropis", "fototustel", "fovea", "foya", "fragmen", "fragmentaris", "fragmentasi", "fraksi", "fraksinasi", "fraktur", "fraktus", "frambusia", "fransium", "frasa", "frase", "fraseologi", "frater", "fraternitas", "freatofit", "fregat", "frekuen", "frekuensi", "frekuentatif", "frenologi", "freon", "frib", "frigid", "frigorigraf", "frigorimeter", "frikatif", "friksi", "fron", "front", "frontal", "fruktosa", "frustrasi", "fuad", "fugasitas", "fujur", "fukaha", "fukara", "fuksina", "fulgurit", "fuli", "fulminat", "fulus", "fumarol", "fumigan", "fumigasi", "fumigator", "fundamen", "fundamental", "fundamentalis", "fundamentalisme", "fundamentalistis", "fungi", "fungibel", "fungisida", "fungistatik", "fungoid", "fungsi", "fungsional", "fungsionalisasi", "fungsionalisme", "fungsionalitas", "fungsionaris", "fungus", "furfural", "furkan", "furnitur", "furqan", "furuk", "fusi", "fusta", "fusuk", "futual", "futur", "futurisme", "futuristik", "futuristis", "futurolog", "futurologi", "futurologis", "fyord", "gaba-gaba", "gabah", "gabai", "gabak", "gabardin", "gabas", "gabir", "gableg", "gablek", "gabor", "gabro", "gabruk", "gabuk", "gabung", "gabus", "gaco", "gacok", "gacong", "gada", "gadai", "gadamala", "gadang", "gading", "gadis", "gado", "gadolinit", "gadolinium", "gadon", "gaduh", "gaduk", "gadung", "gadungan", "gaek", "gaet", "gafar", "gaflah", "gaflat", "gaftar", "gafur", "gaga", "gagah", "gagai", "gagak", "gagal", "gagang", "gagap", "gagas", "gagau", "gagu", "gaguk", "gah", "gaham", "gahar", "gahara", "gahari", "gaharu", "gai", "gaib", "gail", "gain", "gaing", "gairah", "gait", "gajah", "gajak", "gaji", "gajih", "gajul", "gajus", "gakang", "gakari", "gala", "galaba", "galaganjur", "galagasi", "galah", "galai", "galak", "galaksi", "galaktometer", "galaktorea", "galaktosa", "galaktosemia", "galaktosuria", "galan", "galang", "galanggasi", "galar", "galas", "galat", "galau", "galbani", "galeng", "galeri", "galgal", "gali", "galias", "galib", "galibut", "galih", "galiot", "galir", "galium", "galiung", "galon", "galu-galu", "galuh", "galung", "galungan", "galur", "galvanis", "galvanisasi", "galvanometer", "galvanometri", "galvanoskop", "galyas", "gam", "gama", "gamak", "gamal", "gamalisasi", "gamam", "gaman", "gamang", "gamat", "gambang", "gambar", "gambas", "gambir", "gamblang", "gambling", "gambuh", "gambus", "gambut", "gambyong", "gamelan", "gamet", "gametangium", "gametofit", "gametogenesis", "gametosit", "gamik", "gamis", "gamit", "gamma", "gamopetal", "gamosepal", "gampang", "gampar", "gamparan", "gamping", "gamuh", "gana", "gana-gini", "ganal", "ganang", "ganar", "ganas", "gancang", "gancar", "ganco", "gancu", "ganda", "gandal", "gandapura", "gandar", "gandaria", "gandarukem", "gandarusa", "gandarwa", "gandasturi", "gandasuli", "gandek", "gandem", "ganden", "gandeng", "gandes", "gandewa", "gandi", "gandik", "gandin", "ganding", "gandok", "gandola", "gandos", "gandringan", "gandrung", "gandu", "ganduh", "gandul", "gandum", "gandung", "gang", "ganggam", "ganggang", "ganggu", "ganggut", "ganglion", "gangsa", "gangsal", "gangsar", "gangsi", "gangsir", "gangster", "gani", "ganih", "ganimah", "ganja", "ganjak", "ganjal", "ganjar", "ganjat", "ganjen", "ganjil", "ganjing", "ganjling", "ganjur", "ganoid", "gantal", "gantang", "gantar", "gantel", "ganteng", "ganti", "gantih", "gantilan", "ganting", "gantol", "gantole", "gantung", "ganyah", "ganyang", "ganyar", "ganyong", "ganyut", "gaok", "gap", "gapah", "gapah-gopoh", "gapai", "gapil", "gapit", "gaple", "gaplek", "gaplok", "gapuk", "gapura", "gar", "gara-gara", "garah", "garai", "garam", "garan", "garang", "garangan", "garansi", "garap", "garasi", "garau", "garba", "garbarata", "garbis", "garda", "gardan", "gardu", "garebek", "gari", "garib", "garindin", "garing", "garis", "garit", "garizah", "garmen", "garnet", "garnis", "garnisun", "garong", "garpu", "garu", "garuda", "garuk", "garung", "garut", "garwa", "gas", "gasab", "gasak", "gasal", "gasang", "gasatrin", "gasifikasi", "gasing", "gasket", "gasolin", "gasometer", "gaster", "gastrektomi", "gastrin", "gastritis", "gastroenteritis", "gastroenterolog", "gastroenterologi", "gastrointestinal", "gastronomi", "gastrula", "gastrulasi", "gatal", "gatot", "gatra", "gatrik", "gatuk", "gauk", "gaukang", "gaul", "gaun", "gaung", "gaut", "gawai", "gawal", "gawan", "gawang", "gawar", "gawat", "gawir", "gaya", "gayal", "gayam", "gayang", "gayat", "gayau", "gayem", "gayeng", "gayuh", "gayuk", "gayun", "gayung", "gayut", "gaz", "gazal", "gebah", "gebang", "gebar", "gebeng", "geber", "geblak", "geblek", "geblok", "gebogan", "gebok", "gebos", "gebot", "gebrak", "gebu", "gebuk", "gebung", "gebyah-uyah", "gebyar", "gebyur", "gecar", "gecek", "gecer", "gecul", "gedabah", "gedana-gedini", "gedang", "gede", "gedebak-gedebuk", "gedebar-gedebur", "gedebeg", "gedebok", "gedebuk", "gedebung", "gedek", "gedembai", "gedembal", "gedempol", "gedeng", "gedi", "gedik", "gedok", "gedombak", "gedombrongan", "gedong", "gedor", "gedubang", "gedung", "geduyut", "gegabah", "gegadan", "gegai", "gegak", "gegala", "gegaman", "gegana", "gegaokan", "gegap", "gegar", "gegares", "gegas", "gegat", "gegau", "gegep", "geger", "gegetar", "gegetun", "gegisik", "gegua", "geiger", "geiser", "gejah", "gejala", "gejolak", "gejos", "gejuju", "gel", "gela", "gelabah", "gelabir", "gelabur", "geladak", "geladeri", "geladi", "geladir", "geladrah", "gelagah", "gelagap", "gelagar", "gelagat", "gelak", "gelakak", "gelalar", "gelam", "gelama", "gelamai", "gelambir", "gelandang", "gelandot", "gelang", "gelanggang", "gelangsar", "gelantang", "gelanting", "gelantung", "gelap", "gelapung", "gelar", "gelas", "gelasak", "gelasir", "gelatak", "gelatik", "gelatin", "gelatuk", "gelayangan", "gelayar", "gelayut", "gelebah", "gelebap", "gelebar", "geleber", "gelebuk", "geleca", "gelecik", "geledah", "geledang", "geledek", "geleding", "geledur", "gelegah", "gelegak", "gelegar", "gelegata", "gelek", "gelekak", "gelekek", "gelema", "gelemat", "gelemberan", "gelembong", "gelembung", "gelembur", "gelempang", "gelemprang", "gelenang", "gelendo", "gelendong", "gelendot", "geleng", "gelenggang", "gelentang", "gelenting", "gelenyar", "gelepai", "gelepar", "gelepek", "gelepot", "gelepung", "gelepur", "geler", "gelesek", "geleser", "gelesot", "geleta", "geletak", "geletar", "geletek", "geletik", "geleting", "geletis", "geletuk", "geli", "geliang", "geliat", "gelibir", "gelicik", "geliga", "geligi", "geligin", "geligis", "geligit", "gelignit", "gelimang", "gelimantang", "gelimbir", "gelimir", "gelimpang", "gelimun", "gelincir", "gelincuh", "gelinding", "gelinggam", "gelinggaman", "gelinggang", "gelingsir", "gelinjang", "gelintang", "gelintar", "gelintin", "gelinting", "gelintir", "gelipar", "gelisah", "gelita", "gelitar", "gelitik", "gelo", "gelobak", "gelobok", "gelocak", "gelodar", "gelodok", "gelogok", "gelohok", "gelojoh", "gelomang", "gelombang", "gelompar", "gelondong", "geloneng", "gelonggong", "gelongsor", "gelontor", "gelopak", "gelora", "gelosang", "geloso", "gelosok", "gelotak", "geluduk", "geluga", "gelugu", "gelugur", "gelugut", "geluh", "geluk", "gelulur", "gelumang", "gelumat", "geluncur", "gelundung", "gelung", "gelup", "gelupur", "gelut", "gema", "gemah", "gemak", "gemal", "geman", "gemang", "gemap", "gemar", "gemas", "gemaung", "gemawan", "gembak", "gembala", "gembar-gembor", "gembel", "gembeng", "gembil", "gembili", "gembira", "gemblak", "gembleng", "gemblong", "gemblung", "gembok", "gembol", "gembolo", "gembong", "gembor", "gembos", "gembreng", "gembrot", "gembul", "gembung", "gembur", "gembus", "gembut", "gemebyar", "gemelentam", "gemeletak", "gemeletap", "gemeletek", "gemeletuk", "gemelugut", "gementam", "gementar", "gemercak", "gemercik", "gemerencang", "gemerencik", "gemerencing", "gemerencung", "gemeresak", "gemeresik", "gemeretak", "gemeretuk", "gemeretup", "gemerlap", "gemertak", "gemertuk", "gemerusuk", "gemetar", "gemi", "gemik", "gemilang", "gemilap", "geming", "gemini", "gemintang", "geminte", "gemirang", "gempa", "gempal", "gempar", "gempil", "gempita", "gempol", "gempor", "gempul-gempul", "gempur", "gemrobyos", "gemuk", "gemul", "gemulai", "gemulung", "gemuntur", "gemuruh", "gen", "gena", "genah", "genahar", "genang", "genap", "gencar", "gencat", "gencel", "gencer", "gencet", "gencir", "gendak", "gendala", "gendam", "gendang", "gendar", "gendarmeri", "gendeng", "gender", "genderang", "genderuwo", "gendewa", "gending", "gendis", "gendon", "gendong", "genduk", "gendut", "genealogi", "genealogis", "genegin", "geneng", "generalis", "generalisasi", "generalisimo", "generasi", "generatif", "generator", "generik", "genesis", "genetika", "genetis", "geng", "genggam", "genggang", "genggong", "gengsah", "gengsi", "gengsot", "genial", "genialitas", "genikulum", "genis", "genit", "genital", "genitalia", "genitif", "genius", "genjah", "genjang", "genjang-genjot", "genjer", "genjik", "genjot", "genjrang", "genjring", "genjur", "genom", "genosida", "genotipe", "genre", "genta", "gentala", "gentar", "gentas", "gentat", "gentayang", "gentel", "genteng", "gentian", "genting", "gentong", "gentrifikasi", "gentur", "gentus", "genus", "genyot", "geobotani", "geodesi", "geofisika", "geofisis", "geofon", "geognosi", "geografi", "geografis", "geohidrologi", "geokimia", "geokronologi", "geolog", "geologi", "geologis", "geomansi", "geometri", "geometris", "geomorfologi", "geonomi", "geopolitik", "geosentris", "geosinkronis", "geostasioner", "geostatika", "geoteknik", "geoteknologi", "geotermal", "geotermi", "geotermometer", "gepeng", "gepit", "geplak", "gepok", "geprak", "gepuk", "gera", "gerabah", "gerabak", "gerabang", "geradi", "geragai", "geragap", "geragas", "geragau", "geragih", "geragot", "geraguk", "gerah", "geraham", "gerai", "gerak", "geram", "geraman", "geramang", "geramsut", "geramus", "gerang", "gerangan", "geranggang", "geranium", "gerantak", "gerantang", "geranyam", "gerapai", "gerapu", "gerat", "geratak", "geratih", "gerau", "gerawan", "gerawat", "gerayah", "gerayang", "gerbak", "gerbang", "gerbas-gerbus", "gerbera", "gerbong", "gerbus", "gerda", "gerdam", "gerdan", "gerdum", "gerebek", "gerecak", "gerecok", "gereget", "gereh", "gereja", "gerejani", "gerejawi", "gerek", "geremet", "gerempang", "gerencang", "gerendel", "gerendeng", "gerenek", "gereneng", "gereng-gereng", "gerengseng", "gerenik", "gerenjeng", "gerenjet", "gerentang", "gerenyau", "gerenyeng", "gerenyet", "gerenying", "gerenyit", "gerenyot", "gerepe", "gerepek", "gerepes", "geresek", "geret", "geretak", "geretang", "gergaji", "gergajul", "gergasi", "gergeran", "gerha", "gerhana", "geriak", "geriak-geriuk", "geriap", "geriatrik", "geribik", "gericau", "geridip", "geridit", "geriditpidit", "gerigi", "gerigik", "gerigis", "gerih", "gerik", "gerilya", "gerim", "gerimis", "gerincing", "gerinda", "gerindin", "gerinding", "gering", "geringging", "geringgingan", "geringsing", "gerinjal", "gerinjam", "gerinting", "gerinyau", "gerip", "geripir", "geripis", "gerisik", "gerising", "gerit", "geriuk", "gerlap", "gerlip", "germang", "germanium", "germinal", "germisida", "germo", "germut", "gero", "geroak", "gerobak", "gerobok", "gerobyak", "gerocok", "gerodak", "gerogol", "gerogot", "gerohok", "gerohong", "gerojok", "gerombol", "gerombong", "gerompok", "gerong", "geronggang", "geronium", "gerontokrasi", "gerontol", "gerontologi", "geronyot", "geropes", "geropyok", "geros", "gerosak", "gerot-gerot", "gerowong", "gerowot", "gerpol", "gersak", "gersang", "gersik", "gertak", "gertik", "gertuk", "geru", "gerugut", "geruh", "geruit", "gerumit", "gerumpung", "gerumuk", "gerumut", "gerun", "gerundang", "gerundel", "gerung", "gerunggung", "gerunyam", "gerup", "gerupis", "gerupuk", "gerus", "gerut", "gerutu", "gerutup", "gerutus", "gesa", "gesek", "gesel", "geser", "gesit", "gesper", "gestikulasi", "geta", "getah", "getak-getuk", "getang", "getap", "getar", "getas", "getek", "getem-getem", "geti-geti", "getik", "getil", "getir", "getis", "getok", "getol", "getu", "getuk", "getun", "geulis", "gewang", "gial", "giam", "giat", "gibah", "gibang", "gibas", "giblet", "gibtah", "gidik", "gigahertz", "gigantisme", "gigi", "gigih", "gigil", "gigir", "gigis", "gigit", "gigolo", "gila", "gilang", "gilap", "gilas", "gilbet", "gili", "gilik", "giling", "gilir", "gim", "gimbal", "gimnasium", "gimnastik", "gimpal", "gin", "ginang", "gincu", "ginding", "ginekolog", "ginekologi", "ginekomasti", "ginesium", "gingivitis", "ginglimus", "gingsir", "gingsul", "ginjal", "ginjean", "ginkang", "ginogenesis", "ginseng", "gips", "gipsi", "gir", "girah", "giral", "girang", "girap-girap", "giras", "girasol", "giri", "girik", "girikan", "giring", "giris", "giro", "giroskop", "girostat", "girostatika", "gisar", "gisik", "gisil", "gita", "gitapati", "gitar", "gitaris", "gites", "gitik", "gitok", "giuk", "giur", "giwang", "gizi", "glabela", "gladiator", "gladiol", "glamor", "glandula", "glans", "glasial", "glasir", "glasnos", "glaukoma", "glegek", "glenik", "glenoid", "gletser", "glidik", "glikogen", "glikogenesis", "glikogenolisis", "glikol", "glikolisis", "glikosid", "glikosida", "glikosidasa", "glikosidase", "glikosuria", "gliserida", "gliserol", "global", "globalisasi", "globalisme", "globe", "globulin", "globus", "glokidium", "glomerulus", "glomus", "glosarium", "glosem", "glosematik", "glositas", "glositis", "glotal", "glotalisasi", "glotis", "glukagon", "glukosa", "glukosan", "glukosida", "gluten", "gnomon", "goak", "gob", "goba", "gobak", "gobang", "gobar", "gobek", "gobet", "goblok", "gocap", "gocek", "gocoh", "goda", "godak", "godam", "godek", "godok", "godong", "godot", "goel", "gogoh", "gogok", "gogos", "gogrok", "gohok", "gohong", "gojek", "gojlok", "gokar", "gol", "golak", "golak-galik", "golbi", "golek", "goleng", "goler", "golf", "golok", "golong", "golput", "gom", "gombak", "gombal", "gombang", "gombeng", "gombrang", "gombroh", "gombyok", "gompal", "gompiok", "gonad", "gondang", "gondas-gandes", "gondok", "gondol", "gondola", "gondong", "gondorukem", "gondrong", "gong", "gonggo", "gonggok", "gonggong", "gongli", "gongseng", "gongyo", "goni", "gonidium", "goniometri", "gonjak", "gonjang", "gonjang-ganjing", "gonjing", "gonjlang", "gonjlang-ganjling", "gonjok", "gonjong", "gonokokus", "gonore", "gonrang", "gontaganti", "gontai", "gontok", "gonyak", "gonyeh", "gonyel", "gonyoh", "gopek", "gopoh", "gorap", "gorden", "gorek", "goreng", "gores", "gori", "gorila", "gorilya", "goroh", "gorok", "gorong-gorong", "gosan", "gosip", "gosok", "gosong", "gospel", "got", "gotes", "gotik", "gotong", "gotri", "gotrok", "gotun", "gowok", "goyah", "goyak", "goyang", "grabadan", "grad", "gradasi", "gradien", "gradual", "gradualisme", "graf", "grafem", "grafemik", "grafemis", "grafetik", "grafik", "grafika", "grafis", "grafit", "grafitasi", "grafolog", "grafologi", "graha", "grahita", "gram", "gramatika", "gramatikal", "grambyang", "gramofon", "granat", "granit", "granolitik", "granula", "granulasi", "granulosit", "grapyak", "grasi", "gratak", "gratifikasi", "gratis", "gravel", "graver", "gravimeter", "gravitas", "gravitasi", "grecok", "gregarius", "grehon", "grempel", "gres", "gresek-gresek", "gria", "grip", "griya", "grogi", "gronjong", "gros", "grosir", "grup", "gruwung", "gua", "gual", "guam", "guanidina", "guanin", "guanina", "guano", "guar", "gubah", "gubal", "gubang", "gubel", "gubernemen", "gubernur", "gubit", "gubris", "gubuk", "guci", "gudam", "gudang", "gudangan", "gude", "gudeg", "guderi", "gudi", "gudik", "gudu-gudu", "gue", "gugah", "gugat", "gugu", "guguh", "guguk", "gugup", "gugur", "gugus", "guit", "gujirak", "gujirat", "gukakas", "gul", "gula", "gulah", "gulai", "gulali", "gulam", "gulambai", "gulana", "gulang-gulang", "gulat", "guli", "guliga", "guling", "gulir", "gulita", "gulma", "gulud", "gulung", "gulut", "gum", "guma", "gumal", "gumam", "gumba", "gumbaan", "gumbang", "gumbar", "gumboro", "gumbuk", "gumebruk", "gumelaran", "gumpal", "gumpil", "gumuk", "gumul", "gumun", "gun", "guna", "gunawan", "guncang", "gunci", "gundah", "gundal", "gundala", "gundang", "gundar", "gundi", "gundik", "gundu", "gunduk", "gundul", "gung", "gunggung", "gunjai", "gunjing", "gunolugu", "gunrit", "gunseikan", "guntai", "guntak", "guntang", "guntil", "gunting", "guntung", "guntur", "gunung", "gunyam", "gup", "gurab", "gurah", "guram", "gurami", "gurat", "gurau", "gurdan", "gurdi", "guri", "gurih", "gurik", "gurindam", "guring", "gurit", "gurita", "gurnadur", "guru", "gurub", "guruh", "guruk", "gurun", "gurung", "gurur", "gus", "gusah", "gusar", "gusel", "gusi", "gusrek", "gusti", "gusul", "gusur", "gutasi", "gutik", "gutuk", "guyon", "guyub", "guyur", "habenula", "habib", "habibi", "habibulah", "habibullah", "habis", "habitat", "habituasi", "habitus", "habluk", "hablun", "hablur", "habsyi", "habuan", "habuk", "habung", "had", "hadanah", "hadap", "hadas", "hadat", "hadiah", "hadir", "hadirat", "hadirin", "hadis", "hadron", "hafal", "hafiz", "hafnium", "hagiografi", "hahnium", "hai", "haid", "haik", "haiking", "haiku", "hail", "hailai", "haj", "hajah", "hajar", "hajat", "haji", "hajib", "hajim", "hajis", "hak", "hakaik", "hakam", "hakikat", "hakiki", "hakim", "hakimah", "hakul", "hakulah", "hakulyakin", "hal", "hala", "halai-balai", "halaik", "halakah", "halal", "halalbihalal", "halaman", "halang", "halau", "halazon", "halba", "haleluya", "halia", "halilintar", "halim", "halimbubu", "halimun", "halimunan", "halipan", "halitosis", "halkah", "halma", "halo", "halobion", "halofili", "halofit", "halofita", "halofob", "halogen", "halogenasi", "halotan", "halsduk", "halte", "halter", "haluan", "halus", "halusinasi", "halusinogen", "halwa", "ham", "hama", "hamal", "hamatum", "hamba", "hambali", "hambar", "hambat", "hambur", "hamburger", "hamdalah", "hamdu", "hamik", "hamil", "haminte", "hampa", "hampang", "hampar", "hampir", "hamud", "hamulus", "hamun", "hamzah", "hana", "hanacaraka", "hanafi", "hancing", "hancur", "handai", "handam", "handaruan", "handasah", "handelar", "handuk", "hang", "hangar", "hangat", "hanger", "hanggar", "hangit", "hangus", "hanif", "hanjuang", "hansop", "hantai", "hantam", "hantap", "hantar", "hantir", "hantu", "hanya", "hanyut", "hap", "hapetan", "haplografi", "haploid", "haplologi", "hapus", "hara", "harak", "harakah", "harakat", "harakiri", "haram", "harap", "harawan", "harbi", "hardik", "harem", "harendong", "harfiah", "harga", "hari", "haribaan", "harimau", "haring", "harini", "haris", "harisah", "harit", "harkat", "harmoni", "harmonik", "harmonika", "harmonis", "harmonisasi", "harmonium", "harnet", "harpa", "harpis", "harpun", "hart", "harta", "hartal", "haru", "haruan", "harum", "harungguan", "harus", "has", "hasab", "hasad", "hasai", "hasan", "hasar", "hasib", "hasid", "hasil", "hasrat", "hasta", "hasta-wara", "hasud", "hasut", "hasyiah", "hasyis", "hati", "hatif", "hatta", "hatur", "haud", "haudah", "haukalah", "haul", "haur", "hauri", "haus", "haustorium", "haver", "hawa", "hawar", "hawari", "hawiah", "hayat", "hayati", "hayo", "heban", "hebat", "heboh", "hebras", "hebring", "hedonis", "hedonisme", "hegelianisme", "hegemoni", "hegemonik", "hegemonisme", "hegemonnisme", "heiho", "heksadesimal", "heksagon", "heksahedron", "heksaklorida", "heksameter", "heksana", "heksapoda", "hektar", "hektare", "hektograf", "hektogram", "hektoliter", "hektometer", "hela", "helah", "helai", "helat", "helicak", "helikopter", "heling", "heliofit", "heliofobi", "heliograf", "heliogram", "heliometer", "heliosentrik", "helioskop", "heliotaksis", "helioterapi", "heliotrop", "heliotropisme", "helipad", "helium", "helm", "helmintologi", "hem", "hemat", "hematit", "hematite", "hematofobia", "hematologi", "hematom", "hematometra", "hematuri", "hembak", "hembalang", "hembus", "hemeralopi", "hemikordat", "hemiplegia", "hemisfer", "hemodialisis", "hemofilia", "hemoglobin", "hemolisis", "hemopoiesis", "hemopteran", "hemoragi", "hemoroid", "hemosit", "hemositometer", "hemostasis", "hemostatik", "hempap", "hempas", "hendak", "hendam", "hendel", "heng", "hengit", "hengkang", "hening", "henoteisme", "henry", "hentar", "henti", "henyak", "hepar", "hepatitis", "heptagon", "heptahedron", "heptameter", "heptana", "heraldik", "heran", "herba", "herbarium", "herbisida", "herbivor", "herbivora", "herder", "hereditas", "herediter", "heregistrasi", "heresi", "hering", "hermafrodit", "hermafroditisme", "hermetis", "hernia", "hero", "heroik", "heroin", "heroisme", "herpes", "herpetolog", "herpetologi", "hertz", "hesperidin", "heterodin", "heterodoks", "heterofemi", "heterofil", "heterofit", "heterogamet", "heterogami", "heterogen", "heterogenitas", "heterograf", "heterografi", "heteroklitus", "heteronim", "heteronimi", "heteronomi", "heteroseksual", "heteroseksualitas", "heterosfer", "heterosiklis", "heterosis", "heterospora", "heterostili", "heterotrof", "heterozigot", "heuristis", "hewan", "hewani", "hia", "hialin", "hialit", "hias", "hiatus", "hibah", "hibal", "hibat", "hibernasi", "hibiskus", "hibob", "hibrida", "hibridis", "hibridisasi", "hibuk", "hibur", "hidang", "hidatod", "hidayah", "hidayat", "hidrasi", "hidrat", "hidraulik", "hidraulika", "hidraulis", "hidrida", "hidrodinamika", "hidrofili", "hidrofit", "hidrofobia", "hidrofoil", "hidrofon", "hidrogen", "hidrogenasi", "hidrogeologi", "hidrograf", "hidrografi", "hidrogram", "hidrokarbon", "hidroklorida", "hidrokori", "hidroksida", "hidroksil", "hidrolika", "hidrolisis", "hidrologi", "hidrometeorologi", "hidrometer", "hidrometri", "hidromini", "hidronan", "hidropati", "hidroperoksida", "hidroponik", "hidropsoma", "hidrosfer", "hidrosiklon", "hidroskop", "hidrostatika", "hidrostatis", "hidroterapi", "hidrotermal", "hidu", "hidung", "hidup", "hiena", "hierarki", "hierarkis", "hieroglif", "hifa", "higiene", "higienis", "higrograf", "higrogram", "higrometer", "higrometri", "higroskop", "higroskopis", "higrotermograf", "higrotermogram", "hijab", "hijaiah", "hijau", "hijrah", "hijriah", "hikayat", "hikmah", "hikmat", "hilal", "hilang", "hilap", "hilau", "hilir", "hilofagus", "himanga", "himar", "himen", "himenium", "himne", "himpun", "hina", "hinap", "hinayana", "hindar", "hindi", "hindu", "hinduisme", "hingga", "hinggap", "hinggut", "hio", "hiosiamina", "hiosin", "hip", "hipantium", "hiperaktif", "hiperamnesi", "hiperbarik", "hiperbol", "hiperbolis", "hiperemia", "hiperestesia", "hipergami", "hiperkelas", "hiperkinesis", "hiperklas", "hiperkorek", "hiperkritis", "hiperlipemia", "hipermetropia", "hiperon", "hiperopia", "hiperparasit", "hiperplasia", "hiperseks", "hiperseksual", "hipersensitif", "hipersonik", "hipersonika", "hipertensi", "hipertonik", "hipertradisional", "hipertrikosis", "hipertrofi", "hipervitaminosis", "hipnosis", "hipnoterapi", "hipnotis", "hipnotisme", "hipoblas", "hipodermis", "hipodermoklisis", "hipodrom", "hipofisis", "hipofremia", "hipogen", "hipoglikemia", "hipokondria", "hipokotil", "hipokrisi", "hipokrit", "hipokritis", "hipolimnion", "hipomastia", "hipomnesia", "hiponim", "hipopituitarisme", "hipoplankton", "hipoplasia", "hipopotamus", "hiposentrum", "hipotaksis", "hipotek", "hipotensi", "hipotenusa", "hipotermia", "hipotesis", "hipotetis", "hipotiroid", "hipotiroidisme", "hipotonik", "hipovitaminosis", "hipsometer", "hipui", "hirap", "hirau", "hirsutisme", "hiru-biru", "hiru-hara", "hirudin", "hiruk", "hirup", "his", "hisab", "histamina", "histerektomi", "histeria", "histeris", "histerisis", "histidina", "histogeni", "histokimia", "histologi", "histon", "histopatologi", "histori", "historikus", "historiografi", "historis", "historisisme", "historisitas", "hit", "hitam", "hitung", "hiu", "hiyayat", "hobat", "hobi", "hobo", "hodadoda", "hodah", "hodometer", "hoi", "hokah", "hoki", "hol", "holi", "holisme", "holistis", "holmium", "holobentos", "holoenzim", "holofit", "holofitik", "holofrasis", "hologamet", "hologami", "holograf", "holografis", "hologram", "holokrim", "holokrin", "holoplankton", "holosen", "holozoik", "homeostasis", "homili", "hominid", "hominoid", "homo", "homofon", "homofoni", "homogami", "homogen", "homogeni", "homogenitas", "homograf", "homografi", "homogram", "homoiotermal", "homolog", "homologi", "homonim", "homonimi", "homorgan", "homoseks", "homoseksual", "homoseksualisme", "homoseksualitas", "homosfer", "homospora", "homoterm", "homozigot", "honae", "honcoe", "honji", "honor", "honorarium", "honorer", "honorifik", "hop", "hopagen", "hopbiro", "hopkantor", "hopyes", "horak", "horas", "hore", "horizon", "horizontal", "hormat", "hormon", "hornblenda", "horor", "horoskop", "hortikultura", "hortikulturis", "hoskut", "hospital", "hostel", "hostes", "hosti", "hot", "hotel", "howitzer", "huakiau", "hubar", "hubaya-hubaya", "hububan", "hubulwatan", "hubung", "huda", "hudai", "hudhud", "hudud", "hufaz", "huh", "hujah", "hujaj", "hujan", "hujat", "huji", "hujin", "hujung", "hukah", "hukama", "hukum", "hula-hula", "hulam", "huler", "hulu", "hulubalang", "hulul", "hulur", "huma", "human", "humaniora", "humanis", "humanisasi", "humanisme", "humanistis", "humanitas", "humaniter", "humas", "humbalang", "humektan", "humerus", "humidifikasi", "humiditas", "humifikasi", "humin", "humor", "humoris", "humoristis", "humorolog", "humus", "hun", "huncue", "huni", "hunjam", "hunjuk", "hunkue", "hunus", "hura-hura", "hurah", "huria", "huriah", "hurikan", "huru-hara", "huruf", "hus", "husnulkhatimah", "hut", "hutan", "hutang", "huyung", "ialah", "iambus", "iatrogenik", "iba", "ibadah", "ibadat", "ibadurahman", "iban", "ibar-ibar", "ibarat", "ibayuh", "ibid", "ibidem", "ibing", "iblis", "ibni", "ibnu", "ibra", "ibrit", "ibtida", "ibtidaiah", "ibu", "ibul", "ibun", "ibunda", "ibung", "ibus", "icak-icak", "ida", "idafi", "idah", "idam", "idap", "idarah", "idas", "ide", "ideal", "idealis", "idealisasi", "idealisme", "idealistis", "idem", "identifikasi", "identik", "identitas", "ideofon", "ideograf", "ideografi", "ideografis", "ideogram", "ideologi", "ideologis", "ideosinkretik", "idep", "idiil", "idiolek", "idiom", "idiomatis", "idiomatologi", "idiosi", "idiosinkrasi", "idiosinkretik", "idiot", "idola", "idrak", "idu", "iduladha", "idulfitri", "ifah", "ifrit", "iftar", "iftitah", "iga", "igal", "igau", "iglo", "ihdad", "ihram", "ihsan", "ihsanat", "ihsas", "ihtifal", "ihtikar", "ihtilam", "ihtimal", "ihwal", "ijab", "ijabat", "ijajil", "ijarah", "ijas", "ijazah", "ijbar", "ijeman", "ijil", "ijmak", "ijmal", "ijon", "ijtihad", "ijtimaiah", "ijtimak", "ijuk", "ikab", "ikal", "ikamah", "ikan", "ikat", "ikebana", "ikhbar", "ikhlas", "ikhtiar", "ikhtiari", "ikhtilaf", "ikhtiogeografi", "ikhtiosarkotoksisme", "ikhtiotoksisme", "ikhtisar", "ikhwan", "iklan", "iklim", "ikon", "ikonis", "ikonograf", "ikonografi", "ikonoklasme", "ikonometer", "ikrab", "ikram", "ikrar", "iktibar", "iktidal", "iktikad", "iktikaf", "iktiografi", "iktiolit", "iktiologi", "iktiologis", "iktirad", "iktiraf", "iktisab", "ikuh", "ikut", "ilafi", "ilah", "ilahi", "ilahiah", "ilahiat", "ilai", "ilak", "ilam-ilam", "ilanun", "ilar", "ilas", "ilat", "ilegal", "iler", "iles", "ileum", "ilham", "ili", "ilian", "iling", "ilmiah", "ilmu", "ilu", "iluminasi", "ilusi", "ilusif", "ilusionis", "ilustrasi", "ilustratif", "ilustrator", "imago", "imaji", "imajinasi", "imajinatif", "imajiner", "imak", "imam", "imamah", "imamologi", "iman", "imanen", "imanensi", "imani", "imbak", "imbal", "imbang", "imbas", "imbau", "imbesil", "imbesilitas", "imbibisi", "imbit", "imbuh", "imigran", "imigrasi", "iming-iming", "imitasi", "imitatif", "imitator", "imkan", "imla", "imlek", "imobilisasi", "impak", "impas", "impase", "impedans", "impedansi", "impek", "imperatif", "imperfek", "imperfeksi", "imperial", "imperialis", "imperialisme", "imperium", "impersonal", "impersonalia", "impersonalitas", "impi", "impit", "implan", "implantasi", "implemen", "implementasi", "implikasi", "implisit", "implosif", "implosit", "impor", "importasi", "importir", "impoten", "impotensi", "impregnasi", "impresariat", "impresario", "impresi", "impresif", "impresionis", "impresionisme", "impresionistik", "imprimatur", "improvisasi", "impuls", "impulsif", "imsak", "imsakiah", "imtihan", "imun", "imunisasi", "imunitas", "imunokimia", "imunokompromi", "imunologi", "imunologis", "imunosupresi", "imunoterapi", "ina", "inadaptabilitas", "inai", "inang", "inangda", "inap", "inartikulat", "inas", "inaugurasi", "inayat", "inca", "incang-incut", "incar", "inci", "incit", "incling", "incrit", "incu", "incut", "indah", "indang", "indap", "indarus", "indayang", "indebitum", "indehoi", "indekos", "indeks", "inden", "independen", "inderawasih", "indeterminisme", "indigenos", "indigo", "indik", "indikan", "indikasi", "indikatif", "indikator", "inding", "indisipliner", "indium", "individu", "individual", "individualis", "individualisasi", "individualisme", "individualistis", "individualitas", "individuasi", "indoktrinasi", "indolen", "indolensi", "indologi", "indonesia", "indonesianisasi", "indra", "indraloka", "indranila", "indria", "indriawi", "indu", "induk", "induksi", "induktans", "induktansi", "induktif", "induktor", "indung", "indusemen", "industri", "inefisiensi", "inersia", "infak", "infanteri", "infantil", "infantilisasi", "infantilisme", "infarktus", "infeksi", "inferensi", "inferensial", "inferior", "inferioritas", "inferno", "infertil", "infertilitas", "infiks", "infiltrasi", "infiltrometer", "infinitif", "infiradi", "inflamasi", "inflasi", "inflatoar", "infleksi", "infleksibel", "infleksif", "infloresen", "infloresens", "influensa", "influenza", "info", "informal", "informan", "informasi", "informatif", "informatika", "inframerah", "infrasonik", "infrastruktur", "infus", "inga", "ingar", "ingat", "ingau", "inggang-inggung", "inggris", "inggu", "inggung", "ingin", "ingkah", "ingkar", "ingkir", "ingresif", "ingsar", "ingsun", "ingsut", "ingus", "inheren", "inhibisi", "inhibitor", "ini", "inisial", "inisiasi", "inisiatif", "inisiator", "injak", "injap", "injeksi", "injil", "injin", "inkarnasi", "inkarserasi", "inkarsunah", "inkaso", "inklaring", "inklinasi", "inklinometer", "inklusif", "inkognito", "inkompabilitas", "inkompatibilitas", "inkompeten", "inkomplet", "inkonfeso", "inkonsisten", "inkonsistensi", "inkonstitusional", "inkonvensional", "inkorporasi", "inkremental", "inkubasi", "inkubator", "inkulturasi", "inlander", "inohong", "inokulasi", "inovasi", "inovatif", "inovator", "insaf", "insan", "insanan", "insang", "insani", "insanulkamil", "insar", "insek", "insekta", "insektari", "insektisida", "insektivor", "insektivora", "insektologi", "inseminasi", "insentif", "insersi", "inses", "inset", "insiden", "insidental", "insinerator", "insinuasi", "insinuatif", "insinye", "insinyur", "inskripsi", "inslan", "insolven", "insomnia", "inspeksi", "inspektorat", "inspektur", "inspirasi", "instabilitas", "instalasi", "instalatur", "instan", "instansi", "insting", "instingtif", "institusi", "institusional", "institut", "instruksi", "instruksional", "instruktif", "instruktur", "instrumen", "instrumental", "instrumentalia", "instrumentalis", "instrumentasi", "insubordinasi", "insulator", "insuler", "insulin", "insulinde", "insya", "intai", "intan", "integral", "integralistik", "integrasi", "integrasionis", "integritas", "integumen", "intel", "intelek", "intelektual", "intelektualisasi", "intelektualisme", "inteligen", "inteligensi", "inteligensia", "intelijen", "intendans", "intens", "intensi", "intensif", "intensifikasi", "intensional", "intensitas", "interaksi", "interaksionistik", "interaktif", "interdepartemental", "interdependen", "interdiksi", "interdisipliner", "interegnum", "interelasi", "interen", "interes", "interesan", "interetnik", "interferens", "interferensi", "interferometer", "interferon", "interglasial", "interim", "interinsuler", "interior", "interjeksi", "interkom", "interkoneksi", "interkonsonantal", "interkontinental", "interlokal", "interlokutor", "interlud", "intermeso", "intermezo", "intermolekuler", "intern", "internal", "internalisasi", "internasional", "internasionalisasi", "internat", "internir", "internis", "internuntius", "interogasi", "interogatif", "interogator", "interpelan", "interpelasi", "interpelator", "interpiu", "interpolasi", "interpretasi", "interpretatif", "interpretator", "interpreter", "intersepsi", "intertestial", "intertidal", "interupsi", "interval", "intervensi", "intervensionisme", "interviu", "interzona", "inti", "intifadah", "intiha", "intikad", "intim", "intima", "intimasi", "intimidasi", "intip", "intipati", "intisari", "intoksikasi", "intoleran", "intonasi", "intradermal", "intrakalimat", "intrakurikuler", "intralinguistis", "intramembran", "intramolekul", "intramuskuler", "intransitif", "intraseluler", "intrauniversiter", "intravaskuler", "intravena", "intrik", "intrinsik", "intro", "introduksi", "introjeksi", "introspeksi", "introver", "intrusi", "intuisi", "intuitif", "intumesensi", "invaginasi", "invalid", "invasi", "invensi", "inventaris", "inventarisasi", "inventif", "inventor", "inventori", "inventoriminat", "inversi", "invertebrata", "investasi", "investigasi", "investigatif", "investor", "invitasi", "invois", "involusi", "inyik", "inzar", "inziaj", "iodin", "ion", "ionisasi", "ionosfer", "iota", "ipar", "ipis", "ipon", "iprit", "ipuh", "ipuk", "ipung", "iqamat", "iqra", "ira", "iradat", "iradiasi", "irafah", "irah-irahan", "iram", "irama", "iras", "irasional", "irasionalitas", "iri", "iridium", "irigasi", "irigator", "irik", "iring", "iris", "irit", "iritabilitas", "iritasi", "iritatif", "ironi", "ironis", "irsyad", "irung", "irus", "isa", "isak", "isalohipse", "isap", "isbat", "iseng", "isentropik", "isi", "isim", "isis", "isit", "iskemia", "islah", "islam", "islami", "islamiah", "islamis", "islamisasi", "islamisme", "islamologi", "isoaglutinin", "isobar", "isobarik", "isobat", "isobron", "isodin", "isodinamik", "isofase", "isofen", "isofet", "isoflor", "isofon", "isogamet", "isogami", "isoglos", "isogon", "isogram", "isohalin", "isohel", "isohiet", "isohips", "isokal", "isokalori", "isokemi", "isokeraunik", "isokor", "isokorik", "isokronisme", "isolasi", "isolasionisme", "isolatif", "isolator", "isoleks", "isolemen", "isolir", "isomer", "isometrik", "isomorf", "isomorfis", "isomorfisme", "isonefel", "isonomi", "isopal", "isopiestik", "isoplet", "isoriza", "isosilabisme", "isotah", "isoterm", "isotermal", "isotop", "isotrop", "isotropik", "isovolumik", "isra", "israf", "istal", "istan", "istana", "istanggi", "istaz", "istazah", "istiadat", "istianah", "istiazah", "istibdad", "istibra", "istidlal", "istidraj", "istifham", "istigasah", "istigfar", "istihadah", "istihsan", "istikamah", "istikharah", "istikhlaf", "istiklal", "istikmal", "istilah", "istima", "istimaiah", "istimewa", "istimna", "istimtak", "istinggar", "istinja", "istiqlal", "istirahat", "istislah", "istislam", "istisna", "istitaah", "istiwa", "istri", "isu", "isya", "isyarat", "isytiak", "isyu", "italik", "item", "iterasi", "iterbium", "itibak", "itibar", "itidal", "itifak", "itihad", "itik", "itikad", "itikaf", "itil", "itisal", "itlak", "itrium", "itu", "iudisasi", "iur", "iwad", "iya", "izah", "izin", "jaat", "jab", "jabal", "jabang", "jabar", "jabariah", "jabat", "jabir", "jables", "jabrik", "jabung", "jadah", "jadam", "jadayat", "jadi", "jaduk", "jadwal", "jaga", "jagabaya", "jagabela", "jagal", "jagang", "jagapati", "jagaraga", "jagat", "jagawana", "jago", "jagra", "jagrak", "jaguar", "jagung", "jagur", "jah", "jaha", "jahan", "jahanam", "jahar", "jaharu", "jahat", "jahe", "jahil", "jahiliah", "jahiriah", "jahit", "jahul", "jail", "jainisme", "jaipong", "jais", "jaiz", "jaja", "jajah", "jajak", "jajal", "jajan", "jajar", "jaka", "jakal", "jakas", "jaket", "jaksa", "jaksi", "jakun", "jala", "jalabria", "jalad", "jalak", "jalal", "jalan", "jalang", "jalangkote", "jalangkung", "jalar", "jali", "jalibut", "jalil", "jalin", "jalma", "jalu", "jalur", "jam", "jamaah", "jamadat", "jamah", "jamak", "jamal", "jaman", "jamang", "jambak", "jambal", "jamban", "jambang", "jambar", "jambat", "jambe", "jambiah", "jambian", "jamblang", "jambon", "jambore", "jambret", "jambu", "jambul", "jambulan", "jambur", "jamhur", "jamiah", "jamiatul", "jamik", "jamil", "jamin", "jamis", "jamiyah", "jamiyatul", "jampal", "jampen", "jampi", "jampuk", "jamrah", "jamrud", "jamu", "jamung", "jamur", "janabah", "janabijana", "janah", "janat", "janda", "jangak", "jangan", "jangar", "jangat", "janggal", "janggelan", "janggi", "janggolan", "janggung", "janggut", "jangka", "jangkah", "jangkang", "jangkap", "jangkar", "jangkat", "jangkau", "jangki", "jangkih", "jangkih-mangkih", "jangking", "jangkir", "jangkit", "jangkrik", "jangkung", "jangla", "jangol", "jani", "janik", "janin", "janjang", "janji", "jantan", "jantang", "jantina", "jantuk", "jantung", "jantur", "janturan", "januari", "janubi", "janur", "jap", "japan", "japin", "japu", "japuk", "jara", "jarab", "jarah", "jarak", "jaram", "jaran", "jaranan", "jarang", "jaras", "jarem", "jargon", "jari", "jariah", "jariji", "jarimah", "jaring", "jarit", "jarjau", "jaro", "jarotan", "jarum", "jarwa", "jas", "jasa", "jasad", "jasadi", "jasmani", "jasmaniah", "jasus", "jaswadi", "jatah", "jatayu", "jati", "jatilan", "jatmika", "jatuh", "jatukrama", "jauh", "jauhar", "jauhari", "jauza", "jawab", "jawang", "jawanisasi", "jawara", "jawat", "jawawut", "jawer", "jawi", "jawil", "jaya", "jayacihna", "jayapatra", "jayasong", "jayastamba", "jayeng", "jaz", "jazam", "jazirah", "jazirat", "jebab", "jebah", "jebai", "jebak", "jebang", "jebar", "jebat", "jeblok", "jeblos", "jebluk", "jebol", "jebor", "jebrol", "jebuh", "jebung", "jebur", "jeda", "jeding", "jedot", "jegal", "jegang", "jegil", "jegogan", "jegung", "jejabah", "jejak", "jejaka", "jejal", "jejap", "jejas", "jejengkok", "jejer", "jejunum", "jejuri", "jeket", "jeksi", "jel", "jela", "jelabak", "jelabir", "jeladan", "jeladren", "jeladri", "jelaga", "jelagra", "jelah", "jelai", "jelajah", "jelak", "jelalat", "jelamprang", "jelanak", "jelang", "jelangak", "jelangkung", "jelantah", "jelapak", "jelapang", "jelar", "jelarang", "jelas", "jelata", "jelatang", "jelau", "jelawat", "jelejeh", "jelek", "jelempah", "jelengar", "jelentik", "jelepak", "jelepok", "jeli", "jelih", "jelijih", "jelimet", "jelimpat", "jeling", "jelir", "jelit", "jelita", "jelma", "jelu", "jeluak", "jeluang", "jelujur", "jeluk", "jelum", "jelungkap", "jeluntung", "jelunut", "jelur-jelir", "jelus", "jelut", "jelutung", "jem", "jemaah", "jemaat", "jemah", "jemala", "jemang", "jemari", "jemaring", "jemawa", "jemba", "jembak", "jembalang", "jembar", "jembatan", "jembel", "jember", "jembiah", "jembrana", "jembut", "jemeki", "jemerlang", "jempalik", "jempalit", "jempana", "jemparing", "jempol", "jempul", "jemput", "jemu", "jemuas", "jemuju", "jemur", "jenahar", "jenak", "jenaka", "jenama", "jenang", "jenangau", "jenat", "jenawi", "jenayah", "jenazah", "jendal", "jendala", "jendel", "jendela", "jendera", "jenderal", "jendol", "jendul", "jenela", "jeneng", "jenewer", "jeng", "jengah", "jengang", "jengat", "jengek", "jenggala", "jenggar", "jengger", "jengget", "jengglong", "jenggot", "jengguk", "jenggul", "jenggut", "jengit", "jengkal", "jengkang", "jengkek", "jengkel", "jengkelit", "jengkeng", "jengker", "jengket", "jengki", "jengking", "jengkit", "jengkol", "jengkolet", "jengkot", "jenglong", "jenguh", "jenguk", "jengul", "jenis", "jenius", "jenjam", "jenjang", "jenjeng", "jentaka", "jentang", "jentayu", "jentelmen", "jentera", "jentik", "jentur", "jenu", "jenuh", "jepa", "jepet", "jepit", "jeprat", "jepret", "jepun", "jeput", "jera", "jerabai", "jeradik", "jeragih", "jerah", "jerahak", "jerahap", "jerait", "jeram", "jeramah", "jerambah", "jerambai", "jerambang", "jerambung", "jerami", "jeran", "jerang", "jerangan", "jerangau", "jerangkah", "jerangkak", "jerangkang", "jerangkong", "jerap", "jerapah", "jerat", "jerau", "jeraus", "jerawat", "jerba", "jerbak", "jereket", "jeremak", "jeremba", "jerembap", "jerembat", "jerembet", "jerembun", "jerempak", "jereng", "jerepet", "jeri", "jeriau", "jerigen", "jerih", "jeriji", "jeriken", "jering", "jeringing", "jerit", "jerjak", "jerkah", "jerkat", "jermal", "jermang", "jernang", "jernih", "jero", "jeroan", "jerohok", "jerojol", "jerongkang", "jerongkes", "jerongkok", "jerongkong", "jerubung", "jeruji", "jeruju", "jeruk", "jerukun", "jerukup", "jerum", "jerumat", "jerumbai", "jerumun", "jerumus", "jerun", "jerung", "jerungkau", "jerungkis", "jerungkung", "jerunuk", "jerupih", "jesben", "jet", "jetis", "jetsam", "jetset", "jewer", "jiawang", "jib", "jibaku", "jibilah", "jibrail", "jibril", "jibti", "jibun", "jicap", "jicapgo", "jicing", "jidal", "jidar", "jidat", "jidur", "jigong", "jigrah", "jih", "jihad", "jihat", "jijik", "jijit", "jijitsu", "jika", "jikalau", "jil", "jila", "jilah", "jilam", "jilat", "jilbab", "jilid", "jim", "jimahir", "jimak", "jimakir", "jimat", "jimawal", "jimbit", "jimpit", "jin", "jinak", "jinayah", "jindra", "jinem", "jineman", "jineng", "jingap", "jingau", "jingga", "jinggring", "jingkat", "jingkik", "jingkrak", "jingo", "jingoisme", "jingu", "jinjang", "jinjing", "jinjit", "jinsom", "jintan", "jip", "jipang", "jiplak", "jipro", "jir", "jirak", "jiran", "jirat", "jirian", "jirus", "jisim", "jitah", "jitak", "jitok", "jitu", "jiwa", "jiwat", "jiwatman", "jiwit", "jizyah", "jlegur", "joang", "jobak", "jobong", "jodang", "jodoh", "jodong", "jogan", "jogar", "joget", "joging", "joglo", "johan", "johar", "johari", "jojing", "jojol", "jok", "joki", "jolak", "jolek", "joli", "jolok", "jolong", "jolor", "jombang", "jomlo", "jompak", "jompo", "jongang", "jonget", "jongga", "jonggol", "jonggolan", "jongjorang", "jongkang", "jongkar-jangkir", "jongkat-jangkit", "jongki", "jongko", "jongkok", "jongkong", "jongos", "jonjot", "jontoh", "jontor", "jontrot", "joran", "joreng", "jori", "jorjoran", "jorok", "jorong", "josna", "jota", "jotang", "jotos", "joule", "jrambah", "jreng", "jua", "juadah", "juak", "jual", "juan", "juandang", "juang", "juar", "juara", "jubah", "jubel", "jubin", "jublag", "jublek", "judek", "judes", "judi", "judo", "judogi", "judoka", "judul", "juek", "juga", "juhi", "juhut", "juih", "juita", "juja", "jujah", "jujai", "jujitsu", "juju", "jujuh", "jujur", "jujuran", "jujut", "jukstaposisi", "jukut", "julab", "julai", "julang", "julat", "juli", "juling", "julir", "julo", "juluk", "julung", "julur", "jumadilakhir", "jumadilawal", "jumantan", "jumantara", "jumat", "jumbai", "jumbil", "jumbo", "jumbuh", "jumbul", "jumeneng", "jumhur", "jumjumah", "jumlah", "jumpa", "jumpalit", "jumpang", "jumpelang", "jumpul", "jumput", "jumrah", "jumud", "jun", "junam", "jundai", "jung", "jungat", "junggang", "jungkal", "jungkang", "jungkar", "jungkat", "jungkir", "jungkit", "jungkol", "jungur", "jungut", "juni", "junior", "junjung", "junta", "juntai", "juntrung", "junub", "junun", "jupang", "jura", "juragan", "jurai", "jurang", "juri", "jurik", "juring", "juris", "jurit", "jurnal", "jurnalis", "jurnalisme", "jurnalistik", "juru", "juruh", "jurung", "jurus", "jus", "justifikasi", "justru", "juta", "jute", "juvenil", "juz", "kaabah", "kaba", "kabah", "kabak", "kabang-kabang", "kabar", "kabaret", "kabat", "kabau", "kabel", "kabihat", "kabil", "kabilah", "kabin", "kabinet", "kabir", "kabisat", "kabit", "kaboi", "kabriolet", "kabruk", "kabu-kabu", "kabuki", "kabul", "kabumbu", "kabung", "kabupaten", "kabur", "kabus", "kabut", "kaca", "kacak", "kacam", "kacamata", "kacang", "kacapiring", "kacapuri", "kacar", "kacau", "kacau-balau", "kacauan", "kacek", "kacer", "kaci", "kacici", "kacip", "kacir", "kaco", "kacrek", "kacu", "kacuk", "kacukan", "kacung", "kad", "kada", "kadahajat", "kadal", "kadam", "kadang", "kadar", "kadariah", "kadas", "kadaster", "kadasteral", "kadastral", "kadaver", "kade", "kademat", "kadensa", "kader", "kadera", "kaderisasi", "kades", "kadet", "kadi", "kadim", "kadipaten", "kadir", "kadiriah", "kadmium", "kado", "kadofor", "kadok", "kadru", "kadung", "kadut", "kaedah", "kaf", "kafaah", "kafah", "kafan", "kafarat", "kafe", "kafeina", "kafetaria", "kafi", "kafil", "kafilah", "kafir", "kafiri", "kaftan", "kagak", "kaget", "kagok", "kagum", "kah", "kahaf", "kahak", "kahan", "kahang", "kahar", "kahat", "kahin", "kahrab", "kahwa", "kahwaji", "kahyangan", "kaidah", "kaifiah", "kaifiat", "kail", "kailalo", "kaimat", "kain", "kaing", "kainit", "kainofobia", "kais", "kaisar", "kait", "kajai", "kajang", "kajangan", "kajen", "kaji", "kak", "kakaban", "kakafoni", "kakagau", "kakah", "kakak", "kakaktua", "kakanda", "kakang", "kakao", "kakap", "kakas", "kakawin", "kakbah", "kakek", "kakerlak", "kaki", "kakodil", "kakofoni", "kakografi", "kakok", "kakologi", "kakostokrasi", "kakrupukan", "kaksa", "kaktus", "kaku", "kakuminal", "kakus", "kala", "kalah", "kalai", "kalajengking", "kalaka", "kalakanji", "kalakati", "kalakeran", "kalakian", "kalam", "kalamba", "kalamdan", "kalamin", "kalamisani", "kalamkari", "kalandar", "kalander", "kalang", "kalap", "kalar", "kalas", "kalat", "kalau", "kalaupun", "kalawija", "kalaza", "kalbi", "kalbu", "kaldera", "kaldron", "kaldu", "kalebas", "kaleidoskop", "kaleidoskopis", "kalem", "kalempagi", "kalender", "kaleng", "kali", "kalian", "kaliber", "kalibit", "kalibrasi", "kalibut", "kalicau", "kalifornium", "kaligraf", "kaligrafi", "kaligrafis", "kalih", "kalikausar", "kaliki", "kalimah", "kalimantang", "kalimat", "kalimatullah", "kalimatusyahadat", "kalimayah", "kalimpanang", "kalingan", "kalio", "kaliper", "kalipso", "kaliptra", "kalis", "kalistenik", "kalium", "kalk", "kalkalah", "kalkarium", "kalkasar", "kalkausar", "kalkopirit", "kalkosium", "kalkulasi", "kalkulator", "kalkulus", "kalkun", "kalo", "kalomel", "kalong", "kalongwese", "kalongwewe", "kalor", "kalori", "kalorimeter", "kalorimetri", "kalorisitas", "kalowatan", "kalpataru", "kalsedon", "kalsiferol", "kalsifikasi", "kalsinasi", "kalsit", "kalsium", "kalui", "kalumet", "kalung", "kalus", "kalut", "kam", "kama", "kamajaya", "kamal", "kamalir", "kamantuhu", "kamar", "kamarban", "kamariah", "kamas", "kamat", "kamba", "kamban", "kambang", "kambar", "kambeh", "kambeli", "kamber", "kambi", "kambing", "kambium", "kambrik", "kambrium", "kambuh", "kambus", "kambut", "kamelia", "kamera", "kamerad", "kamfana", "kamfer", "kamfor", "kamhar", "kami", "kamikaze", "kamil", "kamilmukamil", "kamir", "kamis", "kamisa", "kamisol", "kamisosolen", "kamit", "kamitua", "kamka", "kamkama", "kamomil", "kamp", "kampa", "kampai", "kampalogi", "kampanologi", "kampanye", "kampas", "kampemen", "kamper", "kampil", "kamping", "kampiun", "kampos", "kampret", "kampuh", "kampul", "kampung", "kampus", "kamrad", "kamsen", "kamsia", "kamu", "kamuflase", "kamus", "kan", "kana", "kanaah", "kanaat", "kanabis", "kanak-kanak", "kanal", "kanalisasi", "kanan", "kanang", "kancah", "kancap", "kanceh", "kancera", "kancil", "kancing", "kancung", "kancut", "kanda", "kandang", "kandar", "kandas", "kandel", "kandela", "kandi", "kandidat", "kandidiasis", "kandil", "kandis", "kandul", "kandung", "kandut", "kane", "kang", "kangar", "kangen", "kangka", "kangkang", "kangkung", "kangmas", "kangsa", "kangsar", "kangtau", "kanguru", "kanibal", "kanibalisasi", "kanibalisme", "kanigara", "kanilem", "kanina", "kanisah", "kanjal", "kanjang", "kanjar", "kanjeng", "kanji", "kanker", "kano", "kanoman", "kanon", "kanonir", "kanonis", "kanopi", "kans", "kansel", "kanselari", "kanselir", "kanser", "kanstof", "kanta", "kantan", "kantang", "kantar", "kantata", "kanti", "kantih", "kantil", "kantilever", "kantin", "kanto", "kantong", "kantor", "kantuk", "kantung", "kanun", "kanvas", "kanya", "kanyon", "kaok", "kaolin", "kaon", "kaos", "kaotis", "kap", "kapa", "kapabel", "kapah", "kapai", "kapak", "kapal", "kapan", "kapang", "kapar", "kaparinyo", "kapas", "kapasitans", "kapasitas", "kapasitor", "kapat", "kapel", "kapela", "kaper", "kapi", "kapilaritas", "kapiler", "kapiran", "kapis", "kapisa", "kapit", "kapita", "kapital", "kapitalis", "kapitalisme", "kapitalistis", "kapitan", "kapitol", "kapitulasi", "kapitulum", "kaplares", "kaplars", "kapling", "kaplok", "kapok", "kapon", "kaporit", "kappa", "kaprah", "kapri", "kaprikornus", "kapsalon", "kapsel", "kapstan", "kapster", "kapstok", "kapsul", "kapten", "kapu", "kapuk", "kapung", "kapur", "kapurancang", "kara", "karabin", "karaeng", "karaf", "karagen", "karah", "karahah", "karakter", "karakterisasi", "karakteristik", "karakterologi", "karam", "karamba", "karambol", "karamel", "karang", "karangkitri", "karangwulu", "karantina", "karaoke", "karap", "karapaks", "karapan", "karar", "karas", "karat", "karate", "karategi", "karateka", "karau", "karavan", "karawitan", "karbiah", "karbid", "karbida", "karbohidrase", "karbohidrat", "karboksil", "karbol", "karbolat", "karbolik", "karbon", "karbonado", "karbonan", "karbonat", "karbonil", "karbonisasi", "karborundum", "karburasi", "karburator", "karcis", "kardamunggu", "kardan", "kardia", "kardiak", "kardigan", "kardil", "kardinal", "kardiograf", "kardiografi", "kardiogram", "kardiolog", "kardiologi", "kardiovaskular", "karditis", "kardus", "karel", "karembong", "karena", "karengga", "kareseh-peseh", "karet", "kargo", "kari", "karib", "karibu", "karier", "karies", "karih", "karikatur", "karikatural", "karikaturis", "karil", "karim", "karimah", "karina", "karinasi", "karisma", "karismatik", "karismatis", "karitas", "karitatif", "karkas", "karkata", "karkum", "karkun", "karma", "karmina", "karminatif", "karnaval", "karnivor", "karosel", "karoseri", "karotena", "karotenoid", "karotis", "karpai", "karpel", "karper", "karpet", "karpopodil", "karsa", "karsinogen", "karsinogenik", "karsinologi", "karsinoma", "karst", "karteker", "kartel", "karti", "kartika", "kartilago", "kartografi", "kartogram", "karton", "kartonase", "kartotek", "kartu", "kartun", "kartunis", "karu", "karuan", "karuhun", "karun", "karung", "karunia", "karunkel", "karusi", "karut", "karya", "karyah", "karyasiswa", "karyat", "karyawisata", "kas", "kasa", "kasab", "kasabandiah", "kasad", "kasah", "kasai", "kasak-kusuk", "kasam", "kasang", "kasap", "kasar", "kasasi", "kasatmata", "kasau", "kasdu", "kasein", "kasemat", "kasemek", "kasep", "kaserin", "kaserol", "kaset", "kasi", "kasid", "kasidah", "kasih", "kasihan", "kasiku", "kasim", "kasima", "kasino", "kasintu", "kasip", "kasir", "kasiterit", "kaskade", "kaskaya", "kasmaran", "kasmir", "kasmutik", "kaspe", "kasrah", "kasregister", "kassia", "kasta", "kastal", "kastanyet", "kastel", "kasti", "kastrasi", "kastroli", "kasturi", "kasual", "kasualisme", "kasualitas", "kasuari", "kasuarina", "kasui", "kasuis", "kasuistik", "kasur", "kasus", "kasut", "kaswah", "kata", "katabalik", "katabatik", "katabolisme", "katadrom", "katafalk", "katafora", "katah", "katai", "katak", "kataka", "katakana", "kataklisme", "katakomba", "katalase", "katalepsi", "katalina", "katalis", "katalisasi", "katalisator", "katalisis", "katalisit", "katalog", "katalogisasi", "katalogus", "katamaran", "katang-katang", "katapel", "katar", "katarak", "katarsis", "katartik", "katastrofe", "katatoni", "katatonia", "katawi", "kate", "katebelece", "katedral", "kategori", "kategorial", "kategoris", "kategorisasi", "katek", "katekese", "katekis", "katekisasi", "katekismus", "katekumen", "katel", "katelum", "kater", "katering", "kates", "kateter", "katetometer", "kati", "katib", "katibin", "katifah", "katifan", "katik", "katil", "katimaha", "katimumul", "kation", "katir", "katirah", "katiti", "katode", "katok", "katolik", "katrol", "katuk", "katul", "katun", "katung", "katup", "katut", "katvanga", "katwal", "kau", "kaukab", "kaukasoid", "kaukus", "kaul", "kaula", "kauli", "kaum", "kaung", "kaupui", "kaus", "kausa", "kausal", "kausalitas", "kausatif", "kaustik", "kaustiksoda", "kaut", "kavaleri", "kaveling", "kaver", "kaviar", "kawa-kawa", "kawah", "kawak", "kawal", "kawan", "kawang", "kawanua", "kawasan", "kawat", "kawi", "kawih", "kawijayan", "kawin", "kawista", "kawruh", "kawuk", "kawula", "kawung", "kaya", "kayai", "kayak", "kayambang", "kayan", "kayang", "kayangan", "kayau", "kayu", "kayuh", "kayun", "kebab", "kebabal", "kebah", "kebaji", "kebal", "kebam", "kebas", "kebat", "kebaya", "kebayan", "kebel", "kebelet", "kebembem", "kebin", "kebiri", "keblangsak", "keblinger", "kebo", "kebon", "kebuk", "kebul", "kebuli", "kebun", "kebur", "keburu", "kebut", "kebyar", "kecai", "kecak", "kecalingan", "kecam", "kecambah", "kecamuk", "kecandan", "kecantol", "kecap", "kecapi", "kecar", "kece", "kecebong", "kecek", "kecele", "keceng", "kecepek", "kecer", "kecewa", "keci", "keciak", "kecibak", "kecibeling", "kecik", "kecil", "kecimik", "kecimpring", "kecimpung", "kecimus", "kecipak", "kecipir", "kecipuk", "kecit", "keciut", "kecoak", "kecoh", "kecombrang", "kecong", "kecrek", "kecu", "kecuali", "kecubung", "kecuh-kecah", "kecumik", "kecundang", "kecup", "kecut", "kedabu", "kedadak", "kedah", "kedai", "kedak", "kedal", "kedaluwarsa", "kedam", "kedang", "kedangkai", "kedangkan", "kedangsa", "kedap", "kedasih", "kedau", "kedaung", "kedayan", "kedebong", "kedek", "kedekai", "kedeki", "kedekik", "kedekut", "kedelai", "kedele", "kedemat", "kedemplung", "kedempung", "kedengkang", "kedengkik", "keder", "kedera", "kederang", "kedewaga", "kedi", "kedidi", "kedik", "kedikit", "kedip", "kedodoran", "kedok", "kedondong", "kedongdong", "kedongkok", "kedot", "keduduk", "keduk", "kedul", "kedumung", "kedung", "kedut", "keferdom", "kehel", "keibodan", "kejai", "kejam", "kejamas", "kejan", "kejang", "kejap", "kejar", "kejat", "kejawen", "kejen", "kejer", "keji", "kejibeling", "kejip", "kejolak", "kejora", "keju", "kejuju", "kejur", "kejut", "kek", "kekah", "kekal", "kekam", "kekandi", "kekang", "kekapas", "kekar", "kekara", "kekas", "kekat", "kekau", "kekawin", "kekeba", "kekebik", "kekeh", "kekek", "kekel", "kekemben", "kekep", "keker", "keki", "kekitir", "kekok", "kekol", "kekrupukan", "kelab", "kelabak", "kelabang", "kelabat", "kelabau", "kelabu", "keladak", "keladan", "keladau", "keladi", "kelah", "kelahi", "kelai", "kelak", "kelak-kelik", "kelak-keluk", "kelakah", "kelakanji", "kelakar", "kelalang", "kelam", "kelamai", "kelamarin", "kelambai", "kelambir", "kelambit", "kelambu", "kelambur", "kelamin", "kelamkari", "kelana", "kelandera", "kelang", "kelang-kelok", "kelangkan", "kelangkang", "kelanjar", "kelantang", "kelap", "kelapa", "kelar", "kelara", "kelarah", "kelarai", "kelaras", "kelari", "kelas", "kelasa", "kelasah", "kelasak", "kelasi", "kelat", "kelati", "kelawan", "kelayan", "kelayang", "kelayu", "kelder", "kelebat", "kelebek", "kelebet", "kelebu", "kelebuk", "kelebut", "keledai", "keledang", "keledar", "keledek", "kelejat", "kelek", "kelekap", "kelekatu", "kelelap", "kelelawar", "kelelesa", "kelelot", "kelemak-kelemek", "kelemantang", "kelemayar", "kelemayuh", "kelembahang", "kelembai", "kelembak", "kelemban", "kelembuai", "kelempai", "kelemping", "kelemton", "kelemumur", "kelemur", "kelencer", "kelendara", "keleneng", "kelengar", "kelenggara", "kelengkeng", "kelengkiak", "kelening", "kelenjar", "kelentang", "kelenteng", "kelentik", "kelenting", "kelentit", "kelentong", "kelentung", "kelenung", "kelenyit", "kelep", "kelepai", "kelepak", "kelepat", "kelepek", "kelepet", "kelepik", "kelepir", "kelepit", "kelepuk", "kelepur", "keler", "kelereng", "kelesa", "kelesah", "keleseh", "kelesek", "kelesot", "keletah", "keletak", "keletang", "keletar", "keleti", "keletik", "keletuk", "keletung", "kelewang", "keli", "kelian", "keliar", "kelibang", "kelibat", "kelicap", "kelici", "kelicik", "kelih", "kelijak", "kelik", "kelika", "kelikah", "kelikat", "keliki", "kelikih", "kelikik", "kelikir", "keliling", "kelilip", "kelim", "kelimat", "kelimpanan", "kelimpungan", "kelimun", "kelimut", "kelinci", "kelincir", "kelindan", "keling", "kelingking", "kelingsir", "kelining", "kelinjat", "kelintang", "kelintar", "kelinting", "kelip", "kelipat", "kelir", "keliru", "kelis", "kelisera", "kelisere", "kelit", "keliti", "kelitik", "keliwon", "kelobot", "kelobotisme", "kelocak", "keloceh", "kelodan", "keloelektrovolt", "keloid", "kelojot", "kelok", "kelokak", "kelola", "kelolong", "kelom", "kelombeng", "kelompang", "kelompen", "kelompok", "kelon", "keloneng", "kelonet", "kelong", "kelongkong", "kelongsong", "kelontang", "kelontang-kelantung", "kelontong", "kelonyo", "kelop", "kelopak", "kelor", "kelorak", "kelos", "kelosok", "kelotok", "keloyak", "keloyang", "keloyor", "kelp", "kelu", "kelua", "keluai", "keluak", "keluan", "keluang", "keluangsa", "keluar", "keluarga", "kelubak", "kelubi", "keluburan", "keluh", "kelui", "keluih", "keluk", "kelukup", "kelukur", "keluli", "kelulu", "kelulus", "kelulut", "kelumit", "kelumpang", "kelumun", "kelun", "keluna", "kelunak", "kelung", "kelupas", "kelupur", "keluron", "keluruk", "kelurut", "kelus", "kelusuh-kelasah", "kelut", "kelutum", "keluwung", "keluyuk", "keluyur", "kemah", "kemal", "kemala", "kemam", "kemamang", "keman", "kemandang", "kemandoran", "kemang", "kemangi", "kemarau", "kemari", "kemarin", "kemaruk", "kemas", "kemat", "kematu", "kematus", "kemayu", "kembal", "kembali", "kemban", "kembang", "kembar", "kembara", "kembatu", "kembayat", "kembeng", "kembera", "kembili", "kemboja", "kembol", "kembu", "kembuk", "kembung", "kembur", "kembut", "kemeja", "kemejan", "kemekmek", "kemelut", "kemenakan", "kemendalam", "kemendang", "kemendur", "kementam", "kemenyan", "kemerakan", "kemesu", "kemi", "kemih", "kemik", "kemilap", "kemiluminesens", "kemiri", "kemit", "kemlaka", "kemlandingan", "kemloko", "kemoceng", "kemokinesis", "kemon", "kemopsikiatri", "kemoterapi", "kempa", "kempal", "kempang", "kempas", "kempek", "kempes", "kempetai", "kempis", "kempit", "kemplang", "kempot", "kempu", "kempuh", "kempul", "kempunan", "kempung", "kemput", "kempyang", "kemu", "kemucing", "kemudi", "kemudian", "kemudu", "kemukus", "kemul", "kemumu", "kemuncak", "kemuncup", "kemundir", "kemung", "kemungkus", "kemuning", "kemunting", "kemurgi", "kemut", "kemutul", "ken", "kena", "kenaf", "kenal", "kenan", "kenang", "kenanga", "kenap", "kenapa", "kenapang", "kenari", "kenas", "kencan", "kencana", "kencang", "kencar", "kenceng", "kencing", "kencit", "kencong", "kencrang-kencring", "kencreng", "kencung", "kencur", "kendaga", "kendal", "kendala", "kendali", "kendana", "kendang", "kendara", "kendati", "kendayakan", "kendeka", "kenderi", "kendi", "kendil", "kendit", "kendo", "kendong", "kenduduk", "kendung", "kendungan", "kendur", "kenduri", "kenek", "keneker", "kenem", "kenematik", "kenes", "keng", "kengkang", "kengkeng", "kenidai", "kenikir", "kening", "kenohong", "kenong", "kenop", "kensel", "kental", "kentang", "kentar", "kentara", "kenteng", "kentrung", "kentung", "kentut", "kenur", "kenya", "kenyal", "kenyam", "kenyang", "kenyat", "kenyat-kenyit", "kenyet-kenyut", "kenyi", "kenyih", "kenyir", "kenyit", "kenyut", "keok", "keong", "kep", "kepada", "kepah", "kepai", "kepak", "kepal", "kepala", "kepalang", "kepam", "kepang", "kepar", "keparat", "kepayang", "kepecong", "kepek", "kepel", "kepencong", "kepeng", "keper", "keperancak", "kepet", "kepetang", "kepialu", "kepiat", "kepik", "kepil", "kepincut", "kepinding", "keping", "kepingin", "kepinis", "kepinjal", "kepiri", "kepis", "kepit", "kepiting", "keplak", "kepleset", "keplok", "kepodang", "kepoh", "kepol", "kepompong", "keponakan", "kepot", "keprak", "keprek", "kepret", "kepris", "kepruk", "kepuh", "kepuk", "kepul", "kepulaga", "kepundan", "kepundung", "kepung", "kepurun", "keputren", "kepuyuk", "kera", "kerabang", "kerabat", "kerabik", "kerabu", "keracak", "keracap", "keraeng", "kerah", "kerahi", "kerai", "kerajang", "kerajat", "kerak", "kerakah", "kerakal", "kerakap", "kerakeling", "keram", "kerama", "keraman", "keramas", "keramat", "keramba", "kerambil", "kerambit", "keramboja", "keramik", "keramikus", "kerampagi", "kerampang", "keramunting", "keran", "kerancang", "keranda", "kerang", "kerang-keroh", "kerangas", "kerangka", "kerangkai", "kerangkeng", "kerani", "keranjang", "keranjat", "keranji", "keranjingan", "keranta", "kerantong", "kerap", "kerapu", "keras", "kerasan", "kerat", "keratabasa", "keratin", "keratitis", "keratoelastin", "keraton", "kerau", "kerawai", "kerawak", "kerawang", "kerawat", "kerawit", "kerbang", "kerbat", "kerbau", "kerbuk", "kercap-kercip", "kercap-kercup", "kercing", "kercit", "kercup", "kercut", "kerdak", "kerdam", "kerdil", "kerdom", "kerdut", "kere", "kerebok", "kereceng", "kerecik", "keredak", "keredep", "keredok", "keredong", "kerek", "kereket", "kerekot", "kerekut", "keremi", "keremot", "kerempagi", "kerempeng", "kerempung", "keremus", "keren", "kerencang", "kerencung", "kerendang", "kereneng", "kereng", "kerengga", "kerenggamunggu", "kerengkam", "kerengkiang", "kerentam", "kerentang", "kerenting", "kerenyam", "kerenyot", "kerepas", "kerepek", "kerepes", "kerepot", "kerepyak", "kerese", "kerese-pese", "keresek", "kereseng", "keresot", "kereta", "keretan", "keretek", "keretot", "keretut", "kereweng", "keri", "keriang-keriut", "keriap", "kerias", "keriau", "kerical", "kericau", "keridas", "keridik", "kerih", "kerik", "kerikal", "kerikam", "kerikil", "kerikit", "kerimut", "kerinan", "kerincing", "kerinding", "kering", "keringat", "keriningan", "kerinjal", "kerinjang", "kerinjing", "kerintil", "kerinting", "kerip", "keripik", "keriput", "keris", "kerisi", "kerisik", "kerising", "kerisut", "kerit", "keritik", "keriting", "keriuk", "keriut", "kerja", "kerjang", "kerjantara", "kerjap", "kerkah", "kerkak", "kerkap", "kerkau", "kerkop", "kerkup", "kerlap", "kerling", "kerlip", "kermak", "kermanici", "kermi", "kernai", "kerneli", "kernet", "kernu", "kernyat-kernyut", "kernyau", "kernyih", "kernying", "kernyit", "kernyut", "kero", "kerobak", "kerobat", "kerobek", "keroco", "kerocok", "kerogen", "keroh", "kerok", "kerokot", "keromong", "keron", "keroncang", "keroncong", "keroncor", "kerong", "kerongkongan", "kerongsang", "kerontang", "kerop", "keropak", "keropas-keropis", "keropeng", "keropok", "keropong", "keropos", "kerosak", "kerosek", "kerosi", "kerosin", "kerosok", "kerosong", "kerot", "kerotak", "kerotot", "keroyok", "kerpai", "kerpak", "kerpas", "kerpubesi", "kerpuk", "kerpus", "kers", "kersai", "kersak", "kersang", "kersani", "kersen", "kersik", "kersuk", "kertaaji", "kertah", "kertak", "kertang", "kertap", "kertas", "kertau", "kertuk", "kertus", "keruan", "kerubim", "kerubin", "kerubung", "kerubut", "kerucil", "kerucut", "kerudung", "keruh", "keruing", "keruit", "keruk", "kerukut", "kerul", "keruma", "kerumit", "kerumuk", "kerumun", "kerumus", "kerun", "kerung", "kerunkel", "keruntang-pungkang", "kerunting", "keruntung", "kerunyut", "kerup", "kerupuk", "kerut", "kerutak", "kerutup", "keruyuk", "kes", "kesah", "kesak", "kesal", "kesam", "kesambet", "kesambi", "kesan", "kesana", "kesandung", "kesang", "kesangsang", "kesap-kesip", "kesasar", "kesat", "kesatria", "kesek", "kesel", "keselak", "keseleo", "kesemek", "kesengsem", "keseran", "keseser", "keset", "kesi", "kesiap", "kesik", "kesima", "kesimbukan", "kesini", "kesip", "kesitu", "kesiur", "keskul", "kesmaran", "kesohor", "kesomplok", "kesongo", "kesot", "kesrakat", "kesting", "kesturi", "kesu-kesi", "kesuh-kesih", "kesuk-kesik", "kesuma", "kesumat", "kesumba", "kesup", "kesusu", "kesut", "keta", "ketaban", "ketai", "ketak", "ketakar", "ketakong", "ketal", "ketam", "ketambak", "ketampi", "ketan", "ketang", "ketap", "ketapak", "ketapang", "ketapek", "ketar", "ketarap", "ketat", "ketaton", "ketawa", "ketaya", "ketayap", "ketegar", "ketek", "ketel", "ketela", "ketemu", "keten", "ketena", "keteng", "ketepel", "ketepeng", "keter", "ketes", "keteter", "ketgat", "keti", "ketiak", "ketial", "ketiap", "ketiau", "ketiban", "ketiding", "ketik", "ketika", "ketil", "ketilang", "ketimbang", "ketimbis", "ketimbul", "ketimbung", "keting", "ketinjau", "ketinting", "ketip", "ketiplak", "ketipung", "ketirah", "ketis", "ketitir", "ketlingsut", "ketogenesis", "ketok", "ketola", "ketombe", "keton", "ketonemia", "ketonggeng", "ketonuria", "ketopong", "ketoprak", "ketosa", "ketrek", "ketu", "ketua", "ketuat", "ketuban", "ketuir", "ketuk", "ketul", "ketumbar", "ketumbi", "ketumbit", "ketumbu", "ketumpang", "ketun", "ketungging", "ketup", "ketupa", "ketupat", "ketupuk", "ketur", "ketus", "kev", "kewalahan", "keweni", "kewer", "kewes", "kewuh", "kha", "khabis", "khadam", "khadim", "khafi", "khair", "khairat", "khalas", "khalayak", "khali", "khalifah", "khalifatulah", "khalifatullah", "khalik", "khalikah", "khalikul", "khalil", "khalilullah", "khalis", "khalwat", "khamar", "khamir", "khamsin", "khamzab", "khanjar", "kharab", "khas", "khasi", "khasiat", "khat", "khatam", "khatib", "khatifah", "khatimah", "khatulistiwa", "khauf", "khaul", "khawas", "khawasulkhawas", "khawatir", "khayal", "khayali", "khazanah", "khi", "khianat", "khiar", "khidaah", "khidmah", "khidmat", "khilaf", "khilafiah", "khinzir", "khisit", "khitah", "khitan", "khitbah", "khizanatulkitab", "khoja", "khojah", "khotbah", "khuduk", "khulafa", "khuldi", "khuluk", "khunsa", "khurafat", "khusuf", "khusus", "khusyuk", "kia", "kiah", "kiai", "kiak", "kial", "kiam", "kiamat", "kiambang", "kian", "kiang-kiut", "kiani", "kiap", "kiar", "kiara", "kias", "kiasi", "kiasmus", "kiat", "kiaupau", "kibang", "kibar", "kibas", "kibernetika", "kibir", "kiblat", "kiblik", "kibriah", "kibul", "kicang-kecoh", "kicang-kicu", "kicau", "kici", "kicik", "kicu", "kicuh", "kicut", "kida-kida", "kidal", "kidam", "kidang", "kidar", "kidul", "kidung", "kifayah", "kifoskaliose", "kifoskaliosis", "kihanat", "kijai", "kijang", "kijil", "kijing", "kikih", "kikik", "kikil", "kikir", "kikis", "kikitir", "kikuk", "kikus", "kila", "kilah", "kilai", "kilan", "kilang", "kilap", "kilar", "kilas", "kilat", "kilau", "kili", "kilik", "kilir", "kiln", "kilo", "kilogram", "kilohertz", "kilokalori", "kiloliter", "kilometer", "kiloton", "kilovolt", "kilowatt", "kilowattjam", "kilus", "kim", "kima", "kimah", "kimantu", "kimar", "kimbah", "kimbang", "kimbul", "kimia", "kimiawi", "kimkha", "kimlo", "kimo", "kimograf", "kimono", "kimpal", "kimpul", "kimpus", "kimput", "kimus", "kina", "kinang", "kinantan", "kinanti", "kinasa", "kinasih", "kinca", "kincah", "kincak", "kincang", "kincau", "kincir", "kincit", "kincung", "kincup", "kindap", "kinematika", "kinematograf", "kinesika", "kinesimeter", "kineskop", "kinestesia", "kinestesiometer", "kinestesis", "kinetik", "kinetika", "kinetokardiografi", "kingking", "kingkip", "kingkit", "kingkong", "kini", "kinine", "kinja", "kinjat", "kinjeng", "kinred", "kintaka", "kintal", "kinte", "kintil", "kinyang", "kio", "kios", "kipa", "kipai", "kipang", "kipas", "kiper", "kiprah", "kiprat", "kipsiau", "kipu", "kir", "kira", "kiraah", "kiraat", "kirab", "kirai", "kiramat", "kiran", "kirana", "kirap", "kiras", "kirau", "kirbat", "kiri", "kirik", "kirim", "kirinyu", "kirip", "kiris", "kirita", "kirmizi", "kiru", "kiruh", "kirung", "kisa", "kisah", "kisai", "kisar", "kisas", "kisat", "kisi", "kisik", "kismat", "kismis", "kisruh", "kista", "kisut", "kiswah", "kit", "kita", "kitab", "kitabulah", "kitang", "kitar", "kitik", "kitin", "kiting", "kitir", "kitorang", "kitri", "kits", "kiu", "kiuk", "kiwari", "kiwi", "kizib", "klaim", "klakklik", "klakson", "klamidospora", "klan", "klandestin", "klangenan", "klante", "klarifikasi", "klarinet", "klasemen", "klasifikasi", "klasik", "klasikal", "klasis", "klasisisme", "klausa", "klaustrofobia", "klaustrum", "klausul", "klaver", "klavikor", "klavikula", "klaviola", "kleder", "kleidotomi", "kleistogami", "klem", "klemensi", "klen", "klenengan", "klengkeng", "klenik", "klenteng", "klep", "klepon", "klepsidra", "kleptofobi", "kleptoman", "kleptomania", "kleptomaniak", "klerek", "klerikal", "klerikus", "klerus", "klien", "klik", "kliker", "klimaks", "klimakterium", "klimaktorium", "klimatografi", "klimatolog", "klimatologi", "klimis", "klimograf", "klimosekuen", "klimoskop", "klin", "klinik", "klining", "klinis", "klinisi", "klinometer", "klip", "kliping", "klir", "kliring", "klise", "klistron", "klitelum", "klitik", "klitoris", "kliwon", "kliyengan", "kloaka", "klon", "klona", "kloning", "klonograf", "klonus", "klop", "klor", "kloral", "kloramina", "klorat", "klorida", "kloridimeter", "klorin", "klorinasi", "klorit", "klorobenzena", "klorofil", "kloroform", "kloroformat", "klorokuin", "klorolignin", "kloroplas", "kloroprena", "klorosis", "kloset", "klub", "kluntang-kluntung", "klusium", "knalpot", "knop", "knot", "koa", "koagel", "koagregasi", "koagulan", "koagulasi", "koak", "koaksi", "koaksial", "koala", "koalisi", "koana", "koar", "kobah", "kobak", "kobalamin", "kobalt", "kobar", "kober", "koboi", "koboisme", "kobok", "kobol", "kobongan", "kobra", "kocah-kacih", "kocak", "kocar-kacir", "kocek", "koci", "kocilembik", "kocoh", "kocok", "kocolan", "kocong", "kocor", "koda", "kodak", "kode", "kodein", "kodeks", "kodi", "kodifikasi", "kodok", "kodominan", "kodrat", "kodrati", "koe", "koedukasi", "koefisien", "koeksistensi", "koenzim", "koersi", "koersif", "kofaktor", "kofein", "kofermen", "kognat", "kognatif", "kognisi", "kognitif", "koh", "kohabitasi", "koheren", "koherensi", "kohesi", "kohesif", "kohir", "kohlea", "kohol", "kohong", "kohor", "koil", "koin", "koinseden", "koinsiden", "koinsidensi", "koipuk", "koit", "koitus", "koja", "kojah", "kojang", "kojoh", "kojol", "kojor", "kok", "koka", "kokah", "kokaina", "kokainisasi", "kokainisme", "kokang", "kokarde", "kokas", "koki", "kokila", "koklea", "kokoa", "kokoh", "kokok", "kokokbeluk", "kokol", "kokon", "kokosan", "kokot", "kokpit", "koksa", "koktail", "kokurikuler", "kokus", "kol", "kola", "kolaborasi", "kolaborator", "kolagen", "kolak", "kolam", "kolang-kaling", "kolaps", "kolaret", "kolase", "kolateral", "kolator", "kolega", "kolegial", "kolegialitas", "koleh-koleh", "kolek", "koleksi", "kolekte", "kolektif", "kolektivis", "kolektivisasi", "kolektivisme", "kolektivitas", "kolektor", "kolembeng", "kolemia", "koleng", "koleoptil", "kolera", "kolese", "kolesom", "kolesterin", "kolesterol", "koli", "kolibri", "koligasi", "kolik", "kolimasi", "kolina", "kolintang", "koliseng", "kolitis", "kolkhoz", "kolodion", "kolofon", "kologen", "koloid", "koloidal", "kolok", "kolokasi", "kolokium", "kolom", "kolomben", "kolon", "kolone", "kolonel", "kolong", "koloni", "kolonial", "kolonialis", "kolonialisme", "kolonis", "kolonisasi", "kolonoskop", "kolonye", "kolor", "kolorimeter", "kolorimetri", "kolosal", "kolosom", "kolostomi", "kolostrum", "kolot", "kolportir", "kolt", "kolum", "kolumela", "kolumnis", "kolumnus", "kolusi", "koluvium", "kom", "koma", "komaliwan", "koman", "komandan", "komandemen", "komanditer", "komando", "komaran", "komat-kamit", "kombat", "kombinasi", "kombo", "kombor", "kombusio", "komedi", "komedian", "komendur", "komeng", "komensal", "komensalisme", "komentar", "komentator", "komersial", "komersialisasi", "komet", "komfortabel", "komidi", "komik", "komikal", "komikus", "kominusi", "komis", "komisar", "komisariat", "komisaris", "komisi", "komisioner", "komisura", "komit", "komite", "komitmen", "komkoma", "komoditas", "komodo", "komodor", "kompak", "kompanyon", "komparasi", "komparatif", "komparator", "kompartemen", "kompas", "kompatibel", "kompatibilitas", "kompatriot", "kompendium", "kompeni", "kompensasi", "kompes", "kompeten", "kompetensi", "kompetisi", "kompetitif", "kompetitor", "kompi", "kompilasi", "kompilator", "komplain", "kompleks", "kompleksitas", "komplemen", "komplementer", "komplet", "komplikasi", "komplikatif", "komplimen", "komplot", "kompon", "komponen", "kompong", "komponis", "kompor", "kompos", "komposer", "komposisi", "komposit", "kompositum", "komprador", "komprang", "komprehensif", "kompres", "kompresi", "kompresor", "kompromi", "kompromistis", "kompulsi", "kompulsif", "komputer", "komputerisasi", "komtabilitas", "komunal", "komunalisme", "komunalistik", "komune", "komuni", "komunikabilitas", "komunikan", "komunikasi", "komunikatif", "komunikator", "komunike", "komunis", "komunisme", "komunistis", "komunistofobi", "komunistofobia", "komunitas", "komutator", "komuter", "konan", "konco", "koncoisme", "kondang", "kondangan", "konde", "kondektur", "kondensasi", "kondensat", "kondensator", "kondensor", "kondilus", "kondisi", "kondom", "kondominium", "kondomisasi", "kondor", "kondrin", "kondroblas", "konduite", "konduksi", "konduktans", "konduktimeter", "konduktivitas", "konduktor", "kondusif", "koneksi", "koneksitas", "konektor", "konfederasi", "konfeksi", "konferensi", "konfesi", "konfigurasi", "konfiks", "konfirmasi", "konflik", "konform", "konformitas", "konfrontasi", "konfrontatif", "kongenital", "kongesti", "kongkalikong", "kongko", "kongkoan", "kongkong", "kongkret", "konglomerasi", "konglomerat", "kongregasi", "kongres", "kongresis", "kongsi", "konifera", "konis", "konjugan", "konjugasi", "konjungsi", "konjungter", "konjungtif", "konjungtiva", "konjungtivitis", "konjungtor", "konjungtur", "konkaf", "konklaf", "konklusi", "konklusif", "konkologi", "konkomitan", "konkordansi", "konkordat", "konkresi", "konkret", "konkretisasi", "konkuisnador", "konkuren", "konkurensi", "konkurs", "konoid", "konon", "konosemen", "konotasi", "konotatif", "konperensi", "konsekrasi", "konsekuen", "konsekuensi", "konsekutif", "konseli", "konseling", "konselor", "konsensus", "konsentrasi", "konsentrat", "konsentrik", "konsentris", "konsep", "konsepsi", "konsepsional", "konseptor", "konseptual", "konseptualisasi", "konser", "konsertina", "konserto", "konservasi", "konservasionis", "konservatif", "konservatisme", "konservator", "konservatori", "konservatorium", "konsesi", "konsesif", "konsesional", "konsiderans", "konsiderasi", "konsili", "konsiliasi", "konsinyasi", "konsinyatir", "konsisten", "konsistensi", "konsistori", "konsol", "konsolasi", "konsolidasi", "konsonan", "konsonansi", "konsonantal", "konsorsium", "konspirasi", "konspiratif", "konspirator", "konstabel", "konstan", "konstanta", "konstantagravitasi", "konstatasi", "konstatatif", "konstatir", "konstelasi", "konstipasi", "konstituante", "konstituen", "konstitusi", "konstitusional", "konstitusionalisme", "konstriksi", "konstriktor", "konstruksi", "konstruktif", "konstruktivisme", "konsul", "konsulat", "konsulen", "konsuler", "konsultan", "konsultasi", "konsumen", "konsumer", "konsumerisme", "konsumsi", "konsumtif", "kontak", "kontal-kantil", "kontaminasi", "kontan", "kontang-kanting", "konte", "konteks", "kontekstual", "kontekstualisme", "kontemplasi", "kontemplatif", "kontemporer", "konten", "konter", "kontes", "kontestan", "kontet", "kontiguitas", "kontinen", "kontinental", "kontingen", "kontinu", "kontinuitas", "kontinum", "kontoid", "kontol", "kontra", "kontrabande", "kontrabas", "kontradiksi", "kontradiktif", "kontraindikasi", "kontrak", "kontraksi", "kontraktor", "kontraktual", "kontraproduktif", "kontras", "kontrasepsi", "kontraseptif", "kontravensi", "kontribusi", "kontributor", "kontrol", "kontrolir", "kontroversi", "kontroversial", "kontur", "konus", "konveks", "konveksi", "konvektif", "konvensi", "konvensional", "konvergen", "konvergensi", "konversasi", "konversi", "konveyor", "konvoi", "konvolusi", "konvulsan", "konvulsi", "konyak", "konyal", "konyan", "konyol", "kooperasi", "kooperatif", "kooperativisme", "kooperator", "kooptasi", "koordinasi", "koordinat", "koordinatif", "koordinator", "kop", "kopah", "kopaiba", "kopak", "kopal", "kopat-kapit", "kopbal", "kopek", "kopel", "kopelrim", "koper", "koperasi", "kopet", "kopi", "kopiah", "kopilot", "kopling", "koplo", "kopok", "kopolimer", "kopong", "kopra", "koprafagia", "koprak", "kopral", "koprok", "koprol", "koprolit", "kopula", "kopulasi", "kopulatif", "kopyok", "kopyor", "kor", "koral", "koralit", "koran", "korano", "korban", "korden", "kordial", "kordit", "kordon", "korduroi", "kored", "koreferensialitas", "korek", "koreke", "koreksi", "korektif", "korektor", "korelasi", "korelatif", "korenah", "koreng", "koreograf", "koreografer", "koreografi", "koreografis", "kores", "koresponden", "korespondensi", "koret", "koridor", "korion", "kornea", "kornel", "korner", "kornet", "koroh", "koroid", "korok", "korologi", "korona", "koronal", "koroner", "korong", "korosi", "korosif", "korporasi", "korporat", "korporatif", "korporatisme", "korps", "korpulensi", "korpus", "korsase", "korsel", "korselet", "korset", "korsleting", "korteks", "kortikulus", "korting", "kortison", "korugator", "korundum", "korup", "korupsi", "koruptif", "koruptor", "korve", "korvet", "kosak-kasik", "kosakata", "kosar", "kosbas", "kosek", "kosekan", "kosel", "kosen", "koset", "kosinus", "kosmetik", "kosmetilogi", "kosmetolog", "kosmetologi", "kosmetologis", "kosmis", "kosmogoni", "kosmografi", "kosmologi", "kosmologis", "kosmonaut", "kosmopolit", "kosmopolitan", "kosmopolitanisme", "kosmos", "kosmotron", "kosokbali", "kosong", "kostum", "kota", "kotah", "kotai", "kotak", "kotak-katik", "kotaklema", "kotek", "koteka", "koteks", "koteng", "koterek", "kotes", "kotiledon", "kotipa", "kotok", "kotong", "kotor", "kotrek", "kovalensi", "kover", "kowan", "kowek", "koyak", "koyam", "koyan", "koyok", "krai", "krakal", "kram", "krama", "kranapaksa", "krangeyan", "kraniologi", "kraniometri", "kraniotomi", "kranium", "krans", "krasis", "krayon", "kreasi", "kreatif", "kreativitas", "kreator", "krebo", "krecek", "kredibilitas", "kredit", "kreditabel", "kreditor", "kredo", "krem", "kremasi", "krematori", "krematorium", "kreol", "kreolin", "kreolisasi", "kreosol", "kresendo", "kresol", "kretin", "kribo", "kricak", "krida", "krifoli", "krim", "kriminal", "kriminalis", "kriminalisasi", "kriminalitas", "kriminolog", "kriminologi", "kriminologis", "kring", "krio", "kriofil", "kriofit", "kriogen", "kriogenika", "krioterapi", "kripta", "kriptogam", "kriptografi", "kriptogram", "kriptol", "kripton", "krisan", "krisantemum", "krisis", "krisma", "krisoberil", "krisofil", "krisolit", "krisopras", "krista", "kristal", "kristalisasi", "kristalografi", "kristaloid", "kristalosa", "kristen", "kristiani", "kristus", "kriteria", "kriterium", "kritik", "kritikus", "kritis", "kritisi", "kriya", "krobongan", "kroco", "kroket", "krol", "krom", "kromat", "kromatid", "kromatika", "kromatin", "kromatis", "kromatofor", "kromatografi", "kromit", "kromium", "kromo", "kromofil", "kromofob", "kromogen", "kromong", "kromosfer", "kromosom", "kromotropi", "krompyang", "kronem", "kroni", "kronik", "kroniometri", "kronis", "kronisme", "kronobiologi", "kronogram", "kronologi", "kronologis", "kronometer", "kronosekuen", "kronoskop", "krosboi", "kroto", "kru", "kruistik", "kruk", "krukat", "krusial", "krustasea", "ksatria", "ksi", "kuaci", "kuadran", "kuadrat", "kuadratika", "kuadratur", "kuadratus", "kuadrenium", "kuadriliun", "kuadripartit", "kuadrisep", "kuadrupel", "kuadrupleks", "kuadruplet", "kuah", "kuai", "kuak", "kuala", "kualat", "kuali", "kualifikasi", "kualitas", "kualitatif", "kualon", "kuang", "kuangkiut", "kuangwung", "kuantifikasi", "kuantitas", "kuantitatif", "kuantum", "kuap", "kuar", "kuari", "kuarik", "kuark", "kuarsa", "kuarsit", "kuart", "kuartal", "kuarter", "kuarterner", "kuartet", "kuartil", "kuarto", "kuas", "kuasa", "kuasar", "kuasi", "kuat", "kuatren", "kuau", "kuaya", "kuayah", "kuayan", "kubah", "kubak", "kubang", "kubik", "kubil", "kubin", "kubis", "kubisme", "kubistik", "kubit", "kuboid", "kubra", "kubti", "kubu", "kubul", "kubung", "kubur", "kubus", "kucai", "kucak", "kucam", "kucandan", "kucar-kacir", "kucek", "kucel", "kucica", "kucil", "kucindan", "kucing", "kucir", "kucup", "kucur", "kuda", "kudai", "kudang", "kudap", "kudeta", "kudi", "kudian", "kudis", "kudu", "kuduk", "kudung", "kudup", "kudus", "kue", "kueni", "kuesioner", "kuetiau", "kufu", "kufur", "kui", "kuih", "kuil", "kuilu", "kuin", "kuing", "kuini", "kuinina", "kuintal", "kuintesens", "kuintet", "kuintil", "kuintiliun", "kuintuplet", "kuir", "kuis", "kuit", "kuitansi", "kujang", "kujarat", "kujung", "kujur", "kujut", "kuk", "kukabura", "kukai", "kukang", "kukila", "kuku", "kukuh", "kukuk", "kukul", "kukup", "kukur", "kukuruyuk", "kukus", "kulah", "kulai", "kulak", "kulakasar", "kulan", "kulansing", "kulasentana", "kulat", "kulawangsa", "kuli", "kuliah", "kulik-kulik", "kulikat", "kulim", "kulimat", "kuliner", "kulintang", "kulir", "kulit", "kulkas", "kulminasi", "kulon", "kulot", "kult", "kultivar", "kultivasi", "kultur", "kultural", "kulturisasi", "kultus", "kulub", "kuluk", "kulum", "kulup", "kulur", "kulut", "kulzum", "kuma-kuma", "kumai", "kumal", "kuman", "kumandang", "kumanga", "kumat", "kumba", "kumbah", "kumbang", "kumbar", "kumbik", "kumbu", "kumbuh", "kumena", "kumico", "kuminter", "kumis", "kumkuma", "kumpai", "kumpal", "kumpar", "kumpi", "kumpul", "kumuh", "kumulasi", "kumulatif", "kumulonimbus", "kumulus", "kumur", "kumus", "kumut", "kunang-kunang", "kunani", "kunar-kunar", "kunarpa", "kunca", "kuncah", "kuncen", "kunci", "kuncir", "kuncit", "kuncung", "kuncup", "kundai", "kundang", "kundi", "kundur", "kunduran", "kunfayakun", "kung", "kungfu", "kungkang", "kungki", "kungkum", "kungkung", "kuning", "kuningan", "kunjung", "kuno", "kunta", "kuntau", "kuntilanak", "kuntit", "kuntuan", "kuntul", "kuntum", "kuntung", "kunut", "kunyah", "kunyam", "kunyit", "kunyuk", "kuorum", "kuosien", "kuota", "kup", "kupa", "kupahan", "kupak", "kupang", "kupas", "kupat", "kupat-kapit", "kupe", "kupel", "kupi", "kupil", "kuping", "kupir", "kuplet", "kupluk", "kupnat", "kupon", "kuproprotein", "kuprum", "kupu-kupu", "kupui", "kupur", "kur", "kura", "kurai", "kurambit", "kurang", "kurap", "kuras", "kurasani", "kurasao", "kuratif", "kurator", "kuratorium", "kurau", "kurawal", "kurban", "kurcaci", "kuren", "kuret", "kuretase", "kuria", "kuricak", "kurigram", "kurik", "kurikuler", "kurikulum", "kuring", "kuriositas", "kuripan", "kurir", "kuririk", "kurium", "kurkatovium", "kurkuma", "kurltase", "kurma", "kurs", "kursemangat", "kursi", "kursif", "kursor", "kursus", "kurtase", "kurun", "kurung", "kurus", "kuruyuk", "kurva", "kurvalinier", "kurvatur", "kus", "kusa", "kusal", "kusam", "kusanin", "kusat-mesat", "kusau", "kusen", "kusik", "kusir", "kuskus", "kuspis", "kusruk", "kusta", "kusu", "kusuf", "kusuk", "kusuma", "kusut", "kuta", "kutaha", "kutak", "kutang", "kutat", "kutat-kutet", "kuteks", "kuteri", "kuti", "kutik", "kutikula", "kutil", "kutin", "kuting", "kutip", "kutu", "kutub", "kutubaru", "kutubusitah", "kutuk", "kutung", "kutut", "kuud", "kuwu", "kuwuk", "kuwung-kuwung", "kuwur", "kuya", "kuyang", "kuyu", "kuyuh", "kuyup", "kwartet", "kwartir", "kwasiorkor", "kweni", "kwetiau", "kwosien", "laal", "lab", "laba", "labah-labah", "labak", "labang", "labas", "label", "labelum", "laberang", "labi-labi", "labial", "labialisasi", "labil", "labiodental", "labiovelar", "labirin", "labium", "laboran", "laboratoris", "laboratorium", "labrak", "labrakan", "labrang", "labres", "labrum", "labu", "labuda", "labuh", "labun", "labur", "labut", "lacak", "laci", "lacur", "lacut", "lada", "ladah", "ladam", "ladan", "ladang", "laden", "ladi", "lading", "ladu", "ladung", "lafal", "laga", "lagak", "lagam", "lagan", "lagang", "lagau", "lagi", "lagiah", "lago", "lagonder", "lagu", "laguh-lagah", "laguna", "lagwu", "lah", "lahab", "lahad", "lahak", "lahan", "lahang", "lahap", "lahar", "lahir", "lahiriah", "lai", "laici", "laif", "laik", "lailah", "lailatulkadar", "lain", "lais", "laja", "lajak", "lajang", "lajat", "lajnah", "laju", "lajur", "lak", "lakab", "lakak", "lakar", "lakara", "laken", "lakeri", "laki", "laklak", "laklakan", "lakmus", "laknat", "laknatullah", "lakon", "lakonik", "lakonisme", "lakrimator", "laksa", "laksamana", "laksana", "laksatif", "laksmi", "laktase", "laktasi", "laktat", "laktogen", "laktoglobulin", "laktometer", "lakton", "laktosa", "laku", "lakum", "lakuna", "lakur", "lakustrin", "lala", "lalah", "lalai", "lalak", "lalandak", "lalang", "lalap", "lalat", "lalau", "laler", "lali", "lalim", "lalu", "lalu-lalang", "lam", "lama", "lamalif", "laman", "lamang", "lamar", "lamat-lamat", "lambai", "lambak", "lamban", "lambang", "lambar", "lambat", "lambda", "lambe", "lambert", "lambit", "lambo", "lambu", "lambuk", "lambung", "lambur", "lamdukpai", "lamela", "lamender", "lamin", "lamina", "laminah", "laminasi", "laminating", "lampai", "lampam", "lampan", "lampang", "lampar", "lampas", "lampau", "lampeni", "lampes", "lampias", "lampik", "lampin", "lamping", "lampion", "lampir", "lampit", "lampok", "lampor", "lampu", "lampung", "lampus", "lamtoro", "lamtoronisasi", "lamun", "lamur", "lamusir", "lana", "lanang", "lanar", "lanau", "lanbau", "lanca", "lancang", "lancap", "lancar", "lancia", "lancing", "lancip", "lancit", "lancong", "lancung", "lancur", "lancut", "landa", "landahur", "landai", "landak", "landang", "landap", "landas", "landau", "landors", "landrad", "landuk", "landung", "landur", "lang", "langah", "langak-languk", "langau", "langen", "langendrian", "langenswara", "langgah", "langgai", "langgam", "langgan", "langgang", "langgar", "langgas", "langgayan", "langgeng", "langguk", "langgung", "langi", "langir", "langis", "langit", "langka", "langkah", "langkai", "langkan", "langkang", "langkap", "langkara", "langkas", "langkat", "langkau", "langking", "langkisan", "langkitang", "langkong", "langkup", "langlai", "langlang", "langsai", "langsam", "langsang", "langsar", "langsat", "langse", "langseng", "langsep", "langsi", "langsing", "langsir", "langsuir", "langsung", "langu", "langut", "lanhir", "lanja", "lanjai", "lanjak", "lanjam", "lanjang", "lanjar", "lanjau", "lanji", "lanjuk", "lanjung", "lanjur", "lanjut", "lanolin", "lanset", "lansia", "lansir", "lanskap", "lantah", "lantai", "lantak", "lantam", "lantan", "lantang", "lantanum", "lantar", "lantas", "lantera", "lantesari", "lantik", "lantin", "lanting", "lantip", "lantun", "lantung", "lantur", "lanugo", "lanun", "lanus", "lanyah", "lanyak", "lanyau", "laocu", "laos", "laoteng", "lap", "lapah", "lapak", "lapang", "lapar", "laparoskop", "laparoskopi", "lapat-lapat", "lapektomi", "lapel", "lapih", "lapik", "lapili", "lapir", "lapis", "lapislazuli", "lapo", "lapor", "laptop", "lapuk", "lapun", "lapur", "lara", "larah", "larai", "larak", "laram", "larang", "larap", "laras", "larat", "larau", "largisimo", "largo", "lari", "larih", "larik", "laring", "laringal", "laringitis", "laringoskop", "laris", "larnaks", "laron", "lars", "laru", "larung", "larut", "larva", "larvarium", "las", "lasa", "lasah", "lasak", "lasana", "lasat", "laser", "lasi", "lasinia", "laskar", "laso", "lasparaginase", "lasuh", "lat", "lata", "latah", "latak", "latam", "latar", "latas", "lateks", "laten", "latensi", "lateral", "laterit", "latif", "latifundium", "latih", "lating", "latis", "latma", "latosol", "latuh", "latuk", "latung", "latur", "lauh", "lauk", "laun", "laung", "laur", "laut", "lauya", "lava", "lavase", "lavendel", "lavender", "lawa", "lawah", "lawak", "lawalata", "lawamah", "lawan", "lawang", "lawar", "lawas", "lawat", "lawazim", "lawe", "lawean", "lawi", "lawina", "lawon", "lawrensium", "layah", "layak", "layam", "layan", "layang", "layap", "layar", "layas", "layat", "layer", "layon", "layu", "layuh", "layuk", "layung", "layur", "layut", "laza", "lazim", "lazuardi", "leak", "lebah", "lebai", "lebak", "lebam", "leban", "lebang", "lebap", "lebar", "lebaran", "lebas", "lebat", "leber", "lebih", "lebuh", "lebuk", "lebum", "lebun", "lebung", "lebur", "lecah", "lecak", "lecap", "lecat", "leceh", "lecek", "lecer", "lecet", "leci", "lecit", "leco", "lecok", "lecuh", "lecun", "lecup", "lecur", "lecut", "ledak", "ledang", "ledek", "ledeng", "ledes", "leding", "ledos", "ledre", "leduk", "ledung", "lefa", "lega", "legak-legok", "legal", "legalisasi", "legalitas", "legam", "legap", "legar", "legasi", "legasteni", "legat", "legataris", "legato", "legator", "lege", "legek", "legen", "legenda", "legendaris", "leger", "leges", "leghorn", "legi", "legih", "legio", "legislasi", "legislatif", "legislator", "legisme", "legit", "legitimaris", "legitimas", "legitimasi", "legitimitas", "legiun", "lego", "legok", "legong", "legu", "legum", "legunder", "legundi", "legung", "legup-legup", "leha-leha", "lehar", "leher", "lei", "leja", "lejang", "lejar", "lejas", "lejit", "lejok", "leka", "lekah", "lekak-lekuk", "lekam", "lekang", "lekap", "lekap-lekup", "lekar", "lekas", "lekat", "lekemia", "lekir", "lekit", "lekok", "lekosit", "leksem", "leksikal", "leksikograf", "leksikografi", "leksikografis", "leksikolog", "leksikologi", "leksikon", "leksikostatistik", "leksis", "lekton", "lektor", "lektur", "leku", "lekuh-lekih", "lekuk", "lekum", "lekun", "lekung", "lekup-lekap", "lela", "lelabah", "lelah", "lelai", "lelaki", "lelancur", "lelang", "lelangon", "lelangse", "lelap", "lelar", "lelas", "lelat", "lelatu", "lelawa", "lele", "leleh", "lelembut", "lelemuku", "lelep", "leler", "leles", "lelet", "lelewa", "leli", "lelonobroto", "leluasa", "lelucon", "leluhur", "leluing", "lelung", "lelungit", "leluri", "lem", "lema", "lemah", "lemak", "lemang", "lemari", "lemas", "lemata", "lemau", "lembaga", "lembah", "lembai", "lembak", "lembam", "lemban", "lembang", "lembap", "lembar", "lembayung", "lembega", "lembek", "lembeng", "lembidang", "lembing", "lembok", "lembora", "lembu", "lembung", "lembur", "lemburu", "lembut", "lemena", "lemender", "lemes", "lemidi", "lemo", "lemon", "lempah", "lempai", "lempang", "lempap", "lempar", "lempari", "lempaung", "lempem", "lempenai", "lempeng", "lemper", "lemping", "lempit", "lempoh", "lempuh", "lempuk", "lempung", "lempuyang", "lempuyangan", "lemur", "lemuru", "lemusir", "lena", "lenan", "lencana", "lencang", "lenceng", "lencet", "lenci", "lencir", "lencit", "lencong", "lencun", "lenda", "lendaian", "lendeh", "lender", "lendir", "lendot", "lendung", "lendut", "leng", "lenga", "lengah", "lengai", "lengak", "lengan", "lengang", "lengar", "lengas", "lengat", "lenge", "lenggak", "lenggana", "lengganan", "lenggang", "lenggara", "lenggek", "lengger", "lenggok", "lenggong", "lenggor", "lenggundi", "lenggut", "lengit", "lengkai", "lengkanas", "lengkang", "lengkap", "lengkara", "lengkeng", "lengkesa", "lengket", "lengkiang", "lengking", "lengkitang", "lengkok", "lengkong", "lengkuas", "lengkung", "lengkur", "lengoh", "lengong", "lengos", "lengseng", "lengser", "lengset", "lenguh", "lengung", "lening", "lenis", "lenitrik", "lenja", "lenjan", "lenjaran", "lenjing", "lenjuang", "lenong", "lenor", "lens", "lensa", "lenser", "lenset", "lenso", "lentam-lentum", "lentang", "lentang-lentok", "lenteng", "lentera", "lentik", "lenting", "lentisel", "lentoid", "lentok", "lentong", "lentuk", "lentum", "lentung", "lentur", "lentus", "lenung", "lenyah", "lenyai", "lenyak", "lenyap", "lenyau", "lenyeh", "lenyet", "lenyut", "leo", "leonid", "leontin", "leot", "lepa", "lepai", "lepak", "lepang", "lepap", "lepas", "lepat", "lepau", "lepe", "lepek", "leper", "leperi", "lepes", "lepet", "lepih", "lepik", "lepit", "leplap", "lepoh", "lepok", "lepot", "lepra", "leproma", "lepromin", "leproseri", "leptodos", "leptoskop", "leptosom", "lepu", "lepuh", "lepuk", "lepur", "lerah", "lerai", "lerak", "lerang", "lerap", "lereng", "leret", "lerok", "lerot", "lerum", "les", "lesa", "lesak", "lesan", "lesang", "lesap", "lesat", "lesbi", "lesbian", "lesbianisme", "leseh", "lesek", "leset", "lesi", "lesing", "lesir", "lesit", "lesitin", "lesitina", "lesnar", "lesot", "lesplang", "lestari", "lestek", "lesterung", "lesu", "lesung", "lesus", "lesut", "leta", "letai", "letak", "letal", "letalitas", "letang", "letargi", "lete-lete", "letek", "leter", "leterseter", "letih", "letik", "leting", "letis", "letnan", "letoi", "letos", "letraset", "letuk", "letum", "letung", "letup", "letur", "letus", "leuca", "leukemia", "leukoderma", "leukofit", "leukoma", "leukonisia", "leukopenia", "leukoplakia", "leukore", "leukorea", "leukosit", "leukositometer", "leukositosis", "level", "lever", "leveransir", "levertran", "levirat", "levitin", "levulosa", "lewa", "lewah", "lewar", "lewat", "lewisid", "lewu", "leyeh", "leyot", "lezat", "liabilitas", "lian", "liana", "liang", "liangliong", "liar", "lias", "liat", "liau", "libas", "libat", "libei", "liberal", "liberalis", "liberalisasi", "liberalisme", "liberalistis", "liberasi", "liberator", "libero", "libidis", "libido", "libitum", "libra", "librasi", "libreto", "libur", "licak", "licau", "lici", "licik", "licin", "licurai", "lid", "lidah", "lidas", "lidi", "lidid", "lifo", "lift", "lifter", "liga", "ligamen", "ligan", "ligar", "ligas", "ligasi", "ligat", "ligatur", "ligih", "lignin", "lignit", "lignoselulosa", "lignosulfonat", "lignotuber", "lihai", "lihat", "lik", "likantropi", "likas", "likat", "likir", "liku", "likuid", "likuida", "likuidasi", "likuiditas", "likur", "likut", "lil", "lila", "lilah", "lilan", "lilau", "lili", "lilin", "liliput", "lilit", "lillahi", "lima", "liman", "limar", "limas", "limau", "limbah", "limbai", "limbak", "limban", "limbang", "limbat", "limbing", "limbubu", "limbuk", "limbung", "limbur", "limfa", "limfadema", "limfadenitis", "limfadenoma", "limfadenosis", "limfaderitis", "limfangioma", "limfatik", "limfoblartoma", "limfoblas", "limfoblastoma", "limfografi", "limfoma", "limfonodus", "limfopenia", "limfosit", "limfositopenia", "limfositosis", "limit", "limitasi", "limitatif", "limnetik", "limnologi", "limnoplankton", "limpa", "limpah", "limpap", "limpapas", "limpas", "limpau", "limpit", "limpoh", "limpung", "limun", "limusin", "limut", "lin", "linang", "linau", "lincah", "lincak", "lincam", "lincir", "lincun", "lindak", "lindang", "lindap", "lindas", "lindik", "lindis", "lindu", "lindung", "lindur", "linear", "linen", "ling", "lingar", "lingat", "lingga", "linggam", "linggata", "linggayuran", "linggi", "linggis", "lingkap", "lingkar", "lingkawa", "lingkis", "lingkung", "lingkup", "linglung", "lingsa", "lingsang", "lingsir", "lingsu", "lingua", "linguafon", "linguis", "linguistik", "lini", "linier", "linimen", "lining", "linjak", "linoleum", "linsang", "lintabung", "lintadu", "lintah", "lintang", "lintap", "lintar", "lintas", "lintibang", "linting", "lintir", "lintuh", "lintup", "linu", "linuhung", "linyak", "linyar", "lio", "liofilisasi", "liong", "liontin", "lipai", "lipan", "lipas", "lipase", "lipat", "lipektomi", "lipemia", "lipid", "lipiodol", "lipit", "liplap", "lipoksidase", "lipolisis", "lipoprotein", "lipstik", "lipu", "lipur", "liput", "lir", "lira", "lirida", "lirih", "lirik", "liris", "lis", "lisah", "lisan", "lisani", "lisensi", "lisimeter", "lisis", "lisol", "lisong", "lisplang", "lister", "listeria", "listrik", "lisu", "lisus", "lisut", "litah", "litak", "litani", "liter", "literator", "literer", "litium", "litografi", "litologi", "litoral", "litosfer", "litotes", "litotomi", "litsus", "liturgi", "liturgis", "liuk", "liung-liung", "liur", "liut", "liver", "liwa", "liwan", "liwat", "liwet", "loak", "lob", "loba", "lobak", "loban", "loberci", "lobi", "lobster", "locok", "locot", "lodan", "lodeh", "lodoh", "lodong", "log", "logam", "logaritma", "logat", "logawiah", "logika", "logis", "logistik", "logo", "logogram", "logopedia", "logotip", "loh", "loha", "lohok", "lohor", "loji", "lok", "loka", "lokacipta", "lokakarya", "lokal", "lokalis", "lokalisasi", "lokan", "lokananta", "lokap", "lokasi", "lokastiti", "lokatif", "lokatikranta", "lokatraya", "lokawarta", "lokawidura", "lokawigna", "lokawiruda", "lokawisata", "lokcuan", "lokek", "lokeswara", "loket", "loki", "lokia", "lokika", "lokio", "loklok", "lokomobil", "lokomotif", "lokos", "loksek", "loksun", "loktong", "lokus", "lokusi", "lolak", "loleng", "loloh", "lolohan", "lolong", "lolos", "lomba", "lombar", "lombok", "lombong", "lomek", "lomot", "lompat", "lompayang", "lompok", "lompong", "lonan", "loncat", "loncek", "lonceng", "loncer", "lonco", "loncos", "londang", "londong", "loneng", "long", "longak-longok", "longdres", "longgar", "longgok", "longgor", "longitudinal", "longo", "longok", "longong", "longser", "longsor", "longtorso", "lonjak", "lonjong", "lonjor", "lonsong", "lontai", "lontang-lanting", "lontang-lantung", "lontar", "lontara", "lonte", "lontok", "lontong", "lonyok", "lop", "lopak", "lopek", "loper", "lopis", "lopor", "lor", "lorah", "loran", "lorat", "lorber", "lorek", "loreng", "lori", "lornyet", "lorong", "lorot", "los", "lose", "losin", "losion", "losmen", "loso", "losong", "lot", "lota", "lotak", "lotek", "loteng", "lotis", "lotong", "lotre", "lotus", "lowong", "loya", "loyak", "loyal", "loyalis", "loyalitas", "loyang", "loyar", "loyo", "loyong", "lozenge", "luah", "luak", "luang", "luap", "luar", "luas", "luat", "luban", "lubang", "luber", "lubuk", "lucah", "lucu", "lucup", "lucut", "ludah", "ludat", "ludes", "luding", "ludruk", "lues", "lugas", "lugu", "lugut", "luhak", "luhmahful", "luhung", "luhur", "luih", "luik", "luing", "luk", "luka", "lukah", "lukat", "lukeh", "lukis", "luks", "luku", "lukut", "lulai", "luli", "luluh", "luluk", "lulum", "lulup", "lulur", "lulus", "lulut", "lum", "lumai", "lumang", "lumar", "lumas", "lumat", "lumayan", "lumba-lumba", "lumbal", "lumbu", "lumbung", "lumen", "lumer", "lumi-lumi", "luminositas", "lumpang", "lumpektomi", "lumpia", "lumping", "lumpuh", "lumpuk", "lumpur", "lumrah", "lumsum", "lumuh", "lumur", "lumus", "lumut", "lunak", "lunas", "lunau", "luncai", "luncas", "luncung", "luncur", "lundang", "lundi", "lundu", "luner", "lung", "lungguh", "lungkah", "lungkang", "lungkum", "lunglai", "lunglung", "lungsar", "lungse", "lungsin", "lungsung", "lungsur", "lungun", "lunjur", "lunta", "luntang", "luntang-lantung", "luntas", "luntur", "lunyah", "lunyai", "lup", "lupa", "lupat", "lupi", "lupuh", "lupuk", "lupung", "lupus", "luput", "lurah", "lurik", "luru", "lurub", "luruh", "lurus", "lurut", "lus", "lusa", "lusin", "lustrum", "lusuh", "lut", "lutetium", "luti", "lutu", "lutung", "lutut", "luweng", "luwes", "luyak", "luyu", "luyut", "maab", "maaf", "mabriuk", "mabrur", "mabuh", "mabuk", "mabul", "macakal", "macam", "macan", "macapat", "mace", "macet", "macis", "mad", "mada", "madah", "madali", "madam", "madang", "madani", "madar", "madat", "madewi", "madi", "madia", "madik", "madinding", "madmadah", "mado", "madona", "madras", "madrasah", "madu", "madukara", "madumangsa", "madya", "maesan", "maesenas", "maestro", "mafela", "mafhum", "mafia", "mafioso", "mafsadah", "mafsadat", "mag", "magainin", "magalah", "magandi", "magang", "magasin", "magel", "magenta", "magersari", "magfirah", "magfirat", "magi", "magis", "magister", "magistrat", "maglub", "magma", "magnesium", "magnesol", "magnet", "magnetik", "magnetika", "magnetis", "magnetisme", "magnetit", "magnetometer", "magnetor", "magnetostatika", "magnitudo", "magrib", "magribi", "magrur", "magun", "mah", "maha", "mahabah", "mahabintang", "mahadewa", "mahadewi", "mahaduta", "mahaguru", "mahah", "mahajana", "mahakala", "mahakarya", "mahakuasa", "mahal", "mahamen", "mahamenteri", "mahamulia", "mahang", "mahaparana", "mahapatih", "mahar", "maharaja", "maharajalela", "maharana", "maharani", "mahardika", "maharesi", "maharupa", "mahasiswa", "mahasiswi", "mahasuci", "mahatahu", "mahatma", "mahatur", "mahayana", "mahbub", "mahbubah", "mahbubat", "mahdi", "maherat", "mahesa", "maheswara", "mahfuz", "mahia", "mahimahi", "mahir", "mahkamah", "mahkota", "mahligai", "mahmud", "mahoni", "mahraj", "mahram", "mahsul", "mahsyar", "mahwu", "mahyong", "mahzurat", "mai", "maido", "maimun", "main", "mair", "mairat", "maizena", "maja", "majaan", "majakane", "majakaya", "majakeling", "majal", "majalah", "majas", "majasi", "majati", "majedub", "majekeling", "majelis", "majemuk", "majenun", "majikan", "majir", "majizat", "majong", "maju", "majuh", "majuj", "majun", "majung", "majusi", "maka", "makadam", "makadasang", "makadok", "makalah", "makalangkang", "makam", "makan", "makantah", "makantuh", "makanya", "makao", "makaopo", "makar", "makara", "makaroni", "makas", "makbud", "makbul", "makcik", "makcomblang", "makda", "makdan", "makelar", "makerel", "maket", "makhdum", "makhluk", "makhraj", "maki", "makin", "making", "makiyah", "makjuj", "maklaf", "maklum", "maklumat", "maklun", "makmal", "makmum", "makmur", "makna", "maknawi", "makramat", "makrame", "makrifat", "makrifatullah", "makro", "makroekonomi", "makrofita", "makrofotografi", "makroftalmus", "makrogametosit", "makrohistori", "makrokosmos", "makrokriminologi", "makrolinguistik", "makromelia", "makrometeorologi", "makromolekul", "makrosefalik", "makroskopis", "makrosmatik", "makrosmatis", "makrososiologi", "makruf", "makruh", "maksi", "maksiat", "maksila", "maksim", "maksimal", "maksimum", "maksud", "maksum", "maktab", "maktub", "makua", "makul", "makula", "makulat", "makurung", "makuta", "makyong", "makzul", "mal", "mala", "malabau", "malabsorpsi", "malafide", "malafungsi", "malagandang", "malagizi", "malah", "malai", "malaik", "malaikat", "malaikatulmaut", "malaise", "malak", "malaka", "malakama", "malakat", "malakit", "malakofili", "malakologi", "malakut", "malam", "malan", "malang", "malangbang", "malap", "malapari", "malapetaka", "malapraktek", "malapraktik", "malar", "malaria", "malas", "malasia", "malasuai", "malatindak", "malau", "maldistribusi", "male", "maleman", "maleo", "maleolus", "mali-mali", "maligai", "malih", "malik", "maliki", "malikuljabar", "malikulmuluk", "malim", "maling", "malis", "malisol", "malka", "malnutrisi", "maloklusi", "malt", "maltase", "maltosa", "malu", "malun", "malung", "mam", "mama", "mamah", "mamai", "mamak", "mamalia", "maman", "mamanah", "mamanda", "mamang", "mamano", "mamat", "mambang", "mambek", "mambo", "mambruk", "mambu", "mambung", "mamduhah", "mami", "mamik", "mamlakat", "mamografi", "mampai", "mampat", "mampir", "mampu", "mampung", "mampus", "mamut", "man", "mana", "manah", "manai", "manajemen", "manajer", "manajerial", "manakala", "manakan", "manakib", "manalagi", "manasik", "manasongo", "manasuka", "manau", "mancanegara", "mancawarna", "manci", "mancis", "mancung", "mancur", "manda", "mandah", "mandai", "mandala", "mandalika", "mandam", "mandar", "mandarin", "mandat", "mandataris", "mandau", "mandeh", "mandek", "mandelevium", "mandi", "mandibula", "mandil", "mandir", "mandiri", "mandolin", "mandor", "mandraguna", "mandril", "mandrin", "mandul", "mandung", "maneken", "manerisme", "manfaat", "mang", "mangan", "mangap", "mangas", "mangau", "mangayubagya", "mangga", "manggah", "manggala", "manggar", "manggis", "manggung", "mangir", "mangkak", "mangkanya", "mangkar", "mangkas", "mangkat", "mangkel", "mangkih", "mangkir", "mangkok", "mangkubumi", "mangkuk", "mangkus", "mangsa", "mangsi", "mangu", "mangun", "mangut", "mani", "mania", "maniak", "manifes", "manifestasi", "manifesto", "manik", "manik-depresif", "manikam", "manikdepresi", "manikmaya", "manikur", "manila", "manimba", "manipol", "manipulasi", "manipulatif", "manipulator", "manira", "manis", "manise", "manja", "manjapada", "manjau", "manjeri", "manjing", "manjung", "manjur", "manol", "manometer", "manora", "manostat", "manset", "mansiang", "mansukh", "manta", "mantan", "mantap", "mantari", "mantel", "manten", "manti", "mantik", "mantiki", "mantisa", "mantissa", "mantra", "mantram", "mantri", "mantu", "mantuk", "manual", "manufaktur", "manufakturing", "manuk", "manumisio", "manumpak", "manunggal", "manusia", "manusiawi", "manuskrip", "manut", "manuver", "manuwa", "manyala", "manyar", "manzil", "manzilah", "maois", "map", "mapak", "mapalus", "mapan", "mar", "mara", "marah", "maraja", "marak", "marakas", "marambung", "maramus", "maranta", "marapulai", "maras", "maraton", "marbling", "marbut", "marcapada", "mardatilah", "mardatillah", "mardud", "mare", "marem", "maret", "marfuk", "marga", "margalit", "margarin", "margasatwa", "margin", "marginal", "marginalisasi", "marginalisme", "margrit", "marhaban", "marhaen", "marhaenis", "marhaenisme", "marhum", "marhumah", "mari", "maria", "marikan", "marikh", "marikultur", "marimu", "marina", "marinade", "marine", "marinir", "marinyo", "marinyu", "marital", "maritim", "mariyuana", "marjik", "marjinal", "mark", "marka", "markado", "markah", "markas", "markasit", "marketri", "markis", "markisa", "markoni", "markonis", "markusip", "marlin", "marmelade", "marmer", "marmot", "maro", "marpaud", "mars", "marsaoleh", "marsekal", "marsepen", "marsose", "martabak", "martaban", "martabat", "martandang", "martil", "martini", "martir", "maru", "marus", "marut", "marwas", "marxisme", "marzipan", "mas", "masa", "masai", "masak", "masakan", "masakat", "masala", "masalah", "masam", "masap", "masase", "masayu", "masbuk", "masdar", "masehi", "masektomi", "maser", "maserasi", "mashaf", "masif", "masih", "masin", "masinal", "masing-masing", "masinis", "masir", "masjid", "masjidilaksa", "masjidilharam", "maskanat", "maskapai", "maskara", "maskat", "maskawin", "masker", "maskodok", "maskon", "maskot", "maskulin", "maskulinitas", "maskumambang", "maslahat", "masnawi", "masohi", "masoi", "masokhis", "masokhisme", "masokisme", "mason", "masori", "masrum", "massa", "massal", "mastautin", "mastektomi", "master", "masterplan", "mastik", "mastitis", "mastodon", "mastuli", "masturbasi", "masuk", "masuliah", "masya", "masyakah", "masyarakat", "masygul", "masyhadat", "masyhur", "masyrik", "masyuk", "mat", "mata", "matador", "matahari", "matakao", "matalamat", "matan", "matang", "mate", "matematika", "matematikus", "matematis", "materi", "material", "materialistis", "materiil", "mati", "matine", "matlak", "matoa", "maton", "matra", "matras", "matres", "matriarkal", "matriarkat", "matriks", "matrikulasi", "matrilineal", "matrilokal", "matris", "matronim", "matros", "matu", "matur", "maturasi", "maturitas", "mau", "mauizah", "maujud", "maujudat", "maukhid", "maukif", "maukuf", "maula", "maulai", "maulana", "maulhayat", "maulid", "maulidurasul", "maulud", "maung", "maupun", "mausoleum", "maut", "mauz", "mawadah", "mawar", "mawas", "maweda", "mawin", "mawon", "mawut", "maya", "mayam", "mayang", "mayangda", "mayapada", "mayas", "mayat", "mayeng", "mayokratio", "mayones", "mayor", "mayoret", "mayoritas", "mayung", "mayur", "mazarin", "mazbah", "mazhab", "mazi", "mazkur", "mazmumah", "mazmur", "mbah", "mbak", "mbakyu", "mbeling", "mbok", "mbokmas", "meander", "mebel", "mecis", "medali", "medalion", "medan", "medang", "mede", "media", "medial", "median", "mediasi", "mediastinum", "mediator", "medik", "medikamentosa", "medikasi", "mediko", "medikolegal", "medikus", "medil", "medio", "medis", "medisinal", "medit", "meditasi", "mediterania", "medium", "medok", "medu", "medula", "medusa", "mega", "megabyte", "megafon", "megah", "megak", "megakredit", "megal-megol", "megalit", "megalitikum", "megalomania", "megalomaniak", "megalopolis", "megalosit", "megamerger", "megan", "megaohm", "megap-megap", "megapolis", "megaproyek", "megar", "megaspora", "megasporangium", "megasporofil", "megat", "megaton", "megatren", "megatruh", "megawatt", "meger", "megrek-megrek", "mei", "meiosis", "meja", "mejam", "mejan", "mejana", "mejeng", "mek", "mekanik", "mekanika", "mekanikgraha", "mekanis", "mekanisasi", "mekanisme", "mekanolinguistik", "mekap", "mekar", "meko", "mekonium", "mel", "melabuai", "melambang", "melamin", "melanesia", "melangkup", "melanin", "melanisme", "melankolia", "melankolis", "melankonis", "melanoderma", "melar", "melarat", "melas", "melase", "melasma", "melati", "melawah", "melayu", "melek", "melela", "melempem", "meleng", "meler", "melesek", "meleset", "melik", "melilin", "melinjo", "melintir", "melit", "melitofili", "meliwis", "melodi", "melodika", "melodius", "melodrama", "melodramatik", "melodramatis", "melompong", "melon", "melor", "melotot", "melpari", "melukut", "melulu", "melur", "mem", "memang", "memar", "membal", "memble", "membran", "memedi", "memek", "memelas", "memo", "memoar", "memorabilia", "memorandum", "memorat", "memori", "memorial", "mempan", "mempelai", "mempelam", "mempelas", "mempelasari", "mempening", "memper", "mempitis", "memplak", "mempurung", "memutah", "mena", "menaga", "menak", "menampun", "menang", "menantu", "menara", "menat", "mencak", "mencelat", "menceng", "menceret", "mencit", "mencla-mencle", "menclok", "mencok", "mencong", "mencos", "mencret", "mendak", "mendap", "mendapa", "mendeleka", "mendelevium", "mendeng", "mendiang", "mendikai", "mending", "mendira", "mendoan", "mendonan", "mendong", "mendreng", "mendu", "mendung", "mendur", "mendura", "mendut", "menep", "menepaat", "mengah", "mengangah", "mengap", "mengapa", "mengapmendam", "mengeh", "mengerawan", "mengerna", "menget", "mengga", "menggala", "menggusta", "mengi", "mengiang", "mengicip", "mengirat", "mengkal", "mengkali", "mengkara", "mengkaras", "mengkelan", "mengkerang", "mengkeret", "mengking", "mengkirai", "mengkirik", "mengkis", "mengkona", "mengkuang", "mengkudu", "mengok", "mengor", "mengot", "mengsol", "mengsong", "mengung", "menhir", "meni", "meningitis", "menir", "meniran", "meniskus", "menit", "menjangan", "menong", "menopause", "menor", "menoragia", "menostaksis", "mens", "menserendahi", "mensiang", "menstruasi", "mensurasi", "mentah", "mentak", "mental", "mentalitas", "mentang", "mentari", "mentaruh", "mentas", "mentaus", "mentega", "menteleng", "menteng", "mentereng", "menteri", "mentibu", "mentifakta", "mentigi", "mentilau", "mentimun", "mentis", "mentok", "mentol", "mentolo", "mentor", "mentora", "mentua", "mentul", "menu", "menuet", "menung", "menur", "meong", "mepet", "meracang", "meraga", "meragi", "merah", "merajak", "merak", "merakan", "meralgia", "merambai", "merambung", "merana", "merang", "meranggi", "merangsi", "merangu", "meranti", "merapu", "merat", "merawal", "merawan", "merbah", "merbau", "merbaya", "merbuk", "merbulan", "mercak-mercik", "mercon", "mercu", "mercusuar", "merdangga", "merdeka", "merdesa", "merdinah", "merdu", "merduk", "mere", "merek", "mereka", "merem", "merembung", "mereng", "meres", "mergat", "merger", "mergul", "meri", "meriam", "meriang", "merica", "meridian", "merih", "merik", "merikan", "merikarp", "merinding", "mering", "meristem", "merjan", "merkah", "merkantilisme", "merkubang", "merkuri", "merkurium", "merkurius", "merkuro", "merkurokrom", "merlilin", "merlimau", "merogoni", "merosot", "merot", "merpati", "merpaud", "merpitis", "merpoyan", "merserisasi", "mersik", "merta", "mertamu", "mertapal", "mertayam", "mertega", "mertelu", "mertua", "meru", "meruap", "merubi", "merunggai", "merut", "merwatin", "mes", "mesa", "mesan", "mesara", "mesem", "mesin", "mesiu", "mesjid", "meskalin", "meskalina", "meski", "mesmerisme", "mesoderm", "mesodermik", "mesofili", "mesofit", "mesolitik", "mesolitikum", "mesometeorologi", "mesomorf", "meson", "mesopause", "mesosfer", "mesotel", "mesotoraks", "mesozoa", "mesozoikum", "mesra", "mester", "mesti", "mestika", "mestizo", "mesui", "mesum", "mesut", "meta", "metabahasa", "metabolik", "metabolis", "metabolisme", "metabolit", "metafil", "metafisik", "metafisika", "metafora", "metaforis", "metah", "metai", "metal", "metalik", "metalinguistik", "metalografi", "metaloid", "metalurgi", "metalurgis", "metamorf", "metamorfis", "metamorfisme", "metamorfosis", "metana", "metanefros", "metanol", "metari", "metasenter", "metastasis", "metatarsus", "metatesis", "metazoa", "mete", "meteor", "meteorit", "meteorograf", "meteorogram", "meteoroid", "meteorologi", "meteorologis", "meter", "meterai", "metil", "metode", "metodik", "metodis", "metodologi", "metonimi", "metonimia", "metrik", "metris", "metro", "metrologi", "metromini", "metronimik", "metronom", "metronomis", "metropolis", "metropolisasi", "metropolitan", "metroragia", "metrum", "meunasah", "mewah", "mewari", "mewek", "mezanin", "mezbah", "mezosopran", "mi", "miak", "miana", "miang", "miap", "miasma", "midar", "midi", "midik", "midodareni", "mieloma", "migrain", "migran", "migrasi", "migren", "mihrab", "mihun", "miiofili", "mijil", "miju", "mik", "mika", "mikat", "mikologi", "mikoprotein", "mikosis", "mikotoksin", "mikraj", "mikro", "mikroanalisis", "mikroangiopati", "mikrob", "mikrobe", "mikrobiologi", "mikrobiologis", "mikrobisida", "mikrobus", "mikroekonomi", "mikroelektronika", "mikroelemen", "mikrofag", "mikrofarad", "mikrofilm", "mikrofita", "mikrofon", "mikrofotografi", "mikrogelombang", "mikrograf", "mikrografika", "mikrogram", "mikrohabitat", "mikrohistori", "mikrohm", "mikroklimat", "mikrokomputer", "mikrokosmos", "mikrolet", "mikrolinguistik", "mikrolit", "mikrom", "mikromanipulasi", "mikrometer", "mikrometri", "mikron", "mikroorganisme", "mikroprosesor", "mikrosefalia", "mikrosekon", "mikroskop", "mikroskopis", "mikrospora", "mikrotom", "mikrovilus", "mikrowatt", "mikser", "miksoedema", "mil", "milad", "milenium", "miliampere", "miliar", "miliarder", "miliaria", "milibar", "milieu", "miligram", "milik", "mililiter", "milimeter", "milimikron", "milimol", "milioner", "milir", "milisi", "militan", "militansi", "militer", "militerisme", "militeristis", "miliun", "miliuner", "milivolt", "milu", "mim", "mimbar", "mimeograf", "mimesis", "mimi", "mimik", "mimikri", "mimis", "mimisan", "mimosa", "mimpi", "min", "mina", "minangsraya", "minat", "minder", "mindi", "mindoan", "mindring", "mineral", "mineralisasi", "mineralogi", "mineralogis", "minggat", "minggir", "minggu", "minhaj", "mini", "miniatur", "minibasket", "minibus", "minikar", "minikata", "minikomputer", "minim", "minimal", "minimarket", "minimum", "minium", "minor", "minoritas", "minta", "mintak", "mintakat", "mintakulburuj", "mintal", "minterat", "mintuna", "minum", "minus", "minyak", "mioglobin", "miokardia", "mioma", "miop", "miopia", "miosis", "miotik", "mipis", "mirah", "mirai", "mirakel", "mirat", "miriapod", "mirih", "mirik", "miring", "mirip", "miris", "mirmekofag", "mirmekofili", "mirmekologi", "misa", "misai", "misal", "misan", "misantrop", "misbah", "misdinar", "misi", "misil", "misiologi", "misionaris", "misioner", "miskal", "miskin", "miskram", "misoa", "misofobia", "misogami", "misoginis", "mispersepsi", "miss", "mistar", "mister", "misteri", "misterius", "mistik", "mistis", "mistisisme", "mistri", "misuh", "miswat", "mitasi", "mite", "mitisida", "mitogen", "mitologi", "mitologis", "mitos", "mitosis", "mitra", "mitraliur", "mizab", "mizan", "mnemonik", "moa", "mob", "mobil", "mobilet", "mobilisasi", "mobilisator", "mobilitas", "moblong", "mobokrasi", "mochi", "modal", "modalitas", "modar", "mode", "model", "modeling", "modem", "moderamen", "moderat", "moderato", "moderator", "modern", "modernisasi", "modernisme", "modernitas", "modernomaniak", "modifikasi", "modifikatif", "modin", "modis", "modiste", "modol", "modul", "modular", "modulasi", "modulator", "modus", "mofet", "moga", "mogok", "mohair", "mohon", "mohor", "mojah", "mojang", "mok", "moka", "mokal", "moke", "moko", "moksa", "mol", "mola", "molar", "mole", "molek", "molekul", "molekuler", "moler", "moles", "molibden", "molibdenum", "molor", "molos", "molotov", "moluska", "momen", "momental", "momentum", "momok", "momong", "momot", "monarki", "moncong", "moncor", "mondar-mandir", "mondeling", "mondial", "mondok", "mondolan", "mondong", "monel", "moneter", "mong", "monggo", "monggol", "mongkok", "mongmong", "mongolisme", "mongoloid", "monisme", "monitor", "mono", "monoatom", "monodi", "monodrama", "monofag", "monofobia", "monofonir", "monogam", "monogami", "monogini", "monografi", "monogram", "monokarpa", "monokel", "monokini", "monoklin", "monoklinal", "monokotil", "monokotiledon", "monokrasi", "monokrom", "monokromatis", "monokromator", "monoksida", "monokultur", "monolingual", "monolit", "monolitik", "monolog", "monoloyalitas", "monomania", "monomer", "monoploid", "monopoli", "monopolistik", "monopsoni", "monorel", "monosakarida", "monosem", "monosemantik", "monosemi", "monosilabel", "monosilabisme", "monosit", "monospermi", "monoteis", "monoteisme", "monotipe", "monoton", "monsinyur", "monster", "monstera", "monsun", "montase", "montering", "montir", "montit", "montok", "monumen", "monumental", "monyet", "monyong", "monyos", "mop", "mopela", "mopit", "morak", "moral", "moralis", "moralisasi", "moralisme", "moralistis", "moralitas", "morat-marit", "moratorium", "morbiditas", "morbili", "mordan", "moreng", "mores", "morf", "morfem", "morfemik", "morfemis", "morfin", "morfinis", "morfofonem", "morfofonemik", "morfofonemis", "morfofonologi", "morfogenesis", "morfologi", "mori", "moril", "mormon", "moron", "morong", "morse", "mortalitas", "mortar", "mortir", "mosaik", "mosi", "mosok", "moster", "mota", "motel", "motif", "motivasi", "motivator", "moto", "motor", "motorik", "motoris", "motorisasi", "motorsaikel", "moyang", "mozah", "mozaik", "mu", "mua", "muadin", "muai", "muak", "muakadah", "mual", "mualaf", "mualamat", "mualif", "mualim", "muamalah", "muamalat", "muanas", "muara", "muarikh", "muas", "muasasah", "muasir", "muat", "muazam", "muazin", "mubah", "mubalig", "mubaligah", "mubarak", "mubarat", "mubazir", "mubtadi", "mubut", "mucikari", "mud", "muda", "mudah", "mudakar", "mudarabah", "mudarat", "mudasir", "mudat", "mudigah", "mudik", "mudra", "mudun", "mufaham", "mufakat", "mufarik", "mufasal", "mufasir", "muflis", "mufrad", "mufsidin", "mufti", "mugabat", "muhabah", "muhadarah", "muhadat", "muhajat", "muhajir", "muhajirin", "muhal", "muhalil", "muhami", "muhammad", "muharam", "muhasabah", "muhib", "muhibah", "muhit", "muhlikah", "muhrim", "muhsin", "muhtasyam", "muih", "mujadalah", "mujadid", "mujahadat", "mujahid", "mujahidin", "mujair", "mujang", "mujarab", "mujarad", "mujari", "mujbir", "mujtahid", "mujtamak", "mujur", "muk", "muka", "mukabalah", "mukadam", "mukadas", "mukadim", "mukadimah", "mukadin", "mukadis", "mukah", "mukalaf", "mukalid", "mukaram", "mukatabah", "mukena", "mukhabarah", "mukhalaf", "mukhalafah", "mukhalif", "mukhalis", "mukhlis", "mukhtasar", "mukibat", "mukim", "mukimin", "mukjizat", "mukmin", "mukminat", "mukminin", "mukoprotein", "mukosa", "mukositis", "muktabar", "muktamad", "muktamar", "muktamirin", "muktazilah", "mukun", "mula", "mulai", "mulakat", "mulamasah", "mulas", "mulat", "mulato", "mulazamah", "mulhid", "mulia", "mullah", "mulsa", "multazam", "multibahasa", "multidimensi", "multidisipliner", "multietnik", "multifaset", "multifungsi", "multigravida", "multiguna", "multikompleks", "multikrisis", "multikultur", "multikulturalisme", "multilateral", "multilingual", "multilingualisme", "multimedia", "multimeter", "multimilioner", "multinasional", "multinegara", "multiorgan", "multipara", "multipel", "multipleks", "multiplikasi", "multiplikator", "multipolar", "multiprosesor", "multirasial", "multirasialisme", "multiseluler", "multivalen", "multivalensi", "multivitamin", "muluk", "mulur", "mulus", "mulut", "mumayiz", "mumbang", "mumbul", "mumbung", "mumet", "mumi", "mumifikasi", "mumpung", "mumpuni", "mumuk", "mumur", "mumut", "munafik", "munafikin", "munajat", "munajim", "munasabah", "muncang", "munci", "muncikari", "muncrat", "muncul", "muncus", "mundam", "munding", "mundu", "mundur", "mung", "munggu", "munggur", "mungil", "mungkar", "mungkin", "mungkir", "mungkum", "mungkur", "mungmung", "mungsi", "mungut", "munib", "munjung", "muno", "munsyi", "muntaber", "muntah", "muntaha", "muntu", "muntul", "muntup", "munyuk", "muon", "mupaham", "muparik", "mupus", "mur", "mura", "murad", "muradif", "murah", "murai", "murakab", "murakabi", "mural", "muram", "murang", "muras", "murba", "murbei", "murca", "muri", "murid", "muring", "muris", "murka", "murni", "mursal", "mursyid", "murtad", "muruah", "murung", "murup", "murus", "mus", "musaadah", "musabab", "musabaqah", "musafir", "musafirin", "musakat", "musala", "musang", "musara", "museolog", "museologi", "museum", "mushaf", "musibah", "musik", "musikal", "musikalisasi", "musikalitas", "musikolog", "musikologi", "musikologis", "musikus", "musim", "musisi", "muskil", "muskovit", "muslih", "muslihat", "muslim", "muslimat", "muslimin", "muslin", "musnah", "muspra", "mustahak", "mustahik", "mustahil", "mustaid", "mustajab", "mustak", "mustaka", "mustakim", "mustamik", "mustang", "musuh", "musyarakah", "musyarakat", "musyarik", "musyawarah", "musyawarat", "musyrik", "musyrikin", "musytak", "musytari", "mutabar", "mutagen", "mutah", "mutakadim", "mutakalim", "mutakhir", "mutaki", "mutalaah", "mutamad", "mutan", "mutasawif", "mutasi", "mutawif", "mute", "mutiara", "mutih", "mutilasi", "mutisme", "mutlak", "mutmainah", "mutu", "mutualisme", "mutung", "muwafakat", "muwahid", "muwajahah", "muwakal", "muwakil", "muwari", "muzah", "muzakar", "muzakarah", "muzaki", "muzamil", "muzawir", "muzhab", "naam", "nabatah", "nabati", "nabi", "nabtun", "nabu", "nada", "nadi", "nadim", "nadir", "naf", "nafar", "nafas", "nafi", "nafiri", "nafkah", "nafsi", "nafsu", "nafta", "naftal", "naftalena", "naftena", "naftol", "naga", "nagam", "nagara", "nagari", "nagasari", "nahak", "nahas", "nahdiyin", "nahi", "nahkoda", "nahu", "naib", "naif", "naik", "naim", "najam", "najasah", "najasat", "najis", "nak", "naka", "nakal", "nakara", "nakhoda", "nal", "nala", "nalam", "nalar", "nali", "nalih", "naluri", "naluriah", "nama", "namaskara", "namatad", "namatium", "nambi", "namnam", "nampan", "namun", "nan", "nanah", "nanang", "nanap", "nanaplankton", "nanar", "nanas", "nandu", "nandung", "nang", "nangka", "nangkoda", "nangkring", "nangui", "naning", "nanofarad", "nanofosil", "nanogram", "nanometer", "nanti", "napal", "napalm", "napas", "napuh", "naqal", "naqli", "nara", "narablog", "narapati", "narapidana", "narapraja", "narasi", "narasumber", "naratif", "narator", "narkolepsi", "narkomaniak", "narkose", "narkosis", "narkotik", "narpati", "narsis", "narsisisme", "narsisme", "narwastu", "nas", "nasab", "nasabah", "nasakh", "nasal", "nasalisasi", "nasar", "nasehat", "nasel", "nasi", "nasib", "nasihat", "nasion", "nasional", "nasionalis", "nasionalisasi", "nasionalisme", "nasionalistis", "nasionisme", "naskah", "nasofaring", "nasrani", "nasti", "nasut", "natal", "natalis", "natalitas", "natang", "natar", "natijah", "nativis", "nativisme", "nativistik", "natolokal", "natrium", "natur", "natura", "natural", "naturalis", "naturalisasi", "naturalisme", "naturalistis", "naturopatis", "naung", "nauplius", "nausea", "nautik", "nautika", "nautikal", "nautilus", "nauzubillah", "navigasi", "navigator", "nawa", "nawaitu", "nawala", "nawalapradata", "nayaka", "nayam", "nayap", "nazam", "nazar", "nazi", "naziisme", "nazim", "nazir", "ndoro", "ndoroisme", "neala", "nealogi", "nebeng", "nebula", "nebulium", "neces", "necis", "nefoskop", "nefrektomi", "nefridium", "nefrit", "nefritis", "nefroblastoma", "nefrologi", "nefron", "nefrosis", "negara", "negasi", "negatif", "negativisme", "negativistik", "neger", "negeri", "negosi", "negosiasi", "negosiator", "negrito", "negro", "negroid", "negus", "neka", "nekad", "nekara", "nekat", "nekel", "neko", "nekrofag", "nekrofagus", "nekrofili", "nekrofilia", "nekrogeografi", "nekrolog", "nekrologi", "nekromansi", "nekropolis", "nekropsi", "nekrosis", "neksus", "nektar", "nelangsa", "nelayan", "nemagon", "nematoda", "nematologi", "nematosida", "nematosis", "nenda", "nendatan", "nenek", "nenekanda", "nenen", "nenenda", "nener", "nenes", "neng", "neodarwinisme", "neodimium", "neofeodalisme", "neofeodalistis", "neoiknologi", "neoimpresionisme", "neokarpi", "neoklasik", "neoklasisisme", "neoklasisme", "neokolonialisme", "neoliberalisme", "neolit", "neolitik", "neolitikum", "neologi", "neologisme", "neolokal", "neon", "neonatal", "neonatus", "neontologi", "neoplasma", "neoplatonisme", "neoprena", "neositosis", "neotipologi", "neovirus", "neozoikum", "nepotis", "nepotisme", "neptunium", "neptunus", "neraca", "nerak", "neraka", "neritik", "neritopelagik", "neritoplankton", "neroglia", "nervasi", "nervur", "nesa", "nestapa", "nestor", "net", "neting", "neto", "netra", "netral", "netralis", "netralisasi", "netralisme", "netralitas", "neural", "neuralgia", "neurastenia", "neuritis", "neuroblastoma", "neuroglia", "neurolinguistik", "neurolog", "neurologi", "neurologis", "neuron", "neurosis", "neurotik", "neurotransmiter", "neustonologi", "neutrino", "neutron", "newton", "ngabei", "ngaben", "ngablak", "ngabur", "ngakngikngok", "ngalau", "ngalor-ngidul", "nganga", "ngap-ngap", "ngapain", "ngarai", "ngeang", "ngebet", "ngebut", "ngeceng", "ngeden", "ngedumel", "ngelindur", "ngemil", "ngenas", "ngengat", "ngenyek", "ngeong", "ngeres", "ngeri", "ngiang", "ngilu", "ngoko", "ngos-ngosan", "ngot-ngotan", "ngowos", "ngoyo", "ngung", "nia", "niaga", "nian", "niasin", "niat", "nibung", "nica", "nidasi", "nidera", "nidikola", "nidulus", "nifak", "nifas", "nih", "nihil", "nihilis", "nihilisme", "nijas", "nik", "nikah", "nikel", "nikmat", "nikotin", "niktigami", "nila", "nilai", "nilakandi", "nilam", "nilau", "nilon", "nimbostratus", "nimbrung", "nimfomania", "ninabobo", "ning", "ningnong", "ningrat", "nini", "ninik", "ninitowok", "niobium", "nipah", "nipis", "nira", "niraksara", "nirgagasan", "nirgesekan", "nirguna", "nirkabel", "nirlaba", "nirleka", "nirmala", "nirselera", "nirwana", "nirwarta", "nisab", "nisan", "nisbah", "nisbi", "niscaya", "niskala", "nista", "nistagmus", "nistatin", "nitrat", "nitrifikasi", "nitrobenzena", "nitrofili", "nitrofit", "nitrogen", "nitrogliserin", "nitroselulosa", "niyaga", "noa", "nobat", "nobelium", "noda", "nodulus", "nodus", "noem", "noja", "noken", "noktah", "nokturia", "nokturnal", "nol", "nomad", "nomenklatur", "nomina", "nominal", "nominalisasi", "nominalisme", "nominasi", "nominatif", "nominator", "nomine", "nomogram", "nomokrasi", "nomor", "nomplok", "non", "nona", "nonagresi", "nonaktif", "nonblok", "nondepartemen", "nondepartemental", "none", "nonekonomi", "noneksakta", "nonfiksi", "nonformal", "nong-nong", "nongol", "nongrata", "nonhistoris", "noni", "nonilium", "nonindustri", "nonintervensi", "nonius", "nonkimia", "nonkombatan", "nonkonvensional", "nonkooperasi", "nonkooperatif", "nonmedis", "nonmigas", "nonmiliter", "nonok", "nonol", "nonong", "nonpatogenik", "nonpemerintah", "nonpolitik", "nonpredikatif", "nonpribumi", "nonproduktif", "nonprofit", "nonprotein", "nonsens", "nonsilabis", "nonstandar", "nonstop", "nonteknis", "nontradisional", "nonverbal", "nopek", "norak", "norit", "norma", "normal", "normalisasi", "normatif", "nosologi", "nostalgia", "nostrum", "not", "nota", "notabene", "notariat", "notaris", "notasi", "notes", "notifikasi", "notok", "notula", "notulis", "nova", "novel", "novela", "novelet", "novelis", "november", "novena", "novokaina", "nrima", "nuansa", "nubuat", "nudis", "nudisme", "nugat", "nugraha", "nujum", "nukil", "nukleat", "nukleolus", "nukleon", "nukleoprotein", "nukleus", "nuklida", "nuklir", "nulipara", "numeralia", "numerik", "numeris", "numismatika", "nun", "nunatak", "nung", "nunsius", "nunut", "nur", "nuraga", "nurani", "nurbisa", "nuri", "nuriah", "nus", "nusa", "nusaindah", "nusakambangan", "nusantara", "nusyu", "nusyus", "nutan", "nutasi", "nutfah", "nutriea", "nutrisi", "nutrisionis", "nutrisisme", "nuzul", "nuzulul", "nyai", "nyak", "nyala", "nyalang", "nyalar", "nyalawadi", "nyale", "nyali", "nyaman", "nyambing", "nyamik", "nyamleng", "nyampang", "nyamplung", "nyamuk", "nyamur", "nyana", "nyang", "nyanya", "nyanyah", "nyanyang", "nyanyar", "nyanyi", "nyanyu", "nyanyuk", "nyapang", "nyapnyap", "nyarang", "nyarik", "nyaring", "nyaris", "nyata", "nyatuh", "nyawa", "nyawang", "nyelekit", "nyemplong", "nyentrik", "nyenyai", "nyenyak", "nyenyat", "nyenyeh", "nyenyep", "nyenyet", "nyepi", "nyeri", "nyerocos", "nyi", "nyilih", "nyingnying", "nyinyir", "nyiri", "nyiru", "nyit", "nyiur", "nyolnyolan", "nyolo", "nyoman", "nyong", "nyonya", "nyonyeh", "nyonyong", "nyonyor", "nyungsung", "nyunyut", "nyureng", "nyut", "oase", "oasis", "obar", "obat", "obduksi", "obelisk", "obeng", "obesitas", "obi", "obituarium", "objek", "objektif", "objektivisme", "objektivitas", "oblak", "oblasi", "obligasi", "oblong", "obo", "obor", "obral", "obras", "obrol", "obrus", "observasi", "observatorium", "obsesi", "obsesif", "obsidian", "obsolet", "obstetri", "obstruen", "obstruksi", "obversi", "obviatif", "obyek", "obyektif", "obyektivisme", "obyektivitas", "oceh", "odalan", "ode", "odekolonye", "odinometer", "oditur", "odoh", "odol", "odometer", "odontoblas", "odontoid", "odontologi", "odoran", "oedipus-kompleks", "oersted", "ofensif", "oferte", "ofisial", "ofset", "oftalmia", "oftalmoskop", "oga", "ogah", "ogah-agih", "ogak-agik", "ogak-ogak", "ogam", "ogel", "ogok", "ogonium", "ohm", "ohmmeter", "oikumene", "oja", "ojeg", "ojek", "ojok", "okarina", "oke", "oker", "oklokrasi", "oklusi", "oklusif", "oknum", "okok", "oksalat", "oksiasetilena", "oksida", "oksidan", "oksidasi", "oksidator", "oksigen", "oksigenase", "oksimoron", "oksitetrasiklin", "oksiton", "oktaf", "oktagon", "oktahedron", "oktal", "oktana", "oktet", "oktober", "oktroi", "okulasi", "okuler", "okulis", "okultis", "okultisme", "okupasi", "okupasional", "olah", "olahraga", "olak", "olak-alik", "olanda", "olang-aling", "oleander", "olefin", "oleh", "olek", "oleng", "oleografi", "oleometer", "oleovitamin", "oles", "olet", "oleum", "oli", "olia", "oligarki", "oligofagus", "oligofrenia", "oligopoli", "oligopolistis", "oligopsoni", "oligosen", "oligositemia", "oligotrofik", "oliman", "olimpiade", "oliva", "olivin", "olok", "olong-olong", "om", "oma", "ombak", "ombang-ambing", "ombyok", "omega", "omel", "omikron", "omnibus", "omnivor", "omnivora", "omong", "ompol", "ompong", "ompreng", "omprong", "ompu", "omset", "omslah", "omzet", "onagata", "onak", "onani", "onar", "oncat", "once", "oncek", "oncen", "oncer", "oncom", "oncor", "onde-onde", "ondel-ondel", "onder", "onderdil", "onderdistrik", "onderneming", "onderok", "ondo", "ondoafi", "ondok", "ondos", "oneng-oneng", "ong", "ongahangih", "ongeh", "onggok", "ongji", "ongkang", "ongkok", "ongkos", "ongok", "ongol-ongol", "oniks", "onkogen", "onkologi", "onomasiologi", "onomastika", "onomatologi", "onomatope", "ons", "onslah", "ontogeni", "ontologi", "ontologis", "ontran-ontran", "onyah-anyih", "onyak-anyik", "onyang", "onyok", "onyot", "oogenesis", "oolit", "opa", "opak", "opak-apik", "opal", "opalesen", "opas", "opasitas", "opelet", "open", "opendim", "openkap", "oper", "opera", "operasi", "operasional", "operasionalisasi", "operatif", "operator", "operet", "operkulum", "opini", "opisometer", "opium", "oplah", "oplet", "oplos", "opmak", "opname", "oponen", "opor", "oportunis", "oportunisme", "oportunistis", "oportunitas", "oposan", "oposisi", "oppo", "opsen", "opseter", "opsi", "opsin", "opsinder", "opsiner", "opsional", "opsir", "opstal", "optatif", "optik", "optika", "optimal", "optimalisasi", "optimis", "optimisme", "optimistis", "optimum", "optis", "optisien", "optoelektronika", "optometri", "optometris", "opus", "orak", "orak-arik", "orakel", "oral", "oralit", "orang", "orang-aring", "oranye", "orasi", "orat-oret", "orator", "oratoria", "oratoris", "oratorium", "orbit", "orbita", "orbital", "orde", "order", "ordi", "ordinal", "ordinasi", "ordinat", "ordiner", "ordner", "ordo", "ordonans", "ordonansi", "oren", "oreng", "oreol", "oret", "organ", "organdi", "organel", "organik", "organis", "organisasi", "organisator", "organisatoris", "organisir", "organisme", "organismus", "organogram", "organon", "orgasme", "orgasmik", "orgel", "orien", "oriental", "orientalis", "orientasi", "origami", "orion", "orisinal", "orisinalitas", "orkes", "orkestra", "orkestrasi", "ornamen", "ornamental", "ornamentasi", "ornitologi", "ornitologis", "ornitosis", "orografi", "orografik", "orografis", "orok", "orong-orong", "ortodidaktik", "ortodoks", "ortodoksi", "ortodrom", "ortoepi", "ortografi", "ortografis", "ortoklas", "ortopedagogik", "ortopedi", "ortopedis", "ose", "osean", "oseanarium", "oseanografi", "oseanologi", "osifikasi", "osikel", "osilasi", "osilator", "osilograf", "osilogram", "osiloskop", "oskilator", "oskulum", "osmium", "osmometer", "osmoregulasi", "osmose", "osmosis", "osomosis", "ostentasi", "osteoblas", "osteoklas", "osteologi", "osteopati", "osteoporosis", "ostium", "otak", "otak-atik", "otak-otak", "otar", "otek", "otentik", "oto", "otobus", "otofon", "otologi", "otomat", "otomatis", "otomatisasi", "otomobil", "otomotif", "otonom", "otonomi", "otopet", "otorisasi", "otoritas", "otoriter", "otoritet", "otoskop", "otot", "ototipi", "oval", "ovarium", "ovasi", "oven", "over", "overaktif", "overakting", "overal", "overdosis", "overkompensasi", "overpopulasi", "overproduksi", "oversimplifikasi", "overste", "oviduk", "ovipar", "oviparitas", "ovipositor", "ovitesis", "ovovivipar", "ovulasi", "ovulum", "ovum", "oyak", "oyek", "oyok", "oyong", "oyot", "ozokerit", "ozon", "ozonisasi", "ozonisator", "ozonometer", "pabean", "pabrik", "pabrikan", "pabrikasi", "pacai", "pacak", "pacal", "pacangan", "pacar", "pacat", "pacau", "pace", "pacek", "paceklik", "pacet", "pacih", "pacik", "pacok", "pacu", "pacuk", "pacul", "pada", "padah", "padahal", "padak", "padam", "padan", "padang", "padas", "padasan", "padat", "padepokan", "padi", "padma", "padmasana", "padmi", "padri", "padu", "padudan", "paduk", "paduka", "paduraksa", "paedofil", "paes", "pagan", "paganisme", "pagar", "pagas", "pagebluk", "pagelaran", "pagi", "pagina", "pagoda", "pagon", "pagositosis", "pagu", "pagun", "pagupon", "pagut", "paguyuban", "pah", "paha", "pahala", "paham", "pahang", "pahar", "pahat", "paheman", "pahit", "pahlawan", "pahter", "pai", "paidon", "pail", "pailit", "paing", "paip", "pair", "pais", "paitua", "paja", "pajak", "pajan", "pajang", "pajuan", "pajuh", "pakai", "pakal", "pakan", "pakanira", "pakansi", "pakar", "pakaryan", "pakat", "pakau", "pakcik", "pakde", "pakem", "paket", "pakihang", "pakihi", "paking", "pakis", "paklik", "pakma", "pakpui", "pakpung", "paksa", "paksi", "paksina", "pakta", "pakter", "paku", "pakuh", "pakuk", "pakuncen", "pakus", "pal", "pala", "paladium", "palagan", "palai", "palak", "palaka", "palam", "palamarta", "palang", "palapa", "palar", "palari", "palas", "palasik", "palat", "palatabilitas", "palatal", "palatalisasi", "palatografi", "palatogram", "palatum", "palau", "palawa", "palawija", "paldu", "pale", "palem", "palen", "paleoantropologi", "paleobotani", "paleoekologi", "paleogeografi", "paleografi", "paleografis", "paleoklimatologi", "paleolitik", "paleolitikum", "paleontologi", "paleosen", "paleozoikum", "pales", "palet", "pali", "paliatif", "paliatip", "palindrom", "paling", "palinologi", "palis", "palit", "palka", "pallawa", "palmarosa", "palmin", "palmistri", "palmit", "palmitat", "palolo", "palpasi", "palsu", "paltu", "palu", "paluh", "palun", "palung", "palut", "pamah", "paman", "pameget", "pamer", "pamflet", "pamit", "pamong", "pamor", "pampa", "pampan", "pampang", "pampas", "pampat", "pamper", "pampiniform", "pamrih", "pamungkas", "pan", "pana", "panah", "panai", "panakawan", "panar", "panas", "panasea", "panau", "panca", "pancabicara", "pancabuta", "pancacita", "pancadarma", "pancaindera", "pancaindra", "pancaka", "pancakara", "pancakembar", "pancal", "pancalima", "pancalogam", "pancalomba", "pancalongok", "pancamarga", "pancamuka", "pancang", "pancaniti", "pancapersada", "pancar", "pancaragam", "pancarajadiraja", "pancaroba", "pancarona", "pancasila", "pancasilais", "pancasona", "pancasuara", "pancasuda", "pancausaha", "pancawalikrama", "pancawara", "pancawarna", "pancawarsa", "panci", "pancing", "pancir", "pancit", "panco", "pancong", "pancung", "pancur", "pancut", "pandai", "pandak", "pandam", "pandan", "pandang", "pandau", "pandawa", "pandega", "pandemi", "pandemik", "pandialektal", "pandir", "pandit", "pandom", "pandu", "panekuk", "panel", "panelis", "panembahan", "panembrama", "panen", "panewu", "pangabekti", "pangah", "pangan", "pangeran", "pangestu", "panggak", "panggal", "panggang", "panggar", "panggau", "panggih", "panggil", "panggon", "panggu", "panggul", "panggung", "pangkah", "pangkai", "pangkal", "pangkas", "pangkat", "pangkek", "pangkin", "pangking", "pangkon", "pangku", "pangkung", "pangkur", "panglima", "pangling", "panglong", "pangolat", "pangonan", "pangpet", "pangpung", "pangreh", "pangrehpraja", "pangrukti", "pangsa", "pangsek", "pangsi", "pangsit", "panguk", "pangur", "pangus", "panik", "paniki", "panil", "panili", "paninggil", "paningset", "panir", "paniradia", "panitera", "panitia", "panja", "panjak", "panjang", "panjar", "panjarwala", "panjat", "panjer", "panji", "panjing", "panjul", "panjunan", "panjut", "pankreas", "pankromatis", "pankronis", "panlektal", "panleukapema", "panleukopenia", "panoptikum", "panorama", "panser", "pantai", "pantak", "pantalon", "pantang", "pantar", "pantas", "pantat", "pantau", "panteis", "panteisme", "panteistis", "pantek", "pantekosta", "panteon", "panter", "panti", "pantik", "panting", "pantis", "panto", "pantofel", "pantograf", "pantomim", "pantri", "pantul", "pantun", "panus", "panutan", "panyembrama", "pao-pao", "papa", "papacang", "papah", "papain", "papak", "papakerma", "papan", "papar", "paparazi", "papas", "papat", "papatong", "papi", "papil", "papila", "papirus", "papras", "paprika", "papui", "par", "para", "parab", "parabasis", "parabel", "parabiosis", "parabola", "paradam", "parade", "paradigma", "paradigmatis", "paradiso", "paradoks", "paradoksal", "parados", "paraf", "parafasia", "parafemia", "parafin", "parafrasa", "parafrase", "parafrenia", "paragaster", "paragog", "paragon", "paragraf", "parah", "parak", "paralaks", "paraldehida", "paralel", "paralelisasi", "paralelisme", "paralelogram", "paralgesia", "paralinguistik", "paralinguistis", "paralipsis", "paralisis", "paralitis", "param", "paramaarta", "paramarta", "paramasastra", "paramedis", "paramen", "parameter", "paramiliter", "parampara", "paran", "parang", "paranoia", "paranoid", "paranormal", "paranpara", "parap", "parapalatal", "parapati", "paraplasme", "paraplegia", "parapodium", "parapsikolog", "parapsikologi", "paras", "parasetamol", "parasintesis", "parasit", "parasitisme", "parasitoid", "parasitologi", "parasitoma", "parasitopolis", "parasut", "parasutis", "parataksis", "parataktis", "paratesis", "paratifus", "paratiroid", "parau", "pare", "parenial", "parenkim", "parental", "parentesis", "parestesia", "parewa", "parfum", "parga", "parhelion", "pari", "paria", "parididimis", "parih", "parik", "parikan", "paring", "paripurna", "paris", "parit", "paritas", "pariwara", "pariwisata", "parji", "parka", "parket", "parkinson", "parkinsonisme", "parkir", "parkit", "parlemen", "parlementaria", "parlementarisme", "parlementer", "parmitu", "paro", "parodi", "paroki", "parokial", "parokialisme", "parolfaktori", "paron", "paronim", "paronisia", "paronomasia", "parotitis", "pars", "parser", "parsi", "parsial", "partai", "partenogenesis", "partial", "partikel", "partikelir", "partikularisme", "partisan", "partisi", "partisipan", "partisipasi", "partitif", "partitur", "partner", "partus", "paru", "paruh", "parun", "parut", "parvenu", "parwa", "pas", "pasah", "pasai", "pasak", "pasal", "pasang", "pasanggiri", "pasar", "pasara", "pasaraya", "pasase", "pasasir", "pasat", "pascabedah", "pascadoktoral", "pascajual", "pascakawin", "pascakrisis", "pascalahir", "pascalarva", "pascalikuidasi", "pascamodern", "pascamodernisme", "pascaoperasi", "pascapanen", "pascaperang", "pascaproduksi", "pascareformasi", "pascasarjana", "pascausaha", "pascayuwana", "paseban", "paser", "paset", "pasfoto", "pasi", "pasien", "pasif", "pasifikasi", "pasifisme", "pasigrafi", "pasik", "pasilan", "pasim", "pasimologi", "pasir", "pasirah", "pasit", "pasiva", "paskah", "pasmat", "pasmen", "pasok", "pasowan", "paspor", "pasrah", "pasta", "pastel", "pasteur", "pasteurisasi", "pasti", "pastiles", "pastor", "pastoral", "pastoran", "pastur", "pastura", "pasu", "pasuel", "pasuk", "pasumandan", "pasung", "patah", "pataka", "patam", "patang", "patar", "patek", "patela", "paten", "pater", "patera", "pateram", "paternalis", "paternalisme", "paternalistis", "patet", "patetis", "patgulipat", "pati", "patih", "patik", "patikim", "patil", "patin", "patina", "pating", "patio", "patirasa", "patiseri", "patka", "patogen", "patogenesis", "patogenik", "patois", "patok", "patokimia", "patol", "patola", "patolog", "patologi", "patologis", "patolopolis", "patos", "patra", "patrap", "patri", "patriark", "patriarkat", "patrilineal", "patrimonium", "patriot", "patriotik", "patriotisme", "patroli", "patron", "patronasi", "patrun", "patuh", "patuk", "patung", "patungan", "patut", "pauh", "pauhi", "pauk", "paul", "paun", "paung", "paus", "pause", "paut", "paviliun", "pawai", "pawak", "pawaka", "pawana", "pawang", "pawiyatan", "pawukon", "paya", "payah", "payang", "payar", "payau", "payet", "payon", "payu", "payudara", "payung", "peang", "pecah", "pecai", "pecak", "pecal", "pecara", "pecat", "pece", "pecel", "peci", "pecicilan", "pecinan", "pecok", "pecuk", "pecun", "pecut", "peda", "pedada", "pedadah", "pedagog", "pedagogi", "pedagogis", "pedak", "pedaka", "pedal", "pedanda", "pedang", "pedapa", "pedar", "pedas", "pedati", "pedel", "pedena", "pedendang", "pedengan", "pedepokan", "pedestrian", "pedet", "pedewakan", "pediatri", "pedih", "pedikur", "pedis", "pedisel", "pedogenesis", "pedok", "pedologi", "pedoman", "pedometer", "pedongkang", "pedot", "peduli", "pedunkel", "pedusi", "pedut", "pegagang", "pegah", "pegal", "pegan", "pegang", "pegar", "pegari", "pegas", "pegat", "pegawai", "pego", "pegoh", "pegon", "peguam", "pegun", "pehong", "pei", "pejajaran", "pejaka", "pejal", "pejam", "pejatian", "pejera", "pek", "peka", "pekaja", "pekak", "pekakak", "pekan", "pekarang", "pekasam", "pekaseh", "pekat", "pekatu", "pekatul", "pekau", "pekerti", "pekik", "peking", "pekir", "pekis", "pekiwan", "pekojan", "peksi", "pektik", "pektil", "pektin", "peku", "pekuk", "pekulun", "pekung", "pekur", "pel", "pelabi", "pelabur", "pelaga", "pelagas", "pelagis", "pelagra", "pelah", "pelak", "pelalah", "pelamin", "pelampang", "pelampung", "pelan", "pelana", "pelancar", "pelanduk", "pelang", "pelangai", "pelanggi", "pelangi", "pelangkin", "pelangpang", "pelantar", "pelanting", "pelas", "pelasah", "pelasik", "pelaspas", "pelasuh", "pelat", "pelata", "pelatuk", "pelawa", "pelayon", "pelbagai", "pelbak", "pelbet", "pelebat", "pelebaya", "pelebegu", "pelebon", "pelecet", "pelecok", "peleh", "pelek", "pelekat", "pelekok", "pelekuk", "pelembaya", "pelencit", "pelengak", "pelengan", "pelengset", "pelepah", "peles", "pelesat", "peleset", "pelesir", "pelesit", "pelet", "peletek", "peletik", "peleting", "peleton", "pelias", "pelihara", "pelik", "pelikan", "pelikel", "pelinggam", "pelinteng", "pelintir", "pelipir", "pelipis", "pelir", "pelisir", "pelisit", "pelit", "pelita", "pelitur", "pelo", "pelog", "peloh", "pelojok", "pelonco", "pelong", "pelopor", "pelor", "pelorot", "pelosok", "pelosot", "pelota", "pelotaris", "pelotot", "pelples", "pelpolisi", "pels", "peluang", "peluh", "peluit", "peluk", "peluluk", "pelulut", "pelumpung", "pelungpung", "pelupuh", "pelupuk", "peluru", "peluruh", "pelus", "pelvis", "pemair", "pemali", "pemarip", "pematah", "pematang", "pemayang", "pembarap", "pembayan", "pemendak", "pemeo", "pemetikan", "pemidang", "pemindang", "peminggir", "pempek", "pemuda", "pemudi", "pemuras", "pen", "pena", "penak", "penaka", "penalti", "penampan", "penampang", "penanggah", "penaram", "penasaran", "penat", "penatu", "penatua", "penca", "pencak", "pencalang", "pencar", "pencet", "pencil", "pencok", "pencong", "pencu", "pencut", "penda", "pendaga", "pendahan", "pendak", "pendam", "pendapa", "pendar", "pendaringan", "pendek", "pendekar", "pendet", "pendeta", "pending", "pendok", "pendongkok", "pendopo", "pendua", "penduk", "pendulum", "penembahan", "penes", "penetrasi", "penetron", "penewu", "pengalasan", "penganak", "penganan", "pengang", "pengantin", "pengap", "pengapuh", "pengar", "pengaruh", "pengat", "pengatu", "pengawinan", "pengeng", "pengerih", "pengga", "penggaga", "penggah", "penggal", "penggar", "penggawa", "penghulu", "pengin", "pengkal", "pengkar", "pengki", "pengkis", "pengkol", "pengkor", "pengos", "penguin", "pengulun", "peni", "peniaram", "pening", "peningset", "penis", "penisilin", "penisilinat", "penitensi", "peniti", "penjajap", "penjalin", "penjara", "penjaruman", "penjor", "penjuna", "penjura", "penjuru", "penmes", "penologi", "penomah", "pensi", "pensil", "pensiun", "pentagin", "pentagon", "pentagor", "pentagram", "pentahedron", "pental", "pentameter", "pentan", "pentana", "pentang", "pentar", "pentas", "pentatonik", "pentil", "pentilasi", "penting", "pentode", "pentol", "pentosa", "pentotal", "pentung", "penuh", "penyap", "penyek", "penyet", "penyok", "penyu", "peok", "peot", "pepagan", "pepah", "pepak", "pepaku", "peparu", "pepas", "pepat", "pepatah", "pepaya", "pepe", "pepek", "pepeling", "peper", "pepermin", "pepes", "pepet", "pepindan", "peplum", "pepsin", "pepsina", "pepsinogen", "peptida", "peptidase", "peptik", "pepton", "pepuju", "pepunden", "pepung", "peputut", "per", "pera", "perabot", "perabung", "perada", "peragat", "perah", "perahu", "perai", "peraji", "perak", "peraka", "peram", "perambut", "peran", "perancah", "perang", "perangah", "perangai", "peranggang", "peranggu", "peranggul", "perangin", "perangkap", "perangkat", "peranjat", "peranti", "peranye", "perap", "peras", "peras-perus", "perasat", "perasukan", "perat", "perata", "perawan", "perawas", "perawi", "perawis", "perbal", "perban", "perbani", "perbatin", "perbawa", "perbegu", "perbekel", "perca", "percaya", "percik", "percis", "percit", "percul", "percuma", "perdah", "perdana", "perdata", "perdeo", "perdikan", "perdom", "perdu", "pere", "peredus", "pereh", "perei", "perek", "perekik", "perempuan", "perencah", "perenggan", "perengkat", "perengus", "perengut", "perenial", "perenkum", "perenyak", "perenyuk", "perepat", "peres", "peresau", "peresih", "perestroika", "peretel", "perewa", "perfek", "perfeksi", "perfeksionis", "perfeksionisme", "perfektif", "perforasi", "perforator", "performa", "pergam", "pergat", "pergata", "pergedel", "pergi", "pergok", "pergol", "pergola", "perhati", "peri", "peria", "perian", "periang", "periantium", "peribahasa", "periboga", "peribudi", "peridi", "perifer", "periferal", "periferalis", "periferi", "perifiton", "perifrasa", "perifrase", "perifrastis", "perige", "perigel", "perigi", "perih", "perihal", "perihelion", "perikarditis", "perikardium", "perikemanusiaan", "perikondrium", "periksa", "perilaku", "perimbas", "perimeter", "perimisium", "perimpin", "perimping", "perinci", "perincit", "perineorium", "perineum", "perineurium", "pering", "peringgan", "peringgi", "peringgitan", "peringis", "peringkat", "perintah", "periodat", "periode", "periodik", "periodisasi", "periodonsium", "periodontium", "periorbita", "periosteum", "perirana", "perisa", "perisai", "periskop", "perispora", "peristalsis", "peristaltik", "peristerit", "peristiwa", "peristonium", "perit", "peritoneum", "peritonitis", "periuk", "perivaskuler", "perjaka", "perji", "perkakas", "perkale", "perkamen", "perkara", "perkasa", "perkedel", "perkelang", "perkolar", "perkolasi", "perkolator", "perkoler", "perkosa", "perkusi", "perkutut", "perlahan", "perlak", "perlambang", "perleng", "perlente", "perlenteh", "perli", "perlina", "perling", "perlintih", "perlip", "perlit", "perlop", "perlu", "perlup", "perlus", "permadani", "permai", "permaisuri", "permak", "permalin", "permana", "permanen", "permanganat", "permasan", "permata", "permeabel", "permeabilitas", "permen", "permil", "permisi", "permisif", "permutasi", "pernah", "pernak", "pernekel", "pernik", "pernikel", "pernis", "perogol", "perohong", "peroi", "peroksida", "peroksidase", "peroksisom", "peroksisoma", "peroman", "perompak", "peron", "peroneal", "peronyok", "perop", "perosok", "perosot", "perot", "perpatih", "perpetuasi", "perponding", "pers", "persada", "persangga", "persegi", "persekot", "persekusi", "persen", "persentase", "persentil", "persepsi", "perseptif", "perseptivitas", "persero", "persetan", "perseus", "perseverasi", "persih", "persik", "persil", "persis", "persisi", "perslah", "persneling", "person", "persona", "personal", "personalia", "personalisme", "personalitas", "personel", "personifikasi", "perspektif", "perspektivisme", "persuasi", "persuasif", "pertal", "pertama", "pertepel", "pertiwi", "pertua", "perturbasi", "pertusis", "peruak", "peruan", "peruang", "perubalsem", "perudang", "peruk", "perum", "perumpung", "perun", "perunggu", "perunjung", "perupuk", "perus", "perusi", "perut", "perversi", "perwara", "perwira", "pes", "pesa", "pesai", "pesak", "pesakin", "pesam", "pesan", "pesanggrahan", "pesantren", "pesara", "pesat", "pesawat", "pese", "peseh", "pesek", "peser", "pesero", "peset", "pesi", "pesiar", "pesimis", "pesimisme", "pesimistis", "pesing", "pesirah", "pesisir", "pesok", "pesolot", "pesona", "pesong", "pesta", "pestaka", "pestisida", "pestol", "pesuk", "pesut", "pet", "peta", "petah", "petai", "petak", "petaka", "petal", "petala", "petaling", "petam", "petamari", "petan", "petanen", "petang", "petaram", "petarang", "petarangan", "petaruan", "petas", "petatang-peteteng", "petatus", "petegian", "petek", "petel", "petenteng", "petepete", "peterana", "peterseli", "petes", "peti", "petia", "petik", "petikrah", "petikut", "petilan", "peting", "petinggi", "petiolus", "petir", "petis", "petisi", "petitih", "petitum", "petogram", "petola", "petopan", "petor", "petrodolar", "petrografi", "petrogram", "petrokimia", "petrol", "petrolatum", "petroleum", "petrologi", "petromaks", "petsai", "petuah", "petuding", "petuduh", "petuk", "petunia", "peturun", "petus", "petut", "pewaka", "pewat", "peyek", "peyorasi", "peyot", "phi", "piadah", "piagam", "piah", "piak", "pial", "piala", "pialang", "pialing", "pialu", "piama", "piang", "pianggang", "pianggu", "pianika", "pianis", "piano", "pianola", "piantan", "piara", "piarit", "pias", "piaster", "piat", "piatu", "piawai", "pica", "picah", "picik", "picing", "picis", "picit", "pico", "picu", "picung", "pidana", "pidato", "pidi", "piezoelektrik", "piezoelektrisitas", "piezometer", "pigmen", "pigmentasi", "pigmi", "pigura", "pihak", "pijah", "pijak", "pijar", "pijat", "pijin", "pijinasi", "pijit", "pika", "pikap", "pikat", "pikau", "pike", "piket", "pikir", "piknik", "piknometer", "pikofarad", "pikogram", "pikolo", "piktografi", "piktogram", "pikul", "pikun", "pikup", "pil", "pilah", "pilak", "pilang", "pilar", "pilas", "pilaster", "pilau", "pileh", "pilek", "pileren", "pilih", "pilin", "pilis", "pilon", "pilong", "pilorus", "pilositas", "pilot", "pilsener", "pilu", "pilus", "pimpel", "pimpin", "pimping", "pin", "pina-pina", "pinak", "pinang", "pinar", "pincang", "pincuk", "pincut", "pinda", "pindah", "pindai", "pindang", "pines", "pinga", "pingai", "pinggah", "pinggan", "pinggang", "pinggir", "pinggul", "pingit", "pingkal", "pingkau", "pingpong", "pingsan", "pingul", "pinis", "pinisepuh", "pinisi", "pinjal", "pinjam", "pinjung", "pinset", "pinta", "pintal", "pintan", "pintang", "pintar", "pintas", "pintil", "pintu", "pintur", "pinus", "piogenik", "pion", "pioner", "piong", "pionir", "pipa", "pipet", "pipi", "pipih", "pipil", "pipis", "pipit", "pir", "pirai", "piramid", "piramida", "piramidal", "pirang", "piranograf", "piranogram", "piranometer", "pirasat", "pirau", "pireksia", "pirektik", "piretrum", "pirian", "piriform", "pirik", "piring", "pirit", "pirofilit", "pirofobia", "piroksen", "pirolisis", "piromania", "pirometalurgi", "pirometer", "piroteknik", "pirsa", "piruet", "pirus", "pis", "pisah", "pisang", "pisau", "pises", "pisiformis", "pisik", "pisin", "pisit", "pisitan", "pisovonus", "pispot", "pistol", "pistom", "piston", "pisuh", "pit", "pita", "pitak", "pitam", "pitanggang", "pitar", "pitarah", "pitawat", "piting", "pitiriasis", "pitis", "pitometer", "piton", "pitot", "pitut", "piuh", "piung", "piut", "piutang", "pivot", "piwulang", "piyik", "piza", "plafon", "plagiarisme", "plagiat", "plagiator", "plagioklas", "plakat", "plaket", "plaksegel", "plamir", "plan", "planaria", "planel", "planet", "planetarium", "planetoid", "plang", "plangkan", "planimeter", "planimetri", "planing", "planisfer", "plankton", "plano", "planologi", "planologis", "planospora", "plantase", "planula", "plasenta", "plaser", "plasma", "plasmodium", "plasmosis", "plastid", "plastik", "plastin", "plastis", "plastisitas", "plastogami", "plastometer", "plastron", "platelet", "platform", "platina", "platinoid", "platinum", "platisma", "plato", "platonik", "platonisme", "plaza", "plebisit", "pleidoi", "pleiogami", "pleistosen", "pleksus", "plengkung", "pleno", "pleonasme", "pleopod", "plerem", "plester", "pletora", "pleura", "plinplan", "plintat-plintut", "plinteng", "plintit", "pliosaurus", "pliosen", "ploi", "ploidi", "plombir", "plonci", "plonco", "plong", "plonga-plongo", "plontos", "plosif", "plot", "plug", "plumbago", "plumbum", "plumbung", "plural", "pluralis", "pluralisme", "pluralistis", "pluriform", "plus", "pluto", "plutokrasi", "plutonik", "plutonium", "pluvial", "pluviograf", "pluviometer", "pneumatika", "pneumatofos", "pneumatokista", "pneumonia", "poal", "poces", "poci", "pocok", "pocong", "podemporem", "podikal", "podium", "poetika", "pof", "pogrom", "pohon", "poikilohalin", "poikiloterm", "poin", "point", "poise", "poiseuille", "pojok", "pok", "pokah", "pokeng", "poker", "poket", "poko", "pokok", "pokrol", "poksai", "pokta", "pol", "pola", "polah", "polan", "polang", "polarimeter", "polarimetri", "polaris", "polarisasi", "polaritas", "poldan", "polder", "polemik", "polemis", "polen", "poleng", "polenter", "poler", "poles", "polet", "poliandri", "poliantus", "poliester", "polifagia", "polifase", "polifoni", "poligam", "poligami", "poligini", "poliglot", "poliglotisme", "poligon", "poligraf", "polihalin", "polikel", "poliket", "poliklinik", "polikrom", "polikultur", "polimer", "polimerisasi", "polinia", "polio", "polip", "polipeptida", "polipetal", "poliploid", "polipropilena", "polis", "polisakarida", "polisemi", "polisentrisme", "polisepal", "polisi", "polisiklis", "polisilogisme", "polisindeton", "polisional", "polispermi", "polister", "politbiro", "politeis", "politeisme", "politeistis", "politeknik", "politena", "politik", "politika", "politikus", "politis", "politisasi", "poliuretan", "polivini", "polizoa", "polka", "polkadot", "polmah", "polo", "polok", "polones", "polong", "polonium", "polonter", "polos", "polusi", "polutan", "polutif", "poma", "pomade", "pomologi", "pompa", "pompang", "pompon", "pompong", "pon", "ponakan", "ponco", "pondamen", "pondar", "ponderabilitas", "pondik", "pondoh", "pondok", "pondong", "pongah", "ponggang", "ponggok", "pongkol", "pongsu", "poni", "ponil", "ponok", "ponor", "pons", "pontang-panting", "ponten", "pontoh", "ponton", "poo", "pop", "popelin", "popi", "popok", "popor", "popularisasi", "popularitas", "populasi", "populer", "populis", "populisme", "pora", "porah", "porak-parik", "porak-peranda", "porak-poranda", "porfiria", "pori", "porisitas", "porno", "pornografi", "pornografis", "porok", "porong", "poros", "porositas", "porot", "porselen", "porsi", "porta", "portabel", "portal", "portepel", "portik", "portir", "porto", "portofolio", "pos", "pose", "poser", "posesif", "posisi", "positif", "positivisme", "positivistik", "positron", "positronium", "poskar", "poso", "posologi", "postar", "poster", "posterior", "postulat", "postur", "pot", "potas", "potasium", "potator", "potehi", "potel", "potensi", "potensial", "potensiometer", "potia", "potlot", "potol", "potong", "potret", "poundal", "poyang", "praanggapan", "praba", "prabu", "pradana", "pradesa", "pradesain", "pradini", "praduga", "pragmatik", "pragmatika", "pragmatis", "pragmatisme", "prah", "prahara", "prahoto", "prairi", "praja", "prajaksa", "prajurit", "prakala", "prakarsa", "prakarya", "prakata", "prakilang", "prakira", "prakondisi", "prakonsepsi", "praksis", "praktek", "praktik", "praktikan", "praktikum", "praktis", "praktisi", "pralahir", "pramenstruasi", "prameswari", "pramodern", "pramubakti", "pramubarang", "pramubayi", "pramudi", "pramugara", "pramugari", "pramujasa", "pramuka", "pramukamar", "pramuniaga", "pramupintu", "pramuria", "pramusaji", "pramusiwi", "pramutamu", "pramuwisata", "pramuwisma", "pranala", "pranata", "pranatacara", "pranatal", "prangas", "prangko", "pranikah", "prapalatal", "prapatan", "prapendapat", "praperadilan", "prapromosi", "prapuber", "prapubertas", "prapuna", "prapustaka", "prarasa", "prarekam", "praremaja", "prasaja", "prasangka", "prasaran", "prasarana", "prasasti", "prasawya", "prasejahtera", "prasejarah", "prasekolah", "praseminar", "praseodimium", "prasetia", "prasi", "prasmanan", "prastudi", "prasyarat", "pratersier", "pratinjau", "prawacana", "prawira", "prayang", "prayitna", "prayojana", "prayuwana", "preadvis", "preambul", "preantena", "preasetabulum", "predasi", "predator", "predestinasi", "predikat", "predikatif", "prediksi", "predisposisi", "preferensi", "prefiks", "prehistori", "prei", "prekositas", "prekursor", "preliminer", "prelude", "preman", "prematur", "premi", "premis", "premium", "premolar", "prenatal", "prenjak", "preparat", "preposisi", "prepotensi", "prerogatif", "pres", "presbiopia", "presbiterium", "preseden", "presensi", "presentabel", "presentasi", "presentil", "preservasi", "presesi", "presiden", "presidensial", "presidentil", "presidium", "presiositas", "presipitasi", "presisi", "preskripsi", "preskriptif", "prestasi", "prestise", "prestisius", "presto", "presumsi", "pretel", "pretensi", "prevalensi", "preventif", "preview", "prewangan", "pria", "priagung", "priayi", "pribadi", "pribumi", "prihatin", "prima", "primadona", "primas", "primata", "primbon", "primer", "primitif", "primogenetur", "primordial", "primordialisme", "primpen", "pringas-pringis", "pringgitan", "prinsip", "prinsipiil", "prioritas", "pripih", "pris", "prisma", "prit", "privasi", "privat", "privatisasi", "prive", "privilese", "pro", "proaktif", "probabilitas", "problem", "problematik", "procot", "prodemokrasi", "prodeo", "produk", "produksi", "produktif", "produktivitas", "produsen", "produser", "proenzim", "prof", "profan", "profanitas", "profase", "profesi", "profesional", "profesionalisme", "profesionalitas", "profesor", "profetik", "profil", "profilaksis", "profit", "profitabel", "profitabilitas", "proforma", "progeni", "progesteron", "prognosis", "program", "programa", "progres", "progresif", "progresivitas", "prohibisi", "proklamasi", "proklamator", "proklitik", "proksimal", "proksimat", "prokurasi", "prokurator", "prolat", "prolegomena", "proleksem", "proletar", "proletariat", "proletarisasi", "proliferasi", "prolog", "promenade", "prometium", "prominen", "prominensia", "promiskuitas", "promontorium", "promosi", "promotif", "promotor", "promovendus", "pronomina", "pronominal", "pronominalisasi", "prop", "propaganda", "propagandis", "propana", "propelan", "propeler", "properti", "propfan", "propilena", "propinsi", "proporsi", "proporsional", "proposal", "proposisi", "propulsi", "prosa", "prosais", "prosede", "prosedur", "prosedural", "prosenium", "proses", "prosesi", "prosesor", "proskonion", "proskriptivisme", "prosodi", "prosodis", "prospek", "prospeksi", "prospektif", "prospektus", "prostaglandin", "prostat", "prostitusi", "protagonis", "protaktinium", "protandri", "protandris", "protasis", "proteid", "protein", "proteinuria", "proteksi", "proteksionisme", "protektif", "protektorat", "proteolisis", "proteolitik", "protes", "protese", "protesis", "protestan", "protestantisme", "protista", "proto", "protofon", "protogenesis", "protokol", "protokoler", "protolisis", "protolitik", "proton", "protoneolitik", "protoplasma", "protoraks", "prototipe", "protozoa", "protrombin", "protuberansia", "provinsi", "provinsialisme", "provisi", "provisional", "provitamin", "provokasi", "provokatif", "provokator", "provokatur", "provos", "proyek", "proyeksi", "proyektil", "proyektor", "prudensial", "prurigo", "psalm", "psamolitoral", "pseudo", "pseudokata", "pseudomorf", "pseudonim", "psi", "psike", "psikiater", "psikiatri", "psikis", "psikoanalisis", "psikodrama", "psikofarmakologi", "psikofisiologis", "psikokinesis", "psikolepsi", "psikolinguistik", "psikolog", "psikologi", "psikologis", "psikometri", "psikometrika", "psikomotor", "psikomotorik", "psikoneurosis", "psikopat", "psikopati", "psikopatologi", "psikosastra", "psikoseksual", "psikosis", "psikosomatik", "psikoteknik", "psikoteknis", "psikoterapi", "psikotes", "psikotropika", "psikrofili", "psikrometer", "psikrometri", "psitakosis", "psoriasis", "pterodaktil", "pteropoda", "ptialin", "ptomaina", "puadai", "puah", "puak", "puaka", "pual", "pualam", "puan", "puas", "puasa", "puatang", "pub", "puber", "pubertas", "pubesens", "publik", "publikasi", "publisis", "publisistik", "publisitas", "pucang", "pucat", "pucik", "pucuk", "pucung", "pudar", "pudat", "pudel", "puder", "pudi", "puding", "pudur", "puerpera", "puerperium", "pugak", "pugar", "pugas", "puguh", "puih", "puing", "puisi", "puitis", "puitisasi", "puja", "pujangga", "puji", "pujuk", "pujur", "pujut", "pukah", "pukal", "pukang", "pukas", "pukat", "pukau", "puki", "pukul", "pul", "pula", "pulai", "pulan", "pulang", "pulas", "pulasan", "pulasari", "pulau", "pulen", "pulih", "pulik", "pulover", "pulp", "pulpa", "pulpen", "pulper", "pulsa", "pulsar", "pulsasi", "puluh", "pulun", "pulung", "pulut", "puma", "pumpun", "pun", "punah", "punai", "punakawan", "punar", "punat", "punca", "puncak", "punci", "pundak", "punden", "pundi", "punding", "punduh", "punduk", "pundung", "pung", "pungak-pinguk", "punggah", "punggai", "punggal", "punggawa", "pungguk", "punggung", "punggur", "pungkah", "pungkang", "pungkas", "pungkur", "pungli", "pungsi", "pungtuasi", "punguk", "pungut", "punia", "punjul", "punjung", "punjut", "punk", "puntal", "punti", "puntianak", "puntir", "puntuk", "puntul", "puntung", "punuk", "punya", "pupa", "pupil", "pupu", "pupuan", "pupuh", "pupuk", "pupur", "pupus", "puput", "pura", "purba", "purbakala", "purbani", "purbasangka", "purbawisesa", "purdah", "pure", "purgatif", "puri", "purifikasi", "purik", "puring", "puris", "purisme", "puristis", "puritan", "puritanisme", "purna", "purnabakti", "purnaintegrasi", "purnajabatan", "purnajual", "purnakarya", "purnama", "purnapugar", "purnasarjana", "purnatugas", "purnawaktu", "purpura", "purser", "puruk", "puruk-parak", "purun", "purus", "purusa", "purut", "purwa", "purwakanti", "purwapada", "purwarupa", "pus", "pusa", "pusak", "pusaka", "pusang", "pusar", "pusara", "pusat", "puser", "pusing", "puskesmas", "puso", "puspa", "puspadana", "puspadanta", "puspamala", "pusparagam", "puspas", "puspawarna", "puspita", "pusta", "pustaha", "pustaka", "pustakaloka", "pusu", "pusung", "pusut", "putar", "putat", "puter", "puti", "putih", "putik", "puting", "putra", "putranda", "putrawali", "putrefaksi", "putresin", "putri", "putriditas", "putu", "putus", "putut", "puvi-puvi", "puyan", "puyeng", "puyer", "puyonghai", "puyu", "puyuh", "qaf", "qari", "qariah", "qasar", "qiamulail", "qiraah", "qiraat", "qudsi", "quran", "raba", "raba-rubu", "rabak", "raban", "rabana", "rabani", "rabas", "rabat", "rabet", "rabi", "rabies", "rabik", "rabit", "rabiulakhir", "rabiulawal", "rabotase", "rabu", "rabuk", "rabulizat", "rabun", "rabung", "rabut", "racak", "racau", "racik", "racuh", "racun", "rad", "rada", "radaah", "radah", "radai", "radak", "radang", "radar", "radas", "raden", "rades", "radi", "radiah", "radial", "radian", "radians", "radiasi", "radiator", "radif", "radikal", "radikalisasi", "radikalisme", "radiks", "radikula", "radin", "radio", "radioaktif", "radioaktivitas", "radiogenetika", "radiogoniometer", "radiogoniometri", "radiograf", "radiografi", "radiogram", "radioisotop", "radiokarbon", "radiokimia", "radiolisis", "radiolog", "radiologi", "radiolokasi", "radiometer", "radiosonde", "radiotelefoni", "radiotelegrafi", "radiotelegrafis", "radioterapi", "radis", "radium", "radius", "radon", "radu", "radurisasi", "rafak", "rafaksi", "rafe", "rafi", "rafia", "rafidi", "rafik", "raflesia", "raga", "ragam", "ragang", "ragas", "ragawi", "ragi", "ragib", "ragil", "ragu", "raguk", "ragum", "ragung", "ragut", "rahak", "rahang", "rahap", "raharja", "rahasia", "rahat", "rahayu", "rahib", "rahim", "rahimakallah", "rahimakumullah", "rahmah", "rahman", "rahmat", "rahmatullah", "rahu", "rai", "raib", "raigedeg", "raih", "raimuna", "rais", "raja", "rajab", "rajabiah", "rajah", "rajalela", "rajam", "rajang", "rajapati", "rajawali", "rajim", "rajin", "rajok", "rajuk", "rajul", "rajungan", "rajut", "rak", "raka", "rakaat", "rakah", "rakanita", "rakap", "rakat", "rakawira", "rakbol", "raket", "rakila", "rakis", "rakit", "rakitis", "rakna", "raksa", "raksabumi", "raksasa", "raksi", "rakuk", "rakung", "rakus", "rakut", "rakyat", "rakyu", "ralat", "ralip", "ram", "rama", "rama-rama", "ramadan", "ramah", "ramai", "ramal", "ramanda", "ramania", "rambah", "rambai", "rambak", "ramban", "rambang", "rambat", "rambeh", "rambih", "rambu", "rambun", "rambung", "rambut", "rambutan", "rambuti", "rames", "rami", "ramin", "ramirezi", "rampa", "rampai", "rampak", "rampang", "rampas", "rampat", "ramping", "rampok", "rampuh", "rampung", "rampus", "ramu", "ramus", "rana", "ranah", "ranai", "ranap", "ranca", "rancah", "rancak", "rancam", "rancang", "rancap", "rancau", "rancu", "rancung", "randa", "randa-rondo", "randah", "randai", "randajawan", "randak", "randat", "randau", "randek", "randi", "randu", "randuk", "randung", "rang", "rangah", "rangai", "rangak", "rangam", "rangas", "rangga", "ranggah", "ranggak", "ranggas", "ranggeh", "ranggi", "ranggit", "ranggul", "ranggung", "rangin", "rangina", "rangka", "rangkai", "rangkak", "rangkam", "rangkang", "rangkap", "rangkaya", "rangket", "rangkiang", "rangkik", "rangking", "rangkit", "rangkok", "rangkul", "rangkum", "rangkung", "rangkup", "rangkus", "rangkut", "rango-rango", "rangrang", "rangrangan", "rangsang", "rangu", "rangum", "rangup", "rani", "ranjah", "ranjang", "ranjau", "ranji", "ranjing", "rankine", "ransel", "ransum", "rantai", "rantam", "rantang", "rantas", "rantau", "rante", "ranti", "ranting", "rantuk", "rantus", "ranum", "ranyah", "ranyang", "ranyau", "ranyun", "rap", "rapah", "rapai", "rapak", "rapal", "rapang", "rapat", "rapel", "rapi", "rapiah", "rapik", "rapor", "rapsodi", "rapu", "rapuh", "rapun", "rapung", "rapus", "raraha", "rarai", "rarak", "rarangan", "raras", "ras", "rasa", "rasai", "rasam", "rasamala", "rasan", "rasau", "rasberi", "rase", "rasem", "rasi", "rasia", "rasial", "rasialis", "rasialisme", "rasian", "rasio", "rasional", "rasionalis", "rasionalisasi", "rasionalisme", "rasionalitas", "rasisme", "raster", "rasuk", "rasul", "rasuli", "rasulullah", "rasyid", "rasywah", "rat", "rata", "ratah", "ratap", "ratib", "ratifikasi", "ratna", "ratu", "ratus", "rau", "raudah", "raudatul", "raudatulatfal", "raum", "raun", "raung", "raup", "raut", "rawa", "rawah", "rawai", "rawak", "rawan", "rawang", "rawat", "rawatib", "rawi", "rawin", "rawit", "rawon", "rawuh", "raya", "rayah", "rayan", "rayang", "rayap", "rayau", "rayon", "rayonisasi", "rayu", "razia", "reagen", "reagensia", "reak", "reaksi", "reaksioner", "reaktan", "reaktans", "reaktansi", "reaktif", "reaktivitas", "reakton", "reaktor", "reaktualisasi", "real", "realis", "realisasi", "realisme", "realistis", "realitas", "realokasi", "realpolitik", "reasuransi", "reaumur", "reba", "rebab", "rebah", "rebak", "reban", "rebana", "rebas", "rebat", "rebeh", "rebek", "rebes", "rebet", "rebewes", "reboisasi", "rebon", "rebu", "rebuk", "rebung", "rebus", "rebut", "reca", "recak", "receh", "recet", "recik", "recok", "recup", "reda", "redah", "redaksi", "redaksional", "redaktur", "redam", "redang", "redap", "redefinisi", "redih", "redik", "redoks", "reduksi", "reduksionisme", "redum", "redup", "reduplikasi", "redusir", "redut", "reedukasi", "reekspor", "referat", "referen", "referendaris", "referendum", "referensi", "referensial", "reflasi", "refleks", "refleksi", "reflektif", "reflektor", "reformasi", "reformis", "refraksi", "refraktometer", "refraktor", "refrein", "refrigerator", "regah", "regan", "regang", "regas", "regat", "regata", "regel", "regen", "regenarasi", "regenerasi", "reges", "regi", "regio", "region", "regional", "regionalisme", "register", "registrasi", "regisur", "reglemen", "reglementer", "regol", "regresi", "regresif", "regu", "reguk", "regularisasi", "regulasi", "regulatif", "regulator", "reguler", "regup", "rehab", "rehabilitasi", "rehabilitatif", "rehal", "rehat", "rehidrasi", "reideologisasi", "reindoktrinasi", "reinkarnasi", "reintegrasi", "reinterpretasi", "reinvestasi", "reja", "rejab", "rejah", "rejan", "rejang", "rejasa", "rejeh", "rejeng", "rejuk", "rek", "reka", "rekah", "rekal", "rekalkulasi", "rekalsitran", "rekam", "rekan", "rekanalisasi", "rekanita", "rekap", "rekapangan", "rekapitalisasi", "rekapitulasi", "rekat", "rekata", "rekayasa", "reken", "rekening", "rekes", "rekisitor", "rekisitur", "reklamasi", "reklame", "reklasering", "reklasifikasi", "rekognisi", "rekoleksi", "rekombinan", "rekombinasi", "rekomendasi", "rekonsiliasi", "rekonstruksi", "rekonstruktif", "rekonvensi", "rekor", "rekreasi", "rekrut", "rekrutmen", "reksa", "rekstok", "rektifikasi", "rekto", "rektor", "rekuiem", "rekuisisi", "rekuisitor", "rekurs", "rel", "rela", "relai", "relaks", "relaksasi", "relang", "relap", "relas", "relasi", "relatif", "relativisasi", "relativisme", "relativitas", "relau", "relban", "relevan", "relevansi", "reli", "reliabel", "reliabilitas", "relief", "religi", "religiositas", "religius", "relik", "relikui", "relikwi", "relokasi", "reluk", "relung", "rem", "rema", "remah", "remai", "remaja", "remak", "remanen", "remang", "remas", "rematik", "rematisme", "rematoid", "rembah", "rembang", "rembas", "rembat", "rembega", "rembes", "rembet", "rembih", "rembuk", "rembulan", "rembunai", "remburs", "rembut", "remedi", "remedial", "remediasi", "remeh", "remenia", "remet", "remi", "remiak", "remiling", "reminisensi", "remis", "remisi", "remoh", "rempa", "rempah", "rempak", "rempela", "rempelas", "rempenai", "rempeyek", "rempong", "rempuh", "rempuk", "rempus", "remujung", "remuk", "remunerasi", "remunggai", "rena", "renah", "renai", "renaisans", "renal", "renang", "rencah", "rencak", "rencam", "rencana", "rencang", "rencat", "renceh", "renceng", "rencet", "rencong", "renda", "rendabel", "rendah", "rendam", "rendang", "rendemen", "rendeng", "rendet", "rendong", "renegosiasi", "renek", "renes", "reng", "rengadean", "rengap", "rengas", "rengat", "rengeh", "rengek", "rengeng", "rengga", "renggam", "renggang", "renggat", "renggek", "rengges", "rengginang", "renggut", "rengit", "rengkah", "rengkam", "rengkeh", "rengket", "rengkit", "rengkong", "rengkudah", "rengkuh", "rengrengan", "rengsa", "rengus", "rengut", "renik", "renin", "renium", "renjana", "renjatan", "renjeng", "renjis", "renjong", "renjul", "renkinang", "renovasi", "renta", "rentabilitas", "rentak", "rentaka", "rental", "rentan", "rentang", "rentap", "rentas", "rente", "renteng", "rentenir", "rentet", "renti", "rentik", "renumerasi", "renung", "renvoi", "renyah", "renyai", "renyam", "renyang", "renyap", "renyau", "renyeh", "renyek", "renyem", "renyuk", "renyut", "reog", "reol", "reologi", "reometri", "reorganisasi", "reorientasi", "reostat", "reot", "rep-repan", "repang", "reparasi", "repas", "repatrian", "repatriasi", "repek", "repertoar", "repertorium", "repes", "repet", "repeten", "repetisi", "repetitif", "repetitor", "repih", "replik", "replika", "repolarisasi", "repormir", "reportase", "reporter", "reposisi", "repot", "representasi", "representatif", "represi", "represif", "reproduksi", "reprografi", "reptil", "reptilia", "republik", "republiken", "repuh", "repui", "reput", "reputasi", "rerak", "rerangka", "reranting", "reras", "rerata", "reresanan", "rerongkong", "rerot", "rerugi", "reruntuk", "resa", "resah", "resak", "resam", "resan", "resap", "resbang", "resek", "resensi", "resensor", "resep", "resepsi", "resepsionis", "reseptif", "reseptor", "reserse", "resersir", "reservat", "reserve", "reservoir", "reses", "resesi", "resi", "residen", "residivis", "residivisme", "residivistis", "residu", "resik", "resiko", "resimen", "resin", "resinol", "resipien", "resiprok", "resiprokal", "resistan", "resistans", "resistansi", "resistor", "resital", "resitasi", "resmi", "resolusi", "resonan", "resonansi", "resonator", "resor", "resorpsi", "resorsinol", "resosialisasi", "respek", "respirasi", "respirator", "responden", "respons", "responsi", "responsif", "restan", "restiformis", "restitusi", "restoran", "restorasi", "restriksi", "restriktif", "restrukturisasi", "restu", "restung", "resu", "resultan", "resume", "resurjensi", "ret", "reta", "retail", "retak", "retardasi", "retas", "retek", "retenidos", "retensi", "retet", "retih", "retikuler", "retina", "retinakulum", "retinitis", "retok", "retorik", "retorika", "retoris", "retorsi", "retradisionalisasi", "retreatisme", "retret", "retribusi", "retro", "retroaktif", "retrofleks", "retrofleksi", "retrogresi", "retrogresif", "retrolingual", "retromamal", "retromandibuler", "retrospeksi", "retur", "retus", "reumatismos", "reuni", "reunifikasi", "revaksinasi", "revaluasi", "revans", "reverberasi", "revisi", "revisibilitas", "revisionis", "revitalisasi", "revolusi", "revolusioner", "revolver", "rewak", "rewan", "rewanda", "rewang", "rewel", "rewet", "reyal", "reyot", "rezeki", "rezim", "rho", "ria", "riadat", "riah", "riak", "rial", "riam", "rian", "riang", "riap", "rias", "riba", "ribang", "ribat", "ribatat", "riben", "riboflavin", "ribosom", "ribu", "ribut", "rica", "ricau", "ricik", "ricuh", "rida", "ridan", "ridi", "riding", "ridip", "ridu", "rigai", "rigi-rigi", "rihat", "rihlah", "riil", "rijal", "rijalugaib", "rijalulgaib", "rijang", "rikuh", "rileks", "rilis", "rim", "rima", "rimas", "rimata", "rimba", "rimbas", "rimbat", "rimbawan", "rimbun", "rime", "rimis", "rimpang", "rimpel", "rimpi", "rimpuh", "rimpung", "rinai", "rincih", "rincis", "rincu", "rindang", "rinding", "rindu", "ring", "ringan", "ringgit", "ringih", "ringik", "ringin", "ringis", "ringkai", "ringkas", "ringkih", "ringkik", "ringking", "ringkuk", "ringkus", "ringsek", "ringsing", "rini", "rinitis", "rinjing", "rinoskop", "rintang", "rintas", "rintih", "rintik", "rintis", "rinyai", "riol", "ripit", "ripta", "ripuh", "ripuk", "ririt", "risa", "risak", "risalah", "risau", "riset", "risi", "risik", "risiko", "risit", "riskan", "rit", "ritel", "ritma", "ritme", "ritmis", "ritual", "ritul", "ritus", "riuh", "riuk", "riung", "rival", "rivalitas", "riwan", "riwayat", "robak-rabik", "robat-rabit", "robek", "roboh", "robok", "robot", "robotika", "rocet", "roda", "rodan", "rodat", "rodensial", "rodentisida", "rodi", "rodium", "rodok", "rodolit", "rodong", "roga", "rogoh", "rogok", "rogol", "roh", "rohani", "rohaniah", "rohmat", "rohulkudus", "roi", "rojeng", "rojol", "rok", "rokade", "roker", "roket", "roki", "rokok", "rol", "rolet", "rolpres", "roma", "roman", "romanistik", "romansa", "romantik", "romantika", "romantikus", "romantis", "romantisisme", "romawi", "rombak", "rombang-rambing", "rombeng", "rombik", "rombohedron", "romboid", "rombok", "rombong", "rombus", "romet", "romok", "romol-romol", "romong", "rompak", "rompal", "rompang", "rompeng", "rompes", "rompi", "rompoh", "rompok", "rompong", "rompyok", "romsus", "romusa", "rona", "ronce", "roncet", "ronda", "rondah-rondih", "ronde", "rondo", "rondok", "roneo", "rong", "rongak", "rongga", "ronggang", "ronggeng", "ronggok", "ronggong", "rongkoh", "rongkok", "rongkol", "rongkong", "rongos", "rongrong", "rongseng", "rongsok", "ronta", "rontek", "rontgen", "rontok", "ronyeh", "ronyok", "ropak-rapik", "rorehe", "rorod", "ros", "rosario", "rosbang", "rosela", "roseng", "roseola", "roset", "rosin", "rosok", "rosot", "rotan", "rotasi", "rotator", "roti", "rotograf", "rotok", "rowa", "rowot", "royak", "royal", "royalti", "royan", "royemen", "royer", "royong", "rua", "ruadat", "ruah", "ruai", "ruak", "ruam", "ruang", "ruap", "ruas", "ruat", "ruaya", "ruba-ruba", "rubah", "rubai", "rubaiat", "ruban", "rubanat", "rubel", "rubela", "rubeola", "rubiah", "rubidium", "rubik", "rubin", "rubing", "rubrik", "rubu", "rubung", "rucah", "rudah", "rudal", "rudapaksa", "rudi", "rudimen", "rudin", "rudu", "rudus", "rugbi", "rugi", "ruh", "ruhbahnat", "ruhban", "ruhbanat", "ruhbaniat", "ruilslag", "ruing", "ruit", "rujah", "rujak", "ruji", "rujuk", "rukam", "rukhsah", "rukiah", "ruko", "ruku", "rukuh", "rukuk", "rukun", "rukyat", "rukyatulhilal", "rum", "rumah", "rumal", "rumba", "rumbah", "rumbai", "rumbia", "rumbing", "rumbu", "rumen", "rumenia", "rumi", "rumin", "ruminansi", "ruminansia", "rumit", "rumor", "rumpakan", "rumpang", "rumpi", "rumpil", "rumpon", "rumpun", "rumput", "rumrum", "rumuk", "rumung", "rumus", "runcing", "runcit", "runding", "rundu-rundu", "runduk", "rundung", "rungau", "runggas", "runggu", "runggu-rangga", "rungguh", "runggut", "rungkau", "rungkuh", "rungkun", "rungkup", "rungu", "rungus", "rungut", "runjam", "runjang", "runjau", "runjung", "runtai", "runtang-runtung", "runtas", "runti", "runtih", "runtuh", "runtun", "runtut", "runut", "runyam", "runyut", "ruok", "rupa", "rupee", "rupiah", "rurut", "rusa", "rusak", "rusuh", "rusuk", "rutab", "rute", "rutenium", "ruterfordium", "rutin", "rutuk", "rutup", "ruwah", "ruwat", "ruwet", "ruyak", "ruyap", "ruyung", "ruyup", "saadah", "saadin", "saanen", "saat", "sab-sab", "saba", "sabah", "sabak", "saban", "sabana", "sabang", "sabar", "sabas", "sabasani", "sabat", "sabatikal", "sabda", "sabel", "saben", "sabet", "sabi", "sabil", "sabilillah", "sabit", "sabitah", "sableng", "sablon", "sabo", "sabot", "sabotase", "sabsab", "sabtu", "sabuk", "sabun", "sabung", "sabur", "sabut", "sad", "sadah", "sadai", "sadak", "sadang", "sadap", "sadar", "sadariah", "sadarulkalam", "sadarusalam", "sadau", "sadel", "sadik", "sadin", "sading", "sadir", "sadis", "sadisme", "sadistis", "sado", "sadrah", "sadran", "sadu", "sadur", "saf", "safa", "safar", "safari", "safi", "safih", "safinah", "safinatunajah", "safir", "safrah", "safron", "safsaf", "safsah", "saga", "sagai", "sagang", "sagar", "sagitarius", "sagon", "sagu", "saguer", "sagur", "sah", "sahabat", "sahaja", "saham", "sahan", "sahang", "sahap", "sahara", "saharah", "sahaya", "sahayanda", "sahda", "sahdu", "sahi", "sahib", "sahibulbait", "sahibulhajat", "sahibulhikayat", "sahifah", "sahih", "sahir", "sahkan", "sahmura", "sahur", "sahut", "sai", "saif", "sailan", "sailo", "saing", "sains", "saintis", "sair", "sais", "saja", "sajadah", "sajak", "sajang", "sajen", "saji", "sak", "saka", "sakai", "sakal", "sakang", "sakap", "sakar", "sakarida", "sakarimeter", "sakarin", "sakarosa", "sakat", "sake", "sakelar", "sakelek", "sakhawat", "sakhi", "sakhrat", "sakhsi", "saki", "sakinah", "saking", "sakit", "saklek", "sakral", "sakramen", "sakramental", "sakramentalia", "sakratulmaut", "sakrilegi", "sakristi", "sakrokoksigeal", "sakrolumbal", "sakrum", "saksama", "saksang", "saksi", "saksofon", "sakti", "saku", "sakura", "sal", "sala", "salaf", "salah", "salai", "salak", "salam", "salang", "salar", "salaris", "salasal", "salat", "salatin", "saldo", "sale", "saleh", "salem", "salep", "sali", "salib", "salihah", "salim", "salin", "salina", "salindia", "salindra", "saling", "salinisasi", "salinitas", "salinometer", "salip", "salir", "salira", "salivasi", "salju", "salmon", "salmonela", "salon", "salpeter", "salping", "saltasi", "salto", "saluir", "saluk", "salung", "salur", "salut", "salvarsan", "salvo", "sama", "samad", "samak", "saman", "samanera", "samaniah", "samapta", "samar", "samara", "samarium", "samas", "samawi", "samba", "sambal", "sambalewa", "sambang", "sambangan", "sambar", "sambat", "sambau", "samben", "sambet", "sambi", "sambil", "sambiloto", "sambit", "sambuk", "sambung", "sambur", "sambut", "sami", "samidra", "samijaga", "samin", "samir", "samo-samo", "samovar", "sampa", "sampah", "sampai", "sampak", "sampakan", "sampan", "sampang", "sampanye", "sampar", "samparan", "sampat", "sampean", "sampek", "sampel", "samper", "sampeyan", "sampil", "sampilik", "samping", "sampir", "sampling", "samplok", "sampo", "sampu", "sampuk", "sampul", "sampur", "samsak", "samsam", "samseng", "samsir", "samsiti", "samsu", "samudra", "samuh", "samum", "samun", "samurai", "sana", "sanad", "sanak", "sanat", "sanatogen", "sanatorium", "sanatulhijriah", "sanatulmiladiah", "sanawiah", "sanca", "sanda", "sandal", "sandang", "sandar", "sandel", "sandera", "sandi", "sanding", "sandiwara", "sando", "sandung", "sandungan", "sanering", "sang", "sanga", "sangai", "sangan", "sangar", "sangat", "sangau", "sangga", "sanggah", "sanggam", "sanggama", "sanggan", "sanggang", "sanggar", "sanggarunggi", "sanggat", "sanggep", "sanggerah", "sangging", "sanggit", "sanggrah", "sanggraloka", "sanggul", "sanggup", "sanggurdi", "sangha", "sangih", "sangir", "sangit", "sangka", "sangkak", "sangkakala", "sangkal", "sangkala", "sangkan", "sangkar", "sangkil", "sangku", "sangkul", "sangkur", "sangkuriang", "sangkut", "sangkut-paut", "sangli", "sangling", "sanglir", "sangon", "sangrai", "sangsai", "sangsam", "sangsang", "sangsi", "sangu", "sanguifikasi", "sangulun", "sangyang", "sani", "sanik", "sanitas", "sanitasi", "saniter", "sanjai", "sanjak", "sanjang", "sanjung", "sanksi", "sano", "sansai", "sanseviera", "sanskerta", "santa", "santai", "santak", "santam", "santan", "santap", "santase", "santau", "santer", "santet", "santiaji", "santing", "santir", "santo", "santonin", "santri", "santun", "santung", "sanubari", "sap", "sapa", "sapai", "saparantu", "sapat", "sapau", "sapersi", "sapi", "sapih", "sapir", "sapit", "sapogenin", "saponin", "saprofit", "sapta", "saptadarma", "saptamarga", "saptapesona", "sapu", "saput", "saputangan", "sar", "sara", "saradasi", "saraf", "sarak", "saran", "sarana", "sarang", "sarangan", "sarap", "sarasehan", "sarat", "sarau", "sarden", "sardencis", "sarean", "sareh", "sarekat", "saren", "sarengat", "sarhad", "sari", "saridele", "sarik", "sarikan", "saring", "sarira", "sarirah", "sarit", "sarjana", "sarju", "sarkasme", "sarkastis", "sarkode", "sarkoderma", "sarkofagus", "sarkolema", "sarkologi", "sarkoma", "sarkoplasma", "saron", "sarsaparila", "sartan", "saru", "saruk", "sarung", "sarut", "sarwa", "sasa", "sasak", "sasakala", "sasana", "sasando", "sasap", "sasar", "sasau", "sasi", "sasian", "sasis", "sasmita", "sastra", "sasus", "sat", "satai", "satak", "satang", "satanologi", "satar", "sate", "satelit", "satih", "satin", "satinet", "satir", "satire", "satiris", "sato", "satori", "satpam", "satria", "satron", "satu", "saturnus", "saturometer", "satwa", "satyagraha", "satyalencana", "satyawacana", "sau", "saudagar", "saudara", "saudari", "sauh", "saujana", "sauk", "saum", "sauna", "saung", "saur", "saus", "saut", "sauvinis", "sauvinisme", "sauvinistis", "saw", "sawa", "sawab", "sawah", "sawai", "sawala", "sawan", "sawang", "sawangan", "sawar", "sawat", "sawer", "sawi", "sawit", "sawo", "sawut", "saya", "sayak", "sayang", "sayap", "sayat", "sayembara", "sayet", "sayib", "sayid", "sayidani", "sayidi", "sayidina", "sayu", "sayung", "sayup", "sayur", "seba", "sebab", "sebahat", "sebai", "sebak", "sebal", "sebam", "sebar", "sebarang", "sebarau", "sebasah", "sebat", "sebaur", "sebekah", "sebel", "sebelas", "sebeng", "sebentar", "seberang", "seberhana", "sebet", "sebit", "seblang", "sebrot", "sebu", "sebuk", "sebum", "sebun", "sebura", "seburas", "seburu", "seburus", "seburut", "sebut", "secang", "seceng", "secerek", "secina", "sedahan", "sedak", "sedam", "sedan", "sedang", "sedap", "sedat", "sedatif", "sedativa", "sedawai", "sedekah", "sedekap", "sedelinggam", "sedeng", "sederhana", "sederum", "sedia", "sediakala", "sedih", "sedikit", "sedimen", "sedimentasi", "sedimenter", "sedingin", "sedong", "sedot", "sedu", "seduayah", "seduh", "sefalopoda", "sefalotoraks", "seg", "sega", "segah", "segak", "segala", "segan", "seganda", "segani", "segar", "segara", "segata", "segeger", "segeh", "segel", "segenap", "segera", "segi", "segianya", "segitiga", "segmen", "segmental", "segmentasi", "segregasi", "seguna", "seh", "seharah", "sehat", "sehingga", "seia", "seilometer", "sein", "seismik", "seismograf", "seismogram", "seismolog", "seismologi", "seismometer", "sejahtera", "sejajar", "sejak", "sejarah", "sejarawan", "sejari", "sejat", "sejati", "sejingkat", "sejuk", "sek", "seka", "sekadar", "sekah", "sekak", "sekakar", "sekakmat", "sekal", "sekala", "sekali", "sekaligus", "sekalipun", "sekalor", "sekam", "sekan", "sekang", "sekap", "sekapar", "sekar", "sekarang", "sekarat", "sekat", "sekata", "sekaten", "sekati", "sekaut", "sekeber", "sekebun", "sekedeng", "sekeduduk", "sekedup", "sekelat", "sekelebatan", "sekelian", "sekema", "sekendal", "sekendi", "sekengkeng", "sekepat", "sekeram", "sekeri", "sekerindangan", "sekering", "sekesel", "seketeng", "sekh", "sekian", "sekilwak", "sekip", "sekira", "sekiram", "sekitar", "seko", "sekoci", "sekoi", "sekolah", "sekon", "sekongkol", "sekonyong-konyong", "sekop", "sekopong", "sekoteng", "sekrap", "sekresi", "sekret", "sekreta", "sekretariat", "sekretaris", "sekretin", "sekring", "sekrip", "sekrup", "seks", "seksi", "seksmaniak", "seksolog", "seksologi", "seksologis", "sekstan", "sekstet", "seksual", "seksualitas", "sektarian", "sektarianisme", "sekte", "sektor", "sektoral", "sekuas", "sekui", "sekul", "sekularis", "sekularisasi", "sekularisme", "sekularitas", "sekuler", "sekulir", "sekunar", "sekunder", "sekunyit", "sekuritas", "sekuriti", "sekutu", "sel", "sela", "selabar", "selaber", "selaberak", "selada", "seladang", "seladon", "selagi", "selai", "selain", "selaju", "selak", "selaka", "selakarang", "selaku", "selalu", "selam", "selamat", "selamba", "selampai", "selampe", "selampek", "selampit", "selan", "selancak", "selancang", "selancar", "selang", "selangat", "selangka", "selangkang", "selangkup", "selanting", "selap", "selapan", "selaput", "selar", "selara", "selarak", "selaras", "selarung", "selasa", "selasar", "selasih", "selat", "selatan", "selawah", "selawat", "selawe", "selaya", "selayun", "selayur", "sele", "selebaran", "selebran", "selebrasi", "selebritas", "selebriti", "selebu", "seleder", "selederi", "seledri", "seleguri", "selekeh", "selekoh", "selekor", "seleksi", "selekta", "selektif", "selektivitas", "seleler", "selembana", "selembubu", "selempada", "selempang", "selempukau", "selempuri", "selendang", "selender", "selendro", "selenggara", "selengkatan", "selenium", "selenografi", "selenologi", "selentang-selenting", "selentik", "selenting", "seleo", "selepa", "selepang", "selepat", "selepe", "seleper", "selepetan", "selepi", "selera", "selerak", "selerang", "seleret", "selesa", "selesai", "selesma", "seletuk", "seleweng", "selia", "seliap", "selibat", "selibu", "selibut", "selidik", "seligi", "seligit", "selimang", "selimpang", "selimpat", "selimut", "selinap", "selindung", "seling", "selingar", "selingkit", "selingkuh", "selingkup", "selip", "selipar", "selir", "selira", "selirak", "selirat", "seliri", "selisih", "selisik", "selisip", "selisir", "selit", "seliwer", "selo", "selofan", "selok", "seloka", "selokan", "seloki", "selom", "selomot", "selompret", "selon", "selonding", "selong", "selongkar", "selongsong", "selonjor", "selonong", "selop", "seloroh", "selot", "seloyak", "seloyong", "selter", "seluang", "seluar", "selubung", "seludang", "seludu", "seluduk", "seludup", "selui", "seluk", "seluk-beluk", "selukat", "selukung", "seluler", "seluloid", "selulosa", "selulup", "selulur", "selumar", "selumbar", "selumbari", "selumbat", "selumu", "selumur", "seluncur", "selundat", "selundup", "selungkang", "selungkup", "selup", "selupan", "selupat", "selurah", "seluru", "seluruh", "selusuh", "selusup", "selusur", "selut", "sema", "semadi", "semafor", "semah", "semai", "semaja", "semak", "semalu", "semambu", "semampai", "semampang", "semampat", "seman", "semanak", "semandan", "semandarasa", "semandarasah", "semandera", "semang", "semangat", "semanggi", "semangka", "semangkok", "semangkuk", "semantan", "semantik", "semantis", "semantung", "semaput", "semara", "semarai", "semarak", "semaram", "semarmendem", "semat", "semata", "semawang", "semawar", "semaya", "semayam", "semayi", "sembab", "sembabat", "sembada", "sembagi", "sembah", "sembahyang", "sembai", "sembak", "sembam", "sembap", "sembar", "sembarang", "sembari", "sembat", "sembawang", "sembayan", "sembelih", "sembelit", "sember", "semberap", "semberip", "sembesi", "sembeta", "sembiang", "sembilan", "sembilang", "sembilik", "sembilu", "sembir", "sembirat", "semboyan", "sembrani", "sembrono", "sembuang", "sembuh", "sembul", "sembung", "sembunyi", "sembur", "semburat", "semburit", "semecah", "semedera", "semejana", "semeleh", "sememeh", "semen", "semena", "semenanjung", "semenda", "semendarasa", "semenggah", "semenjak", "semenjana", "sementang", "sementara", "sementasi", "sementelah", "sementung", "semerawang", "semerbak", "semerdanta", "semesta", "semester", "semi", "semiang", "semidiurnal", "semifinal", "semifinalis", "semiidiom", "semikonduktor", "semilat", "seminai", "seminar", "seminari", "seminaris", "seminau", "semiologi", "semiotik", "semiotika", "semipermanen", "semir", "semitisme", "semivokal", "semok", "sempada", "sempadan", "sempak", "sempal", "sempalai", "sempana", "sempang", "sempat", "sempelah", "sempena", "sempil", "sempit", "semplak", "sempoyong", "sempoyongan", "semprit", "semprong", "semprot", "sempul", "sempur", "sempuras", "sempurna", "semrawut", "semringah", "semsem", "semu", "semua", "semunding", "semunian", "semur", "semut", "sen", "sena", "senak", "senam", "senamaki", "senandika", "senandung", "senang", "senangin", "senantan", "senantiasa", "senapan", "senapati", "senar", "senarai", "senario", "senat", "senator", "senawan", "senawar", "senawat", "senawi", "senda", "sendal", "sendalu", "sendam", "sendang", "sendar", "sendarat", "sendaren", "sendat", "sendawa", "sendayan", "sendayang", "sendel", "sendeng", "sender", "senderik", "senderung", "senderut", "sendi", "sending", "sendiri", "sendocong", "sendok", "sendon", "sendorong", "sendratari", "sendu", "senduduk", "senduk", "senen", "senewen", "seng", "sengaja", "sengal", "sengam", "sengangar", "sengangkar", "sengap", "sengar", "sengar-sengir", "sengarat", "sengaring", "sengat", "sengau", "sengelat", "senget", "senggak", "senggang", "senggara", "senggat", "senggau", "senggayut", "senggerahan", "senggeruk", "sengget", "senggiling", "senggol", "senggora", "senggugu", "senggugut", "sengguk", "senggulung", "senggut", "sengih", "sengingih", "sengir", "sengit", "sengkak", "sengkal", "sengkalan", "sengkang", "sengkar", "sengkarut", "sengkawang", "sengkayan", "sengked", "sengkedan", "sengkek", "sengkela", "sengkelang", "sengkelat", "sengkeling", "sengkelit", "sengkenit", "sengker", "sengketa", "sengkil", "sengkilit", "sengkuang", "sengkuap", "sengon", "sengsai", "sengsam", "sengsara", "sengsem", "sengsurit", "senguk", "sengungut", "sengut", "seni", "senigai", "senil", "senilitas", "seniman", "senin", "senior", "senioritas", "senja", "senjak", "senjang", "senjata", "senjolong", "senjong", "senohong", "senonoh", "senoyong", "sensasi", "sensasional", "sensibel", "sensibilitas", "sensitif", "sensitivitas", "sensor", "sensoris", "sensual", "sensualisme", "sensualitas", "sensur", "sensus", "senta", "sentada", "sentadu", "sentagi", "sentak", "sentaka", "sental", "sentali", "sentana", "sentap", "sentara", "senteng", "senter", "senterpor", "senti", "sentiare", "sentiasa", "sentigram", "sentil", "sentiliter", "sentimen", "sentimental", "sentimentalitas", "sentimentil", "sentimeter", "senting", "sentiong", "sentiung", "sentol", "sentong", "sentosa", "sentra", "sentral", "sentralisasi", "sentralistis", "sentrifugal", "sentripetal", "sentrum", "sentuh", "sentuk", "sentul", "sentung", "senu", "senuh", "senuk", "senunggang", "senur", "senyampang", "senyap", "senyar", "senyawa", "senyum", "senyur", "seok", "seolah-olah", "sep", "sepada", "sepah", "sepai", "sepak", "sepakat", "sepal", "sepala-pala", "sepam", "sepan", "sepanar", "sepandri", "sepang", "sepangkalan", "separasi", "separatis", "separatisme", "separbang", "sepasin", "sepat", "sepatbor", "sepatu", "sepeda", "sepedas", "sepegoh", "sepekuk", "sepel", "sepele", "sepeling", "sepen", "sepenuh", "seperah", "seperantu", "sepersi", "seperti", "sepesan", "sepet", "sepetir", "sepi", "sepih", "sepiker", "sepir", "sepit", "seples", "sepoi", "seprai", "seprei", "sepsis", "september", "septima", "septum", "sepuh", "sepuit", "sepuk", "sepukal", "sepul", "sepulih", "sepuluh", "sepupu", "sepur", "seput", "sera", "serabi", "serabut", "serabutan", "seraga", "seragam", "serah", "serahi", "serai", "serak", "serakah", "seram", "serama", "serambi", "serampang", "serampin", "serampu", "serampuk", "seran", "serana", "seranah", "serandang", "serandau", "serandib", "serandung", "serang", "serangga", "serangguh", "seranggung", "serangkak", "serangsang", "serani", "seranograf", "seranometer", "seranta", "serap", "serapah", "serapat", "serasa", "serasah", "serasi", "serat", "seratah", "serati", "seratung", "serau", "seraumeter", "seraut", "serawak", "serawal", "seraya", "serba", "serbaada", "serbaakal", "serbabaru", "serbabisa", "serbadua", "serbaemas", "serbaguna", "serbah-serbih", "serbaindah", "serbak", "serbakeemasan", "serbakurang", "serbamacam", "serban", "serbaneka", "serbaputih", "serbarumah", "serbasalah", "serbasama", "serbasusah", "serbat", "serbausaha", "serbet", "serbi", "serbu", "serbuk", "serdadu", "serdak", "serdam", "serdang", "serdawa", "serdi", "serdih", "serealia", "serealin", "sereat", "serebral", "serebrospinal", "serebrum", "seregang", "sereh", "serembah-serembih", "seremban", "seremoni", "seremonial", "serempak", "serempet", "serempu", "serendah", "serendeng", "sereng", "serengam", "serengeh", "serengit", "serenjak", "serenjang", "serenta", "serentak", "serep", "seresin", "seret", "sergah", "sergam", "sergap", "sergut", "seri", "serial", "seriap", "seriat", "seriawan", "seribulan", "seriding", "serigading", "serigala", "serigunting", "serik", "serikat", "serikaya", "serimala", "serimpet", "serimpi", "serimpung", "serindai", "serindit", "sering", "seringai", "seringing", "seriosa", "serit", "serium", "serius", "serkah", "serkai", "serkap", "serkup", "serlah", "serling", "sermangin", "sermet", "sernak", "sero", "serobeh", "serobok", "serobot", "serografi", "seroja", "serok", "serologi", "serombong", "serompok", "serondeng", "serondok", "serondol", "serondong", "serong", "seronok", "seroplastik", "seropot", "serositas", "serosoh", "serot", "seroyong", "serpentina", "serpih", "sersan", "serse", "sersi", "serta", "sertifikasi", "sertifikat", "sertu", "seru", "seruak", "seruas", "seruda", "serudi", "seruduk", "serugah", "serugat", "seruh", "serui", "seruit", "seruk", "serul", "seruling", "serum", "serumat", "serumen", "serumpu", "serun", "serunai", "serunda", "serundang", "serundeng", "seruni", "serunjang", "seruntun", "serupih", "seruput", "seruru", "serut", "serutu", "seruyuk", "servis", "sesah", "sesai", "sesaing", "sesajen", "sesak", "sesal", "sesam", "sesamoid", "sesanti", "sesap", "sesar", "sesat", "sesawi", "sesenap", "seser", "sesi", "sesil", "sesira", "sesium", "sesoca", "sespan", "sestina", "sesuai", "sesuatu", "sesumbar", "set", "seta", "setabelan", "setagen", "setai", "setaka", "setakona", "setal", "setambun", "setan", "setana", "setang", "setangan", "setanggi", "setapak", "setaria", "setat", "setawar", "setebal", "seteger", "seteheng", "setek", "seteker", "setel", "setela", "seteleng", "setem", "setempel", "seten", "setenggar", "seter", "seteranah", "seteru", "setewel", "seti", "setia", "setiabu", "setiar", "setiga", "setik", "setin", "setinggi", "setip", "setir", "setirman", "setiwel", "setoka", "setokin", "setolop", "setom", "seton", "setop", "setoples", "setor", "setori", "setoter", "setra", "setrap", "setrat", "setren", "setreng", "setrik", "setrika", "setrimin", "setrip", "setruk", "setrum", "setrup", "setti", "setu", "setuil", "setum", "setung", "setup", "seturi", "seturu", "seudati", "sewa", "sewah", "sewaka", "sewal", "sewar", "sewat", "sewot", "sewu", "sfenoidal", "sferoid", "sferometer", "sfigmograf", "sfigmomanometer", "sfikmograf", "sfingofili", "sfingter", "sfinks", "sia", "siaga", "siah", "siak", "siakap", "siakon", "sial", "sialang", "sialit", "siam", "siamang", "sian", "sianamida", "sianang", "siang", "sianggit", "sianida", "sianometer", "sianometri", "sianosis", "siantan", "siap", "siap-sedia", "siap-siaga", "siapa", "siapuh", "siar", "siarah", "siarat", "siasat", "siat", "siau", "sibak", "sibar", "sibernetika", "sibilan", "sibir", "sibuk", "sibur", "sibusuk", "sice", "sicerek", "sida", "sidai", "sidamukti", "sidang", "sidat", "siderit", "sidi", "sidik", "siding", "sidomukti", "sidratulmuntaha", "siduga", "siduk", "sif", "sifat", "sifatullah", "sifer", "sifilis", "sifilobia", "sifiloid", "sifir", "sifon", "sigai", "sigak", "sigando", "sigap", "sigar", "sigaret", "sigasir", "sigenting", "siger", "sigi", "sigilografi", "sigma", "signifikan", "signifikansi", "signifikasi", "sigot", "sigung", "sih", "sihir", "sijik", "sijil", "sika", "sikah", "sikai", "sikak", "sikap", "sikari", "sikas", "sikat", "sikedempung", "sikeras", "sikik", "sikikih", "sikin", "sikit", "siklik", "siklis", "sikloid", "siklon", "sikloparafin", "siklotron", "siklus", "siksa", "siku", "sikudidi", "sikudomba", "sikut", "sil", "sila", "silabel", "silabis", "silabus", "silah", "silalatu", "silam", "silampukau", "silang", "silap", "silara", "silase", "silat", "silaturahmi", "silau", "silengah", "silet", "silih", "silik", "silika", "silikat", "silikon", "silikona", "silikosis", "silinder", "silindris", "silindroid", "silir", "silium", "silo", "silogisme", "silok", "silologi", "silometer", "siloptik", "silsilah", "silt", "silu", "siluet", "siluk", "siluman", "silungkang", "silvika", "silvikultur", "silvisida", "simak", "simalakama", "simalu", "simaung", "simbah", "simbai", "simbang", "simbar", "simbat", "simbion", "simbiosis", "simbiotis", "simbiou", "simbok", "simbol", "simbolis", "simbolisme", "simbukan", "simbur", "simetri", "simetris", "simfisis", "simfoni", "simifisis", "simile", "simpai", "simpak", "simpan", "simpang", "simpang-siur", "simpanse", "simpat", "simpati", "simpatik", "simpatisan", "simpel", "simpetal", "simping", "simpir", "simpleks", "simplifikasi", "simplistis", "simposium", "simpuh", "simpuk", "simpul", "simpur", "simtom", "simtomatis", "simtomatologi", "simulasi", "simulator", "simulfiks", "simultan", "simuntu", "sin", "sinaga", "sinagoga", "sinagoge", "sinambung", "sinanaga", "sinansari", "sinar", "sinatan", "sinau", "sinawar", "sindap", "sinden", "sinder", "sindeton", "sindikalisme", "sindikasi", "sindikat", "sindir", "sindrom", "sindur", "sineas", "sinekdoke", "sinektika", "sinema", "sinemapleks", "sinemaskop", "sinematik", "sinematograf", "sinematografi", "sinematografis", "sinemikrografik", "sineol", "sinepleks", "sinergi", "sinergis", "sinergisme", "sineskop", "sinestesia", "sinetron", "sing", "singa", "singahak", "singelar", "singga", "singgah", "singgan", "singgang", "singgasana", "singgel", "singgir", "singgit", "singgul", "singgung", "singit", "singkak", "singkang", "singkap", "singkat", "singkeh", "singkek", "singkil", "singkir", "singkong", "singkup", "singkur", "singlet", "singsat", "singse", "singset", "singsing", "singularis", "singulum", "singulun", "singunen", "sini", "sinis", "sinisme", "sinjang", "sinklin", "sinkonina", "sinkope", "sinkretis", "sinkretisasi", "sinkretisme", "sinkron", "sinkronis", "sinkronisasi", "sinkronisme", "sinode", "sinolog", "sinologi", "sinom", "sinoman", "sinonim", "sinonimi", "sinopsis", "sinoptis", "sinovia", "sinovial", "sinovitas", "sinovitis", "sinrili", "sinse", "sintagma", "sintagmatis", "sintaksis", "sintaktis", "sintal", "sintar", "sintas", "sinter", "sinterklas", "sintese", "sintesis", "sintetik", "sintetis", "sinting", "sintir", "sintonik", "sintren", "sintua", "sintuk", "sintulang", "sintung", "sinu", "sinuhun", "sinus", "sinusal", "sinusitis", "sinusoid", "sinyal", "sinyalemen", "sinyalir", "sinyo", "sinyokolas", "sio", "sioca", "siong", "siongka", "sip", "sipahi", "sipai", "sipangkalan", "sipat", "sipatung", "sipedas", "sipesan", "sipi", "sipil", "sipir", "sipit", "sipolan", "sipongang", "sipu", "sipulut", "siput", "sir", "sira", "sirah", "siram", "sirangkak", "sirap", "sirat", "siratalmustakim", "siraut", "sirene", "sirep", "siri", "siriasis", "sirib", "sirih", "sirik", "siring", "siringitis", "sirip", "sirkam", "sirke", "sirkol", "sirkuit", "sirkulasi", "sirkuler", "sirkumfiks", "sirkumfleks", "sirkus", "sirlak", "sirna", "sirokumulus", "sirop", "sirostratus", "sirsak", "siru", "sirup", "sirus", "sis", "sisa", "sisal", "sisalak", "sisi", "sisih", "sisik", "sisip", "sisir", "sista", "sistaltik", "sistem", "sistematik", "sistematika", "sistematis", "sistematisasi", "sistematisir", "sistemis", "sistemisasi", "sisterna", "sistitis", "sistole", "sistolik", "sisurut", "siswa", "siswi", "sit", "sita", "sitak", "sitat", "siter", "siti", "sitinggil", "sitir", "sitokrom", "sitolilis", "sitolisis", "sitologi", "sitoplasma", "sitrat", "sitrin", "sitrun", "situ", "situasi", "situasional", "situn", "situs", "siuh", "siuk", "siul", "siuman", "siung", "siur", "siut", "sivilisasi", "siwalan", "siwaratri", "siwer", "sizigi", "skafa", "skala", "skalanisasi", "skalar", "skalop", "skandal", "skandium", "skarifikasi", "skatola", "skatologi", "skedul", "skelet", "skema", "skematis", "skenario", "skene", "skeptis", "skeptisisme", "sketsa", "ski", "skiameter", "skiatika", "skilot", "skip", "skiping", "skisma", "skizofrenia", "skizoid", "sklerenkima", "sklerosis", "skleroterapi", "skolastik", "skolastikus", "skolastisi", "skolastisisme", "skombroid", "skop", "skopometer", "skor", "skorbut", "skorpio", "skors", "skorsing", "skrin", "skrining", "skrip", "skripsi", "skrobikulus", "skrotum", "skuadron", "skuas", "skuat", "skuos", "skuter", "slagorde", "slah", "slang", "slebor", "slendro", "sling", "slintat-slintut", "slip", "slof", "slogan", "smes", "smokel", "snob", "snobisme", "soak", "soal", "soang", "soarma", "soba", "soban", "sobat", "sobek", "sobok", "soda", "sodet", "sodium", "sodok", "sodomasosisme", "sodomi", "sodomia", "sodor", "soe", "sofa", "sofis", "sofisme", "sofistri", "sofitel", "soga", "sogan", "sogang", "sogo", "sogok", "sohar", "sohib", "sohor", "sohun", "soja", "sok", "soka", "sokah", "soker", "soket", "sokom", "sokong", "sol", "solah", "solak", "solang", "solanina", "solar", "solarimeter", "solder", "solek", "solempis", "solenoide", "solfatar", "solfatara", "solid", "solidaritas", "solider", "soliditas", "solilokui", "solinometer", "solipsisme", "solis", "soliter", "solo", "solois", "solok", "solokan", "solot", "solum", "solusi", "solvabilitas", "solven", "som", "soma", "somah", "somasi", "somatis", "somatomegali", "sombok", "sombol", "sombong", "sombrero", "someng", "somnambulis", "somnambulisme", "sompek", "sompeng", "somplak", "somplok", "sompoh", "sompok", "sompong", "sompret", "sonar", "sonata", "sonatina", "sondai", "sondanco", "sondang", "sondase", "sondek", "sonder", "sondok", "sondong", "soneta", "songar", "songel", "songgeng", "songket", "songkok", "songkro", "songong", "songsong", "sonik", "sono", "sonogram", "sonokeling", "sonor", "sonoran", "sontak", "sontek", "sontok", "sontoloyo", "sop", "sopak", "sopan", "sopek", "sopi", "sopir", "soporifik", "sopran", "sorak", "sorang", "sorban", "sorbet", "sore", "sorek", "soren", "sorgum", "sori", "sorog", "sorok", "sorong", "sorot", "sortir", "sosi", "sosial", "sosialis", "sosialisasi", "sosialisme", "sosialistis", "sosio", "sosio-kultural", "sosiobiolog", "sosiodemokrasi", "sosiodrama", "sosiokultural", "sosiolek", "sosiolinguistik", "sosiolog", "sosiologi", "sosiologis", "sosiometri", "sosionasional", "sosiopat", "sosis", "sositet", "sosoh", "sosok", "sosor", "soto", "sotoh", "sotong", "sotor", "soun", "sowan", "sowang", "soyak", "spageti", "spalasi", "span", "spanduk", "spaning", "sparing", "spasi", "spasial", "spasmodis", "spasmus", "spastik", "spatbor", "spatula", "spedometer", "spektakel", "spektakuler", "spektator", "spektograf", "spektogram", "spektrograf", "spektrogram", "spektrokimia", "spektrometer", "spektroskop", "spektrum", "spekuk", "spekulan", "spekulasi", "spekulatif", "spekulator", "speleologi", "spelter", "sperma", "spermaseti", "spermatid", "spermatofora", "spermatogenesis", "spermatosit", "spermatozoa", "spermatozoid", "spesial", "spesialis", "spesialisasi", "spesialistis", "spesies", "spesifik", "spesifikasi", "spesimen", "spidol", "spidometer", "spikul", "spil", "spina", "spion", "spionase", "spiral", "spiralisasi", "spirilum", "spirit", "spiritis", "spiritisme", "spiritual", "spiritualisasi", "spiritualisme", "spiritus", "spirometer", "spons", "sponsor", "spontan", "spontanitas", "spora", "sporadis", "sporangium", "sporofil", "sport", "sportif", "sportivitas", "spring", "sprint", "sprinter", "sputnik", "sputum", "sreg", "sregep", "srempet", "sri", "srigading", "srigunggu", "srigunting", "srikandi", "srikaya", "srimanganti", "sripah", "sripanggung", "sriti", "stabil", "stabilisasi", "stabilisator", "stabilitas", "stabilizer", "stadion", "stadium", "staf", "stafilitis", "stagnan", "stagnasi", "staking", "stalagmit", "stalagmometri", "stalaktit", "stalinisme", "stalon", "stamba", "stambon", "stambuk", "stambul", "stamen", "stamina", "stan", "standar", "standardisasi", "stanplat", "stanum", "stanza", "stapler", "staples", "start", "starter", "stasi", "stasioner", "stasis", "stasiun", "statis", "statistik", "statistika", "statistis", "stator", "status", "statuta", "statuter", "stearat", "stearin", "steatit", "steatosis", "stegodon", "steik", "stek", "steker", "stela", "steling", "stema", "stemma", "stempel", "sten", "stengun", "steno", "stenografer", "stenografi", "stenogram", "stensil", "step", "stepa", "stepler", "steradian", "stereo", "stereofoni", "stereofonik", "stereognosis", "stereograf", "stereografi", "stereoisomerisme", "stereokimia", "stereometri", "stereoskop", "stereotip", "stereotipikal", "steril", "sterilisasi", "sterilitas", "steroid", "steroidal", "sterol", "stetoskop", "stevador", "stibium", "stigma", "stigmata", "stik", "stiker", "stilbestrol", "stilir", "stilistika", "stilograf", "stimulan", "stimulans", "stimulasi", "stimulatif", "stimulator", "stimulus", "stipendium", "stipulasi", "stirena", "stoikiometri", "stok", "stokastik", "stoker", "stol", "stoliditas", "stolon", "stomata", "stomatitis", "stomatogastrik", "stomatoskop", "stop", "stoper", "stopkeran", "stopkontak", "stoples", "stori", "stormking", "strabotomi", "strata", "strategem", "strategi", "strategis", "stratifikasi", "stratigrafi", "strato", "stratokumulus", "stratopause", "stratopouse", "stratosfer", "stratum", "stratus", "streng", "streptokokus", "streptomisin", "stres", "striker", "strimin", "strip", "striptis", "stroberi", "strobila", "stroboskop", "stroke", "stromking", "strontium", "struktur", "struktural", "strukturalisasi", "strukturalisme", "struma", "studen", "studi", "studio", "stuko", "stupa", "sua", "suah", "suai", "suak", "suaka", "suam", "suami", "suaminda", "suang", "suangi", "suap", "suar", "suara", "suarang", "suargaloka", "suari", "suasa", "suasana", "suat", "suatu", "sub", "subak", "subal", "subam", "suban", "subang", "subbab", "subbagian", "subdirektorat", "subentri", "suberat", "suberin", "subetnik", "subfilum", "subgeneralisasi", "subgenus", "subhana", "subhanallah", "subhat", "subirigasi", "subjek", "subjektif", "subjektivisme", "subkategorisasi", "subkelas", "subklas", "subkontraktor", "subkultur", "sublema", "subletal", "sublim", "sublimasi", "sublimat", "submarine", "submukosa", "subordinasi", "subordinat", "suborganisasi", "subsider", "subsidi", "subskrip", "subsonik", "substandar", "substansi", "substansial", "substantif", "substitusi", "substitutif", "substrat", "subtil", "subtonik", "subtropik", "subuco", "subuh", "subunit", "subur", "subversi", "subversif", "subyek", "subyektif", "subyektivisme", "suceng", "suci", "suda", "sudah", "sudet", "sudi", "sudip", "sudoriferus", "sudra", "sudu", "suduayah", "suduk", "sudung", "sudut", "suf", "sufah", "sufal", "sufi", "sufiks", "sufisme", "sufrah", "sugar", "sugesti", "sugi", "sugih", "suguh", "sugul", "sugun", "suh", "suhad", "suhian", "suhu", "suhuf", "suhun", "suiseki", "suit", "sujana", "sujen", "suji", "sujud", "suka", "sukacita", "sukade", "sukamandi", "sukan", "sukar", "sukarela", "sukaria", "sukat", "sukduf", "suke", "suket", "suki", "suklapaksa", "sukma", "sukrosa", "sukses", "suksesi", "suksesif", "suku", "sukuisme", "sukun", "sula", "sulah", "sulalah", "sulalat", "sulam", "sulang", "sulap", "sulat-sulit", "sulbi", "sulfanasi", "sulfanilamida", "sulfat", "sulfhidril", "sulfolipid", "sulfonamida", "sulfur", "sulfurasi", "suli", "sulih", "suling", "sulit", "sultan", "sultanat", "sultani", "suluh", "suluk", "sulung", "sulur", "sulut", "sum", "sumah", "sumarah", "sumare", "sumasi", "sumba", "sumbang", "sumbangsih", "sumbar", "sumbat", "sumbel", "sumber", "sumbi", "sumbing", "sumbu", "sumbuk", "sumbul", "sumbung", "sumbur", "sumbut", "sumeh", "sumengit", "sumilir", "sumir", "sumirat", "sumo", "sumpah", "sumpal", "sumpek", "sumpel", "sumping", "sumpit", "sumsum", "sumur", "sumurung", "sun", "sunah", "sunam", "sunan", "sunat", "sunatullah", "sunbulat", "sundai", "sundak", "sundal", "sundang", "sundari", "sundep", "sunduk", "sundul", "sundus", "sundusin", "sundut", "sungai", "sungga", "sunggi", "sungging", "sunggit", "sungguh", "sungguhpun", "sungil", "sungkah", "sungkai", "sungkal", "sungkan", "sungkap", "sungkawa", "sungkem", "sungkit", "sungkuk", "sungkum", "sungkup", "sungkur", "sungkuran", "sungsang", "sungu", "sungut", "suni", "sunjam", "sunti", "suntiabu", "suntih", "suntik", "sunting", "suntuk", "sunu", "sunukung", "sunyata", "sunyi", "sup", "supa", "supai", "supaya", "supel", "super", "superblok", "supercepat", "superfisial", "superfosfat", "superheterodin", "superinfeksi", "superintenden", "superior", "superioritas", "superjet", "superkomputer", "superkonduktivitas", "superkonduktor", "superlatif", "superlativisme", "superlunar", "supermarket", "supermen", "supernatural", "supernova", "superskrip", "superskripsi", "supersonik", "superstar", "superstruktur", "supervisi", "supervisor", "suplai", "suplemen", "suplementasi", "suplesi", "supletoar", "suporter", "suportif", "supra", "supraalami", "suprafiks", "supramolekuler", "supranasional", "suprarene", "suprarenoma", "suprasasti", "suprasegmental", "supremasi", "supresif", "supresor", "surah", "surahi", "surai", "suralaya", "suraloka", "suram", "surat", "surati", "surau", "suraya", "surealis", "surealisme", "suren", "surfaktan", "surga", "surgaloka", "surgawi", "suri", "surian", "surih", "surili", "surjan", "surogat", "surplus", "suruh", "suruk", "surup", "surut", "survei", "surya", "suryakanta", "suryani", "sus", "susah", "susastra", "suseptibilitas", "susila", "susilat", "suspender", "suspensi", "suster", "susu", "susuh", "susuk", "susul", "susun", "susung", "susup", "susur", "susut", "sut", "sutan", "suten", "sutil", "sutra", "sutradara", "sutura", "suul", "suun", "suuzan", "suvenir", "suwarnabumi", "suwarnadwipa", "suwir", "suwita", "svedberg", "swa", "swabakar", "swabela", "swadana", "swadarma", "swadaya", "swadesi", "swadidik", "swadisiplin", "swagriya", "swahara", "swaharga", "swaimbas", "swak", "swakaji", "swakarsa", "swakarya", "swakelola", "swakendali", "swakontradiksi", "swalayan", "swanama", "swanggi", "swapraja", "swarabakti", "swasembada", "swasensor", "swasraya", "swasta", "swastanisasi", "swastiastu", "swastika", "swatabur", "swatantra", "swausaha", "sweter", "swike", "swimpak", "swipoa", "syabah", "syabas", "syafaat", "syafakat", "syafii", "syah", "syahadat", "syahadatain", "syahbandar", "syahda", "syahdan", "syahdu", "syahid", "syahriah", "syahsiah", "syahwat", "syair", "syairi", "syajar", "syajarah", "syak", "syaka", "syakban", "syakduf", "syakhsi", "syakir", "syal", "syala", "syam", "syamali", "syaman", "syamanisme", "syamsi", "syamsiah", "syamsir", "syamsu", "syantung", "syar", "syarab", "syarah", "syarak", "syarat", "syarbat", "syarekat", "syariat", "syarif", "syarifah", "syarik", "syarikat", "syatar", "syaulam", "syawal", "syeir", "syekh", "syeti", "syiar", "syikak", "syin", "syirik", "syiwa", "syiwaratri", "syogun", "syok", "syubhat", "syuhada", "syukur", "syumuliah", "syur", "syura", "syurah", "syuriah", "syuruk", "syuting", "taajul", "taala", "taaruf", "taasub", "taat", "taawud", "taazur", "tabah", "tabak", "tabal", "taban", "tabar-tabar", "tabarak", "tabaruk", "tabayun", "tabe", "tabel", "tabela", "tabelaris", "tabernakel", "tabia", "tabiat", "tabib", "tabii", "tabiin", "tabik", "tabir", "tablet", "tablig", "tablo", "tabloid", "tabo", "tabok", "tabrak", "tabu", "tabuh", "tabuhan", "tabula", "tabulasi", "tabulator", "tabulatur", "tabun", "tabung", "tabur", "tabut", "tabzir", "taci", "tadabur", "tadah", "tadaruk", "tadarus", "tadbir", "tadi", "tadir", "tadung", "tadwin", "taekwondo", "taeniasis", "taf", "tafadal", "tafahus", "tafakur", "tafeta", "tafsir", "tagak", "tagal", "tagan", "tagar", "tageh", "tagih", "tago", "tagut", "tahajud", "tahak", "tahal", "tahalul", "tahan", "tahana", "tahang", "tahap", "tahar", "taharah", "tahbis", "tahi", "tahiat", "tahil", "tahir", "tahkik", "tahkim", "tahlil", "tahmid", "tahniah", "tahnik", "tahsil", "tahu", "tahun", "taib", "taifun", "taiga", "taiko", "taipan", "tais", "taiso", "taja", "tajak", "tajali", "tajam", "tajarud", "tajau", "tajdid", "tajen", "taji", "tajin", "tajnis", "tajribah", "taju", "tajuk", "tajung", "tajur", "tajusalatin", "tajwid", "tak", "takabur", "takaful", "takah", "takak", "takal", "takang-takik", "takar", "takarir", "takarub", "takat", "takbir", "takbiratulihram", "takdim", "takdir", "takdis", "takeh", "takel", "takeyari", "takhayul", "takhlik", "takhsis", "takhta", "taki", "takigrafi", "takik", "takimeter", "takir", "takisme", "takjil", "takjub", "taklid", "taklif", "taklik", "taklikat", "taklim", "taklimat", "takluk", "takma", "takmurni", "takoah", "takol", "takometer", "takraw", "takrif", "takrim", "takrir", "taksa", "taksasi", "taksem", "taksi", "taksidermi", "taksimeter", "taksin", "taksir", "taksologi", "takson", "taksonomi", "taktik", "taktil", "taktis", "takuh", "takuk", "takung", "takur", "takut", "takwa", "takwil", "takwim", "takwin", "takyin", "takziah", "takzim", "takzir", "tal", "tala", "talabiah", "talah", "talak", "talam", "talang", "talar", "talas", "talasemia", "talasofit", "talbiah", "talek", "talempong", "talen", "talenan", "talenta", "tali", "talib", "talibun", "talium", "talk", "talkin", "talon", "talu", "talun", "talupuh", "talut", "tam", "tamadun", "tamah", "tamak", "tamam", "taman", "tamar", "tamarinda", "tamasya", "tamat", "tamatulkalam", "tambah", "tambak", "tambakan", "tambal", "tamban", "tambang", "tambar", "tambat", "tamber", "tambera", "tambi", "tambo", "tamborin", "tambuh", "tambul", "tambun", "tambung", "tambur", "tambus", "tameng", "tamimah", "tampah", "tampak", "tampal", "tampan", "tampang", "tampar", "tampas", "tampel", "tampi", "tampik", "tampil", "tampin", "tamping", "tampon", "tamponade", "tampuk", "tampung", "tampus", "tamsil", "tamtam", "tamtama", "tamu", "tamuk", "tamyiz", "tan", "tanah", "tanai", "tanak", "tanam", "tanang", "tanau", "tanazul", "tanbiat", "tanbihat", "tancang", "tancap", "tanda", "tandak", "tandan", "tandang", "tandas", "tandem", "tandik", "tandikat", "tandil", "tanding", "tandon", "tandu", "tanduk", "tandun", "tandur", "tandus", "tanfiziah", "tang", "tangan", "tangap", "tangar", "tangas", "tangeh", "tangen", "tangga", "tanggah", "tanggal", "tanggam", "tanggang", "tanggap", "tanggar", "tanggetong", "tangguh", "tangguk", "tanggul", "tanggulang", "tanggung", "tangis", "tangkah", "tangkai", "tangkaian", "tangkal", "tangkap", "tangkar", "tangkas", "tangki", "tangkil", "tangkis", "tangkue", "tangkuk", "tangkul", "tangkup", "tangkur", "tangkut", "tanglung", "tango", "tangsa", "tangsel", "tangsi", "tani", "tania", "tanin", "tanjak", "tanji", "tanjidor", "tanju", "tanjul", "tanjung", "tanjur", "tank", "tanker", "tanpa", "tansi", "tantang", "tante", "tanti", "tantiem", "tantrisme", "tanur", "tanwin", "tanwir", "tanwujud", "tanya", "tanzih", "tanzil", "taocang", "taoci", "taoco", "taoge", "taoisme", "taoke", "taosi", "tap", "tapa", "tapai", "tapak", "tapal", "tapang", "tapestri", "tapi", "tapih", "tapin", "tapioka", "tapir", "tapis", "taplak", "taprofit", "taptibau", "taptu", "tapui", "tapuk", "tapung", "tapus", "tar", "tara", "taraf", "tarah", "tarak", "taraksasin", "taram", "tarang", "tarantisme", "tarantula", "tarap", "taraqi", "tarasul", "tarawangsa", "tarawih", "tarbiah", "tarbil", "tarbus", "tarcis", "tarekat", "target", "tarhim", "tari", "tarif", "tarik", "tarikat", "tarikh", "taring", "taris", "tarjih", "tarkas", "tarling", "tarmak", "tarpaulin", "tarsus", "tartar", "tartil", "tartir", "tartrat", "taruh", "taruk", "taruko", "tarum", "tarung", "tarup", "tarzan", "tas", "tasa", "tasai", "tasak", "tasalsul", "tasamuh", "tasaruf", "tasawuf", "tasbeh", "tasbih", "tasdik", "tasel", "tashih", "tasik", "taslim", "tasmik", "tasrif", "tasrih", "taswir", "tasyahud", "tasyakur", "tasyaum", "tasyayuh", "tasybih", "tasydid", "tasyhid", "tasyrih", "tasyrik", "tata", "tataganing", "tatah", "tatai", "tatak", "tatal", "tatami", "tatanan", "tatang", "tatap", "tatar", "tatih", "tating", "tatkala", "tato", "tau", "taubat", "taucang", "taufah", "taufik", "tauhid", "tauhidiah", "tauke", "taul", "tauliah", "taun", "taung", "taur", "taurat", "tauret", "taurus", "taut", "tautofoni", "tautologi", "tautomerisme", "tautonimi", "tautonomi", "tawa", "tawadu", "tawaduk", "tawaf", "tawajuh", "tawak", "tawakal", "tawan", "tawang", "tawar", "tawarik", "tawaruk", "tawas", "tawasul", "tawes", "tawon", "tawur", "tayamum", "tayang", "tayib", "tayibah", "tayub", "tayum", "tazkirah", "tean", "teater", "teatris", "tebah", "tebak", "tebal", "teban", "tebang", "tebar", "tebas", "tebat", "tebeng", "teberau", "tebing", "tebok", "tebon", "tebu", "tebuhar", "tebuk", "tebung", "tebus", "tedak", "tedarus", "tedas", "tedeng", "tedong", "teduh", "tedung", "tefrit", "tega", "tegah", "tegak", "tegal", "tegang", "tegap", "tegar", "tegari", "tegarun", "tegas", "tegel", "tegil", "tegmen", "teguh", "teguk", "tegun", "tegur", "teh", "teisme", "teja", "teji", "teka", "tekaan", "tekad", "tekah", "tekak", "tekalak", "tekam", "tekan", "tekang", "tekap", "tekar", "tekat", "tekek", "tekel", "teken", "teker", "teki", "tekidanto", "tekik", "tekis", "teklek", "teklok", "teknifon", "teknik", "teknikus", "teknis", "teknisi", "teknokrasi", "teknokrat", "teknokratik", "teknokratisme", "teknologi", "teknonim", "teknonimi", "teko", "tekoan", "tekoh", "tekokak", "tekong", "tekor", "tekoran", "tekpi", "teks", "tekstil", "tekstur", "tekstural", "tekte", "tektek", "tektit", "tektogenesa", "tektonik", "tektonis", "tektum", "tekua", "tekuk", "tekukur", "tekun", "tekung", "tekur", "tel", "tela", "telaah", "telabang", "telabat", "telacak", "teladan", "teladas", "telaga", "telah", "telajak", "telak", "telakup", "telampung", "telan", "telancang", "telang", "telangkai", "telangkup", "telanjang", "telanjur", "telantar", "telap", "telapak", "telas", "telat", "telatah", "telatap", "telaten", "telau", "tele", "telearsika", "teledek", "teledor", "teledrama", "telefon", "telefoni", "telefoto", "telegenik", "telegraf", "telegrafi", "telegrafis", "telegram", "telegrap", "telekan", "telekap", "telekinesis", "telekomedi", "telekomunikasi", "teleks", "teleku", "telekung", "telelensa", "telemeter", "telemetri", "telempap", "telempong", "teleng", "telenovela", "telentang", "teleologi", "teleost", "telepati", "telepok", "telepon", "teleprinter", "telepromter", "telepuk", "teler", "telerang", "teles", "teleskop", "telestesia", "televisi", "telgram", "telik", "telikung", "telimpuh", "telinak", "telinga", "telingkah", "telingkung", "teliti", "telmotofit", "telop", "telor", "telotak", "telpon", "teluh", "teluk", "teluki", "telungkup", "telunjuk", "telur", "telurat", "telurit", "telus", "telusuk", "telusur", "telut", "telutuh", "telutur", "telutut", "tem", "tema", "temaah", "temabur", "temaha", "temahak", "temak", "temalang", "temali", "teman", "temangau", "temangga", "temanten", "temara", "temaram", "temas", "tematik", "tematis", "tematisasi", "temayun", "tembadau", "tembaga", "tembak", "tembakang", "tembakau", "tembakul", "tembam", "tembang", "tembarau", "tembatar", "tembatu", "tembek", "tembekar", "tembel", "tembelang", "tembelian", "tembeliung", "tembelok", "tembem", "tembera", "temberam", "temberang", "temberas", "temberek", "tembereng", "temberih", "temberos", "tembesu", "tembiang", "tembikai", "tembikar", "tembilang", "tembilar", "tembiring", "tembis", "tembok", "tembolok", "tembong", "tembosa", "tembra", "tembu", "tembuk", "tembuku", "tembung", "tembuni", "tembus", "tembusu", "temegun", "temeh", "temengalan", "temenggung", "temenung", "temesar", "temetu", "temiang", "temilang", "temin", "temokus", "temoleh", "tempa", "tempah", "tempala", "tempan", "tempang", "tempap", "tempat", "tempaus", "tempawak", "tempawan", "tempayak", "tempayan", "tempayung", "tempe", "tempek", "tempel", "tempelak", "tempeleng", "temperamen", "temperamental", "temperas", "temperatur", "temperau", "tempiar", "tempias", "tempik", "tempilai", "tempinah", "tempinis", "templek", "templok", "tempo", "tempoh", "tempolong", "temponek", "tempong", "temporal", "temporer", "tempoyak", "tempoyan", "tempua", "tempuh", "tempui", "tempuling", "tempunai", "tempunik", "tempur", "tempurung", "tempus", "tempuyung", "temu", "temucut", "temukut", "temungkul", "temuras", "temurat", "temut-temut", "tenaga", "tenahak", "tenak", "tenam", "tenang", "tenar", "tenat", "tenda", "tendang", "tendas", "tendensi", "tendensius", "tender", "tendinitis", "tendo", "tendon", "tener", "teng", "tengadah", "tengah", "tengak", "tengalan", "tengar", "tengara", "tengas", "tenggadai", "tenggak", "tenggala", "tenggalung", "tenggan", "tenggang", "tenggara", "tenggarang", "tenggat", "tenggayun", "tenggayung", "tenggehem", "tenggek", "tenggelam", "tengger", "tenggiling", "tenggiri", "tenggiring", "tenggok", "tenggorok", "tengguli", "tengik", "tengil", "tengkalak", "tengkalang", "tengkaluk", "tengkam", "tengkang", "tengkar", "tengkarah", "tengkarap", "tengkaras", "tengkawang", "tengkek", "tengkel", "tengkelek", "tengker", "tengkerong", "tengkes", "tengking", "tengkoh", "tengkolok", "tengkorak", "tengku", "tengkujuh", "tengkuk", "tengkulak", "tengkuluk", "tengkurap", "tengkuyung", "tengok", "tengteng", "tengu", "tenis", "tenjet", "tenok", "tenong", "tenor", "tensi", "tentakel", "tentamen", "tentang", "tentara", "tentatif", "tentawan", "tenteng", "tenteram", "tentir", "tentu", "tenuk", "tenun", "tenung", "teodolit", "teokrasi", "teokratis", "teolog", "teologi", "teologis", "teoretikus", "teoretis", "teori", "teorisasi", "teosofi", "teosofis", "tepa", "tepak", "tepam", "tepas", "tepat", "tepeh", "tepek", "tepekong", "teperam", "tepes", "tepet", "tepi", "tepik", "tepis", "teplok", "tepo", "tepok", "tepos", "teptibau", "tepu", "tepuk", "tepung", "tepurang", "tepus", "ter", "tera", "teracak", "terada", "terajam", "teraju", "terak", "terakota", "terakup", "teral", "terala", "terali", "teraling", "teramisin", "terampil", "teran", "teranas", "terang", "terap", "terapang", "terapeutik", "terapi", "terarium", "teras", "terasi", "teraso", "terasul", "teratai", "teratak", "teratap", "teratologi", "teratu", "terau", "terawang", "teraweh", "terban", "terbang", "terbis", "terbit", "terbium", "terbul", "terbut", "terein", "terem", "terenang", "terendak", "terenen", "terentang", "terenyuh", "teres", "teret", "teretet", "teri", "teriak", "teriba", "terigu", "terik", "terika", "terikit", "teriko", "terima", "terin", "terindil", "tering", "teripang", "terista", "teritih", "teritik", "teritip", "teritis", "teritorial", "teritorium", "teriujung", "terjal", "terjang", "terjemah", "terjun", "terka", "terkadang", "terkam", "terkap", "terkul", "terkup", "terlak", "terlalu", "terlut", "term", "termaestesia", "termal", "termin", "terminal", "terminasi", "terminografi", "terminologi", "termion", "termionika", "termistor", "termodinamika", "termodinamis", "termoelektris", "termoelektrisitas", "termofili", "termofilik", "termofosforesens", "termograf", "termogram", "termohigrograf", "termokimia", "termoklin", "termolabil", "termolisis", "termolistrik", "termoluminesens", "termometer", "termonuklir", "termoplastik", "termos", "termosfer", "termostat", "terna", "ternak", "terobos", "terok", "teroka", "terombol", "teromol", "terompah", "terompet", "terondol", "terong", "terongko", "teropong", "teror", "teroris", "terorisme", "terowongan", "terpa", "terpal", "terpana", "terpedo", "terpentin", "tersier", "tertawa", "tertib", "terubuk", "terubus", "terucuk", "terucukan", "teruk", "terum", "terumba", "terumbu", "terumbuk", "teruna", "terung", "terungku", "teruntum", "terup", "terus", "terusi", "terwelu", "terzina", "tes", "tesaurus", "tesis", "tesmak", "testa", "testamen", "tester", "testes", "testikel", "testimonium", "testing", "testis", "testosteron", "teta", "tetak", "tetal", "tetampan", "tetamu", "tetangga", "tetanus", "tetap", "tetapi", "tetar", "tetas", "teteguk", "teteh", "tetek", "tetelan", "tetelo", "teter", "teterapan", "tetes", "tetibar", "tetibau", "tetikus", "tetirah", "tetiron", "tetoron", "tetra", "tetrahidrokanabinol", "tetrahidron", "tetraklorida", "tetraploid", "tetris", "tetua", "tetuang", "tewas", "teyan", "tezi", "theta", "tiada", "tiaga", "tiam", "tian", "tiang", "tiangui", "tiap", "tiara", "tiarap", "tib", "tiba", "tiban", "tidak", "tidur", "tifa", "tifus", "tiga", "tigari", "tigas", "tihul", "tijaniah", "tik", "tika", "tikai", "tikam", "tikar", "tikas", "tike", "tiket", "tikim", "tikpi", "tikung", "tikus", "tilam", "tilan", "tilang", "tilap", "tilas", "tilawah", "tilde", "tilik", "tim", "timah", "timang", "timarah", "timba", "timbal", "timbang", "timbau", "timbel", "timbil", "timbo", "timbre", "timbrung", "timbuk", "timbul", "timbun", "timburu", "timbus", "timi", "timol", "timpa", "timpal", "timpang", "timpani", "timpanitis", "timpanum", "timpas", "timpuh", "timpuk", "timpus", "timu-timu", "timun", "timur", "timus", "tin", "tindak", "tindan", "tindas", "tindawan", "tindih", "tindik", "tindis", "tiner", "ting", "tinggal", "tinggam", "tinggi", "tinggung", "tingi", "tingkah", "tingkal", "tingkalak", "tingkap", "tingkar", "tingkarang", "tingkarung", "tingkas", "tingkat", "tingkeb", "tingkis", "tingkrang", "tingkuh", "tingting", "tingtong", "tingtur", "tinja", "tinjak", "tinjau", "tinju", "tinta", "tinting", "tintir", "tinulat", "tip", "tipar", "tipe", "tipi", "tipikal", "tipis", "tipograf", "tipografi", "tipologi", "tipologis", "tipu", "tir", "tirah", "tirai", "tirakat", "tiram", "tiran", "tirani", "tiras", "tiraton", "tirau", "tiri", "tiris", "tirkah", "tiroid", "tiroiditis", "tiroksin", "tirta", "tiru", "tirus", "tis", "tisik", "tisotropi", "tisu", "titah", "titanium", "titar", "titel", "titer", "titi", "titik", "titilasi", "titimangsa", "titinada", "titip", "titir", "titis", "titisara", "titit", "titrasi", "titrimetri", "tituler", "tiung", "tiup", "tiwah", "tiwikrama", "tiwul", "tmesis", "toapekong", "toas", "tobak", "tobang", "tobat", "toblos", "toboh", "tobong", "tobralko", "todak", "todong", "toga", "togan", "toge", "togel", "togok", "toh", "tohok", "tohor", "toilet", "tok", "tokak", "tokcer", "toke", "tokek", "toko", "tokoh", "tokok", "tokong", "toksemia", "toksikogenik", "toksikolog", "toksikologi", "toksin", "toktok", "tol", "tolak", "tolan", "tolap", "toleh", "toleran", "toleransi", "tolerir", "tolok", "tolol", "tolong", "toluena", "tom", "toman", "tomang", "tomat", "tombak", "tomboi", "tombok", "tombol", "tombola", "tombong", "tombru", "tomong", "tompel", "ton", "tona", "tonase", "tonem", "tonetika", "tong", "tonggak", "tonggara", "tonggek", "tonggeret", "tonggok", "tonggong", "tonggos", "tongkah", "tongkang", "tongkat", "tongkeng", "tongkol", "tongkor", "tongkrong", "tongol", "tongong", "tongpes", "tongsan", "tongseng", "tongsit", "tongtong", "tonik", "tonikum", "tonil", "tonis", "tonisitas", "tonit", "tonjok", "tonjol", "tonometer", "tonsil", "tonton", "tonus", "top", "topan", "topang", "topas", "topdal", "topek", "topeng", "topes", "tophit", "topi", "topiari", "topik", "topikalisasi", "topikalitas", "topo", "topografi", "topografis", "topong", "toponimi", "torak", "toraks", "torani", "toreh", "torek", "tores", "torida", "torium", "tornado", "torne", "toro", "torpedo", "torpedor", "torsi", "torso", "tortor", "torus", "tos", "tosan", "toserba", "total", "totalisator", "totalitas", "totaliter", "totaliterisme", "totau", "totem", "totemisme", "totemproparte", "totok", "totol", "towel", "toya", "toyor", "tra", "trabekula", "tradisi", "tradisional", "tradisionalisme", "trafo", "tragedi", "tragikomedi", "tragis", "tragus", "trailer", "trakeid", "trakom", "traksi", "traktasi", "traktat", "traktir", "traktor", "traktus", "trama", "trampolin", "trans", "transaksi", "transduksi", "transek", "transeksual", "transenden", "transendental", "transfer", "transfigurasi", "transformasi", "transformasionalis", "transformatif", "transformator", "transfusi", "transgenik", "transisi", "transistor", "transit", "transitif", "transkrip", "transkripsi", "translasi", "transliterasi", "translokasi", "translusens", "transmigran", "transmigrasi", "transmisi", "transmiter", "transmogrifikasi", "transmutasi", "transnasional", "transonik", "transparan", "transparansi", "transpirasi", "transplantasi", "transpor", "transportasi", "transposisi", "transversal", "transvetisme", "trap", "trapesium", "trapezoid", "tras", "trauler", "trauma", "traumatis", "travesti", "trawler", "trayek", "trek", "trekbal", "trem", "trema", "trematoda", "trembesi", "tremer", "tremor", "tren", "trendi", "trengginas", "trenyuh", "tres", "tresna", "tri", "trias", "triatlon", "tribokelistrikan", "tribologi", "tribrata", "tribunal", "tribune", "tributa", "trica", "tridarma", "tridentat", "trienial", "triennale", "trifoliat", "triftong", "trigatra", "trigemius", "trigliserida", "trigonometri", "trigraf", "trihidrik", "trik", "triko", "trikotomi", "trikuspid", "tril", "trilateral", "trilingga", "trilipat", "triliun", "trilogi", "trilomba", "trim", "trimatra", "trimurti", "trinil", "trinitas", "trinitrotoluena", "trio", "triode", "trip", "tripartit", "tripleks", "triplet", "triplik", "tripod", "triprasetia", "trips", "tripsin", "tripsinogen", "triptofan", "triptotos", "trisep", "trisula", "tritunggal", "triturasi", "triumvirat", "trivalen", "trivialitas", "triwangsa", "triwindu", "triwulan", "trofi", "trofoblas", "troi", "troika", "trokanter", "trokea", "troli", "trombin", "trombon", "trombosis", "trombosit", "trombus", "tromol", "trompet", "trompong", "tropik", "tropika", "tropis", "tropisme", "tropopause", "troposfer", "tropus", "tros", "trotoar", "trubadur", "truf", "truk", "truntum", "trusa", "tsar", "tsunami", "tsuru", "tua", "tuah", "tuai", "tuak", "tual", "tuala", "tualang", "tuam", "tuan", "tuang", "tuangku", "tuanku", "tuap", "tuar", "tuarang", "tuas", "tuba", "tubagus", "tuban", "tube", "tubektomi", "tuberkulosis", "tubi", "tubin", "tubir", "tubruk", "tubuh", "tuding", "tuduh", "tudung", "tufa", "tufah", "tugal", "tugar", "tugas", "tugi", "tugu", "tugur", "tuhan", "tuhfah", "tuhfahlulajnas", "tuhfahtulajnas", "tuhfat", "tuhmah", "tuhu", "tuidi", "tuil", "tuit", "tujah", "tuji", "tuju", "tujuh", "tujul", "tuk", "tukai", "tukak", "tukal", "tukam", "tukang", "tukar", "tukas", "tukik", "tukil", "tukmis", "tuksedo", "tuku", "tukuk", "tukul", "tukun", "tukung", "tukup", "tula", "tulah", "tulak", "tulang", "tular", "tulat", "tule", "tulen", "tuli", "tulis", "tulium", "tulu", "tulup", "tulus", "tum", "tuma", "tuman", "tumang", "tumbakan", "tumbal", "tumbang", "tumbas", "tumben", "tumbu", "tumbuh", "tumbuk", "tumbung", "tumenggung", "tumika", "tumis", "tumit", "tumor", "tumpah", "tumpak", "tumpal", "tumpang", "tumpang-tindih", "tumpas", "tumpat", "tumpeng", "tumper", "tumpil", "tumplak", "tumplek", "tumpu", "tumpuk", "tumpul", "tumpur", "tumtam", "tumu", "tumungkul", "tumus", "tun", "tuna", "tunaaksara", "tunabusana", "tunadaksa", "tunaganda", "tunagizi", "tunagrahita", "tunai", "tunak", "tunakarya", "tunalaras", "tunam", "tunan", "tunanetra", "tunang", "tunapolitik", "tunarungu", "tunas", "tunasosial", "tunasusila", "tunatenaga", "tunawicara", "tunawisma", "tunda", "tundan", "tundang", "tundra", "tunduk", "tundun", "tundung", "tung", "tungau", "tunggak", "tunggal", "tungganai", "tunggang", "tunggik", "tungging", "tunggu", "tunggul", "tungkahan", "tungkai", "tungkak", "tungkap", "tungku", "tungkul", "tungkup", "tungkus", "tungro", "tungsten", "tungu", "tunik", "tunjal", "tunjam", "tunjang", "tunjuk", "tunjung", "tuntas", "tuntun", "tuntung", "tuntut", "tunu", "tupai", "tur", "tura", "turang", "turangga", "turap", "turas", "turba", "turbiditas", "turbin", "turbogenerator", "turbojet", "turbulen", "turbulensi", "turfat", "turgor", "turi", "turiang", "turinisasi", "turis", "turisme", "turistik", "turkuois", "turmalin", "turnamen", "turne", "turnoi", "tursi", "turun", "turus", "turut", "tus", "tusam", "tusir", "tuslah", "tustel", "tusuk", "tuter", "tutor", "tutorial", "tuts", "tutu", "tutuh", "tutuk", "tutul", "tutung", "tutup", "tutur", "tutut", "tuwuhan", "tuwung", "tuyuk", "tuyul", "uai", "uak", "uan", "uanda", "uang", "uap", "uar", "uba", "ubah", "uban", "ubang", "ubar", "ubat", "ubek", "ubel", "uber", "ubet", "ubi", "ubikuitas", "ubin", "ubit", "ubrak-abrik", "ubub", "ubudiah", "ubun-ubun", "ubung", "ubur-ubur", "ubyang-ubyung", "ucap", "ucek", "uci-uci", "ucis", "ucok", "ucu", "ucus", "uda", "udak", "udam", "udang", "udani", "udap", "udar", "udara", "ude", "udek", "udel", "udeng", "udet", "udi", "udik", "udim", "udo", "udu", "uduh", "uduk", "udut", "uek", "ufti", "ufuk", "ugahari", "ugal-ugalan", "ugem", "uger", "uget-uget", "ugut", "uhu", "uih", "uik", "uir-uir", "uis", "uit", "ujana", "ujang", "ujar", "uji", "uju", "ujub", "ujud", "ujuk", "ujul", "ujung", "ukas", "ukhrawi", "ukhuwah", "ukik", "ukir", "uktab", "ukulele", "ukup", "ukur", "ula-ula", "ulah", "ulak", "ulam", "ulama", "ulan", "ulang", "ulang-alik", "ulang-aling", "ulap-ulap", "ular", "ulas", "ulat", "ulayah", "ulayat", "ulek", "ulem", "ulen", "ules", "ulet", "uli", "ulik", "ulin", "uling", "ulir", "ulit", "ulna", "ulos", "ultima", "ultimatum", "ultimo", "ultimogenitur", "ultra", "ultrafilter", "ultramarin", "ultramikroskopik", "ultramikroskopiks", "ultramodern", "ultrasonik", "ultrasonika", "ultrasonografi", "ultraungu", "ultraviolet", "ulu", "uluk", "ulun", "ulung", "ulup", "ulur", "uma", "umak", "uman", "umang-umang", "umara", "umat", "umbai", "umbalan", "umban", "umbang", "umbang-ambing", "umbar", "umbara", "umbi", "umbilikus", "umbin", "umbisi", "umbo", "umbra", "umbu", "umbuk", "umbul", "umbur-umbur", "umbut", "umi", "umlaut", "umpak", "umpama", "umpan", "umpat", "umpet", "umpil", "umpuk", "umpun", "umput", "umrah", "umu", "umuk", "umum", "umun", "umur", "unam", "uncang", "uncang-uncit", "uncit", "uncu", "uncue", "uncui", "unda", "undagi", "undak", "undan", "undang", "undi", "unduh", "unduk-unduk", "undung-undung", "undur", "unek-unek", "ungah-angih", "ungam", "ungar", "unggah", "unggal", "unggang-anggit", "unggas", "unggat-unggit", "unggis", "unggit", "unggul", "unggun", "unggut", "ungka", "ungkah", "ungkai", "ungkak", "ungkal", "ungkap", "ungkat", "ungkau", "ungkil", "ungkir", "ungkit", "ungkul", "ungkur", "ungsi", "ungti", "ungu", "unguis", "uni", "uniat", "unifikasi", "uniform", "uniformitas", "unik", "unilateral", "unilineal", "unilinear", "union", "uniseks", "uniseluler", "unit", "unitaris", "unitarisme", "univalen", "universal", "universalia", "universalisme", "universalitas", "universiade", "universitas", "universiter", "universitet", "universum", "unjuk", "unjun", "unjung", "unjur", "unjut", "unsur", "unsuri", "unta", "untai", "untal", "untang-anting", "unti", "until", "unting", "untir", "untuk", "untun", "untung", "untut", "unun", "unyai", "upa", "upaboga", "upacara", "upaduta", "upah", "upajiwa", "upak", "upakara", "upakarti", "upam", "upan", "upanishad", "upar", "upau", "upawasa", "upaya", "upet", "upeti", "upih", "upik", "upil", "upsilon", "ura-ura", "uraemia", "urah", "urai", "urak", "urakus", "uran-uran", "uranisme", "uranium", "uranologi", "uranus", "urap", "uras", "urat", "urban", "urbanisasi", "urbanisme", "urdu", "urea", "uremia", "ureter", "uretra", "uretritis", "urgen", "urgensi", "uri", "urian", "uribang", "urik", "urinalisis", "urine", "uring", "urinoar", "urinometer", "urip", "uris", "urit", "urita", "uritan", "urna", "urolog", "urologi", "uroskopi", "uruk", "urun", "urung", "urup", "urus", "urut", "usada", "usah", "usaha", "usai", "usak", "usali", "usam", "usang", "usap", "usar", "usat", "user-user", "usia", "usik", "usil", "usir", "uskup", "usrek", "ustad", "ustaz", "ustazah", "usuk", "usul", "usuluddin", "usung", "usur", "usus", "usut", "uswah", "utak-atik", "utama", "utang", "utar-utar", "utara", "utarid", "utas", "uterus", "utih", "utik", "utilitas", "utopia", "utopis", "utopisme", "utrikel", "utrolokal", "utuh", "utus", "uvula", "uvular", "uwar", "uwungan", "uwur", "uyuh", "uzlah", "uzur", "vagina", "vak", "vakansi", "vakasi", "vakatur", "vakbon", "vaksin", "vaksinasi", "vakum", "vakuol", "vakuola", "valas", "valensi", "valentin", "valentine", "valeria", "valid", "validitas", "valis", "valium", "valorisasi", "valuta", "vampir", "vanadium", "vandal", "vandalisme", "vandalistis", "vandel", "vanili", "varia", "variabel", "variabilitas", "varian", "variansi", "variasi", "variatif", "varietas", "variola", "varises", "vas", "vasal", "vasektomi", "vaselin", "vaskular", "vaskularisasi", "vaskuler", "vaskulum", "vasodilasi", "vasodilator", "vasomotor", "vatikan", "vaucer", "vedda", "veddoid", "veem", "vegetarian", "vegetarir", "vegetaris", "vegetarisme", "vegetasi", "vektor", "velamentum", "velar", "velarisasi", "velodrom", "velositas", "velum", "vena", "venal", "venalitas", "vendeta", "vendor", "ventilasi", "ventilator", "ventrikel", "ventrikulus", "venus", "verba", "verbal", "verbalisan", "verbalisasi", "verbalisme", "verbalistis", "verbatim", "verbena", "verdigris", "verifikasi", "verifikatur", "veritisme", "verkoper", "vermilium", "vermiliun", "vermiseli", "vermisida", "vernis", "veronal", "verset", "versi", "verso", "verstek", "versus", "vertebra", "vertebrata", "vertikal", "verzet", "vespa", "veste", "vestibul", "vestibula", "vestibulum", "vet", "veter", "veteran", "veterinarian", "veteriner", "vetiver", "veto", "vetsin", "via", "viabel", "viabilitas", "viaduk", "vibran", "vibrasi", "vibrator", "vibrio", "vide", "video", "videofon", "videoklip", "videoteks", "vigia", "vigili", "vignet", "vikariat", "vikaris", "vila", "vinil", "vinyet", "viol", "viola", "violces", "violet", "violin", "violinis", "violis", "virga", "virginia", "virgo", "virilis", "virilisme", "virilitas", "virilokal", "virologi", "virtual", "virtuoso", "virulen", "virulensi", "virus", "visa", "visera", "visi", "visibel", "visibilitas", "visioner", "visitasi", "visitator", "visiun", "viskometer", "viskose", "viskositas", "vista", "visual", "visualisasi", "visum", "visus", "vitakultur", "vital", "vitalitas", "vitamin", "vitelin", "vitiligo", "vitreositas", "vitrifikasi", "vitriol", "vivarium", "vivifikasi", "vivipar", "vla", "vlek", "voal", "vodka", "vokabularium", "vokabuler", "vokal", "vokalia", "vokalis", "vokasional", "vokatif", "vokoid", "volatil", "volatilitas", "voli", "volt", "voltameter", "voltase", "volume", "volumeter", "volumetri", "volunter", "vonis", "vopo", "vorteks", "voting", "votum", "vrah", "vrahoto", "vulgar", "vulgata", "vulger", "vulkan", "vulkanis", "vulkanisasi", "vulkanolog", "vulkanologi", "vulkavit", "vulpen", "vulva", "vulvektomi", "vuring", "waad", "waadat", "wabah", "wabakdu", "wabarakatuh", "wacana", "wadah", "wadak", "wadal", "wadam", "wadat", "wadi", "wadon", "waduh", "waduk", "wadung", "wafa", "wafak", "wafat", "wage", "wagon", "wagu", "wah", "wahah", "wahai", "waham", "wahana", "wahdah", "wahdaniah", "wahdiah", "wahib", "wahid", "wahyu", "wai", "waid", "waima", "waisak", "waisya", "waitankung", "wajah", "wajan", "wajar", "wajib", "wajik", "wak", "wakaf", "wakil", "waktu", "wakun", "wakwak", "walabi", "walad", "walafiat", "walah", "walak", "walakhir", "walakin", "walang", "walangkopo", "walango", "walat", "walau", "walaupun", "waledan", "waleh", "walet", "walhal", "walhasil", "wali", "walikukun", "walimah", "walimana", "waliullah", "wallahi", "wallahualam", "wals", "waluh", "waluku", "wambrau", "wan", "wana", "wanara", "wanawisata", "wanda", "wandu", "wang", "wangi", "wangkang", "wangsa", "wangsit", "wani", "wanita", "wanodya", "wantah", "wantek", "wanti-wanti", "wantilan", "wara", "warak", "warakawuri", "waralaba", "warangan", "waranggana", "warangka", "waras", "warasah", "warawiri", "wardi", "warga", "wari", "waria", "warid", "waringin", "waris", "warita", "warkat", "warna", "warna-warni", "warok", "warsa", "warta", "waru", "waruga", "waruna", "warung", "warwar", "wasahlan", "wasak", "wasal", "wasalam", "wasangka", "wasi", "wasiat", "wasilah", "wasir", "wasit", "wasitah", "waskita", "waskom", "waslah", "waslap", "waspada", "wastafel", "waswas", "watak", "watan", "watang", "watas", "watase", "watermantel", "watermark", "waterpas", "waterpruf", "watt", "watu", "wau", "wawa", "wawancara", "wawanmuka", "wawanrembuk", "wawas", "wawu", "wayang", "wayuh", "wazari", "wazir", "weda", "wedam", "wedana", "wedang", "wedani", "wedar", "wede", "wedel", "weduk", "wegah", "weh", "weharima", "wejang", "wekel", "weker", "welahar", "welas", "weling", "welirang", "welit", "welter", "welut", "wenang", "wenter", "werak", "werangka", "werda", "werdatama", "were", "werek", "wereng", "werit", "werst", "wese", "wesel", "weselbor", "wesi", "wesket", "westernis", "westernisasi", "wet", "wetan", "weton", "wewarah", "wewaton", "wewe", "wibawa", "wicaksana", "wicara", "widi", "widiaiswara", "widiwasa", "widodari", "widoro", "widuri", "widyaiswara", "widyawisata", "wig", "wigata", "wihara", "wijaya", "wijayakusuma", "wijayamala", "wijayamulia", "wijdaniah", "wijen", "wiji", "wijik", "wikalat", "wiku", "wiladah", "wilah", "wilangon", "wilayah", "wilis", "wilwatikta", "wimana", "winaya", "windu", "wing", "wingit", "winglet", "winter", "wira", "wirabank", "wiracarita", "wiraga", "wirakarya", "wirang", "wiraniaga", "wirasuara", "wiraswasta", "wirid", "wiru", "wisa", "wisal", "wisata", "wisaya", "wisesa", "wisik", "wiski", "wisma", "wisnu", "wisuda", "witir", "wiwaha", "wiweka", "wiyaga", "wiyata", "wizurai", "wodka", "wol", "wolanda", "wolfram", "wombat", "won", "wong", "wora-wari", "wortel", "wosi", "wotogal-agil", "wrang", "wreda", "wredatama", "wregu", "wrisaba", "wudani", "wudu", "wuduk", "wujud", "wuker", "wukerar", "wuku", "wukuf", "wulan", "wulang", "wulu", "wulung", "wungon", "wungu", "wuwungan", "xantat", "xantena", "xantofil", "xenia", "xenofili", "xenofobia", "xenoglosia", "xenograf", "xenokrasi", "xenolit", "xenomania", "xenon", "xerofil", "xerofit", "xeroftalmia", "xerografi", "xerosis", "xifoid", "xilem", "xilena", "xilofon", "xilograf", "xilografi", "xiloid", "xiloidina", "xilol", "xilologi", "xilonit", "xilosa", "yad", "yahud", "yahudi", "yahudiah", "yahwe", "yais", "yaitu", "yakin", "yakis", "yakitori", "yakjuj", "yakni", "yaksa", "yakun", "yakut", "yamtuan", "yang", "yantra", "yard", "yargon", "yasan", "yasmin", "yasti", "yatim", "yaum", "yaumudin", "yaumulakhir", "yaumulaza", "yaumuljamak", "yaumuljaza", "yaumulkiamah", "yaumulmahsyar", "yayasan", "yayi", "yayu", "yehova", "yel", "yen", "yeyunum", "yodium", "yoga", "yoghurt", "yogi", "yogia", "yohimbina", "yojana", "yokal", "yolk", "yos", "yosong", "yoyo", "yubileum", "yuda", "yudikatif", "yudisial", "yudisium", "yudo", "yudoka", "yuk", "yunani", "yunda", "yunior", "yunta", "yupa", "yupiter", "yura", "yuran", "yuridis", "yuris", "yurisdiksi", "yurisprudensi", "yustisi", "yute", "yuvenil", "yuwana", "yuwaraja", "yuyitsu", "yuyu", "zabah", "zabaniah", "zabarjad", "zabib", "zabur", "zadah", "zahid", "zai", "zaim", "zair", "zaitun", "zakar", "zakat", "zakelek", "zakiah", "zakum", "zal", "zalim", "zalir", "zaman", "zamin", "zamindar", "zamrud", "zamzam", "zan", "zanggi", "zantara", "zarafah", "zarah", "zaratit", "zariah", "zariat", "zat", "zatua", "zawal", "zawiat", "zebra", "zebu", "zelot", "zen", "zend-avesta", "zendeling", "zending", "zeni", "zenit", "zeolit", "zeoponik", "zero", "zet", "zeta", "ziadah", "ziarah", "zib", "zig-zag", "zigomorf", "zigot", "zikir", "zilullah", "zimase", "zimi", "zimogen", "zimolisis", "zimosis", "zimotik", "zimurgi", "zina", "zindik", "zink", "zinkografi", "zion", "zionis", "zionisme", "zirafah", "zirah", "zirbad", "zirkonia", "zirkonium", "zirnikh", "ziter", "zodiak", "zoetrop", "zohal", "zohrah", "zohrat", "zona", "zonasi", "zonder", "zone", "zoning", "zoofit", "zoofobia", "zoogani", "zoogeografi", "zoologi", "zoonosis", "zoosemiotika", "zuama", "zuhud", "zuhur", "zulfikar", "zulhijah", "zulkaidah", "zulmat", "zulu", "zurafah", "zuriah", "zus", ""];
},{}],"BlQR":[function(require,module,exports) {
/*
Copyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// a list of commonly used words that have little meaning and can be excluded
// from analysis.
var Removal = require("./removal"); // Make global variable for dictionary


var dictionary = [];

function loadDictionary() {
  var fs = require('fs'); //var dirname = __dirname + "/../../../../data/kata-dasar.txt";
  //var fin = fs.readFileSync(dirname).toString().split("\n");


  var fin = require('./data/kata-dasar.json');

  fin.forEach(function (word) {
    if (word) {
      dictionary.push(word.trim());
    }
  });
}

loadDictionary();

function PrefixRules() {
  var PrefixRules = this;
  this.removal = undefined;
  this.current_word = undefined; // Find certain word in dictionary

  function find(word) {
    return dictionary.indexOf(word) != -1;
  } // Run the array of disambiguate rules on input word


  function runDisambiguator(disambiguateRules, word) {
    var result = undefined;

    for (var i in disambiguateRules) {
      result = disambiguateRules[i](word);

      if (find(result)) {
        break;
      }
    }

    if (result == undefined) {
      this.current_word = word;
      this.removal = undefined;
      return this;
    }

    return createResultObject(result, word, "DP");
  }

  function createResultObject(result, word, type) {
    var removedPart = word.replace(result, '');
    var removal = new Removal(word, result, removedPart, type);
    this.removal = removal;
    this.current_word = result;
    return this;
  }

  PrefixRules.RemovePlainPrefix = function (word) {
    var result = word.replace(/^(di|ke|se)/, '');

    if (result != word) {
      var removedPart = word.replace(result, '');
      var removal = new Removal(word, result, removedPart, 'DP');
      this.removal = removal;
    } else {
      this.removal = undefined;
    }

    this.current_word = result;
    return this;
  }; // RULE 1


  function disambiguateRule1A(word) {
    // Rule 1a : berV -> ber-V
    var matches = word.match(/^ber([aiueo].*)$/);

    if (matches) {
      return matches[1];
    }
  }

  function disambiguateRule1B(word) {
    // Rule 1b : berV -> be-rV
    var matches = word.match(/^ber([aiueo].*)$/);

    if (matches) {
      return 'r' + matches[1];
    }
  }

  PrefixRules.DisambiguatorPrefixRule1 = function (word) {
    // Push rules 1A & 1B
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule1A);
    disambiguateRules.push(disambiguateRule1B);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 2


  function disambiguateRule2(word) {
    // Rule 2 : berCAP -> ber-CAP where C != 'r' AND P != 'er'
    var matches = word.match(/^ber([bcdfghjklmnpqrstvwxyz])([a-z])(.*)/);

    if (matches) {
      if (matches[3].match(/^er(.*)$/)) {
        return;
      }

      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule2 = function (word) {
    // Push rule 2
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule2);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 3


  function disambiguateRule3(word) {
    // Rule 3 : berCAerV -> ber-CAerV where C != 'r'
    var matches = word.match(/ber([bcdfghjklmnpqrstvwxyz])([a-z])er([aiueo])(.*)/);

    if (matches) {
      if (matches[1] == "r") {
        return;
      }

      return matches[1] + matches[2] + "er" + matches[3] + matches[4];
    }
  }

  PrefixRules.DisambiguatorPrefixRule3 = function (word) {
    // Push rule 3
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule3);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 4


  function disambiguateRule4(word) {
    // Rule 4 : belajar -> ajar
    if (word == "belajar") {
      return "ajar";
    }
  }

  PrefixRules.DisambiguatorPrefixRule4 = function (word) {
    // Push rule 4
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule4);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 5


  function disambiguateRule5(word) {
    // Rule 5 : beC1erC2 -> be-C1erC2 where C1 != 'r'
    var matches = word.match(/be([bcdfghjklmnpqstvwxyz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule5 = function (word) {
    // Push rule 5
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule5);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 6


  function disambiguateRule6a(word) {
    // Rule 6a : terV -> ter-V
    var matches = word.match(/^ter([aiueo].*)$/);

    if (matches) {
      return matches[1];
    }
  }

  function disambiguateRule6b(word) {
    // Rule 6b : terV -> te-rV
    var matches = word.match(/^ter([aiueo].*)$/);

    if (matches) {
      return "r" + matches[1];
    }
  }

  PrefixRules.DisambiguatorPrefixRule6 = function (word) {
    // Push rule 6
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule6a);
    disambiguateRules.push(disambiguateRule6b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 7


  function disambiguateRule7(word) {
    // Rule 7 : terCerv -> ter-CerV where C != 'r'
    var matches = word.match(/^ter([bcdfghjklmnpqrstvwxyz])er([aiueo].*)$/);

    if (matches) {
      if (matches[1] == "r") {
        return;
      }

      return matches[1] + "er" + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule7 = function (word) {
    // Push rule 7
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule7);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 8


  function disambiguateRule8(word) {
    // Rule 8 : terCP -> ter-CP where C != 'r' and P != 'er'
    var matches = word.match(/^ter([bcdfghjklmnpqrstvwxyz])(.*)$/);

    if (matches) {
      if (matches[1] == "r" || matches[2].match(/^er(.*)$/)) {
        return;
      }

      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule8 = function (word) {
    // Push rule 8
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule8);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 9


  function disambiguateRule9(word) {
    // Rule 9 : te-C1erC2 -> te-C1erC2 where C1 != 'r'
    var matches = word.match(/^te([bcdfghjklmnpqrstvwxyz])er([bcdfghjklmnpqrstvwxyz])(.*)$/);

    if (matches) {
      if (matches[1] == "r") {
        return;
      }

      return matches[1] + "er" + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule9 = function (word) {
    // Push rule 9
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule9);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 10


  function disambiguateRule10(word) {
    // Rule 10 : me{l|r|w|y}V -> me-{l|r|w|y}V
    var matches = word.match(/^me([lrwy])([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule10 = function (word) {
    // Push rule 10
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule10);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 11


  function disambiguateRule11(word) {
    // Rule 11 : mem{b|f|v} -> mem-{b|f|v}
    var matches = word.match(/^mem([bfv])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule11 = function (word) {
    // Push rule 11
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule11);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 12


  function disambiguateRule12(word) {
    // Nazief and Adriani Rule 12 : beC1erC2 -> be-C1erC2 where C1 != 'r'
    // Modified by Jelita Asian's CS Rule 12 : mempe -> mem-pe to stem mempengaruhi
    var matches = word.match(/^mempe(.*)$/);

    if (matches) {
      return "pe" + matches[1];
    }
  }

  PrefixRules.DisambiguatorPrefixRule12 = function (word) {
    // Push rule 12
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule12);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 13


  function disambiguateRule13a(word) {
    // Rule 13a : mem{rV|V} -> me-m{rV|V}
    var matches = word.match(/^mem([aiueo])(.*)$/);

    if (matches) {
      return "m" + matches[1] + matches[2];
    }
  }

  function disambiguateRule13b(word) {
    // Rule 13b : mem{rV|V} -> me-p{rV|V}
    var matches = word.match(/^mem([aiueo])(.*)$/);

    if (matches) {
      return "p" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule13 = function (word) {
    // Push rule 13
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule13a);
    disambiguateRules.push(disambiguateRule13b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 14


  function disambiguateRule14(word) {
    /*Rule 14 modified by Andy Librian : men{c|d|j|s|t|z} -> men-{c|d|j|s|t|z}
          in order to stem mentaati
    
          Rule 14 modified by ECS: men{c|d|j|s|z} -> men-{c|d|j|s|z}
          in order to stem mensyaratkan, mensyukuri
    
          Original CS Rule no 14 was : men{c|d|j|z} -> men-{c|d|j|z}*/
    var matches = word.match(/^men([cdjstz])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule14 = function (word) {
    // Push rule 14
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule14);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 15


  function disambiguateRule15a(word) {
    // Rule 15a : men{V} -> me-n{V}
    var matches = word.match(/^men([aiueo])(.*)$/);

    if (matches) {
      return "n" + matches[1] + matches[2];
    }
  }

  function disambiguateRule15b(word) {
    // Rule 15b : men{V} -> me-t{V}
    var matches = word.match(/^men([aiueo])(.*)$/);

    if (matches) {
      return "t" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule15 = function (word) {
    // Push rule 15
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule15a);
    disambiguateRules.push(disambiguateRule15b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 16


  function disambiguateRule16(word) {
    // Original Nazief and Adriani's Rule 16 : meng{g|h|q} -> meng-{g|h|q}
    // Modified Jelita Asian's CS Rule 16 : meng{g|h|q|k} -> meng-{g|h|q|k} to stem mengkritik
    var matches = word.match(/^meng([g|h|q|k])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule16 = function (word) {
    // Push rule 16
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule16);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 17


  function disambiguateRule17a(word) {
    // Rule 17a : mengV -> meng-V
    var matches = word.match(/^meng([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  function disambiguateRule17b(word) {
    // Rule 17b : mengV -> meng-kV
    var matches = word.match(/^meng([aiueo])(.*)$/);

    if (matches) {
      return "k" + matches[1] + matches[2];
    }
  }

  function disambiguateRule17c(word) {
    // Rule 17c : mengV -> meng-V- where V = 'e'
    var matches = word.match(/^menge(.*)$/);

    if (matches) {
      return matches[1];
    }
  }

  function disambiguateRule17d(word) {
    // Rule 17d : mengV -> me-ngV
    var matches = word.match(/^meng([aiueo])(.*)$/);

    if (matches) {
      return "ng" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule17 = function (word) {
    // Push rule 17
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule17a);
    disambiguateRules.push(disambiguateRule17b);
    disambiguateRules.push(disambiguateRule17c);
    disambiguateRules.push(disambiguateRule17d);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 18


  function disambiguateRule18a(word) {
    // Rule 18a : menyV -> me-nyV to stem menyala -> nyala
    var matches = word.match(/^meny([aiueo])(.*)$/);

    if (matches) {
      return "ny" + matches[1] + matches[2];
    }
  }

  function disambiguateRule18b(word) {
    // Original Rule 18b : menyV -> meny-sV
    // Modified by CC (shifted into 18b, see also 18a)
    var matches = word.match(/^meny([aiueo])(.*)$/);

    if (matches) {
      return "s" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule18 = function (word) {
    // Push rule 18
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule18a);
    disambiguateRules.push(disambiguateRule18b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 19


  function disambiguateRule19(word) {
    // Original Rule 19 : mempV -> mem-pV where V != 'e'
    // Modified Rule 19 by ECS : mempA -> mem-pA where A != 'e' in order to stem memproteksi
    var matches = word.match(/^memp([abcdfghijklmopqrstuvwxyz])(.*)$/);

    if (matches) {
      return "p" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule19 = function (word) {
    // Push rule 19
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule19);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 20


  function disambiguateRule20(word) {
    // Rule 20 : pe{w|y}V -> pe-{w|y}V
    var matches = word.match(/^pe([wy])([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule20 = function (word) {
    // Push rule 20
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule20);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 21


  function disambiguateRule21a(word) {
    // Rule 21a : perV -> per-V
    var matches = word.match(/^per([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  function disambiguateRule21b(word) {
    // Rule 21b : perV -> pe-rV
    var matches = word.match(/^pe(r[aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule21 = function (word) {
    // Push rule 21
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule21a);
    disambiguateRules.push(disambiguateRule21b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 23


  function disambiguateRule23(word) {
    // Rule 23 : perCAP -> per-CAP where C != 'r' AND P != 'er'
    var matches = word.match(/^per([bcdfghjklmnpqrstvwxyz])([a-z])(.*)$/);

    if (matches) {
      if (matches[3].match(/^er(.*)$/)) {
        return;
      }

      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule23 = function (word) {
    // Push rule 23
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule23);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 24


  function disambiguateRule24(word) {
    // Rule 24 : perCAerV -> per-CAerV where C != 'r'
    var matches = word.match(/^per([bcdfghjklmnpqrstvwxyz])([a-z])er([aiueo])(.*)$/);

    if (matches) {
      if (matches[1] == "r") {
        return;
      }

      return matches[1] + matches[2] + "er" + matches[3] + matches[4];
    }
  }

  PrefixRules.DisambiguatorPrefixRule24 = function (word) {
    // Push rule 24
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule24);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 25


  function disambiguateRule25(word) {
    // Rule 25 : pem{b|f|v} -> pem-{b|f|v}
    var matches = word.match(/^pem([bfv])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule25 = function (word) {
    // Push rule 25
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule25);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 26


  function disambiguateRule26a(word) {
    // Rule 26a : pem{rV|V} -> pe-m{rV|V}
    var matches = word.match(/^pem([aiueo])(.*)$/);

    if (matches) {
      return "m" + matches[1] + matches[2];
    }
  }

  function disambiguateRule26b(word) {
    // Rule 26b : pem{rV|V} -> pe-p{rV|V}
    var matches = word.match(/^pem([aiueo])(.*)$/);

    if (matches) {
      return "p" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule26 = function (word) {
    // Push rule 26
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule26a);
    disambiguateRules.push(disambiguateRule26b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 27


  function disambiguateRule27(word) {
    // Rule 27 : pen{c|d|j|s|t|z} -> pen-{c|d|j|s|t|z}
    var matches = word.match(/^pen([cdjstz])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule27 = function (word) {
    // Push rule 27
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule27);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 28


  function disambiguateRule28a(word) {
    // Rule 28a : pen{V} -> pe-n{V}
    var matches = word.match(/^pen([aiueo])(.*)$/);

    if (matches) {
      return "n" + matches[1] + matches[2];
    }
  }

  function disambiguateRule28b(word) {
    // Rule 28b : pen{V} -> pe-t{V}
    var matches = word.match(/^pen([aiueo])(.*)$/);

    if (matches) {
      return "t" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule28 = function (word) {
    // Push rule 28
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule28a);
    disambiguateRules.push(disambiguateRule28b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 29


  function disambiguateRule29(word) {
    // Rule 29 by ECS : pengC -> peng-C
    var matches = word.match(/^peng([bcdfghjklmnpqrstvwxyz])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule29 = function (word) {
    // Push rule 29
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule29);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 30


  function disambiguateRule30a(word) {
    // Rule 30a : pengV -> peng-V
    var matches = word.match(/^peng([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  function disambiguateRule30b(word) {
    // Rule 30b : pengV -> peng-kV
    var matches = word.match(/^peng([aiueo])(.*)$/);

    if (matches) {
      return "k" + matches[1] + matches[2];
    }
  }

  function disambiguateRule30c(word) {
    // Rule 30c : pengV -> pengV- where V = 'e'
    var matches = word.match(/^penge(.*)$/);

    if (matches) {
      return matches[1];
    }
  }

  PrefixRules.DisambiguatorPrefixRule30 = function (word) {
    // Push rule 30
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule30a);
    disambiguateRules.push(disambiguateRule30b);
    disambiguateRules.push(disambiguateRule30c);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 31


  function disambiguateRule31a(word) {
    // Rule 31a : penyV -> pe-nyV
    var matches = word.match(/^peny([aiueo])(.*)$/);

    if (matches) {
      return "ny" + matches[1] + matches[2];
    }
  }

  function disambiguateRule31b(word) {
    // Original Rule 31 : penyV -> peny-sV
    var matches = word.match(/^peny([aiueo])(.*)$/);

    if (matches) {
      return "s" + matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule31 = function (word) {
    // Push rule 31
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule31a);
    disambiguateRules.push(disambiguateRule31b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 32


  function disambiguateRule32(word) {
    // Rule 32 : pelV -> pe-lV except pelajar -> ajar
    if (word == "pelajar") {
      return "ajar";
    }

    var matches = word.match(/^pe(l[aiueo])(.*)/);

    if (matches) {
      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule32 = function (word) {
    // Push rule 32
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule32);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 34


  function disambiguateRule34(word) {
    // Rule 34 : peCP -> pe-CP where C != {r|w|y|l|m|n} and P != 'er'
    var matches = word.match(/^pe([bcdfghjklmnpqrstvwxyz])(.*)$/);

    if (matches) {
      if (matches[2].match(/^er(.*)$/)) {
        return;
      }

      return matches[1] + matches[2];
    }
  }

  PrefixRules.DisambiguatorPrefixRule34 = function (word) {
    // Push rule 34
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule34);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 35


  function disambiguateRule35(word) {
    // Rule 35 : terC1erC2 -> ter-C1erC2 where C1 != {r}
    var matches = word.match(/^ter([bcdfghjkpqstvxz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule35 = function (word) {
    // Push rule 35
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule35);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 36


  function disambiguateRule36(word) {
    // Rule 36 : peC1erC2 -> pe-C1erC2 where C1 != {r|w|y|l|m|n}
    var matches = word.match(/^pe([bcdfghjkpqstvxz])(er[bcdfghjklmnpqrstvwxyz])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule36 = function (word) {
    // Push rule 36
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule36);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 37


  function disambiguateRule37a(word) {
    // Rule 37a : CerV -> CerV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(er[aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  function disambiguateRule37b(word) {
    // Rule 37b : CerV -> CV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])er([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule37 = function (word) {
    // Push rule 37
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule37a);
    disambiguateRules.push(disambiguateRule37b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 38


  function disambiguateRule38a(word) {
    // Rule 38a : CelV -> CelV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(el[aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  function disambiguateRule38b(word) {
    // Rule 38b : CelV -> CV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])el([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule38 = function (word) {
    // Push rule 38
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule38a);
    disambiguateRules.push(disambiguateRule38b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 39


  function disambiguateRule39a(word) {
    // Rule 39a : CemV -> CemV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(em[aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  function disambiguateRule39b(word) {
    // Rule 39b : CemV -> CV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])em([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule39 = function (word) {
    // Push rule 39
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule39a);
    disambiguateRules.push(disambiguateRule39b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 40


  function disambiguateRule40a(word) {
    // Rule 40a : CinV -> CinV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])(in[aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  function disambiguateRule40b(word) {
    // Rule 40b : CinV -> CV
    var matches = word.match(/^([bcdfghjklmnpqrstvwxyz])in([aiueo])(.*)$/);

    if (matches) {
      return matches[1] + matches[2] + matches[3];
    }
  }

  PrefixRules.DisambiguatorPrefixRule40 = function (word) {
    // Push rule 40
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule40a);
    disambiguateRules.push(disambiguateRule40b);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 41


  function disambiguateRule41(word) {
    // Rule 41 : kuA -> ku-A
    var matches = word.match(/^ku(.*)$/);

    if (matches) {
      return matches[1];
    }
  }

  PrefixRules.DisambiguatorPrefixRule41 = function (word) {
    // Push rule 41
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule41);
    return runDisambiguator(disambiguateRules, word);
  }; // RULE 42


  function disambiguateRule42(word) {
    // Rule 42 : kauA -> kau-A
    var matches = word.match(/^kau(.*)$/);

    if (matches) {
      return matches[1];
    }
  }

  PrefixRules.DisambiguatorPrefixRule42 = function (word) {
    // Push rule 42
    var disambiguateRules = [];
    disambiguateRules.push(disambiguateRule42);
    return runDisambiguator(disambiguateRules, word);
  };
}

module.exports = PrefixRules; // Initalize prefix rules array

var rules = [];
var pr = new PrefixRules(); // Push all rules

rules.push(pr.RemovePlainPrefix);
rules.push(pr.DisambiguatorPrefixRule1);
rules.push(pr.DisambiguatorPrefixRule2);
rules.push(pr.DisambiguatorPrefixRule3);
rules.push(pr.DisambiguatorPrefixRule4);
rules.push(pr.DisambiguatorPrefixRule5);
rules.push(pr.DisambiguatorPrefixRule6);
rules.push(pr.DisambiguatorPrefixRule7);
rules.push(pr.DisambiguatorPrefixRule8);
rules.push(pr.DisambiguatorPrefixRule9);
rules.push(pr.DisambiguatorPrefixRule10);
rules.push(pr.DisambiguatorPrefixRule11);
rules.push(pr.DisambiguatorPrefixRule12);
rules.push(pr.DisambiguatorPrefixRule13);
rules.push(pr.DisambiguatorPrefixRule14);
rules.push(pr.DisambiguatorPrefixRule15);
rules.push(pr.DisambiguatorPrefixRule16);
rules.push(pr.DisambiguatorPrefixRule17);
rules.push(pr.DisambiguatorPrefixRule18);
rules.push(pr.DisambiguatorPrefixRule19);
rules.push(pr.DisambiguatorPrefixRule20);
rules.push(pr.DisambiguatorPrefixRule21);
rules.push(pr.DisambiguatorPrefixRule23);
rules.push(pr.DisambiguatorPrefixRule24);
rules.push(pr.DisambiguatorPrefixRule25);
rules.push(pr.DisambiguatorPrefixRule26);
rules.push(pr.DisambiguatorPrefixRule27);
rules.push(pr.DisambiguatorPrefixRule28);
rules.push(pr.DisambiguatorPrefixRule29);
rules.push(pr.DisambiguatorPrefixRule30);
rules.push(pr.DisambiguatorPrefixRule31);
rules.push(pr.DisambiguatorPrefixRule32);
rules.push(pr.DisambiguatorPrefixRule34);
rules.push(pr.DisambiguatorPrefixRule35);
rules.push(pr.DisambiguatorPrefixRule36);
rules.push(pr.DisambiguatorPrefixRule37);
rules.push(pr.DisambiguatorPrefixRule38);
rules.push(pr.DisambiguatorPrefixRule39);
rules.push(pr.DisambiguatorPrefixRule40);
rules.push(pr.DisambiguatorPrefixRule41);
rules.push(pr.DisambiguatorPrefixRule42);
PrefixRules.rules = rules;
},{"./removal":"jQaI","fs":"rDCW","./data/kata-dasar.json":"fmNn"}],"IjLb":[function(require,module,exports) {
/*
Copyright (c) 2017, Alif Bhaskoro, Andy Librian, R. Kukuh (Reimplemented from https://github.com/sastrawi/sastrawi)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var baseStemmer = require('./base_stemmer_id');

var stemmer = new baseStemmer(); // Dictionary

var dictionary = [];
loadDictionary(); // Rules

var SuffixRules = require("./suffix_rules");

var PrefixRules = require("./prefix_rules");

var suffix_rules = SuffixRules.rules;
var prefix_rules = PrefixRules.rules; // Removals

var removals; // Words

var original_word;
var current_word;
module.exports = stemmer; // perform full stemming algorithm on a single word

stemmer.stem = function (token) {
  // Cache stemmer not yet implemented
  // Set to lowercase
  token = token.toLowerCase(); //Initiate everything

  removals = [];

  if (isPlural(token)) {
    return stemPluralWord(token);
  } else {
    return stemSingularWord(token);
  }
}; // Stem for plural word


function stemPluralWord(plural_word) {
  var matches = plural_word.match(/^(.*)-(.*)$/);

  if (!matches) {
    return plural_word;
  }

  words = [matches[1], matches[2]]; //malaikat-malaikat-nya -> malaikat malaikat-nya

  suffix = words[1];
  suffixes = ["ku", "mu", "nya", "lah", "kah", "tah", "pun"];
  matches = words[0].match(/^(.*)-(.*)$/);

  if (suffixes.indexOf(suffix) != -1 && matches) {
    words[0] = matches[1];
    words[1] = matches[2] + '-' + suffix;
  } //berbalas-balasan -> balas


  rootWord1 = stemSingularWord(words[0]);
  rootWord2 = stemSingularWord(words[1]); //meniru-nirukan -> tiru

  if (!find(words[1]) && rootWord2 == words[1]) {
    rootWord2 = stemSingularWord("me" + words[1]);
  }

  if (rootWord1 == rootWord2) {
    return rootWord1;
  } else {
    return plural_word;
  }
} // Stem for singular word


function stemSingularWord(word) {
  original_word = word; // Save the original word for reverting later

  current_word = word; // Step 1

  if (current_word.length > 3) {
    // Step 2-5
    stemmingProcess();
  } // Step 6


  if (find(current_word)) {
    return current_word;
  } else {
    return original_word;
  }
} // Return true if word is in plural form ex: gelas-gelas, else false


function isPlural(token) {
  var matches = token.match(/^(.*)-(ku|mu|nya|lah|kah|tah|pun)$/);

  if (matches) {
    return matches[1].search('-') != -1;
  }

  return token.search('-') != -1;
} // Find certain word in dictionary


function find(word) {
  return dictionary.indexOf(word) != -1;
}

function loadDictionary() {
  var fs = require('fs'); //var dirname = __dirname + "/../../../../data/kata-dasar.txt";
  //var fin = fs.readFileSync(dirname).toString().split("\n");


  var fin = require('./data/kata-dasar.json');

  fin.forEach(function (word) {
    if (word) {
      dictionary.push(word.trim());
    }
  });
} // Stemming from step 2-5


function stemmingProcess() {
  if (find(current_word)) return; // Confix Stripping
  // Try to remove prefixes first before suffixes if the specification is met

  if (precedenceAdjustmentSpecification(original_word)) {
    // Step 4, 5
    removePrefixes();
    if (find(current_word)) return; // Step 2, 3

    removeSuffixes();

    if (find(current_word)) {
      return;
    } else {
      // if the trial is failed, restore the original word
      // and continue to normal rule precedence (suffix first, prefix afterwards)
      current_word = original_word;
      removals = [];
    }
  } // Step 2, 3


  removeSuffixes();
  if (find(current_word)) return; // Step 4, 5

  removePrefixes();
  if (find(current_word)) return; //ECS Loop Restore Prefixes

  loopRestorePrefixes();
} // Remove Suffixes


function removeSuffixes() {
  for (var i in suffix_rules) {
    resultObj = suffix_rules[i](current_word); // Add result to variable

    if (resultObj.removal != undefined) {
      removals.push(resultObj.removal);
    }

    current_word = resultObj.current_word;
    if (find(current_word)) return current_word;
  }
} // Remove Prefixes


function removePrefixes() {
  for (var i = 0; i < 3; i++) {
    var removalCount = removals.length;
    checkPrefixRules();
    if (find(current_word)) return current_word;
  }
}

function checkPrefixRules() {
  var removalCount = removals.length;
  var j = 0;

  for (j = 0; j < prefix_rules.length; j++) {
    resultObj = prefix_rules[j](current_word); // Add result to variable

    if (resultObj.removal != undefined) {
      removals.push(resultObj.removal);
    }

    current_word = resultObj.current_word;
    if (find(current_word)) return current_word;

    if (removals.length > removalCount) {
      return;
    }
  }
} // Loop Restore Prefixes


function loopRestorePrefixes() {
  restorePrefix();
  var reversed_removals = removals.reverse();
  var temp_current_word = current_word;

  for (var i in reversed_removals) {
    current_removal = reversed_removals[i];

    if (!isSuffixRemovals(current_removal)) {
      continue;
    }

    if (current_removal.getRemovedPart() == "kan") {
      current_word = current_removal.getResult() + "k"; // Step 4, 5

      removePrefixes();
      if (find(current_word)) return;
      current_word = current_removal.getResult() + "kan";
    } else {
      current_word = current_removal.getOriginalWord();
    } // Step 4, 5


    removePrefixes();
    if (find(current_word)) return;
    current_word = temp_current_word;
  }
}

function isSuffixRemovals(removal) {
  var type = removal.getAffixType();

  if (type == "DS" || type == "PP" || type == "P") {
    return true;
  }

  return false;
}

function restorePrefix() {
  for (var i = 0; i < removals.length; i++) {
    current_word = removals[i].getOriginalWord();
    break;
  }

  for (var i = 0; i < removals.length; i++) {
    if (removals[i].getAffixType() == "DP") {
      removals.splice(i, 1);
      i--;
    }
  }
} // Check if word require precedence adjustment or not
// Adjustment means remove prefix then suffix instead of remove suffix then prefix


function precedenceAdjustmentSpecification(word) {
  var regex_rules = [/^be(.*)lah$/, /^be(.*)an$/, /^me(.*)i$/, /^di(.*)i$/, /^pe(.*)i$/, /^ter(.*)i$/];

  for (var i in regex_rules) {
    if (word.match(regex_rules[i])) {
      return true;
    }
  }

  return false;
} //exports for tests


stemmer.isPlural = isPlural;
stemmer.dictionary = dictionary;
stemmer.a = suffix_rules[0];
},{"./base_stemmer_id":"K9OX","./suffix_rules":"b9X0","./prefix_rules":"BlQR","fs":"rDCW","./data/kata-dasar.json":"fmNn"}],"IKpd":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel, Martijn de Boer

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.trim(text.split(/[^a-zA-Z0-9_']+/));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"wCaQ":[function(require,module,exports) {
/*
Copyright (c) 2013, Paweł Łaskarzewski

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer);
module.exports = AggressiveTokenizer;

AggressiveTokenizer.prototype.withoutEmpty = function (array) {
  return array.filter(function (a) {
    return a;
  });
};

AggressiveTokenizer.prototype.clearText = function (text) {
  return text.replace(/[^a-zążśźęćńół0-9]/gi, ' ').replace(/[\s\n]+/g, ' ').trim();
};

AggressiveTokenizer.prototype.tokenize = function (text) {
  // break a string up into an array of tokens by anything non-word
  return this.withoutEmpty(this.clearText(text).split(' '));
};
},{"./tokenizer":"ZemB","util":"nq70"}],"XbBT":[function(require,module,exports) {
/*
Copyright (c) 2018, Javis1205 (Github account name)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var AggressiveTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(AggressiveTokenizer, Tokenizer); // break a string up into an array of tokens by anything non-word

AggressiveTokenizer.prototype.tokenize = function (text) {
  return this.trim(text.split(/[^a-z0-9àáảãạăắằẳẵặâấầẩẫậéèẻẽẹêếềểễệíìỉĩịóòỏõọôốồổỗộơớờởỡợúùủũụưứừửữựýỳỷỹỵđ]+/i));
};

module.exports = AggressiveTokenizer;
},{"./tokenizer":"ZemB","util":"nq70"}],"XDOC":[function(require,module,exports) {
/*
 Copyright (c) 2011, Chris Umbel, Alex Langberg

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
var Tokenizer = require('./tokenizer'),
    util = require('util'),
    CaseTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(CaseTokenizer, Tokenizer);

CaseTokenizer.prototype.attach = function () {
  var self = this;

  String.prototype.tokenize = function (preserveApostrophe) {
    return self.tokenize(this, preserveApostrophe);
  };
}; // Idea from Seagull: http://stackoverflow.com/a/26482650


CaseTokenizer.prototype.tokenize = function (text, preserveApostrophe) {
  var whitelist = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
  var lower = text.toLowerCase();
  var upper = text.toUpperCase();
  var result = '';
  var i;

  for (i = 0; i < lower.length; ++i) {
    if (lower[i] !== upper[i] || whitelist.indexOf(lower[i]) > -1 || text[i] === '\'' && preserveApostrophe) {
      result += text[i];
    } else {
      result += ' ';
    }
  }

  return this.trim(result.replace(/\s+/g, ' ').split(' '));
};

module.exports = CaseTokenizer;
},{"./tokenizer":"ZemB","util":"nq70"}],"h15N":[function(require,module,exports) {
var global = arguments[3];
var define;
//     Underscore.js 1.9.2
//     https://underscorejs.org
//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` (`self`) in the browser, `global`
  // on the server, or `this` in some virtual machines. We use `self`
  // instead of `window` for `WebWorker` support.
  var root = typeof self == 'object' && self.self === self && self ||
            typeof global == 'object' && global.global === global && global ||
            this ||
            {};

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype;
  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;

  // Create quick reference variables for speed access to core prototypes.
  var push = ArrayProto.push,
      slice = ArrayProto.slice,
      toString = ObjProto.toString,
      hasOwnProperty = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var nativeIsArray = Array.isArray,
      nativeKeys = Object.keys,
      nativeCreate = Object.create;

  // Naked function reference for surrogate-prototype-swapping.
  var Ctor = function(){};

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for their old module API. If we're in
  // the browser, add `_` as a global object.
  // (`nodeType` is checked to ensure that `module`
  // and `exports` are not HTML elements.)
  if (typeof exports != 'undefined' && !exports.nodeType) {
    if (typeof module != 'undefined' && !module.nodeType && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.9.2';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var optimizeCb = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      // The 2-argument case is omitted because we’re not using it.
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  var builtinIteratee;

  // An internal function to generate callbacks that can be applied to each
  // element in a collection, returning the desired result — either `identity`,
  // an arbitrary callback, a property matcher, or a property accessor.
  var cb = function(value, context, argCount) {
    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);
    return _.property(value);
  };

  // External wrapper for our callback generator. Users may customize
  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.
  // This abstraction hides the internal-only argCount argument.
  _.iteratee = builtinIteratee = function(value, context) {
    return cb(value, context, Infinity);
  };

  // Some functions take a variable number of arguments, or a few expected
  // arguments at the beginning and then a variable number of values to operate
  // on. This helper accumulates all remaining arguments past the function’s
  // argument length (or an explicit `startIndex`), into an array that becomes
  // the last argument. Similar to ES6’s "rest parameter".
  var restArguments = function(func, startIndex) {
    startIndex = startIndex == null ? func.length - 1 : +startIndex;
    return function() {
      var length = Math.max(arguments.length - startIndex, 0),
          rest = Array(length),
          index = 0;
      for (; index < length; index++) {
        rest[index] = arguments[index + startIndex];
      }
      switch (startIndex) {
        case 0: return func.call(this, rest);
        case 1: return func.call(this, arguments[0], rest);
        case 2: return func.call(this, arguments[0], arguments[1], rest);
      }
      var args = Array(startIndex + 1);
      for (index = 0; index < startIndex; index++) {
        args[index] = arguments[index];
      }
      args[startIndex] = rest;
      return func.apply(this, args);
    };
  };

  // An internal function for creating a new object that inherits from another.
  var baseCreate = function(prototype) {
    if (!_.isObject(prototype)) return {};
    if (nativeCreate) return nativeCreate(prototype);
    Ctor.prototype = prototype;
    var result = new Ctor;
    Ctor.prototype = null;
    return result;
  };

  var shallowProperty = function(key) {
    return function(obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  var has = function(obj, path) {
    return obj != null && hasOwnProperty.call(obj, path);
  }

  var deepGet = function(obj, path) {
    var length = path.length;
    for (var i = 0; i < length; i++) {
      if (obj == null) return void 0;
      obj = obj[path[i]];
    }
    return length ? obj : void 0;
  };

  // Helper for collection methods to determine whether a collection
  // should be iterated as an array or as an object.
  // Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
  var getLength = shallowProperty('length');
  var isArrayLike = function(collection) {
    var length = getLength(collection);
    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    iteratee = optimizeCb(iteratee, context);
    var i, length;
    if (isArrayLike(obj)) {
      for (i = 0, length = obj.length; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length);
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Create a reducing function iterating left or right.
  var createReduce = function(dir) {
    // Wrap code that reassigns argument variables in a separate function than
    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)
    var reducer = function(obj, iteratee, memo, initial) {
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          index = dir > 0 ? 0 : length - 1;
      if (!initial) {
        memo = obj[keys ? keys[index] : index];
        index += dir;
      }
      for (; index >= 0 && index < length; index += dir) {
        var currentKey = keys ? keys[index] : index;
        memo = iteratee(memo, obj[currentKey], currentKey, obj);
      }
      return memo;
    };

    return function(obj, iteratee, memo, context) {
      var initial = arguments.length >= 3;
      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);
    };
  };

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = createReduce(1);

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = createReduce(-1);

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;
    var key = keyFinder(obj, predicate, context);
    if (key !== void 0 && key !== -1) return obj[key];
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    predicate = cb(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given item (using `===`).
  // Aliased as `includes` and `include`.
  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
    if (!isArrayLike(obj)) obj = _.values(obj);
    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
    return _.indexOf(obj, item, fromIndex) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = restArguments(function(obj, path, args) {
    var contextPath, func;
    if (_.isFunction(path)) {
      func = path;
    } else if (_.isArray(path)) {
      contextPath = path.slice(0, -1);
      path = path[path.length - 1];
    }
    return _.map(obj, function(context) {
      var method = func;
      if (!method) {
        if (contextPath && contextPath.length) {
          context = deepGet(context, contextPath);
        }
        if (context == null) return void 0;
        method = context[path];
      }
      return method == null ? method : method.apply(context, args);
    });
  });

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matcher(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matcher(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value != null && value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(v, index, list) {
        computed = iteratee(v, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = v;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value != null && value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(v, index, list) {
        computed = iteratee(v, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = v;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection.
  _.shuffle = function(obj) {
    return _.sample(obj, Infinity);
  };

  // Sample **n** random values from a collection using the modern version of the
  // [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);
    var length = getLength(sample);
    n = Math.max(Math.min(n, length), 0);
    var last = length - 1;
    for (var index = 0; index < n; index++) {
      var rand = _.random(index, last);
      var temp = sample[index];
      sample[index] = sample[rand];
      sample[rand] = temp;
    }
    return sample.slice(0, n);
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    var index = 0;
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function(value, key, list) {
      return {
        value: value,
        index: index++,
        criteria: iteratee(value, key, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior, partition) {
    return function(obj, iteratee, context) {
      var result = partition ? [[], []] : {};
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (has(result, key)) result[key]++; else result[key] = 1;
  });

  var reStrSymbol = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (_.isString(obj)) {
      // Keep surrogate pair characters together
      return obj.match(reStrSymbol);
    }
    if (isArrayLike(obj)) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = group(function(result, value, pass) {
    result[pass ? 0 : 1].push(value);
  }, true);

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null || array.length < 1) return n == null ? void 0 : [];
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array.
  _.last = function(array, n, guard) {
    if (array == null || array.length < 1) return n == null ? void 0 : [];
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, Boolean);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, output) {
    output = output || [];
    var idx = output.length;
    for (var i = 0, length = getLength(input); i < length; i++) {
      var value = input[i];
      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
        // Flatten current level of array or arguments object.
        if (shallow) {
          var j = 0, len = value.length;
          while (j < len) output[idx++] = value[j++];
        } else {
          flatten(value, shallow, strict, output);
          idx = output.length;
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = restArguments(function(array, otherArrays) {
    return _.difference(array, otherArrays);
  });

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // The faster algorithm will not work with an iteratee if the iteratee
  // is not a one-to-one function, so providing an iteratee will disable
  // the faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = getLength(array); i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;
      if (isSorted && !iteratee) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = restArguments(function(arrays) {
    return _.uniq(flatten(arrays, true, true));
  });

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = getLength(array); i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      var j;
      for (j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = restArguments(function(array, rest) {
    rest = flatten(rest, true, true);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  });

  // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices.
  _.unzip = function(array) {
    var length = array && _.max(array, getLength).length || 0;
    var result = Array(length);

    for (var index = 0; index < length; index++) {
      result[index] = _.pluck(array, index);
    }
    return result;
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = restArguments(_.unzip);

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values. Passing by pairs is the reverse of _.pairs.
  _.object = function(list, values) {
    var result = {};
    for (var i = 0, length = getLength(list); i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Generator function to create the findIndex and findLastIndex functions.
  var createPredicateIndexFinder = function(dir) {
    return function(array, predicate, context) {
      predicate = cb(predicate, context);
      var length = getLength(array);
      var index = dir > 0 ? 0 : length - 1;
      for (; index >= 0 && index < length; index += dir) {
        if (predicate(array[index], index, array)) return index;
      }
      return -1;
    };
  };

  // Returns the first index on an array-like that passes a predicate test.
  _.findIndex = createPredicateIndexFinder(1);
  _.findLastIndex = createPredicateIndexFinder(-1);

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = getLength(array);
    while (low < high) {
      var mid = Math.floor((low + high) / 2);
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Generator function to create the indexOf and lastIndexOf functions.
  var createIndexFinder = function(dir, predicateFind, sortedIndex) {
    return function(array, item, idx) {
      var i = 0, length = getLength(array);
      if (typeof idx == 'number') {
        if (dir > 0) {
          i = idx >= 0 ? idx : Math.max(idx + length, i);
        } else {
          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
        }
      } else if (sortedIndex && idx && length) {
        idx = sortedIndex(array, item);
        return array[idx] === item ? idx : -1;
      }
      if (item !== item) {
        idx = predicateFind(slice.call(array, i, length), _.isNaN);
        return idx >= 0 ? idx + i : -1;
      }
      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
        if (array[idx] === item) return idx;
      }
      return -1;
    };
  };

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](https://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (stop == null) {
      stop = start || 0;
      start = 0;
    }
    if (!step) {
      step = stop < start ? -1 : 1;
    }

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Chunk a single array into multiple arrays, each containing `count` or fewer
  // items.
  _.chunk = function(array, count) {
    if (count == null || count < 1) return [];
    var result = [];
    var i = 0, length = array.length;
    while (i < length) {
      result.push(slice.call(array, i, i += count));
    }
    return result;
  };

  // Function (ahem) Functions
  // ------------------

  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments.
  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    var self = baseCreate(sourceFunc.prototype);
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  };

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = restArguments(function(func, context, args) {
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    var bound = restArguments(function(callArgs) {
      return executeBound(func, bound, context, this, args.concat(callArgs));
    });
    return bound;
  });

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder by default, allowing any combination of arguments to be
  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.
  _.partial = restArguments(function(func, boundArgs) {
    var placeholder = _.partial.placeholder;
    var bound = function() {
      var position = 0, length = boundArgs.length;
      var args = Array(length);
      for (var i = 0; i < length; i++) {
        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return executeBound(func, bound, this, this, args);
    };
    return bound;
  });

  _.partial.placeholder = _;

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = restArguments(function(obj, keys) {
    keys = flatten(keys, false, false);
    var index = keys.length;
    if (index < 1) throw new Error('bindAll must be passed function names');
    while (index--) {
      var key = keys[index];
      obj[key] = _.bind(obj[key], obj);
    }
  });

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = restArguments(function(func, wait, args) {
    return setTimeout(function() {
      return func.apply(null, args);
    }, wait);
  });

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = _.partial(_.delay, _, 1);

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var timeout, context, args, result;
    var previous = 0;
    if (!options) options = {};

    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };

    var throttled = function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };

    throttled.cancel = function() {
      clearTimeout(timeout);
      previous = 0;
      timeout = context = args = null;
    };

    return throttled;
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, result;

    var later = function(context, args) {
      timeout = null;
      if (args) result = func.apply(context, args);
    };

    var debounced = restArguments(function(args) {
      if (timeout) clearTimeout(timeout);
      if (immediate) {
        var callNow = !timeout;
        timeout = setTimeout(later, wait);
        if (callNow) result = func.apply(this, args);
      } else {
        timeout = _.delay(later, wait, this, args);
      }

      return result;
    });

    debounced.cancel = function() {
      clearTimeout(timeout);
      timeout = null;
    };

    return debounced;
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed on and after the Nth call.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed up to (but not including) the Nth call.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }
      if (times <= 1) func = null;
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  _.restArguments = restArguments;

  // Object Functions
  // ----------------

  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var collectNonEnumProps = function(obj, keys) {
    var nonEnumIdx = nonEnumerableProps.length;
    var constructor = obj.constructor;
    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;

    // Constructor is a special case.
    var prop = 'constructor';
    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

    while (nonEnumIdx--) {
      prop = nonEnumerableProps[nonEnumIdx];
      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
        keys.push(prop);
      }
    }
  };

  // Retrieve the names of an object's own properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`.
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (has(obj, key)) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve all the property names of an object.
  _.allKeys = function(obj) {
    if (!_.isObject(obj)) return [];
    var keys = [];
    for (var key in obj) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Returns the results of applying the iteratee to each element of the object.
  // In contrast to _.map it returns an object.
  _.mapObject = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = _.keys(obj),
        length = keys.length,
        results = {};
    for (var index = 0; index < length; index++) {
      var currentKey = keys[index];
      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Convert an object into a list of `[key, value]` pairs.
  // The opposite of _.object.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`.
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // An internal function for creating assigner functions.
  var createAssigner = function(keysFunc, defaults) {
    return function(obj) {
      var length = arguments.length;
      if (defaults) obj = Object(obj);
      if (length < 2 || obj == null) return obj;
      for (var index = 1; index < length; index++) {
        var source = arguments[index],
            keys = keysFunc(source),
            l = keys.length;
        for (var i = 0; i < l; i++) {
          var key = keys[i];
          if (!defaults || obj[key] === void 0) obj[key] = source[key];
        }
      }
      return obj;
    };
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = createAssigner(_.allKeys);

  // Assigns a given object with all the own properties in the passed-in object(s).
  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
  _.extendOwn = _.assign = createAssigner(_.keys);

  // Returns the first key on an object that passes a predicate test.
  _.findKey = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = _.keys(obj), key;
    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  };

  // Internal pick helper function to determine if `obj` has key `key`.
  var keyInObj = function(value, key, obj) {
    return key in obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = restArguments(function(obj, keys) {
    var result = {}, iteratee = keys[0];
    if (obj == null) return result;
    if (_.isFunction(iteratee)) {
      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);
      keys = _.allKeys(obj);
    } else {
      iteratee = keyInObj;
      keys = flatten(keys, false, false);
      obj = Object(obj);
    }
    for (var i = 0, length = keys.length; i < length; i++) {
      var key = keys[i];
      var value = obj[key];
      if (iteratee(value, key, obj)) result[key] = value;
    }
    return result;
  });

  // Return a copy of the object without the blacklisted properties.
  _.omit = restArguments(function(obj, keys) {
    var iteratee = keys[0], context;
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
      if (keys.length > 1) context = keys[1];
    } else {
      keys = _.map(flatten(keys, false, false), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  });

  // Fill in a given object with default properties.
  _.defaults = createAssigner(_.allKeys, true);

  // Creates an object that inherits from the given prototype object.
  // If additional properties are provided then they will be added to the
  // created object.
  _.create = function(prototype, props) {
    var result = baseCreate(prototype);
    if (props) _.extendOwn(result, props);
    return result;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Returns whether an object has a given set of `key:value` pairs.
  _.isMatch = function(object, attrs) {
    var keys = _.keys(attrs), length = keys.length;
    if (object == null) return !length;
    var obj = Object(object);
    for (var i = 0; i < length; i++) {
      var key = keys[i];
      if (attrs[key] !== obj[key] || !(key in obj)) return false;
    }
    return true;
  };


  // Internal recursive comparison function for `isEqual`.
  var eq, deepEq;
  eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // `null` or `undefined` only equal to itself (strict comparison).
    if (a == null || b == null) return false;
    // `NaN`s are equivalent, but non-reflexive.
    if (a !== a) return b !== b;
    // Exhaust primitive checks
    var type = typeof a;
    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;
    return deepEq(a, b, aStack, bStack);
  };

  // Internal recursive comparison function for `isEqual`.
  deepEq = function(a, b, aStack, bStack) {
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN.
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
      case '[object Symbol]':
        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);
    }

    var areArrays = className === '[object Array]';
    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false;

      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                               _.isFunction(bCtor) && bCtor instanceof bCtor)
                          && ('constructor' in a && 'constructor' in b)) {
        return false;
      }
    }
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

    // Initializing stack of traversed objects.
    // It's done here since we only need them for objects and arrays comparison.
    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }

    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);

    // Recursively compare objects and arrays.
    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      length = a.length;
      if (length !== b.length) return false;
      // Deep compare the contents, ignoring non-numeric properties.
      while (length--) {
        if (!eq(a[length], b[length], aStack, bStack)) return false;
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      length = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      if (_.keys(b).length !== length) return false;
      while (length--) {
        // Deep compare each member
        key = keys[length];
        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return true;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
    return _.keys(obj).length === 0;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).
  var nodelist = root.document && root.document.childNodes;
  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`?
  _.isNaN = function(obj) {
    return _.isNumber(obj) && isNaN(obj);
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, path) {
    if (!_.isArray(path)) {
      return has(obj, path);
    }
    var length = path.length;
    for (var i = 0; i < length; i++) {
      var key = path[i];
      if (obj == null || !hasOwnProperty.call(obj, key)) {
        return false;
      }
      obj = obj[key];
    }
    return !!length;
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  // Predicate-generating functions. Often useful outside of Underscore.
  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  // Creates a function that, when passed an object, will traverse that object’s
  // properties down the given `path`, specified as an array of keys or indexes.
  _.property = function(path) {
    if (!_.isArray(path)) {
      return shallowProperty(path);
    }
    return function(obj) {
      return deepGet(obj, path);
    };
  };

  // Generates a function for a given object that returns a given property.
  _.propertyOf = function(obj) {
    if (obj == null) {
      return function(){};
    }
    return function(path) {
      return !_.isArray(path) ? obj[path] : deepGet(obj, path);
    };
  };

  // Returns a predicate for checking whether an object has a given set of
  // `key:value` pairs.
  _.matcher = _.matches = function(attrs) {
    attrs = _.extendOwn({}, attrs);
    return function(obj) {
      return _.isMatch(obj, attrs);
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

  // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped.
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // Traverses the children of `obj` along `path`. If a child is a function, it
  // is invoked with its parent as context. Returns the value of the final
  // child, or `fallback` if any child is undefined.
  _.result = function(obj, path, fallback) {
    if (!_.isArray(path)) path = [path];
    var length = path.length;
    if (!length) {
      return _.isFunction(fallback) ? fallback.call(obj) : fallback;
    }
    for (var i = 0; i < length; i++) {
      var prop = obj == null ? void 0 : obj[path[i]];
      if (prop === void 0) {
        prop = fallback;
        i = length; // Ensure we don't continue iterating.
      }
      obj = _.isFunction(prop) ? prop.call(obj) : prop;
    }
    return obj;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate: /<%([\s\S]+?)%>/g,
    interpolate: /<%=([\s\S]+?)%>/g,
    escape: /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'": "'",
    '\\': '\\',
    '\r': 'r',
    '\n': 'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escapeRegExp = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offset.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    var render;
    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var chainResult = function(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return chainResult(this, func.apply(_, args));
      };
    });
    return _;
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return chainResult(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return chainResult(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // Provide unwrapping proxy for some methods used in engine operations
  // such as arithmetic and JSON stringification.
  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

  _.prototype.toString = function() {
    return String(this._wrapped);
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define == 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}());

},{}],"E7Ih":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/***
 * RegExp definitions for tokenizing text in a specific language based
 * on its alphabet. Each language is keyed by the two-letter code per
 * ISO 639-1, and defines a RegExp that excludes alphabetic characters.
 */
var matchers = {
  fi: /[^A-Za-zÅåÄäÖö]/
};
module.exports = matchers;
},{}],"LYyI":[function(require,module,exports) {
/*
Copyright (c) 2011, Rob Ellis, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require("util"),
    _ = require('underscore')._; // Base Class for RegExp Matching


var RegexpTokenizer = function (options) {
  var options = options || {};
  this._pattern = options.pattern || this._pattern;
  this.discardEmpty = options.discardEmpty || true; // Match and split on GAPS not the actual WORDS

  this._gaps = options.gaps;

  if (this._gaps === undefined) {
    this._gaps = true;
  }
};

util.inherits(RegexpTokenizer, Tokenizer);

RegexpTokenizer.prototype.tokenize = function (s) {
  var results;

  if (this._gaps) {
    results = s.split(this._pattern);
    return this.discardEmpty ? _.without(results, '', ' ') : results;
  } else {
    return s.match(this._pattern);
  }
};

exports.RegexpTokenizer = RegexpTokenizer;

var orthographyMatchers = require('./orthography_matchers');
/***
 * A tokenizer that accepts an alphabet definition.
 * @param {string} options.language ISO 639-1 for the language, e.g. 'en'
 */


var OrthographyTokenizer = function (options) {
  var pattern = orthographyMatchers[options.language];

  if (!pattern) {
    WordTokenizer.call(this, options);
  } else {
    this._pattern = pattern;
    RegexpTokenizer.call(this, options);
  }
};

util.inherits(OrthographyTokenizer, RegexpTokenizer);
exports.OrthographyTokenizer = OrthographyTokenizer;
/***
 * A tokenizer that divides a text into sequences of alphabetic and
 * non-alphabetic characters.  E.g.:
 *
 *      >>> WordTokenizer().tokenize("She said 'hello'.")
 *      ['She', 'said', 'hello']
 *
 */

var WordTokenizer = function (options) {
  this._pattern = /[^A-Za-zА-Яа-я0-9_]+/;
  RegexpTokenizer.call(this, options);
};

util.inherits(WordTokenizer, RegexpTokenizer);
exports.WordTokenizer = WordTokenizer;
/***
 * A tokenizer that divides a text into sequences of alphabetic and
 * non-alphabetic characters.  E.g.:
 *
 *      >>> WordPunctTokenizer().tokenize("She said 'hello'.")
 *      ["She","said","'","hello","'","."]
 *
 */

var WordPunctTokenizer = function (options) {
  this._pattern = new RegExp(/([A-zÀ-ÿ-]+|[0-9._]+|.|!|\?|'|"|:|;|,|-)/i);
  RegexpTokenizer.call(this, options);
};

util.inherits(WordPunctTokenizer, RegexpTokenizer);
exports.WordPunctTokenizer = WordPunctTokenizer;
},{"./tokenizer":"ZemB","util":"nq70","underscore":"h15N","./orthography_matchers":"E7Ih"}],"hvKR":[function(require,module,exports) {
/*
Copyright (c) 2011, Rob Ellis, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require("util"),
    _ = require('underscore')._;

var contractions2 = [/(.)('ll|'re|'ve|n't|'s|'m|'d)\b/ig, /\b(can)(not)\b/ig, /\b(D)('ye)\b/ig, /\b(Gim)(me)\b/ig, /\b(Gon)(na)\b/ig, /\b(Got)(ta)\b/ig, /\b(Lem)(me)\b/ig, /\b(Mor)('n)\b/ig, /\b(T)(is)\b/ig, /\b(T)(was)\b/ig, /\b(Wan)(na)\b/ig];
var contractions3 = [/\b(Whad)(dd)(ya)\b/ig, /\b(Wha)(t)(cha)\b/ig];

var TreebankWordTokenizer = function () {};

util.inherits(TreebankWordTokenizer, Tokenizer);

TreebankWordTokenizer.prototype.tokenize = function (text) {
  contractions2.forEach(function (regexp) {
    text = text.replace(regexp, "$1 $2");
  });
  contractions3.forEach(function (regexp) {
    text = text.replace(regexp, "$1 $2 $3");
  }); // most punctuation

  text = text.replace(/([^\w\.\'\-\/\+\<\>,&])/g, " $1 "); // commas if followed by space

  text = text.replace(/(,\s)/g, " $1"); // single quotes if followed by a space

  text = text.replace(/('\s)/g, " $1"); // periods before newline or end of string

  text = text.replace(/\. *(\n|$)/g, " . ");
  return _.without(text.split(/\s+/), '');
};

module.exports = TreebankWordTokenizer;
},{"./tokenizer":"ZemB","util":"nq70","underscore":"h15N"}],"HOVZ":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Tokenizer = require('./tokenizer'),
    util = require('util');

var SentenceTokenizer = function () {
  Tokenizer.call(this);
};

util.inherits(SentenceTokenizer, Tokenizer);

SentenceTokenizer.prototype.tokenize = function (text) {
  // break string up in to sentences based on punctation and quotation marks
  var tokens = text.match(/([\"\'\‘\“\'\"\[\(\{\⟨][^\.\?\!]+[\.\?\!][\"\'\’\”\'\"\]\)\}\⟩]|[^\.\?\!]+[\.\?\!\s]+)\s?/g); // remove unecessary white space

  tokens = tokens.map(Function.prototype.call, String.prototype.trim);
  return this.trim(tokens);
};

module.exports = SentenceTokenizer;
},{"./tokenizer":"ZemB","util":"nq70"}],"FRpO":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;

if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};

function EventEmitter() {
  EventEmitter.init.call(this);
}

module.exports = EventEmitter; // Backwards-compat with node 0.10.x

EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.

var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function () {
    return defaultMaxListeners;
  },
  set: function (arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }

    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}; // Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.


EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }

  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];

  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);

  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

  if (doError) {
    var er;
    if (args.length > 0) er = args[0];

    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    } // At least give some kind of context to the user


    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];
  if (handler === undefined) return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);

    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;

  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object

      events = target._events;
    }

    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    } // Check for listener leak


    m = _getMaxListeners(target);

    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true; // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax

      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  checkListener(listener);
  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
}; // Emits a 'removeListener' event if and only if the listener was removed.


EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;
  checkListener(listener);
  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;

  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;

    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }

    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }

  return this;
};

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this; // not listening for removeListener, no need to emit

  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }

    return this;
  } // emit removeListener for all listeners on all events


  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;

    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }

    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }

  listeners = events[type];

  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }

  return this;
};

function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;

function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);

  for (var i = 0; i < n; ++i) copy[i] = arr[i];

  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) list[index] = list[index + 1];

  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);

  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }

  return ret;
}
},{}],"zv8z":[function(require,module,exports) {
exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};

},{}],"X6da":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var PorterStemmer = require('../stemmers/porter_stemmer'),
    util = require('util'),
    events = require('events'),
    os = require('os');

try {
  var Threads = require('webworker-threads');
} catch (e) {
  // Since webworker-threads are optional, only thow if the module is found
  if (e.code !== 'MODULE_NOT_FOUND') throw e;
}

function checkThreadSupport() {
  if (typeof Threads === 'undefined') {
    throw new Error('parallel classification requires the optional dependency webworker-threads');
  }
}

var Classifier = function (classifier, stemmer) {
  this.classifier = classifier;
  this.docs = [];
  this.features = {};
  this.stemmer = stemmer || PorterStemmer;
  this.lastAdded = 0;
  this.events = new events.EventEmitter();
};

function addDocument(text, classification) {
  // Ignore further processing if classification is undefined
  if (typeof classification === 'undefined') return; // If classification is type of string then make sure it's dosen't have blank space at both end

  if (typeof classification === 'string') {
    classification = classification.trim();
  }

  if (typeof text === 'string') text = this.stemmer.tokenizeAndStem(text, this.keepStops);

  if (text.length === 0) {
    // ignore empty documents
    return;
  }

  this.docs.push({
    label: classification,
    text: text
  });

  for (var i = 0; i < text.length; i++) {
    var token = text[i];
    this.features[token] = (this.features[token] || 0) + 1;
  }
}

function removeDocument(text, classification) {
  var docs = this.docs,
      doc,
      pos;

  if (typeof text === 'string') {
    text = this.stemmer.tokenizeAndStem(text, this.keepStops);
  }

  for (var i = 0, ii = docs.length; i < ii; i++) {
    doc = docs[i];

    if (doc.text.join(' ') == text.join(' ') && doc.label == classification) {
      pos = i;
    }
  } // Remove if there's a match


  if (!isNaN(pos)) {
    this.docs.splice(pos, 1);

    for (var i = 0, ii = text.length; i < ii; i++) {
      delete this.features[text[i]];
    }
  }
}

function textToFeatures(observation) {
  var features = [];
  if (typeof observation === 'string') observation = this.stemmer.tokenizeAndStem(observation, this.keepStops);

  for (var feature in this.features) {
    if (observation.indexOf(feature) > -1) features.push(1);else features.push(0);
  }

  return features;
}

function docsToFeatures(docs) {
  var parsedDocs = [];

  for (var i = 0; i < docs.length; i++) {
    var features = [];

    for (var feature in FEATURES) {
      if (docs[i].observation.indexOf(feature) > -1) features.push(1);else features.push(0);
    }

    parsedDocs.push({
      index: docs[i].index,
      features: features
    });
  }

  return JSON.stringify(parsedDocs);
}

function train() {
  var totalDocs = this.docs.length;

  for (var i = this.lastAdded; i < totalDocs; i++) {
    var features = this.textToFeatures(this.docs[i].text);
    this.classifier.addExample(features, this.docs[i].label);
    this.events.emit('trainedWithDocument', {
      index: i,
      total: totalDocs,
      doc: this.docs[i]
    });
    this.lastAdded++;
  }

  this.events.emit('doneTraining', true);
  this.classifier.train();
}

function trainParallel(numThreads, callback) {
  checkThreadSupport();

  if (!callback) {
    callback = numThreads;
    numThreads = undefined;
  }

  if (isNaN(numThreads)) {
    numThreads = os.cpus().length;
  }

  var totalDocs = this.docs.length;
  var threadPool = Threads.createPool(numThreads);
  var docFeatures = {};
  var finished = 0;
  var self = this; // Init pool; send the features array and the parsing function

  threadPool.all.eval('var FEATURES = ' + JSON.stringify(this.features));
  threadPool.all.eval(docsToFeatures); // Convert docs to observation objects

  var obsDocs = [];

  for (var i = this.lastAdded; i < totalDocs; i++) {
    var observation = this.docs[i].text;
    if (typeof observation === 'string') observation = this.stemmer.tokenizeAndStem(observation, this.keepStops);
    obsDocs.push({
      index: i,
      observation: observation
    });
  } // Called when a batch completes processing


  var onFeaturesResult = function (docs) {
    setTimeout(function () {
      self.events.emit('processedBatch', {
        size: docs.length,
        docs: totalDocs,
        batches: numThreads,
        index: finished
      });
    });

    for (var j = 0; j < docs.length; j++) {
      docFeatures[docs[j].index] = docs[j].features;
    }
  }; // Called when all batches finish processing


  var onFinished = function (err) {
    if (err) {
      threadPool.destroy();
      return callback(err);
    }

    for (var j = self.lastAdded; j < totalDocs; j++) {
      self.classifier.addExample(docFeatures[j], self.docs[j].label);
      self.events.emit('trainedWithDocument', {
        index: j,
        total: totalDocs,
        doc: self.docs[j]
      });
      self.lastAdded++;
    }

    self.events.emit('doneTraining', true);
    self.classifier.train();
    threadPool.destroy();
    callback(null);
  }; // Split the docs and start processing


  var batchSize = Math.ceil(obsDocs.length / numThreads);
  var lastError;

  for (var i = 0; i < numThreads; i++) {
    var batchDocs = obsDocs.slice(i * batchSize, (i + 1) * batchSize);
    var batchJson = JSON.stringify(batchDocs);
    threadPool.any.eval('docsToFeatures(' + batchJson + ')', function (err, docs) {
      lastError = err || lastError;
      finished++;

      if (docs) {
        docs = JSON.parse(docs);
        onFeaturesResult(docs);
      }

      if (finished >= numThreads) {
        onFinished(lastError);
      }
    });
  }
}

function trainParallelBatches(options) {
  checkThreadSupport();
  var numThreads = options && options.numThreads;
  var batchSize = options && options.batchSize;

  if (isNaN(numThreads)) {
    numThreads = os.cpus().length;
  }

  if (isNaN(batchSize)) {
    batchSize = 2500;
  }

  var totalDocs = this.docs.length;
  var threadPool = Threads.createPool(numThreads);
  var docFeatures = {};
  var finished = 0;
  var self = this;
  var abort = false;

  var onError = function (err) {
    if (!err || abort) return;
    abort = true;
    threadPool.destroy(true);
    self.events.emit('doneTrainingError', err);
  }; // Init pool; send the features array and the parsing function


  var str = JSON.stringify(this.features);
  threadPool.all.eval('var FEATURES = ' + str + ';', onError);
  threadPool.all.eval(docsToFeatures, onError); // Convert docs to observation objects

  var obsDocs = [];

  for (var i = this.lastAdded; i < totalDocs; i++) {
    var observation = this.docs[i].text;
    if (typeof observation === 'string') observation = this.stemmer.tokenizeAndStem(observation, this.keepStops);
    obsDocs.push({
      index: i,
      observation: observation
    });
  } // Split the docs in batches


  var obsBatches = [];
  var i = 0;

  while (true) {
    var batch = obsDocs.slice(i * batchSize, (i + 1) * batchSize);
    if (!batch || !batch.length) break;
    obsBatches.push(batch);
    i++;
  }

  obsDocs = null;
  self.events.emit('startedTraining', {
    docs: totalDocs,
    batches: obsBatches.length
  }); // Called when a batch completes processing

  var onFeaturesResult = function (docs) {
    self.events.emit('processedBatch', {
      size: docs.length,
      docs: totalDocs,
      batches: obsBatches.length,
      index: finished
    });

    for (var j = 0; j < docs.length; j++) {
      docFeatures[docs[j].index] = docs[j].features;
    }
  }; // Called when all batches finish processing


  var onFinished = function () {
    threadPool.destroy(true);
    abort = true;

    for (var j = self.lastAdded; j < totalDocs; j++) {
      self.classifier.addExample(docFeatures[j], self.docs[j].label);
      self.events.emit('trainedWithDocument', {
        index: j,
        total: totalDocs,
        doc: self.docs[j]
      });
      self.lastAdded++;
    }

    self.events.emit('doneTraining', true);
    self.classifier.train();
  }; // Called to send the next batch to be processed


  var batchIndex = 0;

  var sendNext = function () {
    if (abort) return;

    if (batchIndex >= obsBatches.length) {
      return;
    }

    sendBatch(JSON.stringify(obsBatches[batchIndex]));
    batchIndex++;
  }; // Called to send a batch of docs to the threads


  var sendBatch = function (batchJson) {
    if (abort) return;
    threadPool.any.eval('docsToFeatures(' + batchJson + ');', function (err, docs) {
      if (err) {
        return onError(err);
      }

      finished++;

      if (docs) {
        docs = JSON.parse(docs);
        setTimeout(onFeaturesResult.bind(null, docs));
      }

      if (finished >= obsBatches.length) {
        setTimeout(onFinished);
      }

      setTimeout(sendNext);
    });
  }; // Start processing


  for (var i = 0; i < numThreads; i++) {
    sendNext();
  }
}

function retrain() {
  this.classifier = new this.classifier.constructor();
  this.lastAdded = 0;
  this.train();
}

function retrainParallel(numThreads, callback) {
  this.classifier = new this.classifier.constructor();
  this.lastAdded = 0;
  this.trainParallel(numThreads, callback);
}

function getClassifications(observation) {
  return this.classifier.getClassifications(this.textToFeatures(observation));
}

function classify(observation) {
  return this.classifier.classify(this.textToFeatures(observation));
}

function restore(classifier, stemmer) {
  classifier.stemmer = stemmer || PorterStemmer;
  classifier.events = new events.EventEmitter();
  return classifier;
}

function save(filename, callback) {
  var data = JSON.stringify(this);

  var fs = require('fs');

  var classifier = this;
  fs.writeFile(filename, data, 'utf8', function (err) {
    if (callback) {
      callback(err, err ? null : classifier);
    }
  });
}

function load(filename, callback) {
  var fs = require('fs');

  fs.readFile(filename, 'utf8', function (err, data) {
    var classifier;

    if (!err) {
      classifier = JSON.parse(data);
    }

    if (callback) callback(err, classifier);
  });
}

function setOptions(options) {
  this.keepStops = options.keepStops ? true : false;
}

Classifier.prototype.addDocument = addDocument;
Classifier.prototype.removeDocument = removeDocument;
Classifier.prototype.train = train;

if (Threads) {
  Classifier.prototype.trainParallel = trainParallel;
  Classifier.prototype.trainParallelBatches = trainParallelBatches;
  Classifier.prototype.retrainParallel = retrainParallel;
}

Classifier.prototype.retrain = retrain;
Classifier.prototype.classify = classify;
Classifier.prototype.textToFeatures = textToFeatures;
Classifier.prototype.save = save;
Classifier.prototype.getClassifications = getClassifications;
Classifier.prototype.setOptions = setOptions;
Classifier.restore = restore;
Classifier.load = load;
module.exports = Classifier;
},{"../stemmers/porter_stemmer":"hFgZ","util":"nq70","events":"FRpO","os":"zv8z","fs":"rDCW"}],"vMt0":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
function Classifier() {}

function restore(classifier) {
  classifier = typeof classifier == 'string' ? JSON.parse(classifier) : classifier;
  return classifier;
}

function addExample(observation, classification) {
  throw 'Not implemented';
}

function classify(observation) {
  var classifications = this.getClassifications(observation);

  if (!classifications || classifications.length === 0) {
    throw "Not Trained";
  }

  return classifications[0].label;
}

function train() {
  throw 'Not implemented';
}

Classifier.prototype.addExample = addExample;
Classifier.prototype.train = train;
Classifier.prototype.classify = classify;
Classifier.restore = restore;
module.exports = Classifier;
},{}],"pa02":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var util = require('util'),
    Classifier = require('./classifier');

var BayesClassifier = function (smoothing) {
  Classifier.call(this);
  this.classFeatures = {};
  this.classTotals = {};
  this.totalExamples = 1; // start at one to smooth

  this.smoothing = smoothing === undefined ? 1.0 : smoothing;
};

util.inherits(BayesClassifier, Classifier);

function addExample(observation, label) {
  if (!this.classFeatures[label]) {
    this.classFeatures[label] = {};
    this.classTotals[label] = 1; // give an extra for smoothing
  }

  if (observation instanceof Array) {
    var i = observation.length;
    this.totalExamples++;
    this.classTotals[label]++;

    while (i--) {
      if (observation[i]) {
        if (this.classFeatures[label][i]) {
          this.classFeatures[label][i]++;
        } else {
          // give an extra for smoothing
          this.classFeatures[label][i] = 1 + this.smoothing;
        }
      }
    }
  } else {
    // sparse observation
    for (var key in observation) {
      value = observation[key];

      if (this.classFeatures[label][value]) {
        this.classFeatures[label][value]++;
      } else {
        // give an extra for smoothing
        this.classFeatures[label][value] = 1 + this.smoothing;
      }
    }
  }
}

function train() {}

function probabilityOfClass(observation, label) {
  var prob = 0;

  if (observation instanceof Array) {
    var i = observation.length;

    while (i--) {
      if (observation[i]) {
        var count = this.classFeatures[label][i] || this.smoothing; // numbers are tiny, add logs rather than take product

        prob += Math.log(count / this.classTotals[label]);
      }
    }
  } else {
    // sparse observation
    for (var key in observation) {
      var count = this.classFeatures[label][observation[key]] || this.smoothing; // numbers are tiny, add logs rather than take product

      prob += Math.log(count / this.classTotals[label]);
    }
  } // p(C) * unlogging the above calculation P(X|C)


  prob = this.classTotals[label] / this.totalExamples * Math.exp(prob);
  return prob;
}

function getClassifications(observation) {
  var classifier = this;
  var labels = [];

  for (var className in this.classFeatures) {
    labels.push({
      label: className,
      value: classifier.probabilityOfClass(observation, className)
    });
  }

  return labels.sort(function (x, y) {
    return y.value - x.value;
  });
}

function restore(classifier) {
  classifier = Classifier.restore(classifier);
  classifier.__proto__ = BayesClassifier.prototype;
  return classifier;
}

BayesClassifier.prototype.addExample = addExample;
BayesClassifier.prototype.train = train;
BayesClassifier.prototype.getClassifications = getClassifications;
BayesClassifier.prototype.probabilityOfClass = probabilityOfClass;
BayesClassifier.restore = restore;
module.exports = BayesClassifier;
},{"util":"nq70","./classifier":"vMt0"}],"zevT":[function(require,module,exports) {
// Copyright (c) 2011, Chris Umbel, James Coglan
// This file is required in order for any other classes to work. Some Vector methods work with the
// other Sylvester classes and are useless unless they are included. Other classes such as Line and
// Plane will not function at all without Vector being loaded first.           
Math.sign = function (x) {
  return x < 0 ? -1 : 1;
};

var Sylvester = {
  precision: 1e-6
};
module.exports = Sylvester;
},{}],"NLhy":[function(require,module,exports) {
// Copyright (c) 2011, Chris Umbel, James Coglan
// Matrix class - depends on Vector.
var fs = require('fs');

var Sylvester = require('./sylvester');

var Vector = require('./vector'); // augment a matrix M with identity rows/cols


function identSize(M, m, n, k) {
  var e = M.elements;
  var i = k - 1;

  while (i--) {
    var row = [];

    for (var j = 0; j < n; j++) row.push(j == i ? 1 : 0);

    e.unshift(row);
  }

  for (var i = k - 1; i < m; i++) {
    while (e[i].length < n) e[i].unshift(0);
  }

  return $M(e);
}

function pca(X) {
  var Sigma = X.transpose().x(X).x(1 / X.rows());
  var svd = Sigma.svd();
  return {
    U: svd.U,
    S: svd.S
  };
}

function Matrix() {}

Matrix.prototype = {
  pcaProject: function (k, U) {
    var U = U || pca(this).U;
    var Ureduce = U.slice(1, U.rows(), 1, k);
    return {
      Z: this.x(Ureduce),
      U: U
    };
  },
  pcaRecover: function (U) {
    var k = this.cols();
    var Ureduce = U.slice(1, U.rows(), 1, k);
    return this.x(Ureduce.transpose());
  },
  triu: function (k) {
    if (!k) k = 0;
    return this.map(function (x, i, j) {
      return j - i >= k ? x : 0;
    });
  },
  svd: function () {
    var A = this;
    var U = Matrix.I(A.rows());
    var S = A.transpose();
    var V = Matrix.I(A.cols());
    var err = Number.MAX_VALUE;
    var i = 0;
    var maxLoop = 100;

    while (err > 2.2737e-13 && i < maxLoop) {
      var qr = S.transpose().qr();
      S = qr.R;
      U = U.x(qr.Q);
      qr = S.transpose().qr();
      V = V.x(qr.Q);
      S = qr.R;
      var e = S.triu(1).unroll().norm();
      var f = S.diagonal().norm();
      if (f == 0) f = 1;
      err = e / f;
      i++;
    }

    var ss = S.diagonal();
    var s = [];

    for (var i = 1; i <= ss.cols(); i++) {
      var ssn = ss.e(i);
      s.push(Math.abs(ssn));

      if (ssn < 0) {
        for (var j = 0; j < U.rows(); j++) {
          U.elements[j][i - 1] = -U.elements[j][i - 1];
        }
      }
    }

    return {
      U: U,
      S: $V(s).toDiagonalMatrix(),
      V: V
    };
  },
  unroll: function () {
    var v = [];

    for (var i = 1; i <= this.cols(); i++) {
      for (var j = 1; j <= this.rows(); j++) {
        v.push(this.e(j, i));
      }
    }

    return $V(v);
  },
  qr: function () {
    var m = this.rows();
    var n = this.cols();
    var Q = Matrix.I(m);
    var A = this;

    for (var k = 1; k < Math.min(m, n); k++) {
      var ak = A.slice(k, 0, k, k).col(1);
      var oneZero = [1];

      while (oneZero.length <= m - k) oneZero.push(0);

      oneZero = $V(oneZero);
      var vk = ak.add(oneZero.x(ak.norm() * Math.sign(ak.e(1))));
      var Vk = $M(vk);
      var Hk = Matrix.I(m - k + 1).subtract(Vk.x(2).x(Vk.transpose()).div(Vk.transpose().x(Vk).e(1, 1)));
      var Qk = identSize(Hk, m, n, k);
      A = Qk.x(A);
      Q = Q.x(Qk);
    }

    return {
      Q: Q,
      R: A
    };
  },
  slice: function (startRow, endRow, startCol, endCol) {
    var x = [];
    if (endRow == 0) endRow = this.rows();
    if (endCol == 0) endCol = this.cols();

    for (i = startRow; i <= endRow; i++) {
      var row = [];

      for (j = startCol; j <= endCol; j++) {
        row.push(this.e(i, j));
      }

      x.push(row);
    }

    return $M(x);
  },
  // Returns element (i,j) of the matrix
  e: function (i, j) {
    if (i < 1 || i > this.elements.length || j < 1 || j > this.elements[0].length) {
      return null;
    }

    return this.elements[i - 1][j - 1];
  },
  // Returns row k of the matrix as a vector
  row: function (i) {
    if (i > this.elements.length) {
      return null;
    }

    return $V(this.elements[i - 1]);
  },
  // Returns column k of the matrix as a vector
  col: function (j) {
    if (j > this.elements[0].length) {
      return null;
    }

    var col = [],
        n = this.elements.length;

    for (var i = 0; i < n; i++) {
      col.push(this.elements[i][j - 1]);
    }

    return $V(col);
  },
  // Returns the number of rows/columns the matrix has
  dimensions: function () {
    return {
      rows: this.elements.length,
      cols: this.elements[0].length
    };
  },
  // Returns the number of rows in the matrix
  rows: function () {
    return this.elements.length;
  },
  // Returns the number of columns in the matrix
  cols: function () {
    return this.elements[0].length;
  },
  // Returns true iff the matrix is equal to the argument. You can supply
  // a vector as the argument, in which case the receiver must be a
  // one-column matrix equal to the vector.
  eql: function (matrix) {
    var M = matrix.elements || matrix;

    if (typeof M[0][0] == 'undefined') {
      M = Matrix.create(M).elements;
    }

    if (this.elements.length != M.length || this.elements[0].length != M[0].length) {
      return false;
    }

    var i = this.elements.length,
        nj = this.elements[0].length,
        j;

    while (i--) {
      j = nj;

      while (j--) {
        if (Math.abs(this.elements[i][j] - M[i][j]) > Sylvester.precision) {
          return false;
        }
      }
    }

    return true;
  },
  // Returns a copy of the matrix
  dup: function () {
    return Matrix.create(this.elements);
  },
  // Maps the matrix to another matrix (of the same dimensions) according to the given function
  map: function (fn) {
    var els = [],
        i = this.elements.length,
        nj = this.elements[0].length,
        j;

    while (i--) {
      j = nj;
      els[i] = [];

      while (j--) {
        els[i][j] = fn(this.elements[i][j], i + 1, j + 1);
      }
    }

    return Matrix.create(els);
  },
  // Returns true iff the argument has the same dimensions as the matrix
  isSameSizeAs: function (matrix) {
    var M = matrix.elements || matrix;

    if (typeof M[0][0] == 'undefined') {
      M = Matrix.create(M).elements;
    }

    return this.elements.length == M.length && this.elements[0].length == M[0].length;
  },
  // Returns the result of adding the argument to the matrix
  add: function (matrix) {
    if (typeof matrix == 'number') {
      return this.map(function (x, i, j) {
        return x + matrix;
      });
    } else {
      var M = matrix.elements || matrix;

      if (typeof M[0][0] == 'undefined') {
        M = Matrix.create(M).elements;
      }

      if (!this.isSameSizeAs(M)) {
        return null;
      }

      return this.map(function (x, i, j) {
        return x + M[i - 1][j - 1];
      });
    }
  },
  // Returns the result of subtracting the argument from the matrix
  subtract: function (matrix) {
    if (typeof matrix == 'number') {
      return this.map(function (x, i, j) {
        return x - matrix;
      });
    } else {
      var M = matrix.elements || matrix;

      if (typeof M[0][0] == 'undefined') {
        M = Matrix.create(M).elements;
      }

      if (!this.isSameSizeAs(M)) {
        return null;
      }

      return this.map(function (x, i, j) {
        return x - M[i - 1][j - 1];
      });
    }
  },
  // Returns true iff the matrix can multiply the argument from the left
  canMultiplyFromLeft: function (matrix) {
    var M = matrix.elements || matrix;

    if (typeof M[0][0] == 'undefined') {
      M = Matrix.create(M).elements;
    } // this.columns should equal matrix.rows


    return this.elements[0].length == M.length;
  },
  // Returns the result of a multiplication-style operation the matrix from the right by the argument.
  // If the argument is a scalar then just operate on all the elements. If the argument is
  // a vector, a vector is returned, which saves you having to remember calling
  // col(1) on the result.
  mulOp: function (matrix, op) {
    if (!matrix.elements) {
      return this.map(function (x) {
        return op(x, matrix);
      });
    }

    var returnVector = matrix.modulus ? true : false;
    var M = matrix.elements || matrix;
    if (typeof M[0][0] == 'undefined') M = Matrix.create(M).elements;
    if (!this.canMultiplyFromLeft(M)) return null;
    var e = this.elements,
        rowThis,
        rowElem,
        elements = [],
        sum,
        m = e.length,
        n = M[0].length,
        o = e[0].length,
        i = m,
        j,
        k;

    while (i--) {
      rowElem = [];
      rowThis = e[i];
      j = n;

      while (j--) {
        sum = 0;
        k = o;

        while (k--) {
          sum += op(rowThis[k], M[k][j]);
        }

        rowElem[j] = sum;
      }

      elements[i] = rowElem;
    }

    var M = Matrix.create(elements);
    return returnVector ? M.col(1) : M;
  },
  // Returns the result of dividing the matrix from the right by the argument.
  // If the argument is a scalar then just divide all the elements. If the argument is
  // a vector, a vector is returned, which saves you having to remember calling
  // col(1) on the result.
  div: function (matrix) {
    return this.mulOp(matrix, function (x, y) {
      return x / y;
    });
  },
  // Returns the result of multiplying the matrix from the right by the argument.
  // If the argument is a scalar then just multiply all the elements. If the argument is
  // a vector, a vector is returned, which saves you having to remember calling
  // col(1) on the result.
  multiply: function (matrix) {
    return this.mulOp(matrix, function (x, y) {
      return x * y;
    });
  },
  x: function (matrix) {
    return this.multiply(matrix);
  },
  elementMultiply: function (v) {
    return this.map(function (k, i, j) {
      return v.e(i, j) * k;
    });
  },
  sum: function () {
    var sum = 0;
    this.map(function (x) {
      sum += x;
    });
    return sum;
  },
  // Returns a Vector of each colum averaged.
  mean: function () {
    var dim = this.dimensions();
    var r = [];

    for (var i = 1; i <= dim.cols; i++) {
      r.push(this.col(i).sum() / dim.rows);
    }

    return $V(r);
  },
  column: function (n) {
    return this.col(n);
  },
  log: function () {
    return this.map(function (x) {
      return Math.log(x);
    });
  },
  // Returns a submatrix taken from the matrix
  // Argument order is: start row, start col, nrows, ncols
  // Element selection wraps if the required index is outside the matrix's bounds, so you could
  // use this to perform row/column cycling or copy-augmenting.
  minor: function (a, b, c, d) {
    var elements = [],
        ni = c,
        i,
        nj,
        j;
    var rows = this.elements.length,
        cols = this.elements[0].length;

    while (ni--) {
      i = c - ni - 1;
      elements[i] = [];
      nj = d;

      while (nj--) {
        j = d - nj - 1;
        elements[i][j] = this.elements[(a + i - 1) % rows][(b + j - 1) % cols];
      }
    }

    return Matrix.create(elements);
  },
  // Returns the transpose of the matrix
  transpose: function () {
    var rows = this.elements.length,
        i,
        cols = this.elements[0].length,
        j;
    var elements = [],
        i = cols;

    while (i--) {
      j = rows;
      elements[i] = [];

      while (j--) {
        elements[i][j] = this.elements[j][i];
      }
    }

    return Matrix.create(elements);
  },
  // Returns true iff the matrix is square
  isSquare: function () {
    return this.elements.length == this.elements[0].length;
  },
  // Returns the (absolute) largest element of the matrix
  max: function () {
    var m = 0,
        i = this.elements.length,
        nj = this.elements[0].length,
        j;

    while (i--) {
      j = nj;

      while (j--) {
        if (Math.abs(this.elements[i][j]) > Math.abs(m)) {
          m = this.elements[i][j];
        }
      }
    }

    return m;
  },
  // Returns the indeces of the first match found by reading row-by-row from left to right
  indexOf: function (x) {
    var index = null,
        ni = this.elements.length,
        i,
        nj = this.elements[0].length,
        j;

    for (i = 0; i < ni; i++) {
      for (j = 0; j < nj; j++) {
        if (this.elements[i][j] == x) {
          return {
            i: i + 1,
            j: j + 1
          };
        }
      }
    }

    return null;
  },
  // If the matrix is square, returns the diagonal elements as a vector.
  // Otherwise, returns null.
  diagonal: function () {
    if (!this.isSquare) {
      return null;
    }

    var els = [],
        n = this.elements.length;

    for (var i = 0; i < n; i++) {
      els.push(this.elements[i][i]);
    }

    return $V(els);
  },
  // Make the matrix upper (right) triangular by Gaussian elimination.
  // This method only adds multiples of rows to other rows. No rows are
  // scaled up or switched, and the determinant is preserved.
  toRightTriangular: function () {
    var M = this.dup(),
        els;
    var n = this.elements.length,
        i,
        j,
        np = this.elements[0].length,
        p;

    for (i = 0; i < n; i++) {
      if (M.elements[i][i] == 0) {
        for (j = i + 1; j < n; j++) {
          if (M.elements[j][i] != 0) {
            els = [];

            for (p = 0; p < np; p++) {
              els.push(M.elements[i][p] + M.elements[j][p]);
            }

            M.elements[i] = els;
            break;
          }
        }
      }

      if (M.elements[i][i] != 0) {
        for (j = i + 1; j < n; j++) {
          var multiplier = M.elements[j][i] / M.elements[i][i];
          els = [];

          for (p = 0; p < np; p++) {
            // Elements with column numbers up to an including the number
            // of the row that we're subtracting can safely be set straight to
            // zero, since that's the point of this routine and it avoids having
            // to loop over and correct rounding errors later
            els.push(p <= i ? 0 : M.elements[j][p] - M.elements[i][p] * multiplier);
          }

          M.elements[j] = els;
        }
      }
    }

    return M;
  },
  toUpperTriangular: function () {
    return this.toRightTriangular();
  },
  // Returns the determinant for square matrices
  determinant: function () {
    if (!this.isSquare()) {
      return null;
    }

    if (this.cols == 1 && this.rows == 1) {
      return this.row(1);
    }

    if (this.cols == 0 && this.rows == 0) {
      return 1;
    }

    var M = this.toRightTriangular();
    var det = M.elements[0][0],
        n = M.elements.length;

    for (var i = 1; i < n; i++) {
      det = det * M.elements[i][i];
    }

    return det;
  },
  det: function () {
    return this.determinant();
  },
  // Returns true iff the matrix is singular
  isSingular: function () {
    return this.isSquare() && this.determinant() === 0;
  },
  // Returns the trace for square matrices
  trace: function () {
    if (!this.isSquare()) {
      return null;
    }

    var tr = this.elements[0][0],
        n = this.elements.length;

    for (var i = 1; i < n; i++) {
      tr += this.elements[i][i];
    }

    return tr;
  },
  tr: function () {
    return this.trace();
  },
  // Returns the rank of the matrix
  rank: function () {
    var M = this.toRightTriangular(),
        rank = 0;
    var i = this.elements.length,
        nj = this.elements[0].length,
        j;

    while (i--) {
      j = nj;

      while (j--) {
        if (Math.abs(M.elements[i][j]) > Sylvester.precision) {
          rank++;
          break;
        }
      }
    }

    return rank;
  },
  rk: function () {
    return this.rank();
  },
  // Returns the result of attaching the given argument to the right-hand side of the matrix
  augment: function (matrix) {
    var M = matrix.elements || matrix;

    if (typeof M[0][0] == 'undefined') {
      M = Matrix.create(M).elements;
    }

    var T = this.dup(),
        cols = T.elements[0].length;
    var i = T.elements.length,
        nj = M[0].length,
        j;

    if (i != M.length) {
      return null;
    }

    while (i--) {
      j = nj;

      while (j--) {
        T.elements[i][cols + j] = M[i][j];
      }
    }

    return T;
  },
  // Returns the inverse (if one exists) using Gauss-Jordan
  inverse: function () {
    if (!this.isSquare() || this.isSingular()) {
      return null;
    }

    var n = this.elements.length,
        i = n,
        j;
    var M = this.augment(Matrix.I(n)).toRightTriangular();
    var np = M.elements[0].length,
        p,
        els,
        divisor;
    var inverse_elements = [],
        new_element; // Matrix is non-singular so there will be no zeros on the diagonal
    // Cycle through rows from last to first

    while (i--) {
      // First, normalise diagonal elements to 1
      els = [];
      inverse_elements[i] = [];
      divisor = M.elements[i][i];

      for (p = 0; p < np; p++) {
        new_element = M.elements[i][p] / divisor;
        els.push(new_element); // Shuffle off the current row of the right hand side into the results
        // array as it will not be modified by later runs through this loop

        if (p >= n) {
          inverse_elements[i].push(new_element);
        }
      }

      M.elements[i] = els; // Then, subtract this row from those above it to
      // give the identity matrix on the left hand side

      j = i;

      while (j--) {
        els = [];

        for (p = 0; p < np; p++) {
          els.push(M.elements[j][p] - M.elements[i][p] * M.elements[j][i]);
        }

        M.elements[j] = els;
      }
    }

    return Matrix.create(inverse_elements);
  },
  inv: function () {
    return this.inverse();
  },
  // Returns the result of rounding all the elements
  round: function () {
    return this.map(function (x) {
      return Math.round(x);
    });
  },
  // Returns a copy of the matrix with elements set to the given value if they
  // differ from it by less than Sylvester.precision
  snapTo: function (x) {
    return this.map(function (p) {
      return Math.abs(p - x) <= Sylvester.precision ? x : p;
    });
  },
  // Returns a string representation of the matrix
  inspect: function () {
    var matrix_rows = [];
    var n = this.elements.length;

    for (var i = 0; i < n; i++) {
      matrix_rows.push($V(this.elements[i]).inspect());
    }

    return matrix_rows.join('\n');
  },
  // Returns a array representation of the matrix
  toArray: function () {
    var matrix_rows = [];
    var n = this.elements.length;

    for (var i = 0; i < n; i++) {
      matrix_rows.push(this.elements[i]);
    }

    return matrix_rows;
  },
  // Set the matrix's elements from an array. If the argument passed
  // is a vector, the resulting matrix will be a single column.
  setElements: function (els) {
    var i,
        j,
        elements = els.elements || els;

    if (typeof elements[0][0] != 'undefined') {
      i = elements.length;
      this.elements = [];

      while (i--) {
        j = elements[i].length;
        this.elements[i] = [];

        while (j--) {
          this.elements[i][j] = elements[i][j];
        }
      }

      return this;
    }

    var n = elements.length;
    this.elements = [];

    for (i = 0; i < n; i++) {
      this.elements.push([elements[i]]);
    }

    return this;
  },
  maxColumnIndexes: function () {
    var maxes = [];

    for (var i = 1; i <= this.rows(); i++) {
      var max = null;
      var maxIndex = -1;

      for (var j = 1; j <= this.cols(); j++) {
        if (max === null || this.e(i, j) > max) {
          max = this.e(i, j);
          maxIndex = j;
        }
      }

      maxes.push(maxIndex);
    }

    return $V(maxes);
  },
  maxColumns: function () {
    var maxes = [];

    for (var i = 1; i <= this.rows(); i++) {
      var max = null;

      for (var j = 1; j <= this.cols(); j++) {
        if (max === null || this.e(i, j) > max) {
          max = this.e(i, j);
        }
      }

      maxes.push(max);
    }

    return $V(maxes);
  },
  minColumnIndexes: function () {
    var mins = [];

    for (var i = 1; i <= this.rows(); i++) {
      var min = null;
      var minIndex = -1;

      for (var j = 1; j <= this.cols(); j++) {
        if (min === null || this.e(i, j) < min) {
          min = this.e(i, j);
          minIndex = j;
        }
      }

      mins.push(minIndex);
    }

    return $V(mins);
  },
  minColumns: function () {
    var mins = [];

    for (var i = 1; i <= this.rows(); i++) {
      var min = null;

      for (var j = 1; j <= this.cols(); j++) {
        if (min === null || this.e(i, j) < min) {
          min = this.e(i, j);
        }
      }

      mins.push(min);
    }

    return $V(mins);
  }
}; // Constructor function

Matrix.create = function (elements) {
  var M = new Matrix();
  return M.setElements(elements);
}; // Identity matrix of size n


Matrix.I = function (n) {
  var els = [],
      i = n,
      j;

  while (i--) {
    j = n;
    els[i] = [];

    while (j--) {
      els[i][j] = i == j ? 1 : 0;
    }
  }

  return Matrix.create(els);
};

Matrix.loadFile = function (file) {
  var contents = fs.readFileSync(file, 'utf-8');
  var matrix = [];
  var rowArray = contents.split('\n');

  for (var i = 0; i < rowArray.length; i++) {
    var d = rowArray[i].split(',');

    if (d.length > 1) {
      matrix.push(d);
    }
  }

  var M = new Matrix();
  return M.setElements(matrix);
}; // Diagonal matrix - all off-diagonal elements are zero


Matrix.Diagonal = function (elements) {
  var i = elements.length;
  var M = Matrix.I(i);

  while (i--) {
    M.elements[i][i] = elements[i];
  }

  return M;
}; // Rotation matrix about some axis. If no axis is
// supplied, assume we're after a 2D transform


Matrix.Rotation = function (theta, a) {
  if (!a) {
    return Matrix.create([[Math.cos(theta), -Math.sin(theta)], [Math.sin(theta), Math.cos(theta)]]);
  }

  var axis = a.dup();

  if (axis.elements.length != 3) {
    return null;
  }

  var mod = axis.modulus();
  var x = axis.elements[0] / mod,
      y = axis.elements[1] / mod,
      z = axis.elements[2] / mod;
  var s = Math.sin(theta),
      c = Math.cos(theta),
      t = 1 - c; // Formula derived here: http://www.gamedev.net/reference/articles/article1199.asp
  // That proof rotates the co-ordinate system so theta
  // becomes -theta and sin becomes -sin here.

  return Matrix.create([[t * x * x + c, t * x * y - s * z, t * x * z + s * y], [t * x * y + s * z, t * y * y + c, t * y * z - s * x], [t * x * z - s * y, t * y * z + s * x, t * z * z + c]]);
}; // Special case rotations


Matrix.RotationX = function (t) {
  var c = Math.cos(t),
      s = Math.sin(t);
  return Matrix.create([[1, 0, 0], [0, c, -s], [0, s, c]]);
};

Matrix.RotationY = function (t) {
  var c = Math.cos(t),
      s = Math.sin(t);
  return Matrix.create([[c, 0, s], [0, 1, 0], [-s, 0, c]]);
};

Matrix.RotationZ = function (t) {
  var c = Math.cos(t),
      s = Math.sin(t);
  return Matrix.create([[c, -s, 0], [s, c, 0], [0, 0, 1]]);
}; // Random matrix of n rows, m columns


Matrix.Random = function (n, m) {
  if (arguments.length === 1) m = n;
  return Matrix.Zero(n, m).map(function () {
    return Math.random();
  });
};

Matrix.Fill = function (n, m, v) {
  if (arguments.length === 2) {
    v = m;
    m = n;
  }

  var els = [],
      i = n,
      j;

  while (i--) {
    j = m;
    els[i] = [];

    while (j--) {
      els[i][j] = v;
    }
  }

  return Matrix.create(els);
}; // Matrix filled with zeros


Matrix.Zero = function (n, m) {
  return Matrix.Fill(n, m, 0);
}; // Matrix filled with zeros


Matrix.Zeros = function (n, m) {
  return Matrix.Zero(n, m);
}; // Matrix filled with ones


Matrix.One = function (n, m) {
  return Matrix.Fill(n, m, 1);
}; // Matrix filled with ones


Matrix.Ones = function (n, m) {
  return Matrix.One(n, m);
};

module.exports = Matrix;
},{"fs":"rDCW","./sylvester":"zevT","./vector":"zeX0"}],"zeX0":[function(require,module,exports) {
// Copyright (c) 2011, Chris Umbel, James Coglan
// This file is required in order for any other classes to work. Some Vector methods work with the
// other Sylvester classes and are useless unless they are included. Other classes such as Line and
// Plane will not function at all without Vector being loaded first.
var Sylvester = require('./sylvester'),
    Matrix = require('./matrix');

function Vector() {}

Vector.prototype = {
  norm: function () {
    var n = this.elements.length;
    var sum = 0;

    while (n--) {
      sum += Math.pow(this.elements[n], 2);
    }

    return Math.sqrt(sum);
  },
  // Returns element i of the vector
  e: function (i) {
    return i < 1 || i > this.elements.length ? null : this.elements[i - 1];
  },
  // Returns the number of rows/columns the vector has
  dimensions: function () {
    return {
      rows: 1,
      cols: this.elements.length
    };
  },
  // Returns the number of rows in the vector
  rows: function () {
    return 1;
  },
  // Returns the number of columns in the vector
  cols: function () {
    return this.elements.length;
  },
  // Returns the modulus ('length') of the vector
  modulus: function () {
    return Math.sqrt(this.dot(this));
  },
  // Returns true iff the vector is equal to the argument
  eql: function (vector) {
    var n = this.elements.length;
    var V = vector.elements || vector;

    if (n != V.length) {
      return false;
    }

    while (n--) {
      if (Math.abs(this.elements[n] - V[n]) > Sylvester.precision) {
        return false;
      }
    }

    return true;
  },
  // Returns a copy of the vector
  dup: function () {
    return Vector.create(this.elements);
  },
  // Maps the vector to another vector according to the given function
  map: function (fn) {
    var elements = [];
    this.each(function (x, i) {
      elements.push(fn(x, i));
    });
    return Vector.create(elements);
  },
  // Calls the iterator for each element of the vector in turn
  each: function (fn) {
    var n = this.elements.length;

    for (var i = 0; i < n; i++) {
      fn(this.elements[i], i + 1);
    }
  },
  // Returns a new vector created by normalizing the receiver
  toUnitVector: function () {
    var r = this.modulus();

    if (r === 0) {
      return this.dup();
    }

    return this.map(function (x) {
      return x / r;
    });
  },
  // Returns the angle between the vector and the argument (also a vector)
  angleFrom: function (vector) {
    var V = vector.elements || vector;
    var n = this.elements.length,
        k = n,
        i;

    if (n != V.length) {
      return null;
    }

    var dot = 0,
        mod1 = 0,
        mod2 = 0; // Work things out in parallel to save time

    this.each(function (x, i) {
      dot += x * V[i - 1];
      mod1 += x * x;
      mod2 += V[i - 1] * V[i - 1];
    });
    mod1 = Math.sqrt(mod1);
    mod2 = Math.sqrt(mod2);

    if (mod1 * mod2 === 0) {
      return null;
    }

    var theta = dot / (mod1 * mod2);

    if (theta < -1) {
      theta = -1;
    }

    if (theta > 1) {
      theta = 1;
    }

    return Math.acos(theta);
  },
  // Returns true iff the vector is parallel to the argument
  isParallelTo: function (vector) {
    var angle = this.angleFrom(vector);
    return angle === null ? null : angle <= Sylvester.precision;
  },
  // Returns true iff the vector is antiparallel to the argument
  isAntiparallelTo: function (vector) {
    var angle = this.angleFrom(vector);
    return angle === null ? null : Math.abs(angle - Math.PI) <= Sylvester.precision;
  },
  // Returns true iff the vector is perpendicular to the argument
  isPerpendicularTo: function (vector) {
    var dot = this.dot(vector);
    return dot === null ? null : Math.abs(dot) <= Sylvester.precision;
  },
  // Returns the result of adding the argument to the vector
  add: function (value) {
    var V = value.elements || value;
    if (this.elements.length != V.length) return this.map(function (v) {
      return v + value;
    });else return this.map(function (x, i) {
      return x + V[i - 1];
    });
  },
  // Returns the result of subtracting the argument from the vector
  subtract: function (v) {
    if (typeof v == 'number') return this.map(function (k) {
      return k - v;
    });
    var V = v.elements || v;

    if (this.elements.length != V.length) {
      return null;
    }

    return this.map(function (x, i) {
      return x - V[i - 1];
    });
  },
  // Returns the result of multiplying the elements of the vector by the argument
  multiply: function (k) {
    return this.map(function (x) {
      return x * k;
    });
  },
  elementMultiply: function (v) {
    return this.map(function (k, i) {
      return v.e(i) * k;
    });
  },
  sum: function () {
    var sum = 0;
    this.map(function (x) {
      sum += x;
    });
    return sum;
  },
  chomp: function (n) {
    var elements = [];

    for (var i = n; i < this.elements.length; i++) {
      elements.push(this.elements[i]);
    }

    return Vector.create(elements);
  },
  top: function (n) {
    var elements = [];

    for (var i = 0; i < n; i++) {
      elements.push(this.elements[i]);
    }

    return Vector.create(elements);
  },
  augment: function (elements) {
    var newElements = this.elements;

    for (var i = 0; i < elements.length; i++) {
      newElements.push(elements[i]);
    }

    return Vector.create(newElements);
  },
  x: function (k) {
    return this.multiply(k);
  },
  log: function () {
    return Vector.log(this);
  },
  elementDivide: function (vector) {
    return this.map(function (v, i) {
      return v / vector.e(i);
    });
  },
  product: function () {
    var p = 1;
    this.map(function (v) {
      p *= v;
    });
    return p;
  },
  // Returns the scalar product of the vector with the argument
  // Both vectors must have equal dimensionality
  dot: function (vector) {
    var V = vector.elements || vector;
    var i,
        product = 0,
        n = this.elements.length;

    if (n != V.length) {
      return null;
    }

    while (n--) {
      product += this.elements[n] * V[n];
    }

    return product;
  },
  // Returns the vector product of the vector with the argument
  // Both vectors must have dimensionality 3
  cross: function (vector) {
    var B = vector.elements || vector;

    if (this.elements.length != 3 || B.length != 3) {
      return null;
    }

    var A = this.elements;
    return Vector.create([A[1] * B[2] - A[2] * B[1], A[2] * B[0] - A[0] * B[2], A[0] * B[1] - A[1] * B[0]]);
  },
  // Returns the (absolute) largest element of the vector
  max: function () {
    var m = 0,
        i = this.elements.length;

    while (i--) {
      if (Math.abs(this.elements[i]) > Math.abs(m)) {
        m = this.elements[i];
      }
    }

    return m;
  },
  maxIndex: function () {
    var m = 0,
        i = this.elements.length;
    var maxIndex = -1;

    while (i--) {
      if (Math.abs(this.elements[i]) > Math.abs(m)) {
        m = this.elements[i];
        maxIndex = i + 1;
      }
    }

    return maxIndex;
  },
  // Returns the index of the first match found
  indexOf: function (x) {
    var index = null,
        n = this.elements.length;

    for (var i = 0; i < n; i++) {
      if (index === null && this.elements[i] == x) {
        index = i + 1;
      }
    }

    return index;
  },
  // Returns a diagonal matrix with the vector's elements as its diagonal elements
  toDiagonalMatrix: function () {
    return Matrix.Diagonal(this.elements);
  },
  // Returns the result of rounding the elements of the vector
  round: function () {
    return this.map(function (x) {
      return Math.round(x);
    });
  },
  // Transpose a Vector, return a 1xn Matrix
  transpose: function () {
    var rows = this.elements.length;
    var elements = [];

    for (var i = 0; i < rows; i++) {
      elements.push([this.elements[i]]);
    }

    return Matrix.create(elements);
  },
  // Returns a copy of the vector with elements set to the given value if they
  // differ from it by less than Sylvester.precision
  snapTo: function (x) {
    return this.map(function (y) {
      return Math.abs(y - x) <= Sylvester.precision ? x : y;
    });
  },
  // Returns the vector's distance from the argument, when considered as a point in space
  distanceFrom: function (obj) {
    if (obj.anchor || obj.start && obj.end) {
      return obj.distanceFrom(this);
    }

    var V = obj.elements || obj;

    if (V.length != this.elements.length) {
      return null;
    }

    var sum = 0,
        part;
    this.each(function (x, i) {
      part = x - V[i - 1];
      sum += part * part;
    });
    return Math.sqrt(sum);
  },
  // Returns true if the vector is point on the given line
  liesOn: function (line) {
    return line.contains(this);
  },
  // Return true iff the vector is a point in the given plane
  liesIn: function (plane) {
    return plane.contains(this);
  },
  // Rotates the vector about the given object. The object should be a
  // point if the vector is 2D, and a line if it is 3D. Be careful with line directions!
  rotate: function (t, obj) {
    var V,
        R = null,
        x,
        y,
        z;

    if (t.determinant) {
      R = t.elements;
    }

    switch (this.elements.length) {
      case 2:
        V = obj.elements || obj;

        if (V.length != 2) {
          return null;
        }

        if (!R) {
          R = Matrix.Rotation(t).elements;
        }

        x = this.elements[0] - V[0];
        y = this.elements[1] - V[1];
        return Vector.create([V[0] + R[0][0] * x + R[0][1] * y, V[1] + R[1][0] * x + R[1][1] * y]);
        break;

      case 3:
        if (!obj.direction) {
          return null;
        }

        var C = obj.pointClosestTo(this).elements;

        if (!R) {
          R = Matrix.Rotation(t, obj.direction).elements;
        }

        x = this.elements[0] - C[0];
        y = this.elements[1] - C[1];
        z = this.elements[2] - C[2];
        return Vector.create([C[0] + R[0][0] * x + R[0][1] * y + R[0][2] * z, C[1] + R[1][0] * x + R[1][1] * y + R[1][2] * z, C[2] + R[2][0] * x + R[2][1] * y + R[2][2] * z]);
        break;

      default:
        return null;
    }
  },
  // Returns the result of reflecting the point in the given point, line or plane
  reflectionIn: function (obj) {
    if (obj.anchor) {
      // obj is a plane or line
      var P = this.elements.slice();
      var C = obj.pointClosestTo(P).elements;
      return Vector.create([C[0] + (C[0] - P[0]), C[1] + (C[1] - P[1]), C[2] + (C[2] - (P[2] || 0))]);
    } else {
      // obj is a point
      var Q = obj.elements || obj;

      if (this.elements.length != Q.length) {
        return null;
      }

      return this.map(function (x, i) {
        return Q[i - 1] + (Q[i - 1] - x);
      });
    }
  },
  // Utility to make sure vectors are 3D. If they are 2D, a zero z-component is added
  to3D: function () {
    var V = this.dup();

    switch (V.elements.length) {
      case 3:
        break;

      case 2:
        V.elements.push(0);
        break;

      default:
        return null;
    }

    return V;
  },
  // Returns a string representation of the vector
  inspect: function () {
    return '[' + this.elements.join(', ') + ']';
  },
  // Set vector's elements from an array
  setElements: function (els) {
    this.elements = (els.elements || els).slice();
    return this;
  }
}; // Constructor function

Vector.create = function (elements) {
  var V = new Vector();
  return V.setElements(elements);
}; // i, j, k unit vectors


Vector.i = Vector.create([1, 0, 0]);
Vector.j = Vector.create([0, 1, 0]);
Vector.k = Vector.create([0, 0, 1]); // Random vector of size n

Vector.Random = function (n) {
  var elements = [];

  while (n--) {
    elements.push(Math.random());
  }

  return Vector.create(elements);
};

Vector.Fill = function (n, v) {
  var elements = [];

  while (n--) {
    elements.push(v);
  }

  return Vector.create(elements);
}; // Vector filled with zeros


Vector.Zero = function (n) {
  return Vector.Fill(n, 0);
};

Vector.One = function (n) {
  return Vector.Fill(n, 1);
};

Vector.log = function (v) {
  return v.map(function (x) {
    return Math.log(x);
  });
};

module.exports = Vector;
},{"./sylvester":"zevT","./matrix":"NLhy"}],"RaXd":[function(require,module,exports) {
// Copyright (c) 2011, Chris Umbel, James Coglan
// Plane class - depends on Vector. Some methods require Matrix and Line.
var Vector = require('./vector');

var Matrix = require('./matrix');

var Line = require('./line');

var Sylvester = require('./sylvester');

function Plane() {}

Plane.prototype = {
  // Returns true iff the plane occupies the same space as the argument
  eql: function (plane) {
    return this.contains(plane.anchor) && this.isParallelTo(plane);
  },
  // Returns a copy of the plane
  dup: function () {
    return Plane.create(this.anchor, this.normal);
  },
  // Returns the result of translating the plane by the given vector
  translate: function (vector) {
    var V = vector.elements || vector;
    return Plane.create([this.anchor.elements[0] + V[0], this.anchor.elements[1] + V[1], this.anchor.elements[2] + (V[2] || 0)], this.normal);
  },
  // Returns true iff the plane is parallel to the argument. Will return true
  // if the planes are equal, or if you give a line and it lies in the plane.
  isParallelTo: function (obj) {
    var theta;

    if (obj.normal) {
      // obj is a plane
      theta = this.normal.angleFrom(obj.normal);
      return Math.abs(theta) <= Sylvester.precision || Math.abs(Math.PI - theta) <= Sylvester.precision;
    } else if (obj.direction) {
      // obj is a line
      return this.normal.isPerpendicularTo(obj.direction);
    }

    return null;
  },
  // Returns true iff the receiver is perpendicular to the argument
  isPerpendicularTo: function (plane) {
    var theta = this.normal.angleFrom(plane.normal);
    return Math.abs(Math.PI / 2 - theta) <= Sylvester.precision;
  },
  // Returns the plane's distance from the given object (point, line or plane)
  distanceFrom: function (obj) {
    if (this.intersects(obj) || this.contains(obj)) {
      return 0;
    }

    if (obj.anchor) {
      // obj is a plane or line
      var A = this.anchor.elements,
          B = obj.anchor.elements,
          N = this.normal.elements;
      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);
    } else {
      // obj is a point
      var P = obj.elements || obj;
      var A = this.anchor.elements,
          N = this.normal.elements;
      return Math.abs((A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2]);
    }
  },
  // Returns true iff the plane contains the given point or line
  contains: function (obj) {
    if (obj.normal) {
      return null;
    }

    if (obj.direction) {
      return this.contains(obj.anchor) && this.contains(obj.anchor.add(obj.direction));
    } else {
      var P = obj.elements || obj;
      var A = this.anchor.elements,
          N = this.normal.elements;
      var diff = Math.abs(N[0] * (A[0] - P[0]) + N[1] * (A[1] - P[1]) + N[2] * (A[2] - (P[2] || 0)));
      return diff <= Sylvester.precision;
    }
  },
  // Returns true iff the plane has a unique point/line of intersection with the argument
  intersects: function (obj) {
    if (typeof obj.direction == 'undefined' && typeof obj.normal == 'undefined') {
      return null;
    }

    return !this.isParallelTo(obj);
  },
  // Returns the unique intersection with the argument, if one exists. The result
  // will be a vector if a line is supplied, and a line if a plane is supplied.
  intersectionWith: function (obj) {
    if (!this.intersects(obj)) {
      return null;
    }

    if (obj.direction) {
      // obj is a line
      var A = obj.anchor.elements,
          D = obj.direction.elements,
          P = this.anchor.elements,
          N = this.normal.elements;
      var multiplier = (N[0] * (P[0] - A[0]) + N[1] * (P[1] - A[1]) + N[2] * (P[2] - A[2])) / (N[0] * D[0] + N[1] * D[1] + N[2] * D[2]);
      return Vector.create([A[0] + D[0] * multiplier, A[1] + D[1] * multiplier, A[2] + D[2] * multiplier]);
    } else if (obj.normal) {
      // obj is a plane
      var direction = this.normal.cross(obj.normal).toUnitVector(); // To find an anchor point, we find one co-ordinate that has a value
      // of zero somewhere on the intersection, and remember which one we picked

      var N = this.normal.elements,
          A = this.anchor.elements,
          O = obj.normal.elements,
          B = obj.anchor.elements;
      var solver = Matrix.Zero(2, 2),
          i = 0;

      while (solver.isSingular()) {
        i++;
        solver = Matrix.create([[N[i % 3], N[(i + 1) % 3]], [O[i % 3], O[(i + 1) % 3]]]);
      } // Then we solve the simultaneous equations in the remaining dimensions


      var inverse = solver.inverse().elements;
      var x = N[0] * A[0] + N[1] * A[1] + N[2] * A[2];
      var y = O[0] * B[0] + O[1] * B[1] + O[2] * B[2];
      var intersection = [inverse[0][0] * x + inverse[0][1] * y, inverse[1][0] * x + inverse[1][1] * y];
      var anchor = [];

      for (var j = 1; j <= 3; j++) {
        // This formula picks the right element from intersection by
        // cycling depending on which element we set to zero above
        anchor.push(i == j ? 0 : intersection[(j + (5 - i) % 3) % 3]);
      }

      return Line.create(anchor, direction);
    }
  },
  // Returns the point in the plane closest to the given point
  pointClosestTo: function (point) {
    var P = point.elements || point;
    var A = this.anchor.elements,
        N = this.normal.elements;
    var dot = (A[0] - P[0]) * N[0] + (A[1] - P[1]) * N[1] + (A[2] - (P[2] || 0)) * N[2];
    return Vector.create([P[0] + N[0] * dot, P[1] + N[1] * dot, (P[2] || 0) + N[2] * dot]);
  },
  // Returns a copy of the plane, rotated by t radians about the given line
  // See notes on Line#rotate.
  rotate: function (t, line) {
    var R = t.determinant ? t.elements : Matrix.Rotation(t, line.direction).elements;
    var C = line.pointClosestTo(this.anchor).elements;
    var A = this.anchor.elements,
        N = this.normal.elements;
    var C1 = C[0],
        C2 = C[1],
        C3 = C[2],
        A1 = A[0],
        A2 = A[1],
        A3 = A[2];
    var x = A1 - C1,
        y = A2 - C2,
        z = A3 - C3;
    return Plane.create([C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z, C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z, C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z], [R[0][0] * N[0] + R[0][1] * N[1] + R[0][2] * N[2], R[1][0] * N[0] + R[1][1] * N[1] + R[1][2] * N[2], R[2][0] * N[0] + R[2][1] * N[1] + R[2][2] * N[2]]);
  },
  // Returns the reflection of the plane in the given point, line or plane.
  reflectionIn: function (obj) {
    if (obj.normal) {
      // obj is a plane
      var A = this.anchor.elements,
          N = this.normal.elements;
      var A1 = A[0],
          A2 = A[1],
          A3 = A[2],
          N1 = N[0],
          N2 = N[1],
          N3 = N[2];
      var newA = this.anchor.reflectionIn(obj).elements; // Add the plane's normal to its anchor, then mirror that in the other plane

      var AN1 = A1 + N1,
          AN2 = A2 + N2,
          AN3 = A3 + N3;
      var Q = obj.pointClosestTo([AN1, AN2, AN3]).elements;
      var newN = [Q[0] + (Q[0] - AN1) - newA[0], Q[1] + (Q[1] - AN2) - newA[1], Q[2] + (Q[2] - AN3) - newA[2]];
      return Plane.create(newA, newN);
    } else if (obj.direction) {
      // obj is a line
      return this.rotate(Math.PI, obj);
    } else {
      // obj is a point
      var P = obj.elements || obj;
      return Plane.create(this.anchor.reflectionIn([P[0], P[1], P[2] || 0]), this.normal);
    }
  },
  // Sets the anchor point and normal to the plane. If three arguments are specified,
  // the normal is calculated by assuming the three points should lie in the same plane.
  // If only two are sepcified, the second is taken to be the normal. Normal vector is
  // normalised before storage.
  setVectors: function (anchor, v1, v2) {
    anchor = Vector.create(anchor);
    anchor = anchor.to3D();

    if (anchor === null) {
      return null;
    }

    v1 = Vector.create(v1);
    v1 = v1.to3D();

    if (v1 === null) {
      return null;
    }

    if (typeof v2 == 'undefined') {
      v2 = null;
    } else {
      v2 = Vector.create(v2);
      v2 = v2.to3D();

      if (v2 === null) {
        return null;
      }
    }

    var A1 = anchor.elements[0],
        A2 = anchor.elements[1],
        A3 = anchor.elements[2];
    var v11 = v1.elements[0],
        v12 = v1.elements[1],
        v13 = v1.elements[2];
    var normal, mod;

    if (v2 !== null) {
      var v21 = v2.elements[0],
          v22 = v2.elements[1],
          v23 = v2.elements[2];
      normal = Vector.create([(v12 - A2) * (v23 - A3) - (v13 - A3) * (v22 - A2), (v13 - A3) * (v21 - A1) - (v11 - A1) * (v23 - A3), (v11 - A1) * (v22 - A2) - (v12 - A2) * (v21 - A1)]);
      mod = normal.modulus();

      if (mod === 0) {
        return null;
      }

      normal = Vector.create([normal.elements[0] / mod, normal.elements[1] / mod, normal.elements[2] / mod]);
    } else {
      mod = Math.sqrt(v11 * v11 + v12 * v12 + v13 * v13);

      if (mod === 0) {
        return null;
      }

      normal = Vector.create([v1.elements[0] / mod, v1.elements[1] / mod, v1.elements[2] / mod]);
    }

    this.anchor = anchor;
    this.normal = normal;
    return this;
  }
}; // Constructor function

Plane.create = function (anchor, v1, v2) {
  var P = new Plane();
  return P.setVectors(anchor, v1, v2);
}; // X-Y-Z planes


Plane.XY = Plane.create(Vector.Zero(3), Vector.k);
Plane.YZ = Plane.create(Vector.Zero(3), Vector.i);
Plane.ZX = Plane.create(Vector.Zero(3), Vector.j);
Plane.YX = Plane.XY;
Plane.ZY = Plane.YZ;
Plane.XZ = Plane.ZX; // Returns the plane containing the given points (can be arrays as
// well as vectors). If the points are not coplanar, returns null.

Plane.fromPoints = function (points) {
  var np = points.length,
      list = [],
      i,
      P,
      n,
      N,
      A,
      B,
      C,
      D,
      theta,
      prevN,
      totalN = Vector.Zero(3);

  for (i = 0; i < np; i++) {
    P = Vector.create(points[i]).to3D();

    if (P === null) {
      return null;
    }

    list.push(P);
    n = list.length;

    if (n > 2) {
      // Compute plane normal for the latest three points
      A = list[n - 1].elements;
      B = list[n - 2].elements;
      C = list[n - 3].elements;
      N = Vector.create([(A[1] - B[1]) * (C[2] - B[2]) - (A[2] - B[2]) * (C[1] - B[1]), (A[2] - B[2]) * (C[0] - B[0]) - (A[0] - B[0]) * (C[2] - B[2]), (A[0] - B[0]) * (C[1] - B[1]) - (A[1] - B[1]) * (C[0] - B[0])]).toUnitVector();

      if (n > 3) {
        // If the latest normal is not (anti)parallel to the previous one, we've strayed off the plane.
        // This might be a slightly long-winded way of doing things, but we need the sum of all the normals
        // to find which way the plane normal should point so that the points form an anticlockwise list.
        theta = N.angleFrom(prevN);

        if (theta !== null) {
          if (!(Math.abs(theta) <= Sylvester.precision || Math.abs(theta - Math.PI) <= Sylvester.precision)) {
            return null;
          }
        }
      }

      totalN = totalN.add(N);
      prevN = N;
    }
  } // We need to add in the normals at the start and end points, which the above misses out


  A = list[1].elements;
  B = list[0].elements;
  C = list[n - 1].elements;
  D = list[n - 2].elements;
  totalN = totalN.add(Vector.create([(A[1] - B[1]) * (C[2] - B[2]) - (A[2] - B[2]) * (C[1] - B[1]), (A[2] - B[2]) * (C[0] - B[0]) - (A[0] - B[0]) * (C[2] - B[2]), (A[0] - B[0]) * (C[1] - B[1]) - (A[1] - B[1]) * (C[0] - B[0])]).toUnitVector()).add(Vector.create([(B[1] - C[1]) * (D[2] - C[2]) - (B[2] - C[2]) * (D[1] - C[1]), (B[2] - C[2]) * (D[0] - C[0]) - (B[0] - C[0]) * (D[2] - C[2]), (B[0] - C[0]) * (D[1] - C[1]) - (B[1] - C[1]) * (D[0] - C[0])]).toUnitVector());
  return Plane.create(list[0], totalN);
};

module.exports = Plane;
},{"./vector":"zeX0","./matrix":"NLhy","./line":"mYx7","./sylvester":"zevT"}],"mYx7":[function(require,module,exports) {
// Copyright (c) 2011, Chris Umbel, James Coglan
var Vector = require('./vector');

var Matrix = require('./matrix');

var Plane = require('./plane');

var Sylvester = require('./sylvester'); // Line class - depends on Vector, and some methods require Matrix and Plane.


function Line() {}

Line.prototype = {
  // Returns true if the argument occupies the same space as the line
  eql: function (line) {
    return this.isParallelTo(line) && this.contains(line.anchor);
  },
  // Returns a copy of the line
  dup: function () {
    return Line.create(this.anchor, this.direction);
  },
  // Returns the result of translating the line by the given vector/array
  translate: function (vector) {
    var V = vector.elements || vector;
    return Line.create([this.anchor.elements[0] + V[0], this.anchor.elements[1] + V[1], this.anchor.elements[2] + (V[2] || 0)], this.direction);
  },
  // Returns true if the line is parallel to the argument. Here, 'parallel to'
  // means that the argument's direction is either parallel or antiparallel to
  // the line's own direction. A line is parallel to a plane if the two do not
  // have a unique intersection.
  isParallelTo: function (obj) {
    if (obj.normal || obj.start && obj.end) {
      return obj.isParallelTo(this);
    }

    var theta = this.direction.angleFrom(obj.direction);
    return Math.abs(theta) <= Sylvester.precision || Math.abs(theta - Math.PI) <= Sylvester.precision;
  },
  // Returns the line's perpendicular distance from the argument,
  // which can be a point, a line or a plane
  distanceFrom: function (obj) {
    if (obj.normal || obj.start && obj.end) {
      return obj.distanceFrom(this);
    }

    if (obj.direction) {
      // obj is a line
      if (this.isParallelTo(obj)) {
        return this.distanceFrom(obj.anchor);
      }

      var N = this.direction.cross(obj.direction).toUnitVector().elements;
      var A = this.anchor.elements,
          B = obj.anchor.elements;
      return Math.abs((A[0] - B[0]) * N[0] + (A[1] - B[1]) * N[1] + (A[2] - B[2]) * N[2]);
    } else {
      // obj is a point
      var P = obj.elements || obj;
      var A = this.anchor.elements,
          D = this.direction.elements;
      var PA1 = P[0] - A[0],
          PA2 = P[1] - A[1],
          PA3 = (P[2] || 0) - A[2];
      var modPA = Math.sqrt(PA1 * PA1 + PA2 * PA2 + PA3 * PA3);
      if (modPA === 0) return 0; // Assumes direction vector is normalized

      var cosTheta = (PA1 * D[0] + PA2 * D[1] + PA3 * D[2]) / modPA;
      var sin2 = 1 - cosTheta * cosTheta;
      return Math.abs(modPA * Math.sqrt(sin2 < 0 ? 0 : sin2));
    }
  },
  // Returns true iff the argument is a point on the line, or if the argument
  // is a line segment lying within the receiver
  contains: function (obj) {
    if (obj.start && obj.end) {
      return this.contains(obj.start) && this.contains(obj.end);
    }

    var dist = this.distanceFrom(obj);
    return dist !== null && dist <= Sylvester.precision;
  },
  // Returns the distance from the anchor of the given point. Negative values are
  // returned for points that are in the opposite direction to the line's direction from
  // the line's anchor point.
  positionOf: function (point) {
    if (!this.contains(point)) {
      return null;
    }

    var P = point.elements || point;
    var A = this.anchor.elements,
        D = this.direction.elements;
    return (P[0] - A[0]) * D[0] + (P[1] - A[1]) * D[1] + ((P[2] || 0) - A[2]) * D[2];
  },
  // Returns true iff the line lies in the given plane
  liesIn: function (plane) {
    return plane.contains(this);
  },
  // Returns true iff the line has a unique point of intersection with the argument
  intersects: function (obj) {
    if (obj.normal) {
      return obj.intersects(this);
    }

    return !this.isParallelTo(obj) && this.distanceFrom(obj) <= Sylvester.precision;
  },
  // Returns the unique intersection point with the argument, if one exists
  intersectionWith: function (obj) {
    if (obj.normal || obj.start && obj.end) {
      return obj.intersectionWith(this);
    }

    if (!this.intersects(obj)) {
      return null;
    }

    var P = this.anchor.elements,
        X = this.direction.elements,
        Q = obj.anchor.elements,
        Y = obj.direction.elements;
    var X1 = X[0],
        X2 = X[1],
        X3 = X[2],
        Y1 = Y[0],
        Y2 = Y[1],
        Y3 = Y[2];
    var PsubQ1 = P[0] - Q[0],
        PsubQ2 = P[1] - Q[1],
        PsubQ3 = P[2] - Q[2];
    var XdotQsubP = -X1 * PsubQ1 - X2 * PsubQ2 - X3 * PsubQ3;
    var YdotPsubQ = Y1 * PsubQ1 + Y2 * PsubQ2 + Y3 * PsubQ3;
    var XdotX = X1 * X1 + X2 * X2 + X3 * X3;
    var YdotY = Y1 * Y1 + Y2 * Y2 + Y3 * Y3;
    var XdotY = X1 * Y1 + X2 * Y2 + X3 * Y3;
    var k = (XdotQsubP * YdotY / XdotX + XdotY * YdotPsubQ) / (YdotY - XdotY * XdotY);
    return Vector.create([P[0] + k * X1, P[1] + k * X2, P[2] + k * X3]);
  },
  // Returns the point on the line that is closest to the given point or line/line segment
  pointClosestTo: function (obj) {
    if (obj.start && obj.end) {
      // obj is a line segment
      var P = obj.pointClosestTo(this);
      return P === null ? null : this.pointClosestTo(P);
    } else if (obj.direction) {
      // obj is a line
      if (this.intersects(obj)) {
        return this.intersectionWith(obj);
      }

      if (this.isParallelTo(obj)) {
        return null;
      }

      var D = this.direction.elements,
          E = obj.direction.elements;
      var D1 = D[0],
          D2 = D[1],
          D3 = D[2],
          E1 = E[0],
          E2 = E[1],
          E3 = E[2]; // Create plane containing obj and the shared normal and intersect this with it
      // Thank you: http://www.cgafaq.info/wiki/Line-line_distance

      var x = D3 * E1 - D1 * E3,
          y = D1 * E2 - D2 * E1,
          z = D2 * E3 - D3 * E2;
      var N = [x * E3 - y * E2, y * E1 - z * E3, z * E2 - x * E1];
      var P = Plane.create(obj.anchor, N);
      return P.intersectionWith(this);
    } else {
      // obj is a point
      var P = obj.elements || obj;

      if (this.contains(P)) {
        return Vector.create(P);
      }

      var A = this.anchor.elements,
          D = this.direction.elements;
      var D1 = D[0],
          D2 = D[1],
          D3 = D[2],
          A1 = A[0],
          A2 = A[1],
          A3 = A[2];
      var x = D1 * (P[1] - A2) - D2 * (P[0] - A1),
          y = D2 * ((P[2] || 0) - A3) - D3 * (P[1] - A2),
          z = D3 * (P[0] - A1) - D1 * ((P[2] || 0) - A3);
      var V = Vector.create([D2 * x - D3 * z, D3 * y - D1 * x, D1 * z - D2 * y]);
      var k = this.distanceFrom(P) / V.modulus();
      return Vector.create([P[0] + V.elements[0] * k, P[1] + V.elements[1] * k, (P[2] || 0) + V.elements[2] * k]);
    }
  },
  // Returns a copy of the line rotated by t radians about the given line. Works by
  // finding the argument's closest point to this line's anchor point (call this C) and
  // rotating the anchor about C. Also rotates the line's direction about the argument's.
  // Be careful with this - the rotation axis' direction affects the outcome!
  rotate: function (t, line) {
    // If we're working in 2D
    if (typeof line.direction == 'undefined') {
      line = Line.create(line.to3D(), Vector.k);
    }

    var R = Matrix.Rotation(t, line.direction).elements;
    var C = line.pointClosestTo(this.anchor).elements;
    var A = this.anchor.elements,
        D = this.direction.elements;
    var C1 = C[0],
        C2 = C[1],
        C3 = C[2],
        A1 = A[0],
        A2 = A[1],
        A3 = A[2];
    var x = A1 - C1,
        y = A2 - C2,
        z = A3 - C3;
    return Line.create([C1 + R[0][0] * x + R[0][1] * y + R[0][2] * z, C2 + R[1][0] * x + R[1][1] * y + R[1][2] * z, C3 + R[2][0] * x + R[2][1] * y + R[2][2] * z], [R[0][0] * D[0] + R[0][1] * D[1] + R[0][2] * D[2], R[1][0] * D[0] + R[1][1] * D[1] + R[1][2] * D[2], R[2][0] * D[0] + R[2][1] * D[1] + R[2][2] * D[2]]);
  },
  // Returns a copy of the line with its direction vector reversed.
  // Useful when using lines for rotations.
  reverse: function () {
    return Line.create(this.anchor, this.direction.x(-1));
  },
  // Returns the line's reflection in the given point or line
  reflectionIn: function (obj) {
    if (obj.normal) {
      // obj is a plane
      var A = this.anchor.elements,
          D = this.direction.elements;
      var A1 = A[0],
          A2 = A[1],
          A3 = A[2],
          D1 = D[0],
          D2 = D[1],
          D3 = D[2];
      var newA = this.anchor.reflectionIn(obj).elements; // Add the line's direction vector to its anchor, then mirror that in the plane

      var AD1 = A1 + D1,
          AD2 = A2 + D2,
          AD3 = A3 + D3;
      var Q = obj.pointClosestTo([AD1, AD2, AD3]).elements;
      var newD = [Q[0] + (Q[0] - AD1) - newA[0], Q[1] + (Q[1] - AD2) - newA[1], Q[2] + (Q[2] - AD3) - newA[2]];
      return Line.create(newA, newD);
    } else if (obj.direction) {
      // obj is a line - reflection obtained by rotating PI radians about obj
      return this.rotate(Math.PI, obj);
    } else {
      // obj is a point - just reflect the line's anchor in it
      var P = obj.elements || obj;
      return Line.create(this.anchor.reflectionIn([P[0], P[1], P[2] || 0]), this.direction);
    }
  },
  // Set the line's anchor point and direction.
  setVectors: function (anchor, direction) {
    // Need to do this so that line's properties are not
    // references to the arguments passed in
    anchor = Vector.create(anchor);
    direction = Vector.create(direction);

    if (anchor.elements.length == 2) {
      anchor.elements.push(0);
    }

    if (direction.elements.length == 2) {
      direction.elements.push(0);
    }

    if (anchor.elements.length > 3 || direction.elements.length > 3) {
      return null;
    }

    var mod = direction.modulus();

    if (mod === 0) {
      return null;
    }

    this.anchor = anchor;
    this.direction = Vector.create([direction.elements[0] / mod, direction.elements[1] / mod, direction.elements[2] / mod]);
    return this;
  }
}; // Constructor function

Line.create = function (anchor, direction) {
  var L = new Line();
  return L.setVectors(anchor, direction);
}; // Axes


Line.X = Line.create(Vector.Zero(3), Vector.i);
Line.Y = Line.create(Vector.Zero(3), Vector.j);
Line.Z = Line.create(Vector.Zero(3), Vector.k);
module.exports = Line;
},{"./vector":"zeX0","./matrix":"NLhy","./plane":"RaXd","./sylvester":"zevT"}],"kTGp":[function(require,module,exports) {
// Copyright (c) 2011, Chris Umbel, James Coglan
// Line.Segment class - depends on Line and its dependencies.
var Line = require('./line');

var Vector = require('./vector');

Line.Segment = function () {};

Line.Segment.prototype = {
  // Returns true iff the line segment is equal to the argument
  eql: function (segment) {
    return this.start.eql(segment.start) && this.end.eql(segment.end) || this.start.eql(segment.end) && this.end.eql(segment.start);
  },
  // Returns a copy of the line segment
  dup: function () {
    return Line.Segment.create(this.start, this.end);
  },
  // Returns the length of the line segment
  length: function () {
    var A = this.start.elements,
        B = this.end.elements;
    var C1 = B[0] - A[0],
        C2 = B[1] - A[1],
        C3 = B[2] - A[2];
    return Math.sqrt(C1 * C1 + C2 * C2 + C3 * C3);
  },
  // Returns the line segment as a vector equal to its
  // end point relative to its endpoint
  toVector: function () {
    var A = this.start.elements,
        B = this.end.elements;
    return Vector.create([B[0] - A[0], B[1] - A[1], B[2] - A[2]]);
  },
  // Returns the segment's midpoint as a vector
  midpoint: function () {
    var A = this.start.elements,
        B = this.end.elements;
    return Vector.create([(B[0] + A[0]) / 2, (B[1] + A[1]) / 2, (B[2] + A[2]) / 2]);
  },
  // Returns the plane that bisects the segment
  bisectingPlane: function () {
    return Plane.create(this.midpoint(), this.toVector());
  },
  // Returns the result of translating the line by the given vector/array
  translate: function (vector) {
    var V = vector.elements || vector;
    var S = this.start.elements,
        E = this.end.elements;
    return Line.Segment.create([S[0] + V[0], S[1] + V[1], S[2] + (V[2] || 0)], [E[0] + V[0], E[1] + V[1], E[2] + (V[2] || 0)]);
  },
  // Returns true iff the line segment is parallel to the argument. It simply forwards
  // the method call onto its line property.
  isParallelTo: function (obj) {
    return this.line.isParallelTo(obj);
  },
  // Returns the distance between the argument and the line segment's closest point to the argument
  distanceFrom: function (obj) {
    var P = this.pointClosestTo(obj);
    return P === null ? null : P.distanceFrom(obj);
  },
  // Returns true iff the given point lies on the segment
  contains: function (obj) {
    if (obj.start && obj.end) {
      return this.contains(obj.start) && this.contains(obj.end);
    }

    var P = (obj.elements || obj).slice();

    if (P.length == 2) {
      P.push(0);
    }

    if (this.start.eql(P)) {
      return true;
    }

    var S = this.start.elements;
    var V = Vector.create([S[0] - P[0], S[1] - P[1], S[2] - (P[2] || 0)]);
    var vect = this.toVector();
    return V.isAntiparallelTo(vect) && V.modulus() <= vect.modulus();
  },
  // Returns true iff the line segment intersects the argument
  intersects: function (obj) {
    return this.intersectionWith(obj) !== null;
  },
  // Returns the unique point of intersection with the argument
  intersectionWith: function (obj) {
    if (!this.line.intersects(obj)) {
      return null;
    }

    var P = this.line.intersectionWith(obj);
    return this.contains(P) ? P : null;
  },
  // Returns the point on the line segment closest to the given object
  pointClosestTo: function (obj) {
    if (obj.normal) {
      // obj is a plane
      var V = this.line.intersectionWith(obj);

      if (V === null) {
        return null;
      }

      return this.pointClosestTo(V);
    } else {
      // obj is a line (segment) or point
      var P = this.line.pointClosestTo(obj);

      if (P === null) {
        return null;
      }

      if (this.contains(P)) {
        return P;
      }

      return (this.line.positionOf(P) < 0 ? this.start : this.end).dup();
    }
  },
  // Set the start and end-points of the segment
  setPoints: function (startPoint, endPoint) {
    startPoint = Vector.create(startPoint).to3D();
    endPoint = Vector.create(endPoint).to3D();

    if (startPoint === null || endPoint === null) {
      return null;
    }

    this.line = Line.create(startPoint, endPoint.subtract(startPoint));
    this.start = startPoint;
    this.end = endPoint;
    return this;
  }
}; // Constructor function

Line.Segment.create = function (v1, v2) {
  var S = new Line.Segment();
  return S.setPoints(v1, v2);
};

module.exports = Line.Segment;
},{"./line":"mYx7","./vector":"zeX0"}],"VTAy":[function(require,module,exports) {
var global = arguments[3];
// Copyright (c) 2011, Chris Umbel
exports.Vector = require('./vector');
global.$V = exports.Vector.create;
exports.Matrix = require('./matrix');
global.$M = exports.Matrix.create;
exports.Line = require('./line');
global.$L = exports.Line.create;
exports.Plane = require('./plane');
global.$P = exports.Plane.create;
exports.Line.Segment = require('./line.segment');
exports.Sylvester = require('./sylvester');
},{"./vector":"zeX0","./matrix":"NLhy","./line":"mYx7","./plane":"RaXd","./line.segment":"kTGp","./sylvester":"zevT"}],"JMda":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var util = require('util'),
    Classifier = require('./classifier');

var sylvester = require('sylvester'),
    Matrix = sylvester.Matrix,
    Vector = sylvester.Vector;

function sigmoid(z) {
  return 1 / (1 + Math.exp(0 - z));
}

function hypothesis(theta, Observations) {
  return Observations.x(theta).map(sigmoid);
}

function cost(theta, Examples, classifications) {
  var hypothesisResult = hypothesis(theta, Examples);
  var ones = Vector.One(Examples.rows());
  var cost_1 = Vector.Zero(Examples.rows()).subtract(classifications).elementMultiply(hypothesisResult.log());
  var cost_0 = ones.subtract(classifications).elementMultiply(ones.subtract(hypothesisResult).log());
  return 1 / Examples.rows() * cost_1.subtract(cost_0).sum();
}

function descendGradient(theta, Examples, classifications) {
  var maxIt = 500 * Examples.rows();
  var last;
  var current;
  var learningRate = 3;
  var learningRateFound = false;
  Examples = Matrix.One(Examples.rows(), 1).augment(Examples);
  theta = theta.augment([0]);

  while (!learningRateFound && learningRate !== 0) {
    var i = 0;
    last = null;

    while (true) {
      var hypothesisResult = hypothesis(theta, Examples);
      theta = theta.subtract(Examples.transpose().x(hypothesisResult.subtract(classifications)).x(1 / Examples.rows()).x(learningRate));
      current = cost(theta, Examples, classifications);
      i++;

      if (last) {
        if (current < last) learningRateFound = true;else break;
        if (last - current < 0.0001) break;
      }

      if (i >= maxIt) {
        throw 'unable to find minimum';
      }

      last = current;
    }

    learningRate /= 3;
  }

  return theta.chomp(1);
}

var LogisticRegressionClassifier = function () {
  Classifier.call(this);
  this.examples = {};
  this.features = [];
  this.featurePositions = {};
  this.maxFeaturePosition = 0;
  this.classifications = [];
  this.exampleCount = 0;
};

util.inherits(LogisticRegressionClassifier, Classifier);

function createClassifications() {
  var classifications = [];

  for (var i = 0; i < this.exampleCount; i++) {
    var classification = [];

    for (var _ in this.examples) {
      classification.push(0);
    }

    classifications.push(classification);
  }

  return classifications;
}

function computeThetas(Examples, Classifications) {
  this.theta = []; // each class will have it's own theta.

  var zero = function () {
    return 0;
  };

  for (var i = 1; i <= this.classifications.length; i++) {
    var theta = Examples.row(1).map(zero);
    this.theta.push(descendGradient(theta, Examples, Classifications.column(i)));
  }
}

function train() {
  var examples = [];
  var classifications = this.createClassifications();
  var d = 0,
      c = 0;

  for (var classification in this.examples) {
    for (var i = 0; i < this.examples[classification].length; i++) {
      var doc = this.examples[classification][i];
      var example = doc;
      examples.push(example);
      classifications[d][c] = 1;
      d++;
    }

    c++;
  }

  this.computeThetas($M(examples), $M(classifications));
}

function addExample(data, classification) {
  if (!this.examples[classification]) {
    this.examples[classification] = [];
    this.classifications.push(classification);
  }

  this.examples[classification].push(data);
  this.exampleCount++;
}

function getClassifications(observation) {
  observation = $V(observation);
  var classifications = [];

  for (var i = 0; i < this.theta.length; i++) {
    classifications.push({
      label: this.classifications[i],
      value: sigmoid(observation.dot(this.theta[i]))
    });
  }

  return classifications.sort(function (x, y) {
    return y.value - x.value;
  });
}

function restore(classifier) {
  classifier = Classifier.restore(classifier);
  classifier.__proto__ = LogisticRegressionClassifier.prototype;
  return classifier;
}

LogisticRegressionClassifier.prototype.addExample = addExample;
LogisticRegressionClassifier.prototype.restore = restore;
LogisticRegressionClassifier.prototype.train = train;
LogisticRegressionClassifier.prototype.createClassifications = createClassifications;
LogisticRegressionClassifier.prototype.computeThetas = computeThetas;
LogisticRegressionClassifier.prototype.getClassifications = getClassifications;
LogisticRegressionClassifier.restore = restore;
module.exports = LogisticRegressionClassifier;
},{"util":"nq70","./classifier":"vMt0","sylvester":"VTAy"}],"Yvyt":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var Sylvester = require('sylvester'),
    Matrix = Sylvester.Matrix,
    Vector = Sylvester.Vector;

function KMeans(Observations) {
  if (!Observations.elements) Observations = $M(Observations);
  this.Observations = Observations;
} // create an initial centroid matrix with initial values between
// 0 and the max of feature data X.


function createCentroids(k) {
  var Centroid = [];
  var maxes = this.Observations.maxColumns(); //console.log(maxes);

  for (var i = 1; i <= k; i++) {
    var centroid = [];

    for (var j = 1; j <= this.Observations.cols(); j++) {
      centroid.push(Math.random() * maxes.e(j));
    }

    Centroid.push(centroid);
  } //console.log(centroid)


  return $M(Centroid);
} // get the euclidian distance between the feature data X and
// a given centroid matrix C.


function distanceFrom(Centroids) {
  var distances = [];

  for (var i = 1; i <= this.Observations.rows(); i++) {
    var distance = [];

    for (var j = 1; j <= Centroids.rows(); j++) {
      distance.push(this.Observations.row(i).distanceFrom(Centroids.row(j)));
    }

    distances.push(distance);
  }

  return $M(distances);
} // categorize the feature data X into k clusters. return a vector
// containing the results.


function cluster(k) {
  var Centroids = this.createCentroids(k);
  var LastDistances = Matrix.Zero(this.Observations.rows(), this.Observations.cols());
  var Distances = this.distanceFrom(Centroids);
  var Groups;

  while (!LastDistances.eql(Distances)) {
    Groups = Distances.minColumnIndexes();
    LastDistances = Distances;
    var newCentroids = [];

    for (var i = 1; i <= Centroids.rows(); i++) {
      var centroid = [];

      for (var j = 1; j <= Centroids.cols(); j++) {
        var sum = 0;
        var count = 0;

        for (var l = 1; l <= this.Observations.rows(); l++) {
          if (Groups.e(l) == i) {
            count++;
            sum += this.Observations.e(l, j);
          }
        }

        centroid.push(sum / count);
      }

      newCentroids.push(centroid);
    }

    Centroids = $M(newCentroids);
    Distances = this.distanceFrom(Centroids);
  }

  return Groups;
}

KMeans.prototype.createCentroids = createCentroids;
KMeans.prototype.distanceFrom = distanceFrom;
KMeans.prototype.cluster = cluster;
module.exports = KMeans;
},{"sylvester":"VTAy"}],"ik60":[function(require,module,exports) {
exports.BayesClassifier = require('./classifier/bayes_classifier');
exports.LogisticRegressionClassifier = require('./classifier/logistic_regression_classifier');
exports.KMeans = require('./clusterer/kmeans');
},{"./classifier/bayes_classifier":"pa02","./classifier/logistic_regression_classifier":"JMda","./clusterer/kmeans":"Yvyt"}],"kd1i":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var util = require('util'),
    Classifier = require('./classifier'),
    ApparatusBayesClassifier = require('apparatus').BayesClassifier;

var BayesClassifier = function (stemmer, smoothing) {
  var abc = new ApparatusBayesClassifier();

  if (smoothing && isFinite(smoothing)) {
    abc = new ApparatusBayesClassifier(smoothing);
  }

  Classifier.call(this, abc, stemmer);
};

util.inherits(BayesClassifier, Classifier);

function restore(classifier, stemmer) {
  classifier = Classifier.restore(classifier, stemmer);
  classifier.__proto__ = BayesClassifier.prototype;
  classifier.classifier = ApparatusBayesClassifier.restore(classifier.classifier);
  return classifier;
}

function load(filename, stemmer, callback) {
  Classifier.load(filename, function (err, classifier) {
    if (err) {
      return callback(err);
    } else {
      callback(err, restore(classifier, stemmer));
    }
  });
}

BayesClassifier.restore = restore;
BayesClassifier.load = load;
module.exports = BayesClassifier;
},{"util":"nq70","./classifier":"X6da","apparatus":"ik60"}],"a582":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var util = require('util'),
    Classifier = require('./classifier'),
    ApparatusLogisticRegressionClassifier = require('apparatus').LogisticRegressionClassifier;

var LogisticRegressionClassifier = function (stemmer) {
  Classifier.call(this, new ApparatusLogisticRegressionClassifier(), stemmer);
};

util.inherits(LogisticRegressionClassifier, Classifier);

function restore(classifier, stemmer) {
  classifier = Classifier.restore(classifier, stemmer);
  classifier.__proto__ = LogisticRegressionClassifier.prototype;
  classifier.classifier = ApparatusLogisticRegressionClassifier.restore(classifier.classifier);
  return classifier;
}

function load(filename, stemmer, callback) {
  Classifier.load(filename, function (err, classifier) {
    if (err) {
      callback(err);
    } else {
      callback(err, restore(classifier, stemmer));
    }
  });
}

function train() {
  // we need to reset the traning state because logistic regression
  // needs its matricies to have their widths synced, etc.
  this.lastAdded = 0;
  this.classifier = new ApparatusLogisticRegressionClassifier();
  Classifier.prototype.train.call(this);
}

LogisticRegressionClassifier.prototype.train = train;
LogisticRegressionClassifier.restore = restore;
LogisticRegressionClassifier.load = load;
module.exports = LogisticRegressionClassifier;
},{"util":"nq70","./classifier":"X6da","apparatus":"ik60"}],"HTtH":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var TenseInflector = function () {};

TenseInflector.prototype.addSingular = function (pattern, replacement) {
  this.customSingularForms.push([pattern, replacement]);
};

TenseInflector.prototype.addPlural = function (pattern, replacement) {
  this.customPluralForms.push([pattern, replacement]);
};

TenseInflector.prototype.ize = function (token, formSet, customForms) {
  var restoreCase = this.restoreCase(token);
  return restoreCase(this.izeRegExps(token, customForms) || this.izeAbiguous(token) || this.izeRegulars(token, formSet) || this.izeRegExps(token, formSet.regularForms) || token);
};

TenseInflector.prototype.izeAbiguous = function (token) {
  if (this.ambiguous.indexOf(token.toLowerCase()) > -1) return token.toLowerCase();
  return false;
};

TenseInflector.prototype.pluralize = function (token) {
  return this.ize(token, this.pluralForms, this.customPluralForms);
};

TenseInflector.prototype.singularize = function (token) {
  return this.ize(token, this.singularForms, this.customSingularForms);
};

var uppercaseify = function (token) {
  return token.toUpperCase();
};

var capitalize = function (token) {
  return token[0].toUpperCase() + token.slice(1);
};

var lowercaseify = function (token) {
  return token.toLowerCase();
};

TenseInflector.prototype.restoreCase = function (token) {
  if (token[0] === token[0].toUpperCase()) {
    if (token[1] && token[1] === token[1].toLowerCase()) {
      return capitalize;
    } else {
      return uppercaseify;
    }
  } else {
    return lowercaseify;
  }
};

TenseInflector.prototype.izeRegulars = function (token, formSet) {
  token = token.toLowerCase();
  if (formSet.irregularForms.hasOwnProperty(token) && formSet.irregularForms[token]) return formSet.irregularForms[token];
  return false;
};

TenseInflector.prototype.addForm = function (singularTable, pluralTable, singular, plural) {
  singular = singular.toLowerCase();
  plural = plural.toLowerCase();
  pluralTable[singular] = plural;
  singularTable[plural] = singular;
};

TenseInflector.prototype.addIrregular = function (singular, plural) {
  this.addForm(this.singularForms.irregularForms, this.pluralForms.irregularForms, singular, plural);
};

TenseInflector.prototype.izeRegExps = function (token, forms) {
  var i, form;

  for (i = 0; i < forms.length; i++) {
    form = forms[i];
    if (token.match(form[0])) return token.replace(form[0], form[1]);
  }

  return false;
};

module.exports = TenseInflector;
},{}],"wmD9":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var FormSet = function () {
  this.regularForms = [];
  this.irregularForms = {};
};

module.exports = FormSet;
},{}],"cxDQ":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var SingularPluralInflector = require('./singular_plural_inflector'),
    util = require('util'),
    FormSet = require('./form_set');

function attach() {
  var inflector = this;

  String.prototype.singularizeNoun = function () {
    return inflector.singularize(this);
  };

  String.prototype.pluralizeNoun = function () {
    return inflector.pluralize(this);
  };
}

var NounInflector = function () {
  this.ambiguous = ['bison', 'bream', 'carp', 'chassis', 'christmas', 'cod', 'corps', 'debris', 'deer', 'diabetes', 'equipment', 'elk', 'fish', 'flounder', 'gallows', 'graffiti', 'headquarters', 'herpes', 'highjinks', 'homework', 'information', 'mackerel', 'mews', 'money', 'news', 'rice', 'rabies', 'salmon', 'series', 'sheep', 'shrimp', 'species', 'swine', 'trout', 'tuna', 'whiting', 'wildebeest'];
  this.customPluralForms = [];
  this.customSingularForms = [];
  this.singularForms = new FormSet();
  this.pluralForms = new FormSet();
  this.attach = attach;
  this.addIrregular("child", "children");
  this.addIrregular("man", "men");
  this.addIrregular("person", "people");
  this.addIrregular("sex", "sexes");
  this.addIrregular("mouse", "mice");
  this.addIrregular("ox", "oxen");
  this.addIrregular("foot", "feet");
  this.addIrregular("tooth", "teeth");
  this.addIrregular("goose", "geese");
  this.addIrregular("ephemeris", "ephemerides");
  this.addIrregular("cloth", "clothes");
  this.addIrregular("hero", "heroes");
  this.addIrregular("torso", "torsi"); // see if it is possible to unify the creation of both the singular and
  // plural regexes or maybe even just have one list. with a complete list
  // of rules it may only be possible for some regular forms, but worth a shot

  this.pluralForms.regularForms.push([/([aeiou]y)$/i, '$1s']);
  this.pluralForms.regularForms.push([/y$/i, 'ies']);
  this.pluralForms.regularForms.push([/ife$/i, 'ives']);
  this.pluralForms.regularForms.push([/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae']);
  this.pluralForms.regularForms.push([/(octop|vir|radi|nucle|fung|cact|stimul|alumn|calcul|hippopotam|macrofung|phoet|syllab|troph)us$/i, '$1i']);
  this.pluralForms.regularForms.push([/(buffal|tomat|tornad)o$/i, '$1oes']);
  this.pluralForms.regularForms.push([/(sis)$/i, 'ses']);
  this.pluralForms.regularForms.push([/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices']);
  this.pluralForms.regularForms.push([/sses$/i, 'sses']);
  this.pluralForms.regularForms.push([/(x|ch|ss|sh|s|z)$/i, '$1es']);
  this.pluralForms.regularForms.push([/^(?!talis|.*hu)(.*)man$/i, '$1men']);
  this.pluralForms.regularForms.push([/(.*)/i, '$1s']);
  this.singularForms.regularForms.push([/([^v])ies$/i, '$1y']);
  this.singularForms.regularForms.push([/ives$/i, 'ife']);
  this.singularForms.regularForms.push([/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a']);
  this.singularForms.regularForms.push([/(octop|vir|radi|nucle|fung|cact|stimul|alumn|calcul|hippopotam|macrofung|phoet|syllab|troph)(i)$/i, '$1us']);
  this.singularForms.regularForms.push([/(buffal|tomat|tornad)(oes)$/i, '$1o']);
  this.singularForms.regularForms.push([/(analy|naly|synop|parenthe|diagno|the)ses$/i, '$1sis']);
  this.singularForms.regularForms.push([/(vert|ind|cort)(ices)$/i, '$1ex']); // our pluralizer won''t cause this form of appendix (appendicies)
  // but we should handle it

  this.singularForms.regularForms.push([/(matr|append)(ices)$/i, '$1ix']);
  this.singularForms.regularForms.push([/(x|ch|ss|sh|s|z)es$/i, '$1']);
  this.singularForms.regularForms.push([/men$/i, 'man']);
  this.singularForms.regularForms.push([/ss$/i, 'ss']);
  this.singularForms.regularForms.push([/s$/i, '']);

  this.pluralize = function (token) {
    return this.ize(token, this.pluralForms, this.customPluralForms);
  };

  this.singularize = function (token) {
    return this.ize(token, this.singularForms, this.customSingularForms);
  };
};

util.inherits(NounInflector, SingularPluralInflector);
module.exports = NounInflector;
},{"./singular_plural_inflector":"HTtH","util":"nq70","./form_set":"wmD9"}],"dbaX":[function(require,module,exports) {
/*
 Copyright (c) 2012, Guillaume Marty

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * A noun inflector for French.
 * Compiled from:
 * \@see http://fr.wiktionary.org/wiki/Annexe:Pluriels_irr%C3%A9guliers_en_fran%C3%A7ais
 * \@see http://fr.wikipedia.org/wiki/Pluriels_irr%C3%A9guliers_en_fran%C3%A7ais
 *
 * \@todo Take compounded noun into account (eaux-fortes, pique-nique...).
 * \@todo General note: French also requires AdjectiveInflector (femininize...).
 */
var SingularPluralInflector = require('../singular_plural_inflector'),
    util = require('util'),
    FormSet = require('../form_set');

function attach() {
  var inflector = this;

  String.prototype.singularizeNoun = function () {
    return inflector.singularize(this);
  };

  String.prototype.pluralizeNoun = function () {
    return inflector.pluralize(this);
  };
}
/**
 * @constructor
 */


var NounInflector = function () {
  // Ambiguous a.k.a. invariant.
  // \@todo Expand this list to be as comprehensive as possible.
  this.ambiguous = [// Nouns ending by -s
  'à-peu-près', 'à-propos', 'abattis', 'abcès', 'abois', 'abribus', 'abus', 'accès', 'acquis', 'adénovirus', 'adonis', 'ados', 'agrès', 'aguets', 'ailleurs', 'ais', 'albatros', 'albinos', 'alias', 'aloès', 'amaryllis', 'amas', 'ampélopsis', 'ananas', 'anchois', 'angélus', 'anis', 'anticorps', 'antihéros', 'antirides', 'anus', 'appas', 'appentis', 'appui-bras', 'appuie-bras', 'arcanes', 'argus', 'arrérages', 'arrière-pays', 'as', 'ascaris', 'asparagus', 'atlas', 'atours', 'aurochs', 'autobus', 'autofocus', 'avant-bras', 'avant-corps', 'avant-propos', 'avers', 'avis', 'axis', 'barbouillis', 'bas', 'beaujolais', 'beaux-arts', 'biais', 'bibliobus', 'biceps', 'bicross', 'bien-fonds', 'bloc-notes', 'blockhaus', 'blocus', 'blues', 'bois', 'bonus', 'bout-dehors', 'bouts-rimés', 'branle-bas', 'bras', 'brebis', 'bris', 'brise-lames', 'brise-mottes', 'brûlis', 'buis', 'burnous', 'bus', 'business', 'cabas', 'cacatoès', 'cacatois', 'cactus', 'cadenas', 'cafouillis', 'caillebotis', 'calvados', 'cambouis', 'campus', 'canevas', 'cannabis', 'carquois', 'cas', 'casse-noisettes', 'casse-pieds', 'cassis', 'caucus', 'cens', 'cervelas', 'chablis', 'chamois', 'chaos', 'chas', 'chasselas', 'châssis', 'chatouillis', 'chauffe-assiettes', 'chauve-souris', 'chorus', 'choucas', 'circoncis', 'cirrus', 'clafoutis', 'clapotis', 'cliquetis', 'clos', 'cochylis', 'colis', 'coloris', 'commis', 'compas', 'compromis', 'compte-chèques', 'compte-gouttes', 'compte-tours', 'concours', 'confins', 'congrès', 'consensus', 'contrepoids', 'contresens', 'contretemps', 'corn flakes', 'corps', 'corps-à-corps', 'corpus', 'cosinus', 'cosmos', 'coulis', 'coupe-ongles', 'cours', 'court-jus', 'couscous', 'coutelas', 'crocus', 'croquis', 'cross', 'cubitus', 'cumulus', 'cure-dents', 'cure-ongles', 'cure-pipes', 'cursus', 'cyclo-cross', 'cyprès', 'dais', 'damas', 'débarras', 'débours', 'débris', 'décès', 'dedans', 'dehors', 'delirium tremens', 'demi-gros', 'dépens', 'dessous', 'dessus', 'détritus', 'deux-mâts', 'deux-pièces', 'deux-points', 'deux-roues', 'deux-temps', 'dévers', 'devis', 'diplodocus', 'discours', 'dos', 'ébats', 'éboulis', 'échalas', 'edelweiss', 'élaeis', 'éleis', 'éléphantiasis', 'embarras', 'empois', 'en-cas', 'encens', 'enclos', 'endos', 'engrais', 'entrelacs', 'entremets', 'envers', 'épluche-légumes', 'ers', 'espace-temps', 'essuie-mains', 'eucalyptus', 'ex-libris', 'excès', 'express', 'extrados', 'faciès', 'fait-divers', 'fatras', 'faux-sens', 'favoris', 'ficus', 'fier-à-bras', 'finnois', 'florès', 'focus', 'fœtus', 'fois', 'forceps', 'fouillis', 'fracas', 'frais', 'français', 'franglais', 'frimas', 'friselis', 'frisottis', 'froncis', 'frottis', 'fucus', 'gâchis', 'galetas', 'galimatias', 'garde-à-vous', 'garde-corps', 'gargouillis', 'gars', 'gâte-bois', 'gazouillis', 'génois', 'gibus', 'glacis', 'glas', 'gneiss', 'gobe-mouches', 'grès', 'gribouillis', 'guet-apens', 'habeas corpus', 'hachis', 'haras', 'hardes', 'harnais', 'haut-le-corps', 'hautbois', 'herbe-aux-chats', 'héros', 'herpès', 'hiatus', 'hibiscus', 'hors-concours', 'hors-pistes', 'hourdis', 'huis-clos', 'humérus', 'humus', 'ibis', 'iléus', 'indique-fuites', 'infarctus', 'inlandsis', 'insuccès', 'intercours', 'intrados', 'intrus', 'iris', 'isatis', 'jais', 'jars', 'jeans', 'jeuconcours', 'judas', 'juliénas', 'jus', 'justaucorps', 'kakatoès', 'kermès', 'kriss', 'lacis', 'laïus', 'lambris', 'lapis', 'laps', 'lapsus', 'laquais', 'las', 'lattis', 'lave-mains', 'lavis', 'lèche-bottes', 'lèche-vitrines', 'legs', 'lias', 'liégeois', 'lilas', 'lis', 'lœss', 'logis', 'loris', 'lotus', 'louis', 'lupus', 'lys', 'mâchicoulis', 'madras', 'maïs', 'malappris', 'malus', 'mânes', 'maquis', 'marais', 'maroilles', 'marquis', 'mas', 'mass-médias', 'matelas', 'matois', 'médius', 'mépris', 'mérinos', 'mess', 'mets', 'mi-bas', 'micro-ondes', 'mille-pattes', 'millepertuis', 'minibus', 'minois', 'minus', 'mirabilis', 'mois', 'monocorps', 'monte-plats', 'mors', 'motocross', 'mots-croisés', 'motus', 'mouchetis', 'mucus', 'myosotis', 'nævus', 'négus', 'niais', 'nimbo-stratus', 'nimbus', 'norois', 'nounours', 'nu-pieds', 'oasis', 'obus', 'olibrius', 'omnibus', 'opus', 'os', 'ours', 'ouvre-boîtes', 'ouvre-bouteilles', 'palais', 'palis', 'palmarès', 'palus', 'panais', 'panaris', 'pancréas', 'papyrus', 'par-dehors', 'paradis', 'parcours', 'pardessus', 'pare-balles', 'pare-chocs', 'parvis', 'pas', 'passe-temps', 'pataquès', 'pathos', 'patois', 'pavois', 'pays', 'permis', 'petit-bourgeois', 'petit-gris', 'petit-pois', 'phallus', 'phimosis', 'pickles', 'pilotis', 'pique-fleurs', 'pis', 'pithiviers', 'pityriasis', 'plateau-repas', 'plâtras', 'plein-temps', 'plexiglas', 'plexus', 'plus', 'poids', 'pois', 'pont-levis', 'porte-avions', 'porte-bagages', 'porte-billets', 'porte-bouteilles', 'porte-clés', 'porte-hélicoptères', 'porte-jarretelles', 'porte-revues', 'pouls', 'préavis', 'presse-fruits', 'presse-papiers', 'princeps', 'printemps', 'procès', 'processus', 'progrès', 'propos', 'prospectus', 'protège-dents', 'psoriasis', 'pubis', 'puits', 'pus', 'putois', 'quatre-épices', 'quatre-feuilles', 'quatre-heures', 'quatre-mâts', 'quatre-quarts', 'quatre-temps', 'quitus', 'rabais', 'rachis', 'radis', 'radius', 'raïs', 'ramassis', 'rébus', 'reclus', 'recours', 'refus', 'relais', 'remords', 'remous', 'remue-méninges', 'rendez-vous', 'repas', 'répons', 'repos', 'repris', 'reps', 'rétrovirus', 'revers', 'rhinocéros', 'rictus', 'rince-doigts', 'ris', 'rollmops', 'rosé-des-prés', 'roulis', 'rubis', 'salmigondis', 'salsifis', 'sans-logis', 'sas', 'sassafras', 'sauternes', 'schnaps', 'schuss', 'secours', 'semis', 'sens', 'serre-fils', 'serre-livres', 'sévices', 'sinus', 'skunks', 'souris', 'sournois', 'sous-bois', 'stradivarius', 'stras', 'strass', 'strato-cumulus', 'stratus', 'stress', 'succès', 'surdos', 'surplus', 'surpoids', 'sursis', 'suspens', 'synopsis', 'syphilis', 'taffetas', 'taillis', 'talus', 'tamaris', 'tamis', 'tapis', 'tas', 'taudis', 'temps', 'tennis', 'terminus', 'terre-neuvas', 'tétanos', 'tétras', 'thalamus', 'thermos', 'thesaurus', 'thésaurus', 'thymus', 'tire-fesses', 'tonus', 'torchis', 'torticolis', 'tournedos', 'tournevis', 'tournis', 'tracas', 'traîne-savates', 'travers', 'tréfonds', 'treillis', 'trépas', 'trias', 'triceps', 'trichomonas', 'trois-étoiles', 'trois-mâts', 'trois-quarts', 'trolleybus', 'tumulus', 'typhus', 'univers', 'us', 'utérus', 'vasistas', 'vélocross', 'velours', 'verglas', 'verjus', 'vernis', 'vers', 'vert-de-gris', 'vide-ordures', 'vide-poches', 'villageois', 'virus', 'vis-à-vis', 'volubilis', 'vulgum pecus', 'waters', 'williams', 'xérès', // Nouns ending by -x
  'abat-voix', 'afflux', 'alpax', 'anthrax', 'apex', 'aptéryx', 'archéoptéryx', 'arrière-faix', 'bombyx', 'borax', 'bordeaux', 'bouseux', 'box', 'carex', 'casse-noix', 'cedex', 'céphalothorax', 'cérambyx', 'chaux', 'choix', 'coccyx', 'codex', 'contumax', 'coqueleux', 'cortex', 'courroux', 'croix', 'crucifix', 'culex', 'demodex', 'duplex', 'entre-deux', 'époux', 'équivaux', 'eux', 'ex', 'faix', 'faucheux', 'faux', 'fax', 'ferreux', 'flux', 'fox', 'freux', 'furax', 'hapax', 'harengueux', 'hélix', 'horse-pox', 'houx', 'index', 'influx', 'inox', 'juke-box', 'kleenex', 'lagothrix', 'larynx', 'lastex', 'latex', 'lux', 'lynx', 'macareux', 'max', 'mésothorax', 'mi-voix', 'mirepoix', 'motteux', 'multiplex', 'murex', 'narthex', 'noix', 'onyx', 'opopanax', 'oropharynx', 'paix', 'panax', 'perdrix', 'pharynx', 'phénix', 'phlox', 'phoenix', 'pneumothorax', 'poix', 'portefaix', 'pousse-cailloux', 'preux', 'prix', 'prothorax', 'pucheux', 'pyrex', 'pyroligneux', 'quadruplex', 'queux', 'redoux', 'reflex', 'reflux', 'relax', 'rhinopharynx', 'rose-croix', 'rouvieux', 'roux', 'rumex', 'saindoux', 'sardonyx', 'scolex', 'sèche-cheveux', 'silex', 'simplex', 'sioux', 'sirex', 'smilax', 'solex', 'songe-creux', 'spalax', 'sphex', 'sphinx', 'storax', 'strix', 'styrax', 'surfaix', 'surtaux', 'syrinx', 'tamarix', 'taux', 'télex', 'thorax', 'tord-boyaux', 'toux', 'trionyx', 'tripoux', 'tubifex', 'vertex', 'vidéotex', 'vielleux', 'vieux', 'violoneux', 'voix', 'volvox', 'vortex', // Nouns ending by -z
  'allume-gaz', 'assez', 'biogaz', 'cache-nez', 'camping-gaz', 'chez', 'chintz', 'ersatz', 'fez', 'free-jazz', 'fritz', 'gaz', 'gin-fizz', 'hertz', 'jazz', 'jerez', 'kibboutz', 'kilohertz', 'kolkhoz', 'kronprinz', 'lapiaz', 'lez', 'mégahertz', 'merguez', 'nez', 'pince-nez', 'quartz', 'quiz', 'ranz', 'raz', 'recez', 'rémiz', 'rez', 'riz', 'ruolz', 'seltz', 'serre-nez'];
  this.customPluralForms = [];
  this.customSingularForms = [];
  this.singularForms = new FormSet();
  this.pluralForms = new FormSet();
  this.attach = attach;
  this.addIrregular('ail', 'aulx');
  this.addIrregular('bétail', 'bestiaux');
  this.addIrregular('bonhomme', 'bonshommes');
  this.addIrregular('ciel', 'cieux');
  this.addIrregular('monsieur', 'messieurs');
  this.addIrregular('mafioso', 'mafiosi');
  this.addIrregular('œil', 'yeux');
  this.addIrregular('putto', 'putti');
  this.addIrregular('targui', 'touareg'); // touareg -> touaregs is also OK.
  // Pluralize

  this.pluralForms.regularForms.push([/^(av|b|c|carnav|cérémoni|chac|corr|emment|emmenth|festiv|fut|gavi|gra|narv|p|récit|rég|rit|rorqu|st)al$/i, '$1als']);
  this.pluralForms.regularForms.push([/^(aspir|b|cor|ém|ferm|gemm|soupir|trav|vant|vent|vitr)ail$/i, '$1aux']);
  this.pluralForms.regularForms.push([/^(bij|caill|ch|gen|hib|jouj|p|rip|chouch)ou$/i, '$1oux']);
  this.pluralForms.regularForms.push([/^(gr|berimb|don|karb|land|pil|rest|sarr|un)au$/i, '$1aus']);
  this.pluralForms.regularForms.push([/^(bl|ém|enf|pn)eu$/i, '$1eus']);
  this.pluralForms.regularForms.push([/(au|eau|eu|œu)$/i, '$1x']);
  this.pluralForms.regularForms.push([/al$/i, 'aux']);
  this.pluralForms.regularForms.push([/(s|x)$/i, '$1']);
  this.pluralForms.regularForms.push([/(.*)$/i, '$1s']); // Singularize

  this.singularForms.regularForms.push([/^(aspir|b|cor|ém|ferm|gemm|soupir|trav|vant|vent|vitr)aux$/i, '$1ail']);
  this.singularForms.regularForms.push([/^(aloy|b|bouc|boy|burg|conoy|coy|cr|esquim|ét|fabli|flé|flûti|glu|gr|gru|hoy|joy|kérab|matéri|nobli|noy|pré|sen|sén|t|touch|tuss|tuy|v|ypré)aux$/i, '$1au']);
  this.singularForms.regularForms.push([/^(bij|caill|ch|gen|hib|jouj|p|rip|chouch)oux$/i, '$1ou']);
  this.singularForms.regularForms.push([/^(bis)?aïeux$/i, '$1aïeul']);
  this.singularForms.regularForms.push([/^apparaux$/i, 'appareil']); // One way transform, don't put on irregular list.

  this.singularForms.regularForms.push([/^ciels$/i, 'ciel']);
  this.singularForms.regularForms.push([/^œils$/i, 'œil']);
  this.singularForms.regularForms.push([/(eau|eu|œu)x$/i, '$1']);
  this.singularForms.regularForms.push([/aux$/i, 'al']);
  this.singularForms.regularForms.push([/(.*)s$/i, '$1']);

  this.pluralize = function (token) {
    return this.ize(token, this.pluralForms, this.customPluralForms);
  };

  this.singularize = function (token) {
    return this.ize(token, this.singularForms, this.customSingularForms);
  };
};

util.inherits(NounInflector, SingularPluralInflector);
module.exports = NounInflector;
},{"../singular_plural_inflector":"HTtH","util":"nq70","../form_set":"wmD9"}],"cA4I":[function(require,module,exports) {
/*
 Copyright (c) 2012, Guillaume Marty

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * A noun inflector for Japanese.
 * Compiled from several sources including:
 * \@see http://answers.yahoo.com/question/index?qid=20080528201740AASBWy6
 * \@see http://www.excite.co.jp/dictionary/english_japanese/
 *
 * This script assumes input is normalized using normalizer_ja().
 * Pluralizing Japanese has a very limited interest.
 * Japanese don't usually distinct plural from singular, so even a word looking
 * like a singular might actually be a plural.
 *
 * Singularization of nouns ending by -tachi or -ra is achieved using a
 * comprehensive black list, while nouns ending by -domo or -gata use a white
 * list because there are too many exceptions.
 *
 * \@todo Singularize nouns ending by -ら, but there are too many exceptions.
 * \@todo Expand the list of common plurals ending by -domo and -gata.
 */
var SingularPluralInflector = require('../singular_plural_inflector'),
    util = require('util'),
    FormSet = require('../form_set');

function attach() {
  var inflector = this;

  String.prototype.singularizeNoun = function () {
    return inflector.singularize(this);
  };

  String.prototype.pluralizeNoun = function () {
    return inflector.pluralize(this);
  };
}
/**
 * @constructor
 */


var NounInflector = function () {
  // Ambiguous a.k.a. invariant.
  this.ambiguous = ['ともだち', '友だち', '友達', '遊び友達', '飲み友達', '酒飲み友達', '茶飲み友達', '学校友達', '女友達', '男友達', '幼友達'];
  this.customPluralForms = [];
  this.customSingularForms = [];
  this.singularForms = new FormSet();
  this.pluralForms = new FormSet();
  this.attach = attach;
  this.addIrregular('神', '神神');
  this.addIrregular('人', '人人');
  this.addIrregular('年', '年年');
  this.addIrregular('月', '月月');
  this.addIrregular('日', '日日');
  this.addIrregular('星', '星星');
  this.addIrregular('島', '島島');
  this.addIrregular('我', '我我');
  this.addIrregular('山', '山山');
  this.addIrregular('国', '国国');
  this.addIrregular('所', '所所');
  this.addIrregular('隅', '隅隅');
  /**
   * Notes:
   * -たち exceptions: いたち, おいたち, ついたち, かたち, かおかたち, なりかたち, いでたち, はたち, からたち, なりたち
   * -達 exceptions: 伊達, 男伊達, 栄達, 上意下達, 熟達, 上達, 下意上達, 先達, 送達, 速達, 即日速達, 書留速達, 調達, 通達, 伝達, 到達, 配達, 牛乳配達, 新聞配達, 無料配達, 四通八達, 発達, 未発達, 御用達, 宮内庁御用達, 練達, 闊達
   * -等 exceptions: 一等, 下等, 何等, 均等, 勲等, 高等, 三等, 初等, 上等, 親等, 二親等, 数等, 対等, 中等, 同等, 特等, 二等, 品等, 不等, 平等, 悪平等, 男女平等, 不平等, 優等, 劣等
   */
  // Pluralize

  this.pluralForms.regularForms.push([/^(.+)$/i, '$1たち']); // Singularize

  this.singularForms.regularForms.push([/^(.+)たち$/i, function (a, mask) {
    if (['い', 'おい', 'つい', 'か', 'かおか', 'なりか', 'いで', 'は', 'から', 'なり'].indexOf(mask) >= 0) return mask + 'たち';
    return mask;
  }]);
  this.singularForms.regularForms.push([/^(.+)達$/i, function (a, mask) {
    if (['伊', '伊', '栄', '上意下', '熟', '上', '下意上', '先', '送', '速', '即日速', '書留速', '調', '通', '伝', '到', '配', '牛乳配', '新聞配', '無料配', '四通八', '発', '未発', '御用', '宮内庁御用', '練', '闊'].indexOf(mask) >= 0) return mask + '達';
    return mask;
  }]); // Singularize nouns ending by -等, but not exceptions.

  this.singularForms.regularForms.push([/^(.+)等$/i, function (a, mask) {
    if (['一', '下', '何', '均', '勲', '高', '三', '初', '親', '二親', '数', '対', '中', '同', '特', '二', '品', '不', '平', '悪平', '男女平', '不平', '優', '劣'].indexOf(mask) >= 0) return mask + '等';
    return mask;
  }]);
  this.singularForms.regularForms.push([/^(人間|わたくし|私|てまえ|手前|野郎|やろう|勇者|がき|ガキ|餓鬼|あくとう|悪党|猫|家来)(共|ども)$/i, '$1']);
  this.singularForms.regularForms.push([/^(神様|先生|あなた|大名|女中|奥様)(方|がた)$/i, '$1']);

  this.pluralize = function (token) {
    return this.ize(token, this.pluralForms, this.customPluralForms);
  };

  this.singularize = function (token) {
    return this.ize(token, this.singularForms, this.customSingularForms);
  };
};

util.inherits(NounInflector, SingularPluralInflector);
module.exports = NounInflector;
},{"../singular_plural_inflector":"HTtH","util":"nq70","../form_set":"wmD9"}],"HSgG":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var util = require('util'),
    SingularPluralInflector = require('./singular_plural_inflector'),
    FormSet = require('./form_set');

function attach() {
  var inflector = this;

  String.prototype.singularizePresentVerb = function () {
    return inflector.singularize(this);
  };

  String.prototype.pluralizePresentVerb = function () {
    return inflector.pluralize(this);
  };
}

var VerbInflector = function () {
  this.ambiguous = ['will'];
  this.attach = attach;
  this.customPluralForms = [];
  this.customSingularForms = [];
  this.singularForms = new FormSet();
  this.pluralForms = new FormSet();
  this.addIrregular("am", "are");
  this.addIrregular("is", "are");
  this.addIrregular("was", "were");
  this.addIrregular("has", "have");
  this.singularForms.regularForms.push([/ed$/i, 'ed']);
  this.singularForms.regularForms.push([/ss$/i, 'sses']);
  this.singularForms.regularForms.push([/x$/i, 'xes']);
  this.singularForms.regularForms.push([/(h|z|o)$/i, '$1es']);
  this.singularForms.regularForms.push([/$zz/i, 'zzes']);
  this.singularForms.regularForms.push([/([^a|e|i|o|u])y$/i, '$1ies']);
  this.singularForms.regularForms.push([/$/i, 's']);
  this.pluralForms.regularForms.push([/sses$/i, 'ss']);
  this.pluralForms.regularForms.push([/xes$/i, 'x']);
  this.pluralForms.regularForms.push([/([cs])hes$/i, '$1h']);
  this.pluralForms.regularForms.push([/zzes$/i, 'zz']);
  this.pluralForms.regularForms.push([/([^h|z|o|i])es$/i, '$1e']);
  this.pluralForms.regularForms.push([/ies$/i, 'y']); //flies->fly

  this.pluralForms.regularForms.push([/e?s$/i, '']);
};

util.inherits(VerbInflector, SingularPluralInflector);
module.exports = VerbInflector;
},{"util":"nq70","./singular_plural_inflector":"HTtH","./form_set":"wmD9"}],"AEFT":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
function nthForm(i) {
  var teenth = i % 100;
  if (teenth > 10 && teenth < 14) return 'th';else {
    switch (i % 10) {
      case 1:
        return 'st';
        break;

      case 2:
        return 'nd';
        break;

      case 3:
        return 'rd';
        break;

      default:
        return 'th';
    }
  }
}

function nth(i) {
  return i.toString() + nthForm(i);
}

var CountInflector = function () {};

CountInflector.nth = nth;
module.exports = CountInflector;
},{}],"UUq2":[function(require,module,exports) {
var process = require("process");
// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

},{"process":"pBGv"}],"yh9p":[function(require,module,exports) {
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],"JgNJ":[function(require,module,exports) {
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],"REa7":[function(require,module,exports) {
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],"dskh":[function(require,module,exports) {

var global = arguments[3];
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

},{"base64-js":"yh9p","ieee754":"JgNJ","isarray":"REa7","buffer":"dskh"}],"DOQh":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var fs = require('fs'),
    path = require('path'),
    util = require('util');

function appendLineChar(fd, pos, buffPos, buff, callback) {
  if (buffPos >= buff.length) {
    var newBuff = new Buffer(buff.length * 2);
    buff.copy(newBuff, 0, 0, buff.length);
    buff = newBuff;
  }

  fs.read(fd, buff, buffPos, 1, pos, function (err, count) {
    if (err) console.log(err);else {
      if (buff[buffPos] == 10 || buffPos == buff.length) callback(buff.slice(0, buffPos).toString('UTF-8'));else {
        appendLineChar(fd, pos + 1, buffPos + 1, buff, callback);
      }
    }
  });
}

function open(callback) {
  var filePath = this.filePath;
  fs.open(filePath, 'r', null, function (err, fd) {
    if (err) {
      console.log('Unable to open %s', filePath);
      return;
    }

    callback(err, fd, function () {
      fs.close(fd, function (error) {
        if (error) {
          throw error;
        }
      });
    });
  });
}

var WordNetFile = function (dataDir, fileName) {
  this.dataDir = dataDir;
  this.fileName = fileName;
  this.filePath = require('path').join(this.dataDir, this.fileName);
};

WordNetFile.prototype.open = open;
WordNetFile.appendLineChar = appendLineChar;
module.exports = WordNetFile;
},{"fs":"rDCW","path":"UUq2","util":"nq70","buffer":"dskh"}],"GkwZ":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var WordNetFile = require('./wordnet_file'),
    fs = require('fs'),
    util = require('util');

function getFileSize(path) {
  var stat = fs.statSync(path);
  return stat.size;
}

function findPrevEOL(fd, pos, callback) {
  var buff = new Buffer(1024);
  if (pos == 0) callback(0);else {
    fs.read(fd, buff, 0, 1, pos, function (err, count) {
      if (buff[0] == 10) callback(pos + 1);else findPrevEOL(fd, pos - 1, callback);
    });
  }
}

function readLine(fd, pos, callback) {
  var buff = new Buffer(1024);
  findPrevEOL(fd, pos, function (pos) {
    WordNetFile.appendLineChar(fd, pos, 0, buff, callback);
  });
}

function miss(callback) {
  callback({
    status: 'miss'
  });
}

function findAt(fd, size, pos, lastPos, adjustment, searchKey, callback, lastKey) {
  if (lastPos == pos || pos >= size) {
    miss(callback);
  } else {
    readLine(fd, pos, function (line) {
      var tokens = line.split(/\s+/);
      var key = tokens[0];

      if (key == searchKey) {
        callback({
          status: 'hit',
          key: key,
          'line': line,
          tokens: tokens
        });
      } else if (adjustment == 1 || key == lastKey) {
        miss(callback);
      } else {
        adjustment = Math.ceil(adjustment * 0.5);

        if (key < searchKey) {
          findAt(fd, size, pos + adjustment, pos, adjustment, searchKey, callback, key);
        } else {
          findAt(fd, size, pos - adjustment, pos, adjustment, searchKey, callback, key);
        }
      }
    });
  }
}

function find(searchKey, callback) {
  var indexFile = this;
  indexFile.open(function (err, fd, done) {
    if (err) {
      console.log(err);
    } else {
      var size = getFileSize(indexFile.filePath) - 1;
      var pos = Math.ceil(size / 2);
      findAt(fd, size, pos, null, pos, searchKey, function (result) {
        callback(result);
        done();
      });
    }
  });
}

function lookupFromFile(word, callback) {
  this.find(word, function (record) {
    var indexRecord = null;

    if (record.status == 'hit') {
      var ptrs = [],
          offsets = [];

      for (var i = 0; i < parseInt(record.tokens[3]); i++) ptrs.push(record.tokens[i]);

      for (var i = 0; i < parseInt(record.tokens[2]); i++) offsets.push(parseInt(record.tokens[ptrs.length + 6 + i], 10));

      indexRecord = {
        lemma: record.tokens[0],
        pos: record.tokens[1],
        ptrSymbol: ptrs,
        senseCnt: parseInt(record.tokens[ptrs.length + 4], 10),
        tagsenseCnt: parseInt(record.tokens[ptrs.length + 5], 10),
        synsetOffset: offsets
      };
    }

    callback(indexRecord);
  });
}

function lookup(word, callback) {
  this.lookupFromFile(word, callback);
}

var IndexFile = function (dataDir, name) {
  WordNetFile.call(this, dataDir, 'index.' + name);
};

util.inherits(IndexFile, WordNetFile);
IndexFile.prototype.lookupFromFile = lookupFromFile;
IndexFile.prototype.lookup = lookup;
IndexFile.prototype.find = find;
IndexFile.prototype._findAt = findAt;
module.exports = IndexFile;
},{"./wordnet_file":"DOQh","fs":"rDCW","util":"nq70","buffer":"dskh"}],"f6Kj":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var WordNetFile = require('./wordnet_file'),
    fs = require('fs'),
    util = require('util');

function get(location, callback) {
  var buff = new Buffer(4096);
  this.open(function (err, fd, done) {
    WordNetFile.appendLineChar(fd, location, 0, buff, function (line) {
      done();
      var data = line.split('| ');
      var tokens = data[0].split(/\s+/);
      var ptrs = [];
      var wCnt = parseInt(tokens[3], 16);
      var synonyms = [];

      for (var i = 0; i < wCnt; i++) {
        synonyms.push(tokens[4 + i * 2]);
      }

      var ptrOffset = (wCnt - 1) * 2 + 6;

      for (var i = 0; i < parseInt(tokens[ptrOffset], 10); i++) {
        ptrs.push({
          pointerSymbol: tokens[ptrOffset + 1 + i * 4],
          synsetOffset: parseInt(tokens[ptrOffset + 2 + i * 4], 10),
          pos: tokens[ptrOffset + 3 + i * 4],
          sourceTarget: tokens[ptrOffset + 4 + i * 4]
        });
      } // break "gloss" into definition vs. examples


      var glossArray = data[1].split("; ");
      var definition = glossArray[0];
      var examples = glossArray.slice(1);

      for (var k = 0; k < examples.length; k++) {
        examples[k] = examples[k].replace(/\"/g, '').replace(/\s\s+/g, '');
      }

      callback({
        synsetOffset: parseInt(tokens[0], 10),
        lexFilenum: parseInt(tokens[1], 10),
        pos: tokens[2],
        wCnt: wCnt,
        lemma: tokens[4],
        synonyms: synonyms,
        lexId: tokens[5],
        ptrs: ptrs,
        gloss: data[1],
        def: definition,
        exp: examples
      });
    });
  });
}

var DataFile = function (dataDir, name) {
  WordNetFile.call(this, dataDir, 'data.' + name);
};

util.inherits(DataFile, WordNetFile);
DataFile.prototype.get = get;
module.exports = DataFile;
},{"./wordnet_file":"DOQh","fs":"rDCW","util":"nq70","buffer":"dskh"}],"zjvV":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var IndexFile = require('./index_file'),
    DataFile = require('./data_file');

function pushResults(data, results, offsets, callback) {
  var wordnet = this;

  if (offsets.length == 0) {
    callback(results);
  } else {
    data.get(offsets.pop(), function (record) {
      results.push(record);
      wordnet.pushResults(data, results, offsets, callback);
    });
  }
}

function lookupFromFiles(files, results, word, callback) {
  var wordnet = this;
  if (files.length == 0) callback(results);else {
    var file = files.pop();
    file.index.lookup(word, function (record) {
      if (record) {
        wordnet.pushResults(file.data, results, record.synsetOffset, function () {
          wordnet.lookupFromFiles(files, results, word, callback);
        });
      } else {
        wordnet.lookupFromFiles(files, results, word, callback);
      }
    });
  }
}

function lookup(word, callback) {
  word = word.toLowerCase().replace(/\s+/g, '_');
  this.lookupFromFiles([{
    index: this.nounIndex,
    data: this.nounData
  }, {
    index: this.verbIndex,
    data: this.verbData
  }, {
    index: this.adjIndex,
    data: this.adjData
  }, {
    index: this.advIndex,
    data: this.advData
  }], [], word, callback);
}

function get(synsetOffset, pos, callback) {
  var dataFile = this.getDataFile(pos);
  var wordnet = this;
  dataFile.get(synsetOffset, function (result) {
    callback(result);
  });
}

function getDataFile(pos) {
  switch (pos) {
    case 'n':
      return this.nounData;

    case 'v':
      return this.verbData;

    case 'a':
    case 's':
      return this.adjData;

    case 'r':
      return this.advData;
  }
}

function loadSynonyms(synonyms, results, ptrs, callback) {
  var wordnet = this;

  if (ptrs.length > 0) {
    var ptr = ptrs.pop();
    this.get(ptr.synsetOffset, ptr.pos, function (result) {
      synonyms.push(result);
      wordnet.loadSynonyms(synonyms, results, ptrs, callback);
    });
  } else {
    wordnet.loadResultSynonyms(synonyms, results, callback);
  }
}

function loadResultSynonyms(synonyms, results, callback) {
  var wordnet = this;

  if (results.length > 0) {
    var result = results.pop();
    wordnet.loadSynonyms(synonyms, results, result.ptrs, callback);
  } else callback(synonyms);
}

function lookupSynonyms(word, callback) {
  var wordnet = this;
  wordnet.lookup(word, function (results) {
    wordnet.loadResultSynonyms([], results, callback);
  });
}

function getSynonyms() {
  var wordnet = this;
  var callback = arguments[2] ? arguments[2] : arguments[1];
  var pos = arguments[0].pos ? arguments[0].pos : arguments[1];
  var synsetOffset = arguments[0].synsetOffset ? arguments[0].synsetOffset : arguments[0];
  this.get(synsetOffset, pos, function (result) {
    wordnet.loadSynonyms([], [], result.ptrs, callback);
  });
}

function WordNet(dataDir) {
  if (!dataDir) {
    try {
      var WNdb = require('wordnet-db');
    } catch (e) {
      console.error("Please 'npm install wordnet-db' before using WordNet module or specify a dict directory.");
      throw e;
    }

    dataDir = WNdb.path;
  }

  this.nounIndex = new IndexFile(dataDir, 'noun');
  this.verbIndex = new IndexFile(dataDir, 'verb');
  this.adjIndex = new IndexFile(dataDir, 'adj');
  this.advIndex = new IndexFile(dataDir, 'adv');
  this.nounData = new DataFile(dataDir, 'noun');
  this.verbData = new DataFile(dataDir, 'verb');
  this.adjData = new DataFile(dataDir, 'adj');
  this.advData = new DataFile(dataDir, 'adv');
  this.get = get;
  this.lookup = lookup;
  this.lookupFromFiles = lookupFromFiles;
  this.pushResults = pushResults;
  this.loadResultSynonyms = loadResultSynonyms;
  this.loadSynonyms = loadSynonyms;
  this.lookupSynonyms = lookupSynonyms;
  this.getSynonyms = getSynonyms;
  this.getDataFile = getDataFile;
}

module.exports = WordNet;
},{"./index_file":"GkwZ","./data_file":"f6Kj"}],"KXVd":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
/*
Copyright (c) 2011, Rob Ellis, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var _ = require("underscore")._,
    Tokenizer = require('../tokenizers/regexp_tokenizer').WordTokenizer,
    tokenizer = new Tokenizer(),
    stopwords = require('../util/stopwords').words,
    fs = require('fs');

function buildDocument(text, key) {
  var stopOut;

  if (typeof text === 'string') {
    text = tokenizer.tokenize(text.toLowerCase());
    stopOut = true;
  } else if (!_.isArray(text)) {
    stopOut = false;
    return text;
  }

  return text.reduce(function (document, term) {
    // next line solves https://github.com/NaturalNode/natural/issues/119
    if (typeof document[term] === 'function') document[term] = 0;
    if (!stopOut || stopwords.indexOf(term) < 0) document[term] = document[term] ? document[term] + 1 : 1;
    return document;
  }, {
    __key: key
  });
}

function tf(term, document) {
  return document[term] ? document[term] : 0;
}

function documentHasTerm(term, document) {
  return document[term] && document[term] > 0;
}

function TfIdf(deserialized) {
  if (deserialized) this.documents = deserialized.documents;else this.documents = [];
  this._idfCache = {};
} // backwards compatibility for < node 0.10


function isEncoding(encoding) {
  if (typeof Buffer.isEncoding !== 'undefined') return Buffer.isEncoding(encoding);

  switch ((encoding + '').toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
    case 'raw':
      return true;
  }

  return false;
}

module.exports = TfIdf;
TfIdf.tf = tf;

TfIdf.prototype.idf = function (term, force) {
  // Lookup the term in the New term-IDF caching,
  // this will cut search times down exponentially on large document sets.
  if (this._idfCache[term] && this._idfCache.hasOwnProperty(term) && force !== true) return this._idfCache[term];
  var docsWithTerm = this.documents.reduce(function (count, document) {
    return count + (documentHasTerm(term, document) ? 1 : 0);
  }, 0);
  var idf = 1 + Math.log(this.documents.length / (1 + docsWithTerm)); // Add the idf to the term cache and return it

  this._idfCache[term] = idf;
  return idf;
}; // If restoreCache is set to true, all terms idf scores currently cached will be recomputed.
// Otherwise, the cache will just be wiped clean


TfIdf.prototype.addDocument = function (document, key, restoreCache) {
  this.documents.push(buildDocument(document, key)); // make sure the cache is invalidated when new documents arrive

  if (restoreCache === true) {
    for (var term in this._idfCache) {
      // invoking idf with the force option set will
      // force a recomputation of the idf, and it will
      // automatically refresh the cache value.
      this.idf(term, true);
    }
  } else {
    this._idfCache = {};
  }
}; // If restoreCache is set to true, all terms idf scores currently cached will be recomputed.
// Otherwise, the cache will just be wiped clean


TfIdf.prototype.addFileSync = function (path, encoding, key, restoreCache) {
  if (!encoding) encoding = 'utf8';
  if (!isEncoding(encoding)) throw new Error('Invalid encoding: ' + encoding);
  var document = fs.readFileSync(path, encoding);
  this.documents.push(buildDocument(document, key)); // make sure the cache is invalidated when new documents arrive

  if (restoreCache === true) {
    for (var term in this._idfCache) {
      // invoking idf with the force option set will
      // force a recomputation of the idf, and it will
      // automatically refresh the cache value.
      this.idf(term, true);
    }
  } else {
    this._idfCache = {};
  }
};

TfIdf.prototype.tfidf = function (terms, d) {
  var _this = this;

  if (!_.isArray(terms)) {
    terms = tokenizer.tokenize(terms.toString().toLowerCase());
  }

  return terms.reduce(function (value, term) {
    var idf = _this.idf(term);

    idf = idf === Infinity ? 0 : idf;
    return value + tf(term, _this.documents[d]) * idf;
  }, 0.0);
};

TfIdf.prototype.listTerms = function (d) {
  var terms = [];

  var _this = this;

  for (var term in this.documents[d]) {
    if (this.documents[d]) {
      if (term != '__key') {
        terms.push({
          "term": term,
          "tf": tf(term, _this.documents[d]),
          "idf": _this.idf(term),
          "tfidf": _this.tfidf(term, d)
        });
      }
    }
  }

  return terms.sort(function (x, y) {
    return y.tfidf - x.tfidf;
  });
};

TfIdf.prototype.tfidfs = function (terms, callback) {
  var tfidfs = new Array(this.documents.length);

  for (var i = 0; i < this.documents.length; i++) {
    tfidfs[i] = this.tfidf(terms, i);
    if (callback) callback(i, tfidfs[i], this.documents[i].__key);
  }

  return tfidfs;
}; // Define a tokenizer other than the default "WordTokenizer"


TfIdf.prototype.setTokenizer = function (t) {
  if (!_.isFunction(t.tokenize)) throw new Error('Expected a valid Tokenizer');
  tokenizer = t;
}; // Define a stopwords other than the default


TfIdf.prototype.setStopwords = function (customStopwords) {
  if (!Array.isArray(customStopwords)) return false;
  customStopwords.forEach(stopword => {
    if (typeof stopword != 'string') return false;
  });
  stopwords = customStopwords;
  return true;
};
},{"underscore":"h15N","../tokenizers/regexp_tokenizer":"LYyI","../util/stopwords":"l7Q1","fs":"rDCW","buffer":"dskh"}],"iysN":[function(require,module,exports) {
/*
Copyright (c) 2014 Ken Koch

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/** 
 * The basis of the TRIE structure.
 **/
function Trie(caseSensitive) {
  this.dictionary = {};
  this.$ = false;

  if (typeof caseSensitive === "undefined") {
    caseSensitive = true;
  }

  this.cs = caseSensitive;
}
/**
 * Add a single string to the TRIE, returns true if the word was already in the 
 * trie.
 **/


Trie.prototype.addString = function (string) {
  if (this.cs === false) {
    string = string.toLowerCase();
  } // If the string has only one letter, mark this as a word.


  if (string.length === 0) {
    var wasWord = this.$;
    this.$ = true;
    return wasWord;
  } // Make sure theres a Trie node in our dictionary


  var next = this.dictionary[string[0]];

  if (!next) {
    this.dictionary[string[0]] = new Trie(this.cs);
    next = this.dictionary[string[0]];
  } // Continue adding the string


  return next.addString(string.substring(1));
};
/**
 * Add multiple strings to the TRIE
 **/


Trie.prototype.addStrings = function (list) {
  for (var i in list) {
    this.addString(list[i]);
  }
};
/**
 * A function to search the TRIE and return an array of
 * words which have same prefix <prefix>
 * for example if we had the following words in our database:
 * a, ab, bc, cd, abc, abd
 * and we search the string: a
 * we will get :
 * [a, ab, abc, abd]
 **/


Trie.prototype.keysWithPrefix = function (prefix) {
  if (this.caseSensitive === false) {
    prefix = prefix.toLowerCase();
  }

  function isEmpty(object) {
    for (var key in object) if (object.hasOwnProperty(key)) return false;

    return true;
  }

  function get(node, word) {
    if (!node) return null;
    if (word.length == 0) return node;
    return get(node.dictionary[word[0]], word.substring(1));
  }

  function recurse(node, stringAgg, resultsAgg) {
    if (!node) return; // Check if this is a word

    if (node.$) {
      resultsAgg.push(stringAgg);
    }

    if (isEmpty(node.dictionary)) {
      return;
    }

    for (var c in node.dictionary) {
      recurse(node.dictionary[c], stringAgg + c, resultsAgg);
    }
  }

  var results = [];
  recurse(get(this, prefix), prefix, results);
  return results;
};
/** 
 * A function to search the given string and return true if it lands
 * on on a word. Essentially testing if the word exists in the database.
 **/


Trie.prototype.contains = function (string) {
  if (this.cs === false) {
    string = string.toLowerCase();
  }

  if (string.length === 0) {
    return this.$;
  } // Otherwise, we need to continue searching


  var firstLetter = string[0];
  var next = this.dictionary[firstLetter]; // If we don't have a node, this isn't a word

  if (!next) {
    return false;
  } // Otherwise continue the search at the next node


  return next.contains(string.substring(1));
};
/**
 * A function to search the TRIE and return an array of words which were encountered along the way.
 * This will only return words with full prefix matches.
 * for example if we had the following words in our database:
 * a, ab, bc, cd, abc
 * and we searched the string: abcd
 * we would get only:
 * [a, ab, abc]
 **/


Trie.prototype.findMatchesOnPath = function (search) {
  if (this.cs === false) {
    search = search.toLowerCase();
  }

  function recurse(node, search, stringAgg, resultsAgg) {
    // Check if this is a word.
    if (node.$) {
      resultsAgg.push(stringAgg);
    } // Check if the have completed the seearch


    if (search.length === 0) {
      return resultsAgg;
    } // Otherwise, continue searching


    var next = node.dictionary[search[0]];

    if (!next) {
      return resultsAgg;
    }

    return recurse(next, search.substring(1), stringAgg + search[0], resultsAgg);
  }

  ;
  return recurse(this, search, "", []);
};
/**
 * Returns the longest match and the remaining part that could not be matched.
 * inspired by [NLTK containers.trie.find_prefix](http://nltk.googlecode.com/svn-/trunk/doc/api/nltk.containers.Trie-class.html).
 **/


Trie.prototype.findPrefix = function (search) {
  if (this.cs === false) {
    search = search.toLowerCase();
  }

  function recurse(node, search, stringAgg, lastWord) {
    // Check if this is a word
    if (node.$) {
      lastWord = stringAgg;
    } // Check if we have no more to search


    if (search.length === 0) {
      return [lastWord, search];
    } // Continue searching


    var next = node.dictionary[search[0]];

    if (!next) {
      return [lastWord, search];
    }

    return recurse(next, search.substring(1), stringAgg + search[0], lastWord);
  }

  ;
  return recurse(this, search, "", null);
};
/**
 * Computes the number of actual nodes from this node to the end.
 * Note: This involves traversing the entire structure and may not be
 * good for frequent use.
 **/


Trie.prototype.getSize = function () {
  var total = 1;

  for (var c in this.dictionary) {
    total += this.dictionary[c].getSize();
  }

  return total;
};
/**
 * EXPORT THE TRIE
 **/


module.exports = Trie;
},{}],"AQuo":[function(require,module,exports) {
/*
Copyright (c) 2011, Rob Ellis, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var _ = require("underscore")._;
/*
 Sentences Analizer Class
 From http://www.writingcentre.uottawa.ca/hypergrammar/sntpurps.html

 Take a POS input and analyse it for
  - Type of Sentense
     - Interrogative
       - Tag Questions
       - 
     - Declarative
     - Exclamatory 
     - Imperative

  - Parts of a Sentense
     - Subject
     - Predicate

  - Show Preposition Phrases
*/


var Sentences = function (pos, callback) {
  this.posObj = pos;
  this.senType = null;
  callback(this);
};

Sentences.prototype.part = function (callback) {
  var subject = [],
      predicat = [],
      verbFound = false;
  this.prepositionPhrases();

  for (var i = 0; i < this.posObj.tags.length; i++) {
    if (this.posObj.tags[i].pos == "VB") {
      if (i === 0) {
        verbFound = true;
      } else {
        // We need to Test for any EX before the VB
        if (this.posObj.tags[i - 1].pos != "EX") {
          verbFound = true;
        } else {
          predicat.push(this.posObj.tags[i].token);
        }
      }
    } // Add Pronoun Phrase (pp) Or Subject Phrase (sp)


    if (!verbFound) {
      if (this.posObj.tags[i].pp != true) this.posObj.tags[i].spos = "SP";
      subject.push(this.posObj.tags[i].token);
    } else {
      if (this.posObj.tags[i].pp != true) this.posObj.tags[i].spos = "PP";
      predicat.push(this.posObj.tags[i].token);
    }
  }

  if (subject.length == 0) {
    this.posObj.tags.push({
      token: "You",
      spos: "SP",
      pos: "PRP",
      added: true
    });
  }

  callback(this);
}; // Takes POS and removes IN to NN or NNS
// Adds a PP for each prepositionPhrases


Sentences.prototype.prepositionPhrases = function () {
  var remove = false;

  for (var i = 0; i < this.posObj.tags.length; i++) {
    if (this.posObj.tags[i].pos.match("IN")) {
      remove = true;
    }

    if (remove) {
      this.posObj.tags[i].pp = true;
    }

    if (this.posObj.tags[i].pos.match("NN")) {
      remove = false;
    }
  }
};

Sentences.prototype.subjectToString = function () {
  return this.posObj.tags.map(function (t) {
    if (t.spos == "SP" || t.spos == "S") return t.token;
  }).join(' ');
};

Sentences.prototype.predicateToString = function () {
  return this.posObj.tags.map(function (t) {
    if (t.spos == "PP" || t.spos == "P") return t.token;
  }).join(' ');
};

Sentences.prototype.implicitYou = function () {
  for (var i = 0; i < this.posObj.tags.length; i++) {
    if (this.posObj.tags[i].added) {
      return true;
    }
  }

  return false;
};

Sentences.prototype.toString = function () {
  return this.posObj.tags.map(function (t) {
    return t.token;
  }).join(' ');
}; // This is quick and incomplete.


Sentences.prototype.type = function (callback) {
  var callback = callback || false; // Check for implicit you before popping a tag.

  var implicitYou = this.implicitYou(); // FIXME - punct seems useless

  var lastElement = this.posObj.punct();
  lastElement = lastElement.length != 0 ? lastElement.pop() : this.posObj.tags.pop();

  if (lastElement.pos !== ".") {
    if (implicitYou) {
      this.senType = "COMMAND";
    } else if (_(["WDT", "WP", "WP$", "WRB"]).contains(this.posObj.tags[0].pos)) {
      // Sentences that start with: who, what where when why and how, then they are questions
      this.senType = "INTERROGATIVE";
    } else if (_(["PRP"]).contains(lastElement.pos)) {
      // Sentences that end in a Personal pronoun are most likely questions
      // eg. We should run away, should we [?]
      // eg. You want to see that again, do you [?]
      this.senType = "INTERROGATIVE";
    } else {
      this.senType = "UNKNOWN";
    }
  } else {
    switch (lastElement.token) {
      case "?":
        this.senType = "INTERROGATIVE";
        break;

      case "!":
        this.senType = implicitYou ? "COMMAND" : "EXCLAMATORY";
        break;

      case ".":
        this.senType = implicitYou ? "COMMAND" : "DECLARATIVE";
        break;
    }
  }

  if (callback && _(callback).isFunction()) {
    callback(this);
  } else {
    return this.senType;
  }
};

module.exports = Sentences;
},{"underscore":"h15N"}],"UTNL":[function(require,module,exports) {
/*
 Copyright (c) 2014, Lee Wenzhu

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
'use strict';

function Bag() {
  this.dictionary = [];
  this.nElement = 0;
}

;

Bag.prototype.add = function (element) {
  this.dictionary.push(element);
  this.nElement++;
  return this;
};

Bag.prototype.isEmpty = function () {
  return this.nElement > 0;
};

Bag.prototype.contains = function (item) {
  return this.dictionary.indexOf(item) >= 0;
};
/**
 * unpack the bag , and get all items
 */


Bag.prototype.unpack = function () {
  // return a copy is better than original
  return this.dictionary.slice();
};

module.exports = Bag;
},{}],"FvoX":[function(require,module,exports) {
/*
 Copyright (c) 2014, Lee Wenzhu

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
'use strict';

var util = require('util'),
    Bag = require('./bag');

var DirectedEdge = function (start, end, weight) {
  this.start = start;
  this.end = end;
  this.weight = weight;
};

DirectedEdge.prototype.weight = function () {
  return this.weight;
};

DirectedEdge.prototype.from = function () {
  return this.start;
};

DirectedEdge.prototype.to = function () {
  return this.end;
};

DirectedEdge.prototype.toString = function () {
  return util.format('%s -> %s, %s', this.start, this.end, this.weight);
};

var EdgeWeightedDigraph = function () {
  this.edgesNum = 0;
  this.adj = []; // adjacency list
};
/**
 * the number of vertexs saved.
 */


EdgeWeightedDigraph.prototype.v = function () {
  return this.adj.length;
};
/**
 * the number of edges saved.
 */


EdgeWeightedDigraph.prototype.e = function () {
  return this.edgesNum;
};

EdgeWeightedDigraph.prototype.add = function (start, end, weight) {
  var e = new DirectedEdge(start, end, weight);
  this.addEdge(e);
};

EdgeWeightedDigraph.prototype.addEdge = function (e) {
  if (!this.adj[e.from()]) {
    this.adj[e.from()] = new Bag();
  }

  this.adj[e.from()].add(e);
  this.edgesNum++;
};
/**
 * use callback on all edges from v.
 */


EdgeWeightedDigraph.prototype.getAdj = function (v) {
  if (!this.adj[v]) return [];
  return this.adj[v].unpack();
};
/**
 * use callback on all edges.
 */


EdgeWeightedDigraph.prototype.edges = function () {
  var adj = this.adj;
  var list = new Bag();

  for (var i in adj) {
    adj[i].unpack().forEach(function (item) {
      list.add(item);
    });
  }

  return list.unpack();
};

EdgeWeightedDigraph.prototype.toString = function () {
  var result = [];
  var list = this.edges();
  list.forEach(function (edge) {
    result.push(edge.toString());
  });
  return result.join('\n');
};

module.exports = EdgeWeightedDigraph;
},{"util":"nq70","./bag":"UTNL"}],"kjdP":[function(require,module,exports) {
/*
 Copyright (c) 2014, Lee Wenzhu

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
'use strict';
/**
 * a topo sort for a digraph
 * @param {Digraph}
 */

var Topological = function (g) {
  this.isDag = true;
  this.sorted = topoSort(uniqueVertexs(g.edges()), g.edges());
};

Topological.prototype.isDAG = function () {
  return this.isDag;
};
/**
 * get ordered vertexs of digraph
 */


Topological.prototype.order = function () {
  return this.sorted.slice();
};
/**
 * @param {Array} all vertex in digraph
 * @param {Object} all edges in the digraph
 */


function topoSort(vertexs, edges) {
  var sorted = [];
  var cursor = vertexs.length,
      visited = {},
      i = cursor;

  while (i--) {
    if (!visited[i]) visit(vertexs[i], i, []);
  }

  return sorted.reverse();

  function visit(vertex, i, predecessors) {
    if (predecessors.indexOf(vertex) >= 0) {
      throw new Error('Cyclic dependency:' + JSON.stringify(vertex));
    }

    if (visited[i]) return;
    visited[i] = true;
    var outgoing = edges.filter(function (edge) {
      return edge.to() === vertex;
    });
    var preds = [];

    if (outgoing.length > 0) {
      preds = predecessors.concat(vertex);
    }

    var from;
    outgoing.forEach(function (edge) {
      from = edge.from();
      visit(from, vertexs.indexOf(from), preds);
    });
    sorted[--cursor] = vertex;
  }

  ;
}

;

function uniqueVertexs(edges) {
  var vertexs = [];
  var from, to;
  edges.forEach(function (edge) {
    from = edge.from();
    to = edge.to();
    if (vertexs.indexOf(from) < 0) vertexs.push(from);
    if (vertexs.indexOf(to) < 0) vertexs.push(to);
  });
  return vertexs;
}

;
module.exports = Topological;
},{}],"ZNbZ":[function(require,module,exports) {
/*
 Copyright (c) 2014, Lee Wenzhu

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
'use strict';

var EdgeWeightedDigraph = require('./edge_weighted_digraph'),
    Topological = require('./topological');
/**
  *  The ShortestPathTree represents a data type for solving the
  *  single-source shortest paths problem in edge-weighted directed
  *  acyclic graphs (DAGs). The edge weights can be positive, negative, or zero.
  *  This implementation uses a topological-sort based algorithm.
  *  the distTo() and hasPathTo() methods take
  *  constant time and the pathTo() method takes time proportional to the
  *  number of edges in the longest path returned.
  */


var ShortestPathTree = function (digraph, start) {
  var _this = this;

  this.edgeTo = [];
  this.distTo = [];
  this.distTo[start] = 0.0;
  this.start = start;
  this.top = new Topological(digraph);
  this.top.order().forEach(function (vertex) {
    _this.relaxVertex(digraph, vertex, _this);
  });
};

ShortestPathTree.prototype.relaxEdge = function (e) {
  var distTo = this.distTo,
      edgeTo = this.edgeTo;
  var v = e.from(),
      w = e.to();

  if (distTo[w] > distTo[v] + e.weight) {
    distTo[w] = distTo[v] + e.weight;
    edgeTo[w] = e;
  }
};
/**
 * relax a vertex v in the specified digraph g
 * @param {EdgeWeightedDigraph} the apecified digraph
 * @param {Vertex} v vertex to be relaxed
 */


ShortestPathTree.prototype.relaxVertex = function (digraph, vertex, tree) {
  var distTo = tree.distTo;
  var edgeTo = tree.edgeTo;
  digraph.getAdj(vertex).forEach(function (edge) {
    var w = edge.to();
    distTo[w] = /\d/.test(distTo[w]) ? distTo[w] : Number.MAX_VALUE;
    distTo[vertex] = distTo[vertex] || 0;

    if (distTo[w] > distTo[vertex] + edge.weight) {
      // in case of the result of 0.28+0.34 is 0.62000001
      distTo[w] = parseFloat((distTo[vertex] + edge.weight).toFixed(2));
      edgeTo[w] = edge;
    }
  });
};

ShortestPathTree.prototype.getDistTo = function (v) {
  return this.distTo[v];
};

ShortestPathTree.prototype.hasPathTo = function (v) {
  var dist = this.distTo[v];
  if (v == this.start) return false;
  return /\d/.test(dist) ? dist != Number.MAX_VALUE : false;
};

ShortestPathTree.prototype.pathTo = function (v) {
  if (!this.hasPathTo(v) || v == this.start) return [];
  var path = [];
  var edgeTo = this.edgeTo;

  for (var e = edgeTo[v]; !!e; e = edgeTo[e.from()]) {
    path.push(e.to());
  }

  path.push(this.start);
  return path.reverse();
};

module.exports = ShortestPathTree;
},{"./edge_weighted_digraph":"FvoX","./topological":"kjdP"}],"VpoG":[function(require,module,exports) {
var Trie = require('../trie/trie'); // Probabilistic spellchecker based on http://norvig.com/spell-correct.html
// The general idea is simple. Given a word, the spellchecker calculates all strings that are some user-defined edit distance away. Of those many candidates, it filters the ones that are not words and then returns an array of possible corrections in order of decreasing probability, based on the edit distance and the candidate's frequency in the input corpus
// Words that are an edit distance of n away from the mispelled word are considered infinitely more probable than words that are of an edit distance >n
// wordlist is a corpus (an array) from which word probabilities are calculated (so something like /usr/share/dict/words (on OSX) will work okay, but real world text will work better)


function Spellcheck(wordlist) {
  this.trie = new Trie();
  this.trie.addStrings(wordlist);
  this.word2frequency = {};

  for (var i in wordlist) {
    if (!this.word2frequency[wordlist[i]]) {
      this.word2frequency[wordlist[i]] = 0;
    }

    this.word2frequency[wordlist[i]]++;
  }
}

Spellcheck.prototype.isCorrect = function (word) {
  return this.trie.contains(word);
}; // Returns a list of suggested corrections, from highest to lowest probability 
// maxDistance is the maximum edit distance 
// According to Norvig, literature suggests that 80% to 95% of spelling errors are an edit distance of 1 away from the correct word. This is good, because there are roughly 54n+25 strings 1 edit distance away from any given string of length n. So after maxDistance = 2, this becomes very slow.


Spellcheck.prototype.getCorrections = function (word, maxDistance) {
  var self = this;
  if (!maxDistance) maxDistance = 1;
  var edits = this.editsWithMaxDistance(word, maxDistance);
  edits = edits.slice(1, edits.length);
  edits = edits.map(function (editList) {
    return editList.filter(function (word) {
      return self.isCorrect(word);
    }).map(function (word) {
      return [word, self.word2frequency[word]];
    }).sort(function (a, b) {
      return a[1] > b[1] ? -1 : 1;
    }).map(function (wordscore) {
      return wordscore[0];
    });
  });
  var flattened = [];

  for (var i in edits) {
    if (edits[i].length) flattened = flattened.concat(edits[i]);
  }

  return flattened.filter(function (v, i, a) {
    return a.indexOf(v) == i;
  });
}; // Returns all edits that are 1 edit-distance away from the input word


Spellcheck.prototype.edits = function (word) {
  var alphabet = 'abcdefghijklmnopqrstuvwxyz';
  var edits = [];

  for (var i = 0; i < word.length + 1; i++) {
    if (i > 0) edits.push(word.slice(0, i - 1) + word.slice(i, word.length)); // deletes

    if (i > 0 && i < word.length + 1) edits.push(word.slice(0, i - 1) + word.slice(i, i + 1) + word.slice(i - 1, i) + word.slice(i + 1, word.length)); // transposes

    for (var k = 0; k < alphabet.length; k++) {
      if (i > 0) edits.push(word.slice(0, i - 1) + alphabet[k] + word.slice(i, word.length)); // replaces

      edits.push(word.slice(0, i) + alphabet[k] + word.slice(i, word.length)); // inserts
    }
  } // Deduplicate edits


  edits = edits.filter(function (v, i, a) {
    return a.indexOf(v) == i;
  });
  return edits;
}; // Returns all edits that are up to "distance" edit distance away from the input word


Spellcheck.prototype.editsWithMaxDistance = function (word, distance) {
  return this.editsWithMaxDistanceHelper(distance, [[word]]);
};

Spellcheck.prototype.editsWithMaxDistanceHelper = function (distanceCounter, distance2edits) {
  if (distanceCounter == 0) return distance2edits;
  var currentDepth = distance2edits.length - 1;
  var words = distance2edits[currentDepth];
  var edits = this.edits(words[0]);
  distance2edits[currentDepth + 1] = [];

  for (var i in words) {
    distance2edits[currentDepth + 1] = distance2edits[currentDepth + 1].concat(this.edits(words[i]));
  }

  return this.editsWithMaxDistanceHelper(distanceCounter - 1, distance2edits);
};

module.exports = Spellcheck;
},{"../trie/trie":"iysN"}],"NBgM":[function(require,module,exports) {
/*
 Copyright (c) 2014, Lee Wenzhu

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
'use strict';

var EdgeWeightedDigraph = require('./edge_weighted_digraph'),
    Topological = require('./topological');
/**
  *  The LongestPathTree represents a data type for solving the
  *  single-source longest paths problem in edge-weighted directed
  *  acyclic graphs (DAGs). The edge weights can be positive, negative, or zero.
  *  This implementation uses a topological-sort based algorithm.
  *  the distTo() and hasPathTo() methods take
  *  constant time and the pathTo() method takes time proportional to the
  *  number of edges in the longest path returned.
  */


var LongestPathTree = function (digraph, start) {
  var _this = this;

  this.edgeTo = [];
  this.distTo = [];
  this.distTo[start] = 0.0;
  this.start = start;
  this.top = new Topological(digraph);
  this.top.order().forEach(function (vertex) {
    _this.relaxVertex(digraph, vertex, _this);
  });
};

LongestPathTree.prototype.relaxEdge = function (e) {
  var distTo = this.distTo,
      edgeTo = this.edgeTo;
  var v = e.from(),
      w = e.to();

  if (distTo[w] < distTo[v] + e.weight) {
    distTo[w] = distTo[v] + e.weight;
    edgeTo[w] = e;
  }
};
/**
 * relax a vertex v in the specified digraph g
 * @param {EdgeWeightedDigraph} the apecified digraph
 * @param {Vertex} v vertex to be relaxed
 */


LongestPathTree.prototype.relaxVertex = function (digraph, vertex, tree) {
  var distTo = tree.distTo;
  var edgeTo = tree.edgeTo;
  digraph.getAdj(vertex).forEach(function (edge) {
    var w = edge.to();
    distTo[w] = distTo[w] || 0.0;
    distTo[vertex] = distTo[vertex] || 0.0;

    if (distTo[w] < distTo[vertex] + edge.weight) {
      // in case of the result of 0.28+0.34 is 0.62000001
      distTo[w] = parseFloat((distTo[vertex] + edge.weight).toFixed(2));
      edgeTo[w] = edge;
    }
  });
};

LongestPathTree.prototype.getDistTo = function (v) {
  return this.distTo[v];
};

LongestPathTree.prototype.hasPathTo = function (v) {
  return !!this.distTo[v];
};

LongestPathTree.prototype.pathTo = function (v) {
  if (!this.hasPathTo(v)) return [];
  var path = [];
  var edgeTo = this.edgeTo;

  for (var e = edgeTo[v]; !!e; e = edgeTo[e.from()]) {
    path.push(e.to());
  }

  path.push(this.start);
  return path.reverse();
};

module.exports = LongestPathTree;
},{"./edge_weighted_digraph":"FvoX","./topological":"kjdP"}],"a1HV":[function(require,module,exports) {
/*
Copyright (c) 2011, 2018 Rob Ellis, Chris Umbel, Hugo W.L. ter Doest

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var _ = require("underscore")._,
    Tokenizer = require('../tokenizers/regexp_tokenizer').WordTokenizer,
    tokenizer = new Tokenizer(),
    frequencies = {},
    nrOfNgrams = 0;

exports.setTokenizer = function (t) {
  if (!_.isFunction(t.tokenize)) throw new Error('Expected a valid Tokenizer');
  tokenizer = t;
};

exports.ngrams = function (sequence, n, startSymbol, endSymbol, stats) {
  return ngrams(sequence, n, startSymbol, endSymbol, stats);
};

exports.bigrams = function (sequence, startSymbol, endSymbol, stats) {
  return ngrams(sequence, 2, startSymbol, endSymbol, stats);
};

exports.trigrams = function (sequence, startSymbol, endSymbol, stats) {
  return ngrams(sequence, 3, startSymbol, endSymbol, stats);
};

exports.multrigrams = function (sequence, n, startSymbol, endSymbol, stats) {
  return ngrams(sequence, n, startSymbol, endSymbol, stats);
}; // Calculates a key (string) that can be used for a map


function arrayToKey(arr) {
  result = "(";
  arr.forEach(function (x) {
    result += x + ", ";
  });
  result = result.substr(0, result.length - 2) + ")";
  return result;
}

; // Updates the statistics for the new ngram

function countNgrams(ngram) {
  nrOfNgrams++;
  var key = arrayToKey(ngram);

  if (!frequencies[key]) {
    frequencies[key] = 0;
  }

  frequencies[key]++;
} // If stats is true, statistics will be returned


var ngrams = function (sequence, n, startSymbol, endSymbol, stats) {
  var result = [];
  frequencies = {};
  nrOfNgrams = 0;

  if (!_(sequence).isArray()) {
    sequence = tokenizer.tokenize(sequence);
  }

  var count = _.max([0, sequence.length - n + 1]); // Check for left padding    


  if (typeof startSymbol !== "undefined" && startSymbol !== null) {
    // Create an array of (n) start symbols
    var blanks = [];

    for (var i = 0; i < n; i++) {
      blanks.push(startSymbol);
    } // Create the left padding


    for (var p = n - 1; p > 0; p--) {
      // Create a tuple of (p) start symbols and (n - p) words
      var ngram = blanks.slice(0, p).concat(sequence.slice(0, n - p));
      result.push(ngram);

      if (stats) {
        countNgrams(ngram);
      }
    }
  } // Build the complete ngrams


  for (var i = 0; i < count; i++) {
    var ngram = sequence.slice(i, i + n);
    result.push(ngram);

    if (stats) {
      countNgrams(ngram);
    }
  } // Check for right padding


  if (typeof endSymbol !== "undefined" && endSymbol !== null) {
    // Create an array of (n) end symbols
    var blanks = [];

    for (var i = 0; i < n; i++) {
      blanks.push(endSymbol);
    } // create the right padding


    for (var p = n - 1; p > 0; p--) {
      // Create a tuple of (p) start symbols and (n - p) words
      var ngram = sequence.slice(sequence.length - p, sequence.length).concat(blanks.slice(0, n - p));
      result.push(ngram);

      if (stats) {
        countNgrams(ngram);
      }
    }
  }

  if (stats) {
    // Count frequencies
    var Nr = {};
    Object.keys(frequencies).forEach(function (key) {
      if (!Nr[frequencies[key]]) {
        Nr[frequencies[key]] = 0;
      }

      Nr[frequencies[key]]++;
    }); // Return the ngrams AND statistics

    return {
      "ngrams": result,
      "frequencies": frequencies,
      "Nr": Nr,
      "numberOfNgrams": nrOfNgrams
    };
  } else {
    // Do not break existing API of this module 
    return result;
  }
};
},{"underscore":"h15N","../tokenizers/regexp_tokenizer":"LYyI"}],"k7oS":[function(require,module,exports) {
/*
Copyright (c) 2014, Lee Wenzhu

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
var _ = require("underscore")._;

exports.ngrams = function (sequence, n, startSymbol, endSymbol) {
  return ngrams(sequence, n, startSymbol, endSymbol);
};

exports.bigrams = function (sequence, startSymbol, endSymbol) {
  return ngrams(sequence, 2, startSymbol, endSymbol);
};

exports.trigrams = function (sequence, startSymbol, endSymbol) {
  return ngrams(sequence, 3, startSymbol, endSymbol);
};

var ngrams = function (sequence, n, startSymbol, endSymbol) {
  var result = [],
      i;

  if (!_(sequence).isArray()) {
    sequence = sequence.split('');
  }

  var count = _.max([0, sequence.length - n + 1]); // Check for left padding    


  if (typeof startSymbol !== "undefined" && startSymbol !== null) {
    // Create an array of (n) start symbols
    var blanks = [];

    for (i = 0; i < n; i++) {
      blanks.push(startSymbol);
    } // Create the left padding


    for (var p = n - 1; p > 0; p--) {
      // Create a tuple of (p) start symbols and (n - p) words
      result.push(blanks.slice(0, p).concat(sequence.slice(0, n - p)));
    }
  } // Build the complete ngrams


  for (i = 0; i < count; i++) {
    result.push(sequence.slice(i, i + n));
  } // Check for right padding


  if (typeof endSymbol !== "undefined" && endSymbol !== null) {
    // Create an array of (n) end symbols
    var blanks = [];

    for (var i = 0; i < n; i++) {
      blanks.push(endSymbol);
    } // create the right padding


    for (var p = n - 1; p > 0; p--) {
      // Create a tuple of (p) start symbols and (n - p) words
      result.push(sequence.slice(sequence.length - p, sequence.length).concat(blanks.slice(0, n - p)));
    }
  }

  return result;
};
},{"underscore":"h15N"}],"Ls2c":[function(require,module,exports) {
/*
Copyright (c) 2012, Adam Phillabaum, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

Unless otherwise stated by a specific section of code

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// Computes the Jaro distance between two string -- intrepreted from:
// http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance
// s1 is the first string to compare
// s2 is the second string to compare
function distance(s1, s2) {
  if (typeof s1 !== "string" || typeof s2 !== "string") {
    return 0;
  }

  if (s1.length === 0 || s2.length === 0) {
    return 0;
  }

  var matchWindow = Math.floor(Math.max(s1.length, s2.length) / 2.0) - 1;
  var matches1 = new Array(s1.length);
  var matches2 = new Array(s2.length);
  var m = 0; // number of matches

  var t = 0; // number of transpositions

  var i = 0; // index for string 1

  var k = 0; // index for string 2
  //debug helpers
  //console.log("s1: " + s1 + "; s2: " + s2);
  //console.log(" - matchWindow: " + matchWindow);

  for (i = 0; i < s1.length; i++) {
    // loop to find matched characters
    var start = Math.max(0, i - matchWindow); // use the higher of the window diff

    var end = Math.min(i + matchWindow + 1, s2.length); // use the min of the window and string 2 length

    for (k = start; k < end; k++) {
      // iterate second string index
      if (matches2[k]) {
        // if second string character already matched
        continue;
      }

      if (s1[i] !== s2[k]) {
        // characters don't match
        continue;
      } // assume match if the above 2 checks don't continue


      matches1[i] = true;
      matches2[k] = true;
      m++;
      break;
    }
  } // nothing matched


  if (m === 0) {
    return 0.0;
  }

  k = 0; // reset string 2 index

  for (i = 0; i < s1.length; i++) {
    // loop to find transpositions
    if (!matches1[i]) {
      // non-matching character
      continue;
    }

    while (!matches2[k]) {
      // move k index to the next match
      k++;
    }

    if (s1[i] !== s2[k]) {
      // if the characters don't match, increase transposition
      // HtD: t is always less than the number of matches m, because transpositions are a subset of matches
      t++;
    }

    k++; // iterate k index normally
  } // transpositions divided by 2


  t = t / 2.0;
  return (m / s1.length + m / s2.length + (m - t) / m) / 3.0; // HtD: therefore, m - t > 0, and m - t < m
  // HtD: => return value is between 0 and 1
} // Computes the Winkler distance between two string -- intrepreted from:
// http://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance
// s1 is the first string to compare
// s2 is the second string to compare
// dj is the Jaro Distance (if you've already computed it), leave blank and the method handles it
// ignoreCase: if true strings are first converted to lower case before comparison


function JaroWinklerDistance(s1, s2, dj, ignoreCase) {
  if (s1 === s2) {
    return 1;
  } else {
    if (ignoreCase) {
      s1 = s1.toLowerCase();
      s2 = s2.toLowerCase();
    } //console.log(news1);
    //console.log(news2);


    var jaro = typeof dj === 'undefined' ? distance(s1, s2) : dj;
    var p = 0.1; // default scaling factor

    var l = 0; // length of the matching prefix

    while (s1[l] === s2[l] && l < 4) {
      l++;
    } // HtD: 1 - jaro >= 0


    return jaro + l * p * (1 - jaro);
  }
}

module.exports = JaroWinklerDistance;
},{}],"dOpz":[function(require,module,exports) {
/*
Copyright (c) 2012, Sid Nallu, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/*
 * contribution by sidred123
 */

/*
 * Compute the Levenshtein distance between two strings.
 * Algorithm based from Speech and Language Processing - Daniel Jurafsky and James H. Martin.
 */
var _ = require('underscore'); // Walk the path back from the matchEnd to the beginning of the match.
// Do this by traversing the distanceMatrix as you would a linked list,
// following going from cell child to parent until reach row 0.


function _getMatchStart(distanceMatrix, matchEnd, sourceLength) {
  var row = sourceLength;
  var column = matchEnd;
  var tmpRow;
  var tmpColumn; // match will be empty string

  if (matchEnd === 0) {
    return 0;
  }

  while (row > 1 && column > 1) {
    tmpRow = row;
    tmpColumn = column;
    row = distanceMatrix[tmpRow][tmpColumn].parentCell.row;
    column = distanceMatrix[tmpRow][tmpColumn].parentCell.column;
  }

  return column - 1;
}

function getMinCostSubstring(distanceMatrix, source, target) {
  var sourceLength = source.length;
  var targetLength = target.length;
  var minDistance = sourceLength + targetLength;
  var matchEnd = targetLength; // Find minimum value in last row of the cost matrix. This cell marks the
  // end of the match string.

  for (var column = 0; column <= targetLength; column++) {
    if (minDistance > distanceMatrix[sourceLength][column].cost) {
      minDistance = distanceMatrix[sourceLength][column].cost;
      matchEnd = column;
    }
  }

  matchStart = _getMatchStart(distanceMatrix, matchEnd, sourceLength);
  return {
    substring: target.slice(matchStart, matchEnd),
    distance: minDistance
  };
}
/*
* Returns the Damerau-Levenshtein distance between strings. Counts the distance
* between two strings by returning the number of edit operations required to
* convert `source` into `target`.
*
* Valid edit operations are:
*  - transposition, insertion, deletion, and substitution
*
* Options:
*  insertion_cost: (default: 1)
*  deletion_cost: number (default: 1)
*  substitution_cost: number (default: 1)
*  transposition_cost: number (default: 1)
*  search: boolean (default: false)
*  restricted: boolean (default: false)
*/


function DamerauLevenshteinDistance(source, target, options) {
  var damLevOptions = _.extend({
    transposition_cost: 1,
    restricted: false
  }, options || {}, {
    damerau: true
  });

  return levenshteinDistance(source, target, damLevOptions);
}

function LevenshteinDistance(source, target, options) {
  var levOptions = _.extend({}, options || {}, {
    damerau: false
  });

  return levenshteinDistance(source, target, levOptions);
}

function levenshteinDistance(source, target, options) {
  if (isNaN(options.insertion_cost)) options.insertion_cost = 1;
  if (isNaN(options.deletion_cost)) options.deletion_cost = 1;
  if (isNaN(options.substitution_cost)) options.substitution_cost = 1;
  if (typeof options.search !== 'boolean') options.search = false;
  var isUnrestrictedDamerau = options.damerau && !options.restricted;
  var isRestrictedDamerau = options.damerau && options.restricted;

  if (isUnrestrictedDamerau) {
    var lastRowMap = {};
  }

  var sourceLength = source.length;
  var targetLength = target.length;
  var distanceMatrix = [[{
    cost: 0
  }]]; //the root, has no parent cell

  for (var row = 1; row <= sourceLength; row++) {
    distanceMatrix[row] = [];
    distanceMatrix[row][0] = {
      cost: distanceMatrix[row - 1][0].cost + options.deletion_cost,
      parentCell: {
        row: row - 1,
        column: 0
      }
    };
  }

  for (var column = 1; column <= targetLength; column++) {
    if (options.search) {
      distanceMatrix[0][column] = {
        cost: 0
      };
    } else {
      distanceMatrix[0][column] = {
        cost: distanceMatrix[0][column - 1].cost + options.insertion_cost,
        parentCell: {
          row: 0,
          column: column - 1
        }
      };
    }
  }

  for (var row = 1; row <= sourceLength; row++) {
    if (isUnrestrictedDamerau) {
      var lastColMatch = null;
    }

    for (var column = 1; column <= targetLength; column++) {
      var costToInsert = distanceMatrix[row][column - 1].cost + options.insertion_cost;
      var costToDelete = distanceMatrix[row - 1][column].cost + options.deletion_cost;
      var sourceElement = source[row - 1];
      var targetElement = target[column - 1];
      var costToSubstitute = distanceMatrix[row - 1][column - 1].cost;

      if (sourceElement !== targetElement) {
        costToSubstitute = costToSubstitute + options.substitution_cost;
      }

      var possibleParents = [{
        cost: costToInsert,
        coordinates: {
          row: row,
          column: column - 1
        }
      }, {
        cost: costToDelete,
        coordinates: {
          row: row - 1,
          column: column
        }
      }, {
        cost: costToSubstitute,
        coordinates: {
          row: row - 1,
          column: column - 1
        }
      }]; // We can add damerau to the possibleParents if the current
      // target-letter has been encountered in our lastRowMap,
      // and if there exists a previous column in this row where the
      // row & column letters matched

      var canDamerau = isUnrestrictedDamerau && row > 1 && column > 1 && lastColMatch && targetElement in lastRowMap;

      if (canDamerau) {
        var lastRowMatch = lastRowMap[targetElement];
        var costBeforeTransposition = distanceMatrix[lastRowMatch - 1][lastColMatch - 1].cost;
        var costToTranspose = costBeforeTransposition + (row - lastRowMatch - 1) * options.deletion_cost + (column - lastColMatch - 1) * options.insertion_cost + options.transposition_cost;
        possibleParents.push({
          cost: costToTranspose,
          coordinates: {
            row: lastRowMatch - 1,
            column: lastColMatch - 1
          }
        });
      } // Source and target chars are 1-indexed in the distanceMatrix so previous
      // source/target element is (col/row - 2)


      var canDoRestrictedDamerau = isRestrictedDamerau && row > 1 && column > 1 && sourceElement === target[column - 2] && source[row - 2] === targetElement;

      if (canDoRestrictedDamerau) {
        var costBeforeTransposition = distanceMatrix[row - 2][column - 2].cost;
        possibleParents.push({
          cost: costBeforeTransposition + options.transposition_cost,
          coordinates: {
            row: row - 2,
            column: column - 2
          }
        });
      }

      var minCostParent = _.min(possibleParents, function (p) {
        return p.cost;
      });

      distanceMatrix[row][column] = {
        cost: minCostParent.cost,
        parentCell: minCostParent.coordinates
      };

      if (isUnrestrictedDamerau) {
        lastRowMap[sourceElement] = row;

        if (sourceElement === targetElement) {
          lastColMatch = column;
        }
      }
    }
  }

  if (!options.search) {
    return distanceMatrix[sourceLength][targetLength].cost;
  }

  return getMinCostSubstring(distanceMatrix, source, target);
}

module.exports = {
  LevenshteinDistance: LevenshteinDistance,
  DamerauLevenshteinDistance: DamerauLevenshteinDistance
};
},{"underscore":"h15N"}],"yzYg":[function(require,module,exports) {
/*
Copyright (c) 2011, John Crepezzi, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
// Get all of the pairs of letters for a string
var letterPairs = function (str) {
  var numPairs = str.length - 1;
  var pairs = new Array(numPairs);

  for (var i = 0; i < numPairs; i++) {
    pairs[i] = str.substring(i, i + 2);
  }

  return pairs;
}; // Get all of the pairs in all of the words for a string


var wordLetterPairs = function (str) {
  var allPairs = [],
      pairs;
  var words = str.split(/\s+/);

  for (var i = 0; i < words.length; i++) {
    pairs = letterPairs(words[i]);
    allPairs.push.apply(allPairs, pairs);
  }

  return allPairs;
}; // Perform some sanitization steps


var sanitize = function (str) {
  return str.toLowerCase().replace(/^\s+|\s+$/g, '');
}; // Compare two strings, and spit out a number from 0-1


var compare = function (str1, str2) {
  var sanitized_str1 = sanitize(str1);
  var sanitized_str2 = sanitize(str2);
  var pairs1 = wordLetterPairs(sanitized_str1);
  var pairs2 = wordLetterPairs(sanitized_str2);
  var intersection = 0,
      union = pairs1.length + pairs2.length;

  if (union === 0) {
    if (sanitized_str1 === sanitized_str2) {
      return 1;
    } else {
      return 0;
    }
  } else {
    var i, j, pair1, pair2;

    for (i = 0; i < pairs1.length; i++) {
      pair1 = pairs1[i];

      for (j = 0; j < pairs2.length; j++) {
        pair2 = pairs2[j];

        if (pair1 == pair2) {
          intersection++;
          delete pairs2[j];
          break;
        }
      }
    }

    return 2 * intersection / union;
  }
};

module.exports = compare;
},{}],"KQpg":[function(require,module,exports) {
/*
	Copyright (c) 2018, Shane Caldwell, Hugo ter Doest

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.
*/
// Computes the Hamming distance between two string -- intrepreted from:
// https://en.wikipedia.org/wiki/Hamming_distance
// s1 is the first string to compare
// s2 is the second string to compare
// Strings should have equal length
function HammingDistance(s1, s2, ignoreCase) {
  // Return -1 if one of the parameters is not a string
  if (typeof s1 != "string" || typeof s2 != "string") {
    return -1;
  } // Return -1 the lengths of the strings differ


  if (s1.length != s2.length) {
    return -1;
  }

  if (ignoreCase) {
    s1 = s1.toLowerCase();
    s2 = s2.toLowerCase();
  }

  var diffs = 0;

  for (var i = 0; i < s1.length; i++) {
    if (s1[i] != s2[i]) {
      diffs++;
    }
  }

  return diffs;
}

module.exports = HammingDistance;
},{}],"Z5wq":[function(require,module,exports) {
/*
 Copyright (c) 2013, Kenneth Koch

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * The english normalizer will create a string in which all contractions are expanded to their 
 * full meaning (i.e. "we'll" becomes "we will"). 
 *
 * It currently works off a conversion table and falls back to a set of rules.
 * Since it is applied first, the conversion table provides an "override" for the rules.
 **/
var replacer = require('../util/utils').replacer;

var conversionTable = {
  "can't": "can not",
  "won't": "will not",
  "couldn't've": "could not have",
  "i'm": "I am",
  "how'd": "how did"
};
var rules = [{
  regex: /([azAZ]*)n\'[tT]/g,
  output: "$1 not"
}, {
  regex: /([azAZ]*)\'[sS]/g,
  output: "$1 is"
}, {
  regex: /([azAZ]*)\'[lL][lL]/g,
  output: "$1 will"
}, {
  regex: /([azAZ]*)\'[rR][eE]/g,
  output: "$1 are"
}, {
  regex: /([azAZ]*)\'[vV][eE]/g,
  output: "$1 have"
}, {
  regex: /([azAZ]*)\'[dD]/g,
  output: "$1 would"
}]; // Accepts a list of tokens to expand.

var normalize_tokens = function (tokens) {
  if (typeof tokens === "string") {
    tokens = [tokens];
  }

  var results = [];
  var rule_count = rules.length;
  var num_tokens = tokens.length;
  var i, token, r, rule;

  for (i = 0; i < num_tokens; i++) {
    token = tokens[i]; // Check the conversion table

    if (conversionTable[token.toLowerCase()]) {
      results = results.concat(conversionTable[token.toLowerCase()].split(/\W+/));
    } // Apply the rules
    else {
        var matched = false;

        for (r = 0; r < rule_count; r++) {
          rule = rules[r];

          if (token.match(rule.regex)) {
            results = results.concat(token.replace(rule.regex, rule.output).split(/\W+/));
            matched = true;
            break;
          }
        }

        if (!matched) {
          results.push(token);
        }
      }
  }

  return results;
}; // export the relevant stuff.


exports.normalize_tokens = normalize_tokens;
},{"../util/utils":"Jjya"}],"yWPV":[function(require,module,exports) {
/*
 Copyright (c) 2012, Alexy Maslennikov

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * Script to remove diacritics. Original source was taken from
 * http://lehelk.com/2011/05/06/script-to-remove-diacritics/
 */
var diacriticsRemovalMap = [{
  'base': 'A',
  'letters': /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g
}, {
  'base': 'AA',
  'letters': /[\uA732]/g
}, {
  'base': 'AE',
  'letters': /[\u00C6\u01FC\u01E2]/g
}, {
  'base': 'AO',
  'letters': /[\uA734]/g
}, {
  'base': 'AU',
  'letters': /[\uA736]/g
}, {
  'base': 'AV',
  'letters': /[\uA738\uA73A]/g
}, {
  'base': 'AY',
  'letters': /[\uA73C]/g
}, {
  'base': 'B',
  'letters': /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g
}, {
  'base': 'C',
  'letters': /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g
}, {
  'base': 'D',
  'letters': /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g
}, {
  'base': 'DZ',
  'letters': /[\u01F1\u01C4]/g
}, {
  'base': 'Dz',
  'letters': /[\u01F2\u01C5]/g
}, {
  'base': 'E',
  'letters': /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g
}, {
  'base': 'F',
  'letters': /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g
}, {
  'base': 'G',
  'letters': /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g
}, {
  'base': 'H',
  'letters': /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g
}, {
  'base': 'I',
  'letters': /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g
}, {
  'base': 'J',
  'letters': /[\u004A\u24BF\uFF2A\u0134\u0248]/g
}, {
  'base': 'K',
  'letters': /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g
}, {
  'base': 'L',
  'letters': /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g
}, {
  'base': 'LJ',
  'letters': /[\u01C7]/g
}, {
  'base': 'Lj',
  'letters': /[\u01C8]/g
}, {
  'base': 'M',
  'letters': /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g
}, {
  'base': 'N',
  'letters': /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g
}, {
  'base': 'NJ',
  'letters': /[\u01CA]/g
}, {
  'base': 'Nj',
  'letters': /[\u01CB]/g
}, {
  'base': 'O',
  'letters': /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g
}, {
  'base': 'OE',
  'letters': /[\u0152]/g
}, {
  'base': 'OI',
  'letters': /[\u01A2]/g
}, {
  'base': 'OO',
  'letters': /[\uA74E]/g
}, {
  'base': 'OU',
  'letters': /[\u0222]/g
}, {
  'base': 'P',
  'letters': /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g
}, {
  'base': 'Q',
  'letters': /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g
}, {
  'base': 'R',
  'letters': /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g
}, {
  'base': 'S',
  'letters': /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g
}, {
  'base': 'T',
  'letters': /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g
}, {
  'base': 'TZ',
  'letters': /[\uA728]/g
}, {
  'base': 'U',
  'letters': /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g
}, {
  'base': 'V',
  'letters': /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g
}, {
  'base': 'VY',
  'letters': /[\uA760]/g
}, {
  'base': 'W',
  'letters': /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g
}, {
  'base': 'X',
  'letters': /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g
}, {
  'base': 'Y',
  'letters': /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g
}, {
  'base': 'Z',
  'letters': /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g
}, {
  'base': 'a',
  'letters': /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g
}, {
  'base': 'aa',
  'letters': /[\uA733]/g
}, {
  'base': 'ae',
  'letters': /[\u00E6\u01FD\u01E3]/g
}, {
  'base': 'ao',
  'letters': /[\uA735]/g
}, {
  'base': 'au',
  'letters': /[\uA737]/g
}, {
  'base': 'av',
  'letters': /[\uA739\uA73B]/g
}, {
  'base': 'ay',
  'letters': /[\uA73D]/g
}, {
  'base': 'b',
  'letters': /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g
}, {
  'base': 'c',
  'letters': /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g
}, {
  'base': 'd',
  'letters': /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g
}, {
  'base': 'dz',
  'letters': /[\u01F3\u01C6]/g
}, {
  'base': 'e',
  'letters': /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g
}, {
  'base': 'f',
  'letters': /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g
}, {
  'base': 'g',
  'letters': /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g
}, {
  'base': 'h',
  'letters': /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g
}, {
  'base': 'hv',
  'letters': /[\u0195]/g
}, {
  'base': 'i',
  'letters': /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g
}, {
  'base': 'j',
  'letters': /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g
}, {
  'base': 'k',
  'letters': /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g
}, {
  'base': 'l',
  'letters': /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g
}, {
  'base': 'lj',
  'letters': /[\u01C9]/g
}, {
  'base': 'm',
  'letters': /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g
}, {
  'base': 'n',
  'letters': /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g
}, {
  'base': 'nj',
  'letters': /[\u01CC]/g
}, {
  'base': 'o',
  'letters': /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g
}, {
  'base': 'oe',
  'letters': /[\u0153]/g
}, {
  'base': 'oi',
  'letters': /[\u01A3]/g
}, {
  'base': 'ou',
  'letters': /[\u0223]/g
}, {
  'base': 'oo',
  'letters': /[\uA74F]/g
}, {
  'base': 'p',
  'letters': /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g
}, {
  'base': 'q',
  'letters': /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g
}, {
  'base': 'r',
  'letters': /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g
}, {
  'base': 's',
  'letters': /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g
}, {
  'base': 't',
  'letters': /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g
}, {
  'base': 'tz',
  'letters': /[\uA729]/g
}, {
  'base': 'u',
  'letters': /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g
}, {
  'base': 'v',
  'letters': /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g
}, {
  'base': 'vy',
  'letters': /[\uA761]/g
}, {
  'base': 'w',
  'letters': /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g
}, {
  'base': 'x',
  'letters': /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g
}, {
  'base': 'y',
  'letters': /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g
}, {
  'base': 'z',
  'letters': /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g
}];

module.exports = function (str) {
  var rules = diacriticsRemovalMap;

  for (var i = 0; i < rules.length; i++) {
    str = str.replace(rules[i].letters, rules[i].base);
  }

  return str;
};
},{}],"cDO1":[function(require,module,exports) {
/*
 Copyright (c) 2012, Guillaume Marty

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */

/**
 * A transliteration of Katakana & Hiragana to roman characters using the
 * modified Hepburn system.
 * Rules based on CLDR transform rule set `Katakana-Latin-BGN.xml` but with
 * several bugs fixed:
 *  * Missing ū
 *  * Missing tsu + voiced kana
 *  * typos on my~ transliterations
 *  * support for long vowel sign
 *  * support for final small tsu
 *  * support for u + small vowels
 *  * support for su/shi/ji + small vowels
 *  * support for tchi/tsu/te/to + small vowels
 *  * support for fu + small vowels
 *  * support for katakana middle dot
 *
 * \@todo Take iteration marks into account.
 */
var replacer = require('../../util/utils').replacer;

var transliterationTable1 = {
  'ウァ': 'wa',
  // KATAKANA LETTER U + SMALL A
  'ウィ': 'wi',
  // KATAKANA LETTER U + SMALL I
  'ウェ': 'we',
  // KATAKANA LETTER U + SMALL E
  'ウォ': 'wo',
  // KATAKANA LETTER U + SMALL O
  'ウー': 'ū',
  // KATAKANA LETTER VU + PROLONGED SOUND MARK
  'ヴァ': 'va',
  // KATAKANA LETTER VU + SMALL A
  'ヴィ': 'vi',
  // KATAKANA LETTER VU + SMALL I
  'ヴェ': 've',
  // KATAKANA LETTER VU + SMALL E
  'ヴォ': 'vo',
  // KATAKANA LETTER VU + SMALL O
  'ヴュ': 'vyu',
  // KATAKANA LETTER VU + SMALL YU
  'うぁ': 'wa',
  // HIRAGANA LETTER U + SMALL A
  'うぃ': 'wi',
  // HIRAGANA LETTER U + SMALL I
  'うぇ': 'we',
  // HIRAGANA LETTER U + SMALL E
  'うぉ': 'wo',
  // HIRAGANA LETTER U + SMALL O
  'うー': 'ū',
  // HIRAGANA LETTER VU + PROLONGED SOUND MARK
  'ゔぁ': 'va',
  // HIRAGANA LETTER VU + SMALL A
  'ゔぃ': 'vi',
  // HIRAGANA LETTER VU + SMALL I
  'ゔぇ': 've',
  // HIRAGANA LETTER VU + SMALL E
  'ゔぉ': 'vo',
  // HIRAGANA LETTER VU + SMALL O
  'ゔゅ': 'vyu' // HIRAGANA LETTER VU + SMALL YU

};
var transliterationTable2 = {
  'イェ': 'ye',
  // KATAKANA LETTER I + SMALL E
  'ア': 'a',
  // KATAKANA LETTER A
  'イ': 'i',
  // KATAKANA LETTER I
  'ウウ': 'ū',
  // KATAKANA LETTER U + U
  'ウ': 'u',
  // KATAKANA LETTER U
  'エ': 'e',
  // KATAKANA LETTER E
  'オウ': 'ō',
  // KATAKANA LETTER O + U
  'オ': 'o',
  // KATAKANA LETTER O
  'クァ': 'kwa',
  // KATAKANA LETTER KU + SMALL A
  'クィ': 'kwi',
  // KATAKANA LETTER KU + SMALL I
  'クェ': 'kwe',
  // KATAKANA LETTER KU + SMALL E
  'クォ': 'kwo',
  // KATAKANA LETTER KU + SMALL O
  'カ': 'ka',
  // KATAKANA LETTER KA
  'キョウ': 'kyō',
  // KATAKANA LETTER KI + SMALL YO + U
  'キュウ': 'kyū',
  // KATAKANA LETTER KI + SMALL YU + U
  'キャ': 'kya',
  // KATAKANA LETTER KI + SMALL YA
  'キョ': 'kyo',
  // KATAKANA LETTER KI + SMALL YO
  'キュ': 'kyu',
  // KATAKANA LETTER KI + SMALL YU
  'キ': 'ki',
  // KATAKANA LETTER KI
  'ク': 'ku',
  // KATAKANA LETTER KU
  'ケ': 'ke',
  // KATAKANA LETTER KE
  'コウ': 'kō',
  // KATAKANA LETTER KO + U
  'コ': 'ko',
  // KATAKANA LETTER KO
  'シェ': 'she',
  // KATAKANA LETTER SI + SMALL E
  'スィ': 'si',
  // KATAKANA LETTER SU + SMALL I
  'サ': 'sa',
  // KATAKANA LETTER SA
  'ショウ': 'shō',
  // KATAKANA LETTER SI + SMALL YO + U
  'シュウ': 'shū',
  // KATAKANA LETTER SI + SMALL YU + U
  'シャ': 'sha',
  // KATAKANA LETTER SI + SMALL YA
  'ショ': 'sho',
  // KATAKANA LETTER SI + SMALL YO
  'シュ': 'shu',
  // KATAKANA LETTER SI + SMALL YU
  'シ': 'shi',
  // KATAKANA LETTER SI
  'スウ': 'sū',
  // KATAKANA LETTER SU + U
  'ス': 'su',
  // KATAKANA LETTER SU
  'セ': 'se',
  // KATAKANA LETTER SE
  'ソウ': 'sō',
  // KATAKANA LETTER SO + U
  'ソ': 'so',
  // KATAKANA LETTER SO
  'チェ': 'che',
  // KATAKANA LETTER TI + SMALL E
  'ツァ': 'tsa',
  // KATAKANA LETTER TU + SMALL A
  'ツィ': 'tsi',
  // KATAKANA LETTER TU + SMALL I
  'ツェ': 'tse',
  // KATAKANA LETTER TU + SMALL E
  'ツォ': 'tso',
  // KATAKANA LETTER TU + SMALL O
  'ティ': 'ti',
  // KATAKANA LETTER TE + SMALL I
  'ディ': 'di',
  // KATAKANA LETTER DE + SMALL I
  'テュ': 'tyu',
  // KATAKANA LETTER TE + SMALL YU
  'デュ': 'dyu',
  // KATAKANA LETTER DE + SMALL YU
  'トィ': 'twi',
  // KATAKANA LETTER TO + SMALL I
  'トゥ': 'tu',
  // KATAKANA LETTER TO + SMALL U
  'ドィ': 'dwi',
  // KATAKANA LETTER DO + SMALL I
  'ドゥ': 'du',
  // KATAKANA LETTER DO + SMALL U
  'タ': 'ta',
  // KATAKANA LETTER TA
  'チョウ': 'chō',
  // KATAKANA LETTER TI + SMALL YO + U
  'チュウ': 'chū',
  // KATAKANA LETTER TI + SMALL YU + U
  'チャ': 'cha',
  // KATAKANA LETTER TI + SMALL YA
  'チョ': 'cho',
  // KATAKANA LETTER TI + SMALL YO
  'チュ': 'chu',
  // KATAKANA LETTER TI + SMALL YU
  'チ': 'chi',
  // KATAKANA LETTER TI
  'ツウ': 'tsū',
  // KATAKANA LETTER TU + U
  'ツ': 'tsu',
  // KATAKANA LETTER TU
  'テ': 'te',
  // KATAKANA LETTER TE
  'トウ': 'tō',
  // KATAKANA LETTER TO + U
  'ト': 'to',
  // KATAKANA LETTER TO
  'ナ': 'na',
  // KATAKANA LETTER NA
  'ニョウ': 'nyō',
  // KATAKANA LETTER NI + SMALL YO + U
  'ニュウ': 'nyū',
  // KATAKANA LETTER NI + SMALL YU + U
  'ニャ': 'nya',
  // KATAKANA LETTER NI + SMALL YA
  'ニョ': 'nyo',
  // KATAKANA LETTER NI + SMALL YO
  'ニュ': 'nyu',
  // KATAKANA LETTER NI + SMALL YU
  'ニ': 'ni',
  // KATAKANA LETTER NI
  'ヌウ': 'nū',
  // KATAKANA LETTER NU + U
  'ヌ': 'nu',
  // KATAKANA LETTER NU
  'ネ': 'ne',
  // KATAKANA LETTER NE
  'ノウ': 'nō',
  // KATAKANA LETTER NO + U
  'ノ': 'no',
  // KATAKANA LETTER NO
  'ファ': 'fa',
  // KATAKANA LETTER HU + SMALL A
  'フィ': 'fi',
  // KATAKANA LETTER HU + SMALL I
  //'フゥ': 'fu', // KATAKANA LETTER HU + SMALL U
  'フェ': 'fe',
  // KATAKANA LETTER HU + SMALL E
  'フォ': 'fo',
  // KATAKANA LETTER HU + SMALL O
  'フュ': 'fyu',
  // KATAKANA LETTER HU + SMALL YU
  'ホェ': 'hwe',
  // KATAKANA LETTER HO + SMALL E
  'ハ': 'ha',
  // KATAKANA LETTER HA
  'ヒョウ': 'hyō',
  // KATAKANA LETTER HI + SMALL YO + U
  'ヒュウ': 'hyū',
  // KATAKANA LETTER HI + SMALL YU + U
  'ヒャ': 'hya',
  // KATAKANA LETTER HI + SMALL YA
  'ヒョ': 'hyo',
  // KATAKANA LETTER HI + SMALL YO
  'ヒュ': 'hyu',
  // KATAKANA LETTER HI + SMALL YU
  'ヒ': 'hi',
  // KATAKANA LETTER HI
  'フウ': 'fū',
  // KATAKANA LETTER HU + U
  'フ': 'fu',
  // KATAKANA LETTER HU
  'ヘ': 'he',
  // KATAKANA LETTER HE
  'ホウ': 'hō',
  // KATAKANA LETTER HO + U
  'ホ': 'ho',
  // KATAKANA LETTER HO
  'マ': 'ma',
  // KATAKANA LETTER MA
  'ミョウ': 'myō',
  // KATAKANA LETTER MI + SMALL YO + U
  'ミュウ': 'myū',
  // KATAKANA LETTER MI + SMALL YU + U
  'ミャ': 'mya',
  // KATAKANA LETTER MI + SMALL YA
  'ミョ': 'myo',
  // KATAKANA LETTER MI + SMALL YO
  'ミュ': 'myu',
  // KATAKANA LETTER MI + SMALL YU
  'ミ': 'mi',
  // KATAKANA LETTER MI
  'ムウ': 'mū',
  // KATAKANA LETTER MU + U
  'ム': 'mu',
  // KATAKANA LETTER MU
  'メ': 'me',
  // KATAKANA LETTER ME
  'モウ': 'mō',
  // KATAKANA LETTER MO + U
  'モ': 'mo',
  // KATAKANA LETTER MO
  'ヤ': 'ya',
  // KATAKANA LETTER YA
  'ユウ': 'yū',
  // KATAKANA LETTER YU + U
  'ユ': 'yu',
  // KATAKANA LETTER YU
  'ヨウ': 'yō',
  // KATAKANA LETTER YO + U
  'ヨ': 'yo',
  // KATAKANA LETTER YO
  'リェ': 'rye',
  // KATAKANA LETTER RI + SMALL E
  'ラ': 'ra',
  // KATAKANA LETTER RA
  'リョウ': 'ryō',
  // KATAKANA LETTER RI + SMALL YO + U
  'リュウ': 'ryū',
  // KATAKANA LETTER RI + SMALL YU + U
  'リャ': 'rya',
  // KATAKANA LETTER RI + SMALL YA
  'リョ': 'ryo',
  // KATAKANA LETTER RI + SMALL YO
  'リュ': 'ryu',
  // KATAKANA LETTER RI + SMALL YU
  'リ': 'ri',
  // KATAKANA LETTER RI
  'ルウ': 'rū',
  // KATAKANA LETTER RU + U
  'ル': 'ru',
  // KATAKANA LETTER RU
  'レ': 're',
  // KATAKANA LETTER RE
  'ロウ': 'rō',
  // KATAKANA LETTER RO + U
  'ロ': 'ro',
  // KATAKANA LETTER RO
  'ワ': 'wa',
  // KATAKANA LETTER WA
  'ヰ': 'i',
  // KATAKANA LETTER WI
  'ヱ': 'e',
  // KATAKANA LETTER WE
  'ヲ': 'o',
  // KATAKANA LETTER WO
  'ン': 'n',
  // KATAKANA LETTER N
  'グァ': 'gwa',
  // KATAKANA LETTER GU + SMALL A
  'グィ': 'gwi',
  // KATAKANA LETTER GU + SMALL I
  'グェ': 'gwe',
  // KATAKANA LETTER GU + SMALL E
  'グォ': 'gwo',
  // KATAKANA LETTER GU + SMALL O
  'ガ': 'ga',
  // KATAKANA LETTER GA
  'ギョウ': 'gyō',
  // KATAKANA LETTER GI + SMALL YO + U
  'ギュウ': 'gyū',
  // KATAKANA LETTER GI + SMALL YU + U
  'ギャ': 'gya',
  // KATAKANA LETTER GI + SMALL YA
  'ギョ': 'gyo',
  // KATAKANA LETTER GI + SMALL YO
  'ギュ': 'gyu',
  // KATAKANA LETTER GI + SMALL YU
  'ギ': 'gi',
  // KATAKANA LETTER GI
  'グウ': 'gū',
  // KATAKANA LETTER GU + U
  'グ': 'gu',
  // KATAKANA LETTER GU
  'ゲ': 'ge',
  // KATAKANA LETTER GE
  'ゴウ': 'gō',
  // KATAKANA LETTER GO + U
  'ゴ': 'go',
  // KATAKANA LETTER GO
  'ジェ': 'je',
  // KATAKANA LETTER ZI + SMALL E
  'ズィ': 'zi',
  // KATAKANA LETTER ZU + SMALL I
  'ザ': 'za',
  // KATAKANA LETTER ZA
  'ジョウ': 'jō',
  // KATAKANA LETTER ZI + SMALL YO + U
  'ジュウ': 'jū',
  // KATAKANA LETTER ZI + SMALL YU + U
  'ジャ': 'ja',
  // KATAKANA LETTER ZI + SMALL YA
  'ジョ': 'jo',
  // KATAKANA LETTER ZI + SMALL YO
  'ジュ': 'ju',
  // KATAKANA LETTER ZI + SMALL YU
  'ジ': 'ji',
  // KATAKANA LETTER ZI
  'ズウ': 'zū',
  // KATAKANA LETTER ZU + U
  'ズ': 'zu',
  // KATAKANA LETTER ZU
  'ゼ': 'ze',
  // KATAKANA LETTER ZE
  'ゾウ': 'zō',
  // KATAKANA LETTER ZO + U
  'ゾ': 'zo',
  // KATAKANA LETTER ZO
  'ダ': 'da',
  // KATAKANA LETTER DA
  'ヂ': 'ji',
  // KATAKANA LETTER DI
  'ヅウ': 'zū',
  // KATAKANA LETTER DU + U
  'ヅ': 'zu',
  // KATAKANA LETTER DU
  'デ': 'de',
  // KATAKANA LETTER DE
  'ドウ': 'dō',
  // KATAKANA LETTER DO + U
  'ド': 'do',
  // KATAKANA LETTER DO
  'ブュ': 'byu',
  // KATAKANA LETTER BU + SMALL YU
  'バ': 'ba',
  // KATAKANA LETTER BA
  'ビョウ': 'byō',
  // KATAKANA LETTER BI + SMALL YO + U
  'ビュウ': 'byū',
  // KATAKANA LETTER BI + SMALL YU + U
  'ビャ': 'bya',
  // KATAKANA LETTER BI + SMALL YA
  'ビョ': 'byo',
  // KATAKANA LETTER BI + SMALL YO
  'ビュ': 'byu',
  // KATAKANA LETTER BI + SMALL YU
  'ビ': 'bi',
  // KATAKANA LETTER BI
  'ブウ': 'bū',
  // KATAKANA LETTER BU + U
  'ブ': 'bu',
  // KATAKANA LETTER BU
  'ベ': 'be',
  // KATAKANA LETTER BE
  'ボウ': 'bō',
  // KATAKANA LETTER BO + U
  'ボ': 'bo',
  // KATAKANA LETTER BO
  'パ': 'pa',
  // KATAKANA LETTER PA
  'ピョウ': 'pyō',
  // KATAKANA LETTER PI + SMALL YO + U
  'ピュウ': 'pyū',
  // KATAKANA LETTER PI + SMALL YU + U
  'ピャ': 'pya',
  // KATAKANA LETTER PI + SMALL YA
  'ピョ': 'pyo',
  // KATAKANA LETTER PI + SMALL YO
  'ピュ': 'pyu',
  // KATAKANA LETTER PI + SMALL YU
  'ピ': 'pi',
  // KATAKANA LETTER PI
  'プウ': 'pū',
  // KATAKANA LETTER PU + U
  'プ': 'pu',
  // KATAKANA LETTER PU
  'ペ': 'pe',
  // KATAKANA LETTER PE
  'ポウ': 'pō',
  // KATAKANA LETTER PO + U
  'ポ': 'po',
  // KATAKANA LETTER PO
  'ヴ': 'v',
  // KATAKANA LETTER VU
  '・': ' ',
  // KATAKANA MIDDLE DOT
  'いぇ': 'ye',
  // HIRAGANA LETTER I + SMALL E
  'あ': 'a',
  // HIRAGANA LETTER A
  'い': 'i',
  // HIRAGANA LETTER I
  'うう': 'ū',
  // HIRAGANA LETTER U + U
  'う': 'u',
  // HIRAGANA LETTER U
  'え': 'e',
  // HIRAGANA LETTER E
  'おう': 'ō',
  // HIRAGANA LETTER O + U
  'お': 'o',
  // HIRAGANA LETTER O
  'くぁ': 'kwa',
  // HIRAGANA LETTER KU + SMALL A
  'くぃ': 'kwi',
  // HIRAGANA LETTER KU + SMALL I
  'くぇ': 'kwe',
  // HIRAGANA LETTER KU + SMALL E
  'くぉ': 'kwo',
  // HIRAGANA LETTER KU + SMALL O
  'か': 'ka',
  // HIRAGANA LETTER KA
  'きょう': 'kyō',
  // HIRAGANA LETTER KI + SMALL YO + U
  'きゅう': 'kyū',
  // HIRAGANA LETTER KI + SMALL YU + U
  'きゃ': 'kya',
  // HIRAGANA LETTER KI + SMALL YA
  'きょ': 'kyo',
  // HIRAGANA LETTER KI + SMALL YO
  'きゅ': 'kyu',
  // HIRAGANA LETTER KI + SMALL YU
  'き': 'ki',
  // HIRAGANA LETTER KI
  'くう': 'kū',
  // HIRAGANA LETTER KU + U
  'く': 'ku',
  // HIRAGANA LETTER KU
  'け': 'ke',
  // HIRAGANA LETTER KE
  'こう': 'kō',
  // HIRAGANA LETTER KO + U
  'こ': 'ko',
  // HIRAGANA LETTER KO
  'しぇ': 'she',
  // HIRAGANA LETTER SI + SMALL E
  'すぃ': 'si',
  // HIRAGANA LETTER SU + SMALL I
  'さ': 'sa',
  // HIRAGANA LETTER SA
  'しょう': 'shō',
  // HIRAGANA LETTER SI + SMALL YO + U
  'しゅう': 'shū',
  // HIRAGANA LETTER SI + SMALL YU + U
  'しゃ': 'sha',
  // HIRAGANA LETTER SI + SMALL YA
  'しょ': 'sho',
  // HIRAGANA LETTER SI + SMALL YO
  'しゅ': 'shu',
  // HIRAGANA LETTER SI + SMALL YU
  'し': 'shi',
  // HIRAGANA LETTER SI
  'すう': 'sū',
  // HIRAGANA LETTER SU + U
  'す': 'su',
  // HIRAGANA LETTER SU
  'せ': 'se',
  // HIRAGANA LETTER SE
  'そう': 'sō',
  // HIRAGANA LETTER SO + U
  'そ': 'so',
  // HIRAGANA LETTER SO
  'ちぇ': 'che',
  // HIRAGANA LETTER TI + SMALL E
  'つぁ': 'tsa',
  // HIRAGANA LETTER TU + SMALL A
  'つぃ': 'tsi',
  // HIRAGANA LETTER TU + SMALL I
  'つぇ': 'tse',
  // HIRAGANA LETTER TU + SMALL E
  'つぉ': 'tso',
  // HIRAGANA LETTER TU + SMALL O
  'てぃ': 'ti',
  // HIRAGANA LETTER TE + SMALL I
  'でぃ': 'di',
  // HIRAGANA LETTER DE + SMALL I
  'てゅ': 'tyu',
  // HIRAGANA LETTER TE + SMALL YU
  'でゅ': 'dyu',
  // HIRAGANA LETTER DE + SMALL YU
  'とぃ': 'twi',
  // HIRAGANA LETTER TO + SMALL I
  'とぅ': 'tu',
  // HIRAGANA LETTER TO + SMALL U
  'どぃ': 'dwi',
  // HIRAGANA LETTER DO + SMALL I
  'どぅ': 'du',
  // HIRAGANA LETTER DO + SMALL U
  'た': 'ta',
  // HIRAGANA LETTER TA
  'ちょう': 'chō',
  // HIRAGANA LETTER TI + SMALL YO + U
  'ちゅう': 'chū',
  // HIRAGANA LETTER TI + SMALL YU + U
  'ちゃ': 'cha',
  // HIRAGANA LETTER TI + SMALL YA
  'ちょ': 'cho',
  // HIRAGANA LETTER TI + SMALL YO
  'ちゅ': 'chu',
  // HIRAGANA LETTER TI + SMALL YU
  'ち': 'chi',
  // HIRAGANA LETTER TI
  'つう': 'tsū',
  // HIRAGANA LETTER TU + U
  'つ': 'tsu',
  // HIRAGANA LETTER TU
  'て': 'te',
  // HIRAGANA LETTER TE
  'とう': 'tō',
  // HIRAGANA LETTER TO + U
  'と': 'to',
  // HIRAGANA LETTER TO
  'な': 'na',
  // HIRAGANA LETTER NA
  'にょう': 'nyō',
  // HIRAGANA LETTER NI + SMALL YO + U
  'にゅう': 'nyū',
  // HIRAGANA LETTER NI + SMALL YU + U
  'にゃ': 'nya',
  // HIRAGANA LETTER NI + SMALL YA
  'にょ': 'nyo',
  // HIRAGANA LETTER NI + SMALL YO
  'にゅ': 'nyu',
  // HIRAGANA LETTER NI + SMALL YU
  'に': 'ni',
  // HIRAGANA LETTER NI
  'ぬう': 'nū',
  // HIRAGANA LETTER NU + U
  'ぬ': 'nu',
  // HIRAGANA LETTER NU
  'ね': 'ne',
  // HIRAGANA LETTER NE
  'のう': 'nō',
  // HIRAGANA LETTER NO + U
  'の': 'no',
  // HIRAGANA LETTER NO
  'ふぁ': 'fa',
  // HIRAGANA LETTER HU + SMALL A
  'ふぃ': 'fi',
  // HIRAGANA LETTER HU + SMALL I
  //'ふぅ': 'fu', // HIRAGANA LETTER HU + SMALL U
  'ふぇ': 'fe',
  // HIRAGANA LETTER HU + SMALL E
  'ふぉ': 'fo',
  // HIRAGANA LETTER HU + SMALL O
  'ふゅ': 'fyu',
  // HIRAGANA LETTER HU + SMALL YU
  'ほぇ': 'hwe',
  // HIRAGANA LETTER HO + SMALL E
  'は': 'ha',
  // HIRAGANA LETTER HA
  'ひょう': 'hyō',
  // HIRAGANA LETTER HI + SMALL YO + U
  'ひゅう': 'hyū',
  // HIRAGANA LETTER HI + SMALL YU + U
  'ひゃ': 'hya',
  // HIRAGANA LETTER HI + SMALL YA
  'ひょ': 'hyo',
  // HIRAGANA LETTER HI + SMALL YO
  'ひゅ': 'hyu',
  // HIRAGANA LETTER HI + SMALL YU
  'ひ': 'hi',
  // HIRAGANA LETTER HI
  'ふう': 'fū',
  // HIRAGANA LETTER HU + U
  'ふ': 'fu',
  // HIRAGANA LETTER HU
  'へ': 'he',
  // HIRAGANA LETTER HE
  'ほう': 'hō',
  // HIRAGANA LETTER HO + U
  'ほ': 'ho',
  // HIRAGANA LETTER HO
  'ま': 'ma',
  // HIRAGANA LETTER MA
  'みょう': 'myō',
  // HIRAGANA LETTER MI + SMALL YO + U
  'みゅう': 'myū',
  // HIRAGANA LETTER MI + SMALL YU + U
  'みゃ': 'mya',
  // HIRAGANA LETTER MI + SMALL YA
  'みょ': 'myo',
  // HIRAGANA LETTER MI + SMALL YO
  'みゅ': 'myu',
  // HIRAGANA LETTER MI + SMALL YU
  'み': 'mi',
  // HIRAGANA LETTER MI
  'むう': 'mū',
  // HIRAGANA LETTER MU + U
  'む': 'mu',
  // HIRAGANA LETTER MU
  'め': 'me',
  // HIRAGANA LETTER ME
  'もう': 'mō',
  // HIRAGANA LETTER MO + U
  'も': 'mo',
  // HIRAGANA LETTER MO
  'や': 'ya',
  // HIRAGANA LETTER YA
  'ゆう': 'yū',
  // HIRAGANA LETTER YU + U
  'ゆ': 'yu',
  // HIRAGANA LETTER YU
  'よう': 'yō',
  // HIRAGANA LETTER YO + U
  'よ': 'yo',
  // HIRAGANA LETTER YO
  'りぇ': 'rye',
  // HIRAGANA LETTER RI + SMALL E
  'ら': 'ra',
  // HIRAGANA LETTER RA
  'りょう': 'ryō',
  // HIRAGANA LETTER RI + SMALL YO + U
  'りゅう': 'ryū',
  // HIRAGANA LETTER RI + SMALL YU + U
  'りゃ': 'rya',
  // HIRAGANA LETTER RI + SMALL YA
  'りょ': 'ryo',
  // HIRAGANA LETTER RI + SMALL YO
  'りゅ': 'ryu',
  // HIRAGANA LETTER RI + SMALL YU
  'り': 'ri',
  // HIRAGANA LETTER RI
  'るう': 'rū',
  // HIRAGANA LETTER RU + U
  'る': 'ru',
  // HIRAGANA LETTER RU
  'れ': 're',
  // HIRAGANA LETTER RE
  'ろう': 'rō',
  // HIRAGANA LETTER RO + U
  'ろ': 'ro',
  // HIRAGANA LETTER RO
  'わ': 'wa',
  // HIRAGANA LETTER WA
  'ゐ': 'i',
  // HIRAGANA LETTER WI
  'ゑ': 'e',
  // HIRAGANA LETTER WE
  'を': 'o',
  // HIRAGANA LETTER WO
  'ん': 'n',
  // HIRAGANA LETTER N
  'ぐぁ': 'gwa',
  // HIRAGANA LETTER GU + SMALL A
  'ぐぃ': 'gwi',
  // HIRAGANA LETTER GU + SMALL I
  'ぐぇ': 'gwe',
  // HIRAGANA LETTER GU + SMALL E
  'ぐぉ': 'gwo',
  // HIRAGANA LETTER GU + SMALL O
  'が': 'ga',
  // HIRAGANA LETTER GA
  'ぎょう': 'gyō',
  // HIRAGANA LETTER GI + SMALL YO + U
  'ぎゅう': 'gyū',
  // HIRAGANA LETTER GI + SMALL YU + U
  'ぎゃ': 'gya',
  // HIRAGANA LETTER GI + SMALL YA
  'ぎょ': 'gyo',
  // HIRAGANA LETTER GI + SMALL YO
  'ぎゅ': 'gyu',
  // HIRAGANA LETTER GI + SMALL YU
  'ぎ': 'gi',
  // HIRAGANA LETTER GI
  'ぐう': 'gū',
  // HIRAGANA LETTER GU + U
  'ぐ': 'gu',
  // HIRAGANA LETTER GU
  'げ': 'ge',
  // HIRAGANA LETTER GE
  'ごう': 'gō',
  // HIRAGANA LETTER GO + U
  'ご': 'go',
  // HIRAGANA LETTER GO
  'じぇ': 'je',
  // HIRAGANA LETTER ZI + SMALL E
  'ずぃ': 'zi',
  // HIRAGANA LETTER ZU + SMALL I
  'ざ': 'za',
  // HIRAGANA LETTER ZA
  'じょう': 'jō',
  // HIRAGANA LETTER ZI + SMALL YO + U
  'じゅう': 'jū',
  // HIRAGANA LETTER ZI + SMALL YU + U
  'じゃ': 'ja',
  // HIRAGANA LETTER ZI + SMALL YA
  'じょ': 'jo',
  // HIRAGANA LETTER ZI + SMALL YO
  'じゅ': 'ju',
  // HIRAGANA LETTER ZI + SMALL YU
  'じ': 'ji',
  // HIRAGANA LETTER ZI
  'ずう': 'zū',
  // HIRAGANA LETTER ZU + U
  'ず': 'zu',
  // HIRAGANA LETTER ZU
  'ぜ': 'ze',
  // HIRAGANA LETTER ZE
  'ぞう': 'zō',
  // HIRAGANA LETTER ZO + U
  'ぞ': 'zo',
  // HIRAGANA LETTER ZO
  'だ': 'da',
  // HIRAGANA LETTER DA
  'ぢ': 'ji',
  // HIRAGANA LETTER DI
  'づう': 'zū',
  // HIRAGANA LETTER DU + U
  'づ': 'zu',
  // HIRAGANA LETTER DU
  'で': 'de',
  // HIRAGANA LETTER DE
  'どう': 'dō',
  // HIRAGANA LETTER DO + U
  'ど': 'do',
  // HIRAGANA LETTER DO
  'ぶゅ': 'byu',
  // HIRAGANA LETTER BU + SMALL YU
  'ば': 'ba',
  // HIRAGANA LETTER BA
  'びょう': 'byō',
  // HIRAGANA LETTER BI + SMALL YO + U
  'びゅう': 'byū',
  // HIRAGANA LETTER BI + SMALL YU + U
  'びゃ': 'bya',
  // HIRAGANA LETTER BI + SMALL YA
  'びょ': 'byo',
  // HIRAGANA LETTER BI + SMALL YO
  'びゅ': 'byu',
  // HIRAGANA LETTER BI + SMALL YU
  'び': 'bi',
  // HIRAGANA LETTER BI
  'ぶう': 'bū',
  // HIRAGANA LETTER BU + U
  'ぶ': 'bu',
  // HIRAGANA LETTER BU
  'べ': 'be',
  // HIRAGANA LETTER BE
  'ぼう': 'bō',
  // HIRAGANA LETTER BO + U
  'ぼ': 'bo',
  // HIRAGANA LETTER BO
  'ぱ': 'pa',
  // HIRAGANA LETTER PA
  'ぴょう': 'pyō',
  // HIRAGANA LETTER PI + SMALL YO + U
  'ぴゅう': 'pyū',
  // HIRAGANA LETTER PI + SMALL YU + U
  'ぴゃ': 'pya',
  // HIRAGANA LETTER PI + SMALL YA
  'ぴょ': 'pyo',
  // HIRAGANA LETTER PI + SMALL YO
  'ぴゅ': 'pyu',
  // HIRAGANA LETTER PI + SMALL YU
  'ぴ': 'pi',
  // HIRAGANA LETTER PI
  'ぷう': 'pū',
  // HIRAGANA LETTER PU + U
  'ぷ': 'pu',
  // HIRAGANA LETTER PU
  'ぺ': 'pe',
  // HIRAGANA LETTER PE
  'ぽう': 'pō',
  // HIRAGANA LETTER PO + U
  'ぽ': 'po',
  // HIRAGANA LETTER PO
  'ゔ': 'v' // HIRAGANA LETTER VU

};
var transliterationTable3 = {
  'aァ': 'ā',
  'aぁ': 'ā',
  'iィー': 'ī',
  'iィ': 'ī',
  'iぃー': 'ī',
  'iぃ': 'ī',
  'aー': 'ā',
  'iー': 'ī',
  'uー': 'ū',
  'eー': 'ē',
  'oー': 'ō',
  // Fallback for small vowels
  'ァ': 'a',
  'ィ': 'i',
  'ゥ': 'u',
  'ェ': 'e',
  'ォ': 'o',
  'ぁ': 'a',
  'ぃ': 'i',
  'ぅ': 'u',
  'ぇ': 'e',
  'ぉ': 'o'
};
var replace1 = replacer(transliterationTable1);
var replace2 = replacer(transliterationTable2);
var replace3 = replacer(transliterationTable3);

module.exports = function (str) {
  str = replace1(str);
  str = str.replace(/ッ(?=[ン])/g, 'n') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[ん])/g, 'n') // HIRAGANA LETTER SMALL TU
  .replace(/ン(?=[バビブベボパピプペポマミムメモ])/g, 'm') // KATAKANA LETTER N
  .replace(/ん(?=[ばびぶべぼぱぴぷぺぽまみむめも])/g, 'm') // HIRAGANA LETTER N
  .replace(/ン(?=[ヤユヨアイウエオ])/g, "n'") // KATAKANA LETTER N
  .replace(/ん(?=[やゆよあいうえお])/g, "n'"); // HIRAGANA LETTER N

  str = str.replace(/ッ(?=[カキクケコ])/g, 'k') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[かきくけこ])/g, 'k') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[ガギグゲゴ])/g, 'g') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[がぎぐげご])/g, 'g') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[サシスセソ])/g, 's') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[さしすせそ])/g, 's') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[ザズゼゾ])/g, 'z') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[ざずぜぞ])/g, 'z') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[ジ])/g, 'j') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[じ])/g, 'j') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[タチツテト])/g, 't') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[たちつてと])/g, 't') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[ダヂヅデド])/g, 't') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[だぢづでど])/g, 't') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[ハヒヘホ])/g, 'h') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[はひへほ])/g, 'h') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[フ])/g, 'f') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[ふ])/g, 'f') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[バビブベボ])/g, 'b') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[ばびぶべぼ])/g, 'b') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[パピプペポ])/g, 'p') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[ぱぴぷぺぽ])/g, 'p') // HIRAGANA LETTER SMALL TU
  .replace(/ッ(?=[ラリルレロ])/g, 'r') // KATAKANA LETTER SMALL TU
  .replace(/っ(?=[らりるれろ])/g, 'r'); // HIRAGANA LETTER SMALL TU

  str = replace2(str);
  str = replace3(str);
  str = str.replace(/(ッ|っ)\B/g, 't'); // FINAL KATAKANA LETTER SMALL TU

  return str;
};
},{"../../util/utils":"Jjya"}],"yvKV":[function(require,module,exports) {
/*
  Rule templates that provide metadata for generating transformation rules
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var ruleTemplates = {
  // Predicates as used in the English rules in data/English/tr_from_posjs.txt
  "NEXT-TAG": {
    // maps to the predicate function
    "function": next_tag_is,
    // Minimum required space before or after current position to be a relevant predicate
    "window": [0, 1],
    // The number of parameters the predicate takes
    "nrParameters": 1,
    // Function that returns relevant values for parameter 1
    "parameter1Values": nextTagParameterValues
  },
  "NEXT-WORD-IS-CAP": {
    "function": next_word_is_cap,
    "window": [0, 1],
    "nrParameters": 0
  },
  "PREV-1-OR-2-OR-3-TAG": {
    "function": prev_1_or_2_or_3_tag,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prev1Or2Or3TagParameterValues
  },
  "PREV-1-OR-2-TAG": {
    "function": prev_1_or_2_tag,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prev1Or2TagParameterValues
  },
  "NEXT-WORD-IS-TAG": {
    "function": next_tag_is,
    "window": [0, 1],
    "nrParameters": 1,
    "parameter1Values": nextTagParameterValues
  },
  "PREV-TAG": {
    "function": prev_tag_is,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prevTagParameterValues
  },

  /*
  "CURRENT-WORD-IS-TAG": {
   "function": current_word_is_tag,
   "window": [0],
   "nrParameter": 1,
   "parameter1Values": currentTagParameterValues
   },
  */
  "PREV-WORD-IS-CAP": {
    "function": prev_word_is_cap,
    "window": [-1, 0],
    "nrParameters": 0
  },
  "CURRENT-WORD-IS-CAP": {
    "function": current_word_is_cap,
    "window": [0, 0],
    "nrParameters": 0
  },
  "CURRENT-WORD-IS-NUMBER": {
    "function": current_word_is_number,
    "window": [0, 0],
    "nrParameters": 0
  },
  "CURRENT-WORD-IS-URL": {
    "function": current_word_is_url,
    "window": [0, 0],
    "nrParameters": 0
  },
  "CURRENT-WORD-ENDS-WITH": {
    "function": current_word_ends_with,
    "window": [0, 0],
    "nrParameters": 1,
    "parameter1Values": currentWordEndsWithParameterValues
  },
  "PREV-WORD-IS": {
    "function": prev_word_is,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prevWordParameterValues
  },
  // Predicates as used in the Dutch rules in data/Dutch/brill_CONTEXTRULES.jg
  "PREVTAG": {
    "function": prev_tag_is,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prevTagParameterValues
  },
  "NEXT1OR2TAG": {
    "function": next_1_or_2_tag_is,
    "window": [0, 1],
    "nrParameters": 1,
    "parameter1Values": next1Or2TagIsParameterValues
  },
  "NEXTTAG": {
    "function": next_tag_is,
    "window": [0, 1],
    "nrParameters": 1,
    "parameter1Values": nextTagParameterValues
  },
  "PREV1OR2TAG": {
    "function": prev_1_or_2_tag,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prev1Or2TagParameterValues
  },
  "WDAND2TAGAFT": {
    "function": current_word_and_2_tag_after_are,
    "window": [0, 2],
    "nrParameters": 2,
    "parameter1Values": currentWordParameterValues,
    "parameter2Values": twoTagAfterParameterValues
  },
  "NEXT1OR2OR3TAG": {
    "function": next_1_or_2_or_3_tag,
    // Minimum required window to apply this template is one tag to the right
    "window": [0, 1],
    "nrParameters": 1,
    "parameter1Values": next1Or2Or3TagParameterValues
  },
  "CURWD": {
    "function": current_word_is,
    "window": [0, 0],
    "nrParameters": 1,
    "parameter1Values": currentWordParameterValues
  },
  "SURROUNDTAG": {
    "function": surrounded_by_tags,
    "window": [-1, 1],
    "nrParameters": 2,
    "parameter1Values": prevTagParameterValues,
    "parameter2Values": nextTagParameterValues
  },
  "PREV1OR2OR3TAG": {
    "function": prev_1_or_2_or_3_tag,
    // Minimum required window to apply this template is one tag to the left
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prev1Or2Or3TagParameterValues
  },
  "WDNEXTTAG": {
    "function": current_word_and_next_tag_are,
    "window": [0, 1],
    "nrParameters": 2,
    "parameter1Values": currentWordParameterValues,
    "parameter2Values": nextTagParameterValues
  },
  "PREV1OR2WD": {
    "function": prev_1_or_2_word_is,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prev1Or2WordParameterValues
  },
  "NEXTWD": {
    "function": next_word_is,
    "window": [0, 1],
    "nrParameters": 1,
    "parameter1Values": nextWordParameterValues
  },
  "PREVWD": {
    "function": prev_word_is,
    "window": [-1, 0],
    "nrParameters": 1,
    "parameter1Values": prevWordParameterValues
  },
  "NEXT2TAG": {
    "function": next_2_tag_is,
    "window": [0, 2],
    "nrParameters": 1,
    "parameter1Values": next2TagParameterValues
  },
  "WDAND2TAGBFR": {
    "function": current_word_and_2_tag_before_are,
    "window": [-2, 0],
    "nrParameters": 2,
    "parameter1Values": currentWordParameterValues,
    "parameter2Values": twoTagBeforeParameterValues
  },
  "WDAND2AFT": {
    "function": current_word_and_2_after_are,
    "window": [0, 2],
    "nrParameters": 2,
    "parameter1Values": currentWordParameterValues,
    "parameter2Values": twoTagAfterParameterValues
  },
  "WDPREVTAG": {
    "function": current_word_and_prev_tag_are,
    "window": [-1, 0],
    "nrParameters": 2,
    "parameter1Values": currentWordParameterValues,
    "parameter2Values": prevTagParameterValues
  },
  "RBIGRAM": {
    "function": right_bigram_is,
    "window": [0, 1],
    "nrParameters": 2,
    "parameter1Values": currentWordParameterValues,
    "parameter2Values": nextWordParameterValues
  },
  "LBIGRAM": {
    "function": left_bigram_is,
    "window": [-1, 0],
    "nrParameters": 2,
    "parameter1Values": prevWordParameterValues,
    "parameter2Values": currentWordParameterValues
  },
  "NEXTBIGRAM": {
    "function": next_bigram_is,
    "window": [0, 2],
    "nrParameters": 2,
    "parameter1Values": nextWordParameterValues,
    "parameter2Values": twoWordAfterParameterValues
  },
  "PREVBIGRAM": {
    "function": prev_bigram_is,
    "window": [-2, 0],
    "nrParameters": 2,
    "parameter1Values": twoWordBeforeParameterValues,
    "parameter2Values": prevWordParameterValues
  },
  "PREV2TAG": {
    "function": prev_2_tag_is,
    "window": [-2, 0],
    "nrParameters": 2,
    "parameter1Values": twoTagBeforeParameterValues,
    "parameter2Values": prevTagParameterValues
  },
  "NEXT1OR2WD": {
    "function": next_1_or_2_word_is,
    "window": [0, 1],
    "nrParameters": 1,
    "parameter1Values": next1Or2WordParameterValues
  },
  "DEFAULT": {
    "function": default_predicate,
    "window": [0, 0],
    "nrParameters": 0
  }
}; // ==================================
// Predicates that start with words
// ==================================

function next_word_is_cap(sentence, i, parameter) {
  if (i < sentence.taggedWords.length - 1) {
    var next_word = sentence.taggedWords[i + 1].token;
    return next_word[0] === next_word[0].toUpperCase();
  }

  return false;
}

function next_word_is(sentence, i, parameter) {
  if (i < sentence.taggedWords.length - 1) {
    return sentence.taggedWords[i + 1].token === parameter;
  }
}

function nextWordParameterValues(sentence, i) {
  if (i < sentence.taggedWords.length - 1) {
    return [sentence.taggedWords[i + 1].token];
  } else {
    return [];
  }
}

function prev_word_is_cap(sentence, i, parameter) {
  var prev_word = null;

  if (i > 0) {
    prev_word = sentence.taggedWords[i - 1].token;
    return prev_word[0] === prev_word[0].toUpperCase();
  }

  return false;
}

function current_word_is_cap(sentence, i, parameter) {
  var current_word = sentence.taggedWords[i].token;
  return current_word[0] === current_word[0].toUpperCase();
}

function currentWordParameterValues(sentence, i) {
  return [sentence[i].token];
}

function current_word_is(sentence, i, parameter) {
  return sentence.taggedWords[i].token === parameter;
}

function isNumeric(num) {
  return !isNaN(num);
}

function current_word_is_number(sentence, i, parameter) {
  var is_number = isNumeric(sentence.taggedWords[i].token); // Attempt to parse it as a float

  if (!is_number) {
    is_number = parseFloat(sentence.taggedWords[i].token);
  }

  return parameter === "YES" ? is_number : !is_number;
} // Checks if the current word is a url
// Adapted from the original Javascript Brill tagger


function current_word_is_url(sentence, i, parameter) {
  var is_url = false;

  if (sentence.taggedWords[i].token.indexOf(".") > -1) {
    // url if there are two contiguous alpha characters
    if (/[a-zA-Z]{2}/.test(sentence.taggedWords[i].token)) {
      is_url = true;
    }
  }

  return parameter === "YES" ? is_url : !is_url;
}

function current_word_and_2_tag_after_are(sentence, i, parameter1, parameter2) {
  if (i < sentence.taggedWords.length - 2) {
    if (sentence.taggedWords[i + 2][1] === parameter2) {
      return sentence.taggedWords[i].token === parameter1;
    } else {
      return false;
    }
  } else {
    return false;
  }
}

function twoTagAfterParameterValues(sentence, i) {
  if (i < sentence.taggedWords.length - 2) {
    return [sentence.taggedWords[i + 2].tag];
  } else {
    return [];
  }
}

function current_word_and_next_tag_are(sentence, i, parameter1, parameter2) {
  var next_tag = false; // check current word

  var current_word = sentence.taggedWords[i].token === parameter1; // check next tag

  if (i < sentence.taggedWords.length - 1) {
    next_tag = sentence.taggedWords[i + 1].tag === parameter2;
  }

  return current_word && next_tag;
}

function current_word_and_prev_tag_are(sentence, i, parameter1, parameter2) {
  var prev_tag = false; // check current word

  var current_word = sentence.taggedWords[i].token === parameter2; // check prev tag

  if (i > 0) {
    prev_tag = sentence.taggedWords[i - 1].tag === parameter1;
  }

  return current_word && prev_tag;
}

function current_word_and_2_tag_before_are(sentence, i, parameter1, parameter2) {
  var two_tags_before = false; // check current word

  var current_word = sentence.taggedWords[i].token === parameter2;

  if (i > 1) {
    // check two tags before
    two_tags_before = sentence.taggedWords[i - 2].tag === parameter1;
  }

  return current_word && two_tags_before;
}

function twoTagBeforeParameterValues(sentence, i) {
  if (i > 1) {
    return [sentence.taggedWords[i - 2].tag];
  } else {
    return [];
  }
}

function current_word_and_2_after_are(sentence, i, parameter1, parameter2) {
  var two_words_after = false; // check current word

  var current_word = sentence.taggedWords[i].token === parameter1;

  if (i < sentence.taggedWords.length - 2) {
    two_words_after = sentence.taggedWords[i + 2].token === parameter2;
  }

  return current_word && two_words_after;
}

function prev_word_is(sentence, i, parameter) {
  if (i > 0) {
    return sentence.taggedWords[i - 1].token.toLowerCase() === parameter.toLowerCase();
  } else {
    return false;
  }
} // Returns the right value for parameter 1 of prev_word_is


function prevWordParameterValues(sentence, i) {
  if (i > 0) {
    return [sentence.taggedWords[i - 1].token];
  } else {
    return [];
  }
}

function prev_1_or_2_word_is(sentence, i, parameter) {
  var prev_1 = false;
  var prev_2 = false;

  if (i > 0) {
    prev_1 = sentence.taggedWords[i - 1].token.toLowerCase() === parameter.toLowerCase();
  }

  if (i > 1) {
    prev_2 = sentence.taggedWords[i - 2].token.toLowerCase() === parameter.toLowerCase();
  }

  return prev_1 || prev_2;
}

function prev1Or2WordParameterValues(sentence, i) {
  var values = [];

  if (i > 0) {
    values.push(sentence[i - 1].token);
  }

  if (i > 1) {
    values.push(sentence[i - 2].token);
  }

  return values;
} // Indicates whether or not this string ends with the specified string.
// Adapted from the original Javascript Brill tagger


function current_word_ends_with(sentence, i, parameter) {
  var word = sentence.taggedWords[i].token;

  if (!parameter || parameter.length > word.length) {
    return false;
  }

  return word.indexOf(parameter) === word.length - parameter.length;
} // sentence is an array of token records


function currentWordEndsWithParameterValues(sentence, i) {
  var values = ["ing"];
  return values;
}

function right_bigram_is(sentence, i, parameter1, parameter2) {
  var word_1 = sentence.taggedWords[i].token === parameter1;
  var word_2 = false;

  if (i < sentence.taggedWords.length - 1) {
    word_2 = sentence.taggedWords[i + 1].token === parameter2;
  }

  return word_1 && word_2;
}

function left_bigram_is(sentence, i, parameter1, parameter2) {
  var word_1 = false;
  var word_2 = sentence.taggedWords[i].token === parameter2;

  if (i > 0) {
    word_1 = sentence.taggedWords[i - 1].token === parameter1;
  }

  return word_1 && word_2;
}

function next_bigram_is(sentence, i, parameter1, parameter2) {
  var word_1 = false;
  var word_2 = false;

  if (i < sentence.taggedWords.length - 1) {
    word_1 = sentence.taggedWords[i + 1].token === parameter1;
  }

  if (i < sentence.taggedWords.length - 2) {
    word_2 = sentence.taggedWords[i + 2].token === parameter2;
  }

  return word_1 && word_2;
}

function twoWordAfterParameterValues(sentence, i) {
  if (i < sentence.taggedWords.length - 2) {
    return [sentence.taggedWords[i + 2].token];
  } else {
    return [];
  }
}

function prev_bigram_is(sentence, i, parameter1, parameter2) {
  var word_1 = false;
  var word_2 = false;

  if (i > 1) {
    word_1 = sentence.taggedWords[i - 2].token === parameter1;
  }

  if (i > 0) {
    word_2 = sentence.taggedWords[i - 1].token === parameter2;
  }

  return word_1 && word_2;
}

function twoWordBeforeParameterValues(sentence, i) {
  if (i > 1) {
    return [sentence.taggedWords[i - 2].token];
  } else {
    return [];
  }
}

function next_1_or_2_word_is(sentence, i, parameter1, parameter2) {
  next_1 = false;
  next_2 = false;

  if (i < sentence.taggedWords.length - 1) {
    next_1 = sentence.taggedWords[i + 1].token === parameter1;
  }

  if (i < sentence.taggedWords.length - 2) {
    next_2 = sentence.taggedWords[i + 2].token === parameter2;
  }

  return next_1 || next_2;
}

function next1Or2WordParameterValues(sentence, i) {
  var values = [];

  if (i < sentence.taggedWords.length - 1) {
    values.push(sentence.taggedWords[i + 1].token);
  }

  if (i < sentence.taggedWords.length - 2) {
    values.push(sentence.taggedWords[i + 2].token);
  }

  return values;
} // ==================================
// Predicates about tags
// ==================================


function next_tag_is(sentence, i, parameter) {
  if (i < sentence.taggedWords.length - 1) {
    return sentence.taggedWords[i + 1].tag === parameter;
  } else {
    return false;
  }
}

function nextTagParameterValues(sentence, i) {
  if (i < sentence.taggedWords.length - 1) {
    return [sentence.taggedWords[i + 1].tag];
  } else {
    return [];
  }
}

function next_2_tag_is(sentence, i, parameter) {
  if (i < sentence.taggedWords.length - 2) {
    return sentence.taggedWords[i + 2].tag === parameter;
  } else {
    return false;
  }
}

function next2TagParameterValues(sentence, i) {
  if (i < sentence.taggedWords.length - 2) {
    return [sentence.taggedWords[i + 2].tag];
  } else {
    return [];
  }
}

function next_1_or_2_tag_is(sentence, i, parameter) {
  var next_1 = false;
  var next_2 = false;

  if (i < sentence.taggedWords.length - 1) {
    next_1 = sentence.taggedWords[i + 1].tag === parameter;
  }

  if (i < sentence.taggedWords.length - 2) {
    next_2 = sentence.taggedWords[i + 2].tag === parameter;
  }

  return next_1 || next_2;
}

function next1Or2TagIsParameterValues(sentence, i) {
  var values = [];

  if (i < sentence.taggedWords.length - 1) {
    values.push(sentence.taggedWords[i + 1].tag);
  }

  if (i < sentence.taggedWords.length - 2) {
    values.push(sentence.taggedWords[i + 2].tag);
  }

  return values;
}

function next_1_or_2_or_3_tag(sentence, i, parameter) {
  var next_1 = false;
  var next_2 = false;
  var next_3 = false;

  if (i < sentence.taggedWords.length - 1) {
    next_1 = sentence.taggedWords[i + 1].tag === parameter;
  }

  if (i < sentence.taggedWords.length - 2) {
    next_2 = sentence.taggedWords[i + 2].tag === parameter;
  }

  if (i < sentence.taggedWords.length - 3) {
    next_3 = sentence.taggedWords[i + 3].tag === parameter;
  }

  return next_1 || next_2 || next_3;
}

function next1Or2Or3TagParameterValues(sentence, i) {
  var values = [];

  if (i < sentence.taggedWords.length - 1) {
    values.push(sentence.taggedWords[i + 1].tag);
  }

  if (i < sentence.taggedWords.length - 2) {
    values.push(sentence.taggedWords[i + 2].tag);
  }

  if (i < sentence.taggedWords.length - 3) {
    values.push(sentence.taggedWords[i + 3].tag);
  }

  return values;
}

function surrounded_by_tags(sentence, i, parameter1, parameter2) {
  if (i < sentence.taggedWords.length - 1) {
    // check next tag
    if (sentence.taggedWords[i + 1].tag === parameter2) {
      // check previous tag
      if (i > 0) {
        return sentence.taggedWords[i - 1].tag === parameter1;
      } else {
        return false;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
}

function prev_1_or_2_or_3_tag(sentence, i, parameter) {
  var prev_1 = null;

  if (i > 0) {
    prev_1 = sentence.taggedWords[i - 1].tag;
  }

  var prev_2 = null;

  if (i > 1) {
    prev_2 = sentence.taggedWords[i - 2].tag;
  }

  var prev_3 = null;

  if (i > 2) {
    prev_3 = sentence.taggedWords[i - 3].tag;
  }

  return prev_1 === parameter || prev_2 === parameter || prev_3 === parameter;
}

function prev1Or2Or3TagParameterValues(sentence, i) {
  var values = [];

  if (i > 0) {
    values.push(sentence.taggedWords[i - 1].tag);
  }

  if (i > 1) {
    values.push(sentence.taggedWords[i - 2].tag);
  }

  if (i > 2) {
    values.push(sentence.taggedWords[i - 3].tag);
  }

  return values;
}

function prev_1_or_2_tag(sentence, i, parameter) {
  var prev_1 = null;

  if (i > 0) {
    prev_1 = sentence.taggedWords[i - 1].tag;
  }

  var prev_2 = null;

  if (i > 1) {
    prev_2 = sentence.taggedWords[i - 2].tag;
  }

  return prev_1 === parameter || prev_2 === parameter;
}

function prev1Or2TagParameterValues(sentence, i) {
  values = [];

  if (i > 0) {
    values.push(sentence.taggedWords[i - 1].tag);
  }

  if (i > 1) {
    values.push(sentence.taggedWords[i - 2].tag);
  }

  return values;
}

function prev_tag_is(sentence, i, parameter) {
  var prev = false;

  if (i > 0) {
    prev = sentence.taggedWords[i - 1].tag === parameter;
  }

  return prev;
}

function prevTagParameterValues(sentence, i) {
  if (i > 0) {
    return [sentence.taggedWords[i - 1].tag];
  } else {
    return [];
  }
} // Looks like a useless predicate because transformation already take the
// current tag into account


function current_word_is_tag(sentence, i, parameter) {
  return sentence.taggedWords[i].tag === parameter;
}

function prev_2_tag_is(sentence, i, parameter) {
  var prev_2 = false;

  if (i > 1) {
    prev_2 = sentence.taggedWords[i - 2].tag === parameter;
  }

  return prev_2;
}

function default_predicate(sentence, i, parameter) {
  return false;
}

module.exports = ruleTemplates;
},{}],"t9KM":[function(require,module,exports) {
/*
  Predicates for the Brill tagger
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
//var log4js = require('log4js');
//var logger = log4js.getLogger();
//logger.setLevel('INFO');
var predicates = require("./RuleTemplates"); //logger.debug(predicates);


function Predicate(name, parameter1, parameter2) {
  this.name = name;
  this.meta = predicates[name];

  if (!this.meta) {
    this.meta = predicates["DEFAULT"];
  } //if (this.meta.nrParameters > 0) {


  this.parameter1 = parameter1; //}
  //if (this.meta.nrParameters > 1) {

  this.parameter2 = parameter2; //}
  //logger.debug('Predicate\n' + JSON.toString(this.meta, null, 2));
}

Predicate.prototype.evaluate = function (sentence, position) {
  //logger.debug('Predicate.evalute ' + this.name);
  var predicate = this.meta.function;
  return predicate(sentence, position, this.parameter1, this.parameter2);
};

module.exports = Predicate;
},{"./RuleTemplates":"yvKV"}],"rcGy":[function(require,module,exports) {
var at, // The index of the current character
    ch, // The current character
    escapee = {
        '"':  '"',
        '\\': '\\',
        '/':  '/',
        b:    '\b',
        f:    '\f',
        n:    '\n',
        r:    '\r',
        t:    '\t'
    },
    text,

    error = function (m) {
        // Call error when something is wrong.
        throw {
            name:    'SyntaxError',
            message: m,
            at:      at,
            text:    text
        };
    },
    
    next = function (c) {
        // If a c parameter is provided, verify that it matches the current character.
        if (c && c !== ch) {
            error("Expected '" + c + "' instead of '" + ch + "'");
        }
        
        // Get the next character. When there are no more characters,
        // return the empty string.
        
        ch = text.charAt(at);
        at += 1;
        return ch;
    },
    
    number = function () {
        // Parse a number value.
        var number,
            string = '';
        
        if (ch === '-') {
            string = '-';
            next('-');
        }
        while (ch >= '0' && ch <= '9') {
            string += ch;
            next();
        }
        if (ch === '.') {
            string += '.';
            while (next() && ch >= '0' && ch <= '9') {
                string += ch;
            }
        }
        if (ch === 'e' || ch === 'E') {
            string += ch;
            next();
            if (ch === '-' || ch === '+') {
                string += ch;
                next();
            }
            while (ch >= '0' && ch <= '9') {
                string += ch;
                next();
            }
        }
        number = +string;
        if (!isFinite(number)) {
            error("Bad number");
        } else {
            return number;
        }
    },
    
    string = function () {
        // Parse a string value.
        var hex,
            i,
            string = '',
            uffff;
        
        // When parsing for string values, we must look for " and \ characters.
        if (ch === '"') {
            while (next()) {
                if (ch === '"') {
                    next();
                    return string;
                } else if (ch === '\\') {
                    next();
                    if (ch === 'u') {
                        uffff = 0;
                        for (i = 0; i < 4; i += 1) {
                            hex = parseInt(next(), 16);
                            if (!isFinite(hex)) {
                                break;
                            }
                            uffff = uffff * 16 + hex;
                        }
                        string += String.fromCharCode(uffff);
                    } else if (typeof escapee[ch] === 'string') {
                        string += escapee[ch];
                    } else {
                        break;
                    }
                } else {
                    string += ch;
                }
            }
        }
        error("Bad string");
    },

    white = function () {

// Skip whitespace.

        while (ch && ch <= ' ') {
            next();
        }
    },

    word = function () {

// true, false, or null.

        switch (ch) {
        case 't':
            next('t');
            next('r');
            next('u');
            next('e');
            return true;
        case 'f':
            next('f');
            next('a');
            next('l');
            next('s');
            next('e');
            return false;
        case 'n':
            next('n');
            next('u');
            next('l');
            next('l');
            return null;
        }
        error("Unexpected '" + ch + "'");
    },

    value,  // Place holder for the value function.

    array = function () {

// Parse an array value.

        var array = [];

        if (ch === '[') {
            next('[');
            white();
            if (ch === ']') {
                next(']');
                return array;   // empty array
            }
            while (ch) {
                array.push(value());
                white();
                if (ch === ']') {
                    next(']');
                    return array;
                }
                next(',');
                white();
            }
        }
        error("Bad array");
    },

    object = function () {

// Parse an object value.

        var key,
            object = {};

        if (ch === '{') {
            next('{');
            white();
            if (ch === '}') {
                next('}');
                return object;   // empty object
            }
            while (ch) {
                key = string();
                white();
                next(':');
                if (Object.hasOwnProperty.call(object, key)) {
                    error('Duplicate key "' + key + '"');
                }
                object[key] = value();
                white();
                if (ch === '}') {
                    next('}');
                    return object;
                }
                next(',');
                white();
            }
        }
        error("Bad object");
    };

value = function () {

// Parse a JSON value. It could be an object, an array, a string, a number,
// or a word.

    white();
    switch (ch) {
    case '{':
        return object();
    case '[':
        return array();
    case '"':
        return string();
    case '-':
        return number();
    default:
        return ch >= '0' && ch <= '9' ? number() : word();
    }
};

// Return the json_parse function. It will have access to all of the above
// functions and variables.

module.exports = function (source, reviver) {
    var result;
    
    text = source;
    at = 0;
    ch = ' ';
    result = value();
    white();
    if (ch) {
        error("Syntax error");
    }

    // If there is a reviver function, we recursively walk the new structure,
    // passing each name/value pair to the reviver function for possible
    // transformation, starting with a temporary root object that holds the result
    // in an empty key. If there is not a reviver function, we simply return the
    // result.

    return typeof reviver === 'function' ? (function walk(holder, key) {
        var k, v, value = holder[key];
        if (value && typeof value === 'object') {
            for (k in value) {
                if (Object.prototype.hasOwnProperty.call(value, k)) {
                    v = walk(value, k);
                    if (v !== undefined) {
                        value[k] = v;
                    } else {
                        delete value[k];
                    }
                }
            }
        }
        return reviver.call(holder, key, value);
    }({'': result}, '')) : result;
};

},{}],"MRIO":[function(require,module,exports) {
var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
    gap,
    indent,
    meta = {    // table of character substitutions
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"' : '\\"',
        '\\': '\\\\'
    },
    rep;

function quote(string) {
    // If the string contains no control characters, no quote characters, and no
    // backslash characters, then we can safely slap some quotes around it.
    // Otherwise we must also replace the offending characters with safe escape
    // sequences.
    
    escapable.lastIndex = 0;
    return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c :
            '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    }) + '"' : '"' + string + '"';
}

function str(key, holder) {
    // Produce a string from holder[key].
    var i,          // The loop counter.
        k,          // The member key.
        v,          // The member value.
        length,
        mind = gap,
        partial,
        value = holder[key];
    
    // If the value has a toJSON method, call it to obtain a replacement value.
    if (value && typeof value === 'object' &&
            typeof value.toJSON === 'function') {
        value = value.toJSON(key);
    }
    
    // If we were called with a replacer function, then call the replacer to
    // obtain a replacement value.
    if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
    }
    
    // What happens next depends on the value's type.
    switch (typeof value) {
        case 'string':
            return quote(value);
        
        case 'number':
            // JSON numbers must be finite. Encode non-finite numbers as null.
            return isFinite(value) ? String(value) : 'null';
        
        case 'boolean':
        case 'null':
            // If the value is a boolean or null, convert it to a string. Note:
            // typeof null does not produce 'null'. The case is included here in
            // the remote chance that this gets fixed someday.
            return String(value);
            
        case 'object':
            if (!value) return 'null';
            gap += indent;
            partial = [];
            
            // Array.isArray
            if (Object.prototype.toString.apply(value) === '[object Array]') {
                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }
                
                // Join all of the elements together, separated with commas, and
                // wrap them in brackets.
                v = partial.length === 0 ? '[]' : gap ?
                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
                    '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }
            
            // If the replacer is an array, use it to select the members to be
            // stringified.
            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    k = rep[i];
                    if (typeof k === 'string') {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            else {
                // Otherwise, iterate through all of the keys in the object.
                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }
            
        // Join all of the member texts together, separated with commas,
        // and wrap them in braces.

        v = partial.length === 0 ? '{}' : gap ?
            '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
            '{' + partial.join(',') + '}';
        gap = mind;
        return v;
    }
}

module.exports = function (value, replacer, space) {
    var i;
    gap = '';
    indent = '';
    
    // If the space parameter is a number, make an indent string containing that
    // many spaces.
    if (typeof space === 'number') {
        for (i = 0; i < space; i += 1) {
            indent += ' ';
        }
    }
    // If the space parameter is a string, it will be used as the indent string.
    else if (typeof space === 'string') {
        indent = space;
    }

    // If there is a replacer, it must be a function or an array.
    // Otherwise, throw an error.
    rep = replacer;
    if (replacer && typeof replacer !== 'function'
    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
        throw new Error('JSON.stringify');
    }
    
    // Make a fake root object containing our value under the key of ''.
    // Return the result of stringifying the value.
    return str('', {'': value});
};

},{}],"Mdbr":[function(require,module,exports) {
exports.parse = require('./lib/parse');
exports.stringify = require('./lib/stringify');

},{"./lib/parse":"rcGy","./lib/stringify":"MRIO"}],"OTiH":[function(require,module,exports) {
var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');

module.exports = function (obj, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var space = opts.space || '';
    if (typeof space === 'number') space = Array(space+1).join(' ');
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;
    var replacer = opts.replacer || function(key, value) { return value; };

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (parent, key, node, level) {
        var indent = space ? ('\n' + new Array(level + 1).join(space)) : '';
        var colonSeparator = space ? ': ' : ':';

        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        node = replacer.call(parent, key, node);

        if (node === undefined) {
            return;
        }
        if (typeof node !== 'object' || node === null) {
            return json.stringify(node);
        }
        if (isArray(node)) {
            var out = [];
            for (var i = 0; i < node.length; i++) {
                var item = stringify(node, i, node[i], level+1) || json.stringify(null);
                out.push(indent + space + item);
            }
            return '[' + out.join(',') + indent + ']';
        }
        else {
            if (seen.indexOf(node) !== -1) {
                if (cycles) return json.stringify('__cycle__');
                throw new TypeError('Converting circular structure to JSON');
            }
            else seen.push(node);

            var keys = objectKeys(node).sort(cmp && cmp(node));
            var out = [];
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var value = stringify(node, key, node[key], level+1);

                if(!value) continue;

                var keyValue = json.stringify(key)
                    + colonSeparator
                    + value;
                ;
                out.push(indent + space + keyValue);
            }
            seen.splice(seen.indexOf(node), 1);
            return '{' + out.join(',') + indent + '}';
        }
    })({ '': obj }, '', obj, 0);
};

var isArray = Array.isArray || function (x) {
    return {}.toString.call(x) === '[object Array]';
};

var objectKeys = Object.keys || function (obj) {
    var has = Object.prototype.hasOwnProperty || function () { return true };
    var keys = [];
    for (var key in obj) {
        if (has.call(obj, key)) keys.push(key);
    }
    return keys;
};

},{"jsonify":"Mdbr"}],"pyBO":[function(require,module,exports) {
/*
  Context class
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var stringify = require('json-stable-stringify');

function Context(data) {
  this.data = data;
} // Create a predictable key string for looking up in a hash


Context.prototype.toString = function () {
  if (!this.key) {
    this.key = stringify(this.data);
  }

  return this.key;
};

module.exports = Context;
},{"json-stable-stringify":"OTiH"}],"KDM0":[function(require,module,exports) {
/*
  Sentence class that generates sample elements from sentences
  Copyright (C) 2018 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var Context = require('../../classifiers/maxent/Context');

function Sentence() {
  this.taggedWords = [];
}

Sentence.prototype.addTaggedWord = function (token, tag) {
  this.taggedWords.push({
    "token": token,
    "tag": tag
  });
};

Sentence.prototype.clone = function () {
  var s = new Sentence();
  this.taggedWords.forEach(function (wordObject) {
    s.addTaggedWord(wordObject.token, wordObject.tag);
  });
  return s;
};

module.exports = Sentence;
},{"../../classifiers/maxent/Context":"pyBO"}],"RPrf":[function(require,module,exports) {
/*
  Transformation rules for the Brill tagger
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
//var log4js = require('log4js');
//var logger = log4js.getLogger();
var Predicate = require("./Predicate");

var Sentence = require('./Sentence'); //logger.setLevel('INFO');


var category_wild_card = "*";

function TransformationRule(c1, c2, predicate, parameter1, parameter2) {
  this.literal = [c1, c2, predicate, parameter1, parameter2];
  this.predicate = new Predicate(predicate, parameter1, parameter2);
  this.old_category = c1;
  this.new_category = c2; // These members are for the learning algorithm

  this.neutral = 0;
  this.negative = 0;
  this.positive = 0;
  this.hasBeenSelectedAsHighRuleBefore = false; //logger.debug('TransformationRule constructor: ' + this.literal);
}

TransformationRule.prototype.key = function () {
  return this.literal.toString();
};

TransformationRule.prototype.apply = function (sentence, position) {
  if (sentence.taggedWords[position].tag === this.old_category || this.old_category === category_wild_card) {
    if (this.predicate.evaluate(sentence, position)) {
      sentence.taggedWords[position].tag = this.new_category; //logger.debug('TransformationRule.apply: changed category ' +
      //this.old_category + ' to ' + this.new_category +
      //' at position ' + position);
    }
  }
}; //
// Methods for processing sentences from a corpus that consist of an array of tokens
//
// Returns true if the rule applies at site. As a side effect it assigns the new
// category to newTag


TransformationRule.prototype.isApplicableAt = function (sentence, taggedSentence, i) {
  //logger.debug("TransformationRule.prototype.isApplicableAt: " + taggedSentence);
  var applies = taggedSentence.taggedWords[i].tag === this.old_category && this.predicate.evaluate(taggedSentence, i); //logger.debug("TransformationRule.prototype.isApplicableAt: " + applies);
  // Set newTag to let the trainer know what the new tag would become

  if (applies) {
    sentence.taggedWords[i].newTag = this.new_category;
  }

  return applies;
};

TransformationRule.prototype.prettyPrint = function () {
  var result = ""; // Old category and new category

  result += this.old_category + " " + this.new_category; // Predicate name

  result += " " + this.predicate.name; // Parameter 1 and 2

  if (this.predicate.parameter1) {
    result += " " + this.predicate.parameter1;

    if (this.predicate.parameter2) {
      result += " " + this.predicate.parameter2;
    }
  }

  return result;
}; // Applies the rule the given location (if it applies)


TransformationRule.prototype.applyAt = function (sentence, i) {
  var taggedSentence = sentence.clone(); //logger.debug("TransformationRule.prototype.applyAt: input sentence length: " + sentence.length);
  //logger.debug("TransformationRule.prototype.applyAt: tagged sentence length: " + taggedSentence.length);

  this.apply(sentence, i); // Assign the new tag to the corpus site

  sentence.taggedWords[i].testTag = taggedSentence.taggedWords[i].tag;
}; // Calculate the net score of this rule


TransformationRule.prototype.score = function () {
  return this.positive - this.negative;
};

module.exports = TransformationRule;
},{"./Predicate":"t9KM","./Sentence":"KDM0"}],"DTBP":[function(require,module,exports) {
module.exports = function () {
  /*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */
  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function SyntaxError(message, expected, found, offset, line, column) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.offset = offset;
    this.line = line;
    this.column = column;
    this.name = "SyntaxError";
  }

  peg$subclass(SyntaxError, Error);

  function parse(input) {
    var options = arguments.length > 1 ? arguments[1] : {},
        peg$FAILED = {},
        peg$startRuleFunctions = {
      transformation_rules: peg$parsetransformation_rules
    },
        peg$startRuleFunction = peg$parsetransformation_rules,
        peg$c0 = [],
        peg$c1 = peg$FAILED,
        peg$c2 = function (rules) {
      var result = {};

      for (var i = 0; i < rules.length; i++) {
        var rule = rules[i][1];
        result[rule.key()] = rule;
      }

      return result;
    },
        peg$c3 = function (c1, c2, pred, pars) {
      var result = null; // Construct rule

      if (pars.length === 1) {
        result = new TransformationRule(c1, c2, pred, pars[0]);
      } else {
        if (pars.length === 2) {
          result = new TransformationRule(c1, c2, pred, pars[0], pars[1]);
        } else {
          result = new TransformationRule(c1, c2, pred);
        }
      }

      return result;
    },
        peg$c4 = /^[!-~\xA1-\xFF]/,
        peg$c5 = {
      type: "class",
      value: "[!-~\\xA1-\\xFF]",
      description: "[!-~\\xA1-\\xFF]"
    },
        peg$c6 = function (characters) {
      var s = "";

      for (var i = 0; i < characters.length; i++) {
        s += characters[i];
      }

      return s;
    },
        peg$c7 = "*",
        peg$c8 = {
      type: "literal",
      value: "*",
      description: "\"*\""
    },
        peg$c9 = function (wc) {
      return wc;
    },
        peg$c10 = "\r\n",
        peg$c11 = {
      type: "literal",
      value: "\r\n",
      description: "\"\\r\\n\""
    },
        peg$c12 = "\n",
        peg$c13 = {
      type: "literal",
      value: "\n",
      description: "\"\\n\""
    },
        peg$c14 = "\r",
        peg$c15 = {
      type: "literal",
      value: "\r",
      description: "\"\\r\""
    },
        peg$c16 = "//",
        peg$c17 = {
      type: "literal",
      value: "//",
      description: "\"//\""
    },
        peg$c18 = void 0,
        peg$c19 = {
      type: "any",
      description: "any character"
    },
        peg$c20 = " ",
        peg$c21 = {
      type: "literal",
      value: " ",
      description: "\" \""
    },
        peg$c22 = "\t",
        peg$c23 = {
      type: "literal",
      value: "\t",
      description: "\"\\t\""
    },
        peg$currPos = 0,
        peg$reportedPos = 0,
        peg$cachedPos = 0,
        peg$cachedPosDetails = {
      line: 1,
      column: 1,
      seenCR: false
    },
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$reportedPos, peg$currPos);
    }

    function offset() {
      return peg$reportedPos;
    }

    function line() {
      return peg$computePosDetails(peg$reportedPos).line;
    }

    function column() {
      return peg$computePosDetails(peg$reportedPos).column;
    }

    function expected(description) {
      throw peg$buildException(null, [{
        type: "other",
        description: description
      }], peg$reportedPos);
    }

    function error(message) {
      throw peg$buildException(message, null, peg$reportedPos);
    }

    function peg$computePosDetails(pos) {
      function advance(details, startPos, endPos) {
        var p, ch;

        for (p = startPos; p < endPos; p++) {
          ch = input.charAt(p);

          if (ch === "\n") {
            if (!details.seenCR) {
              details.line++;
            }

            details.column = 1;
            details.seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            details.line++;
            details.column = 1;
            details.seenCR = true;
          } else {
            details.column++;
            details.seenCR = false;
          }
        }
      }

      if (peg$cachedPos !== pos) {
        if (peg$cachedPos > pos) {
          peg$cachedPos = 0;
          peg$cachedPosDetails = {
            line: 1,
            column: 1,
            seenCR: false
          };
        }

        advance(peg$cachedPosDetails, peg$cachedPos, pos);
        peg$cachedPos = pos;
      }

      return peg$cachedPosDetails;
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildException(message, expected, pos) {
      function cleanupExpected(expected) {
        var i = 1;
        expected.sort(function (a, b) {
          if (a.description < b.description) {
            return -1;
          } else if (a.description > b.description) {
            return 1;
          } else {
            return 0;
          }
        });

        while (i < expected.length) {
          if (expected[i - 1] === expected[i]) {
            expected.splice(i, 1);
          } else {
            i++;
          }
        }
      }

      function buildMessage(expected, found) {
        function stringEscape(s) {
          function hex(ch) {
            return ch.charCodeAt(0).toString(16).toUpperCase();
          }

          return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\x08/g, '\\b').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\f/g, '\\f').replace(/\r/g, '\\r').replace(/[\x00-\x07\x0B\x0E\x0F]/g, function (ch) {
            return '\\x0' + hex(ch);
          }).replace(/[\x10-\x1F\x80-\xFF]/g, function (ch) {
            return '\\x' + hex(ch);
          }).replace(/[\u0180-\u0FFF]/g, function (ch) {
            return '\\u0' + hex(ch);
          }).replace(/[\u1080-\uFFFF]/g, function (ch) {
            return '\\u' + hex(ch);
          });
        }

        var expectedDescs = new Array(expected.length),
            expectedDesc,
            foundDesc,
            i;

        for (i = 0; i < expected.length; i++) {
          expectedDescs[i] = expected[i].description;
        }

        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(", ") + " or " + expectedDescs[expected.length - 1] : expectedDescs[0];
        foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";
        return "Expected " + expectedDesc + " but " + foundDesc + " found.";
      }

      var posDetails = peg$computePosDetails(pos),
          found = pos < input.length ? input.charAt(pos) : null;

      if (expected !== null) {
        cleanupExpected(expected);
      }

      return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);
    }

    function peg$parsetransformation_rules() {
      var s0, s1, s2, s3, s4, s5;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$currPos;
      s3 = peg$parseS();

      if (s3 !== peg$FAILED) {
        s4 = peg$parsetransformation_rule();

        if (s4 !== peg$FAILED) {
          s5 = peg$parseS();

          if (s5 !== peg$FAILED) {
            s3 = [s3, s4, s5];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$c1;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$c1;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$c1;
      }

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$currPos;
          s3 = peg$parseS();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsetransformation_rule();

            if (s4 !== peg$FAILED) {
              s5 = peg$parseS();

              if (s5 !== peg$FAILED) {
                s3 = [s3, s4, s5];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$c1;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$c1;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$c1;
          }
        }
      } else {
        s1 = peg$c1;
      }

      if (s1 !== peg$FAILED) {
        peg$reportedPos = s0;
        s1 = peg$c2(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsetransformation_rule() {
      var s0, s1, s2, s3, s4, s5;
      s0 = peg$currPos;
      s1 = peg$parsecategory1();

      if (s1 !== peg$FAILED) {
        s2 = peg$parseidentifier();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseidentifier();

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parseidentifier();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parseidentifier();
            }

            if (s4 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c3(s1, s2, s3, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$c1;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c1;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c1;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c1;
      }

      return s0;
    }

    function peg$parsecategory1() {
      var s0;
      s0 = peg$parsewild_card();

      if (s0 === peg$FAILED) {
        s0 = peg$parseidentifier();
      }

      return s0;
    }

    function peg$parseidentifier() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = [];

      if (peg$c4.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c5);
        }
      }

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);

          if (peg$c4.test(input.charAt(peg$currPos))) {
            s2 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }
        }
      } else {
        s1 = peg$c1;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parseS_no_eol();

        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c6(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c1;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c1;
      }

      return s0;
    }

    function peg$parsewild_card() {
      var s0, s1, s2;
      s0 = peg$currPos;

      if (input.charCodeAt(peg$currPos) === 42) {
        s1 = peg$c7;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c8);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parseS_no_eol();

        if (s2 !== peg$FAILED) {
          peg$reportedPos = s0;
          s1 = peg$c9(s1);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$c1;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c1;
      }

      return s0;
    }

    function peg$parseEOL() {
      var s0;

      if (input.substr(peg$currPos, 2) === peg$c10) {
        s0 = peg$c10;
        peg$currPos += 2;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c11);
        }
      }

      if (s0 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 10) {
          s0 = peg$c12;
          peg$currPos++;
        } else {
          s0 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c13);
          }
        }

        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 13) {
            s0 = peg$c14;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c15);
            }
          }
        }
      }

      return s0;
    }

    function peg$parseComment() {
      var s0, s1, s2, s3, s4, s5;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 2) === peg$c16) {
        s1 = peg$c16;
        peg$currPos += 2;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c17);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        s5 = peg$parseEOL();
        peg$silentFails--;

        if (s5 === peg$FAILED) {
          s4 = peg$c18;
        } else {
          peg$currPos = s4;
          s4 = peg$c1;
        }

        if (s4 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s5 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s5 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c19);
            }
          }

          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$c1;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$c1;
        }

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$currPos;
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parseEOL();
          peg$silentFails--;

          if (s5 === peg$FAILED) {
            s4 = peg$c18;
          } else {
            peg$currPos = s4;
            s4 = peg$c1;
          }

          if (s4 !== peg$FAILED) {
            if (input.length > peg$currPos) {
              s5 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s5 = peg$FAILED;

              if (peg$silentFails === 0) {
                peg$fail(peg$c19);
              }
            }

            if (s5 !== peg$FAILED) {
              s4 = [s4, s5];
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$c1;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$c1;
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseEOL();

          if (s3 === peg$FAILED) {
            s3 = peg$parseEOI();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$c1;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$c1;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$c1;
      }

      return s0;
    }

    function peg$parseS() {
      var s0, s1;
      s0 = [];

      if (input.charCodeAt(peg$currPos) === 32) {
        s1 = peg$c20;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c21);
        }
      }

      if (s1 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 9) {
          s1 = peg$c22;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c23);
          }
        }

        if (s1 === peg$FAILED) {
          s1 = peg$parseEOL();

          if (s1 === peg$FAILED) {
            s1 = peg$parseComment();
          }
        }
      }

      while (s1 !== peg$FAILED) {
        s0.push(s1);

        if (input.charCodeAt(peg$currPos) === 32) {
          s1 = peg$c20;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c21);
          }
        }

        if (s1 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 9) {
            s1 = peg$c22;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c23);
            }
          }

          if (s1 === peg$FAILED) {
            s1 = peg$parseEOL();

            if (s1 === peg$FAILED) {
              s1 = peg$parseComment();
            }
          }
        }
      }

      return s0;
    }

    function peg$parseS_no_eol() {
      var s0, s1;
      s0 = [];

      if (input.charCodeAt(peg$currPos) === 32) {
        s1 = peg$c20;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c21);
        }
      }

      if (s1 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 9) {
          s1 = peg$c22;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c23);
          }
        }

        if (s1 === peg$FAILED) {
          s1 = peg$parseComment();
        }
      }

      while (s1 !== peg$FAILED) {
        s0.push(s1);

        if (input.charCodeAt(peg$currPos) === 32) {
          s1 = peg$c20;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c21);
          }
        }

        if (s1 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 9) {
            s1 = peg$c22;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c23);
            }
          }

          if (s1 === peg$FAILED) {
            s1 = peg$parseComment();
          }
        }
      }

      return s0;
    }

    function peg$parseEOI() {
      var s0, s1;
      s0 = peg$currPos;
      peg$silentFails++;

      if (input.length > peg$currPos) {
        s1 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      peg$silentFails--;

      if (s1 === peg$FAILED) {
        s0 = peg$c18;
      } else {
        peg$currPos = s0;
        s0 = peg$c1;
      }

      return s0;
    }

    var TransformationRule = require("./TransformationRule");

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail({
          type: "end",
          description: "end of input"
        });
      }

      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
    }
  }

  return {
    SyntaxError: SyntaxError,
    parse: parse
  };
}();
},{"./TransformationRule":"RPrf"}],"Xres":[function(require,module,exports) {
/*
  Brill's POS Tagger
  Copyright (C) 2016 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var fs = require("fs");

var TF_Parser = require('./TF_Parser');

var Sentence = require('./Sentence');

function Brill_POS_Tagger(lexicon, ruleSet) {
  this.lexicon = lexicon;
  this.ruleSet = ruleSet;
} // Tags a sentence, sentence is an array of words
// Returns an array of tagged words; a tagged words is an array consisting of
// the word itself followed by its lexical category


Brill_POS_Tagger.prototype.tag = function (sentence) {
  var taggedSentence = this.tagWithLexicon(sentence); //console.log(taggedSentence);

  return this.applyRules(taggedSentence);
};

Brill_POS_Tagger.prototype.tagWithLexicon = function (sentence) {
  var taggedSentence = new Sentence();
  var that = this;
  sentence.forEach(function (word, index) {
    var categories = that.lexicon.tagWord(word);
    taggedSentence.addTaggedWord(word, categories[0]);
  });
  return taggedSentence;
}; // Applies the transformation rules to an initially tagged sentence.
// taggedSentence is an array of tagged words.
// A tagged word is an array consisting of the word itself followed by its lexical category.
// Returns an array of tagged words as well


Brill_POS_Tagger.prototype.applyRules = function (sentence) {
  for (var i = 0, size = sentence.taggedWords.length; i < size; i++) {
    this.ruleSet.getRules().forEach(function (rule) {
      rule.apply(sentence, i);
    });
  }

  return sentence;
};

module.exports = Brill_POS_Tagger;
},{"fs":"rDCW","./TF_Parser":"DTBP","./Sentence":"KDM0"}],"ffuA":[function(require,module,exports) {
/*
   Set of transformation rules
   Copyright (C) 2017 Hugo W.L. ter Doest

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var fs = require("fs");

var TF_Parser = require('./TF_Parser');

function RuleSet(filename) {
  //this.rules = [];
  this.rules = {};

  if (filename) {
    // Read transformation rules
    try {
      var data = fs.readFileSync(filename, 'utf8');
      this.rules = TF_Parser.parse(data); // console.log(this.rules);
      // console.log('Brill_POS_Tagger.read_transformation_rules: number of transformation rules read: ' + this.rules.length);
    } catch (error) {
      console.error(error);
    }
  }
}

RuleSet.prototype.addRule = function (rule) {
  //this.rules.push(rule);
  if (!this.rules[rule.key()]) {
    this.rules[rule.key()] = rule;
    return true;
  } else {
    return false;
  }
};

RuleSet.prototype.removeRule = function (rule) {
  if (this.rules[rule.key()]) {
    delete this.rules[rule.key()];
  }
};

RuleSet.prototype.getRules = function () {
  var that = this;
  return Object.keys(this.rules).map(function (key) {
    return that.rules[key];
  });
};

RuleSet.prototype.nrRules = function () {
  return Object.keys(this.rules).length;
};

RuleSet.prototype.hasRule = function (rule) {
  if (this.rules[rule.key()]) {
    return true;
  } else {
    return false;
  }
};

RuleSet.prototype.prettyPrint = function () {
  var result = ""; //this.rules.forEach(function(rule) {

  var that = this;
  Object.keys(this.rules).forEach(function (key) {
    var rule = that.rules[key];
    result += rule.prettyPrint() + "\n";
  });
  return result;
};

module.exports = RuleSet;
},{"fs":"rDCW","./TF_Parser":"DTBP"}],"Qeg1":[function(require,module,exports) {
/*
  Brill POS Trainer class
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
// Algorithm is based on:
// Exploring the Statistical Derivation of Transformational Rule Sequences
// for Part-of-Speech Tagging, Lance A. Ramshaw and Mitchell P. Marcus
// http://acl-arc.comp.nus.edu.sg/archives/acl-arc-090501d4/data/pdf/anthology-PDF/W/W94/W94-0111.pdf
//var log4js = require('log4js');
//var logger = log4js.getLogger('Brill_POS_Trainer');
//logger.setLevel('OFF');
var TransformationRule = require("./TransformationRule");

var RuleSet = require("./RuleSet");

var Sentence = require('./Sentence'); // Training continues as long as there are rules with a positive score
// that have not been selected before


var minScore = 0; // After training rules with a score below scoreThreshold are pruned

function Brill_POS_Trainer(ruleScoreThreshold) {
  if (ruleScoreThreshold) {
    this.ruleScoreThreshold = ruleScoreThreshold;
  } else {
    this.ruleScoreThreshold = 1;
  }
} // Return the highest scoring rule from the rule set


Brill_POS_Trainer.prototype.selectHighRule = function () {
  var highestRule = null; // Walk through the map and find the rule with highest score

  this.positiveRules.getRules().forEach(function (rule) {
    if (highestRule === null) {
      if (!rule.hasBeenSelectedAsHighRuleBefore) {
        highestRule = rule;
      }
    } else {
      if (rule.score() > highestRule.score() && !rule.hasBeenSelectedAsHighRuleBefore) {
        highestRule = rule;
      }
    }
  });

  if (highestRule !== null) {
    highestRule.hasBeenSelectedAsHighRuleBefore = true;
  } // Return the rule with the highest score


  return highestRule;
};

Brill_POS_Trainer.prototype.mapRuleToSite = function (rule, i, j) {
  if (!this.mapRuleToSites[rule.key()]) {
    this.mapRuleToSites[rule.key()] = {};
  }

  if (!this.mapRuleToSites[rule.key()][i]) {
    this.mapRuleToSites[rule.key()][i] = {};
  }

  this.mapRuleToSites[rule.key()][i][j] = true;
};

Brill_POS_Trainer.prototype.mapSiteToRule = function (i, j, rule) {
  if (!this.mapSiteToRules[i]) {
    this.mapSiteToRules[i] = {};
  }

  if (!this.mapSiteToRules[i][j]) {
    this.mapSiteToRules[i][j] = {};
  }

  this.mapSiteToRules[i][j][rule.key()] = rule;
};

Brill_POS_Trainer.prototype.associateSiteWithRule = function (i, j, rule) {
  this.mapRuleToSite(rule, i, j);
  this.mapSiteToRule(i, j, rule);
};

Brill_POS_Trainer.prototype.siteIsAssociatedWithRule = function (i, j, rule) {
  if (this.mapSiteToRules[i]) {
    if (this.mapSiteToRules[i][j]) {
      if (this.mapSiteToRules[i][j][rule.key()]) {
        return true;
      }
    }
  }

  return false;
}; // Returns an array of all sites associated with rule


Brill_POS_Trainer.prototype.getSites = function (rule) {
  var that = this;
  var result = [];
  Object.keys(this.mapRuleToSites[rule.key()]).forEach(function (i) {
    Object.keys(that.mapRuleToSites[rule.key()][i]).forEach(function (j) {
      // Unary plus the convert hash keys i and j to integer
      result.push([+i, +j]);
    });
  }); //logger.debug("Brill_POS_Trainer.prototype.getSites: sites " + JSON.stringify(result));

  return result;
}; // Returns an array of all rules associated with the site


Brill_POS_Trainer.prototype.getRules = function (i, j) {
  var result = [];
  var that = this;

  if (this.mapSiteToRules[i]) {
    if (this.mapSiteToRules[i][j]) {
      result = Object.keys(this.mapSiteToRules[i][j]).map(function (key) {
        return that.mapSiteToRules[i][j][key];
      });
    }
  }

  return result;
};

Brill_POS_Trainer.prototype.disconnectSiteFromRule = function (i, j, rule) {
  // mapRuleToSites
  if (this.mapRuleToSites[rule.key()]) {
    if (this.mapRuleToSites[rule.key()][i]) {
      if (this.mapRuleToSites[rule.key()][i][j]) {
        delete this.mapRuleToSites[rule.key()][i][j];
      }
    }
  } // mapSiteToRules


  if (this.mapSiteToRules[i]) {
    if (this.mapSiteToRules[i][j]) {
      if (this.mapSiteToRules[i][j][rule.key()]) {
        delete this.mapSiteToRules[i][j][rule.key()];
      }
    }
  }
}; // Adjusts the score of the rule at position i, j of the corpus


Brill_POS_Trainer.prototype.scoreRule = function (rule, i, j) {
  //logger.debug("Brill_POS_Trainer.prototype.scoreRule: entry");
  var token = this.corpus.sentences[i].taggedWords[j];
  var rightTag = token.tag;
  var oldTag = token.testTag;
  var newTag = token.newTag;

  if (rightTag !== oldTag) {
    // Old tag is wrong
    if (newTag === rightTag) {
      // New tag is right
      rule.positive++; // If the score changes, it may be selected again as highest scoring rule

      rule.hasBeenSelectedAsHighRuleBefore = false; //logger.debug("Brill_POS_Trainer.prototype.scoreRule: positive: " + rule.key() + "\t score: " + rule.positive);
    } else {
      // New tag is wrong as well --> neutral
      rule.neutral++; //logger.debug("Brill_POS_Trainer.prototype.scoreRule: neutral: " + rule.key() + "\t score: " + rule.neutral);
    }
  } else {
    // Old tag is right
    if (newTag === rightTag) {
      // New tag is right --> neutral
      rule.neutral++; //logger.debug("Brill_POS_Trainer.prototype.scoreRule: neutral: " + rule.key() + "\t score: " + rule.neutral);
    } else {
      // New tag is false
      rule.negative++; // If the score changes, it may be selected again as highest scoring rule

      rule.hasBeenSelectedAsHighRuleBefore = false; //logger.debug("Brill_POS_Trainer.prototype.scoreRule: negative: " + rule.key() + "\t score: " + rule.negative);
    }
  } //logger.debug("Brill_POS_Trainer.prototype.scoreRule: exit");

}; // Generate positive rules for this given site using templates


Brill_POS_Trainer.prototype.generatePositiveRules = function (i, j) {
  var sentence = this.corpus.sentences[i];
  var token = sentence.taggedWords[j]; // A positive rule should trigger on the currently assigned testTag

  var oldTag = token.testTag; //logger.debug("Brill_POS_Trainer.prototype.generatePositiveRules: oldTag " + oldTag);
  // It should assign the right tag as given by the corpus

  var newTag = token.tag; //logger.debug("Brill_POS_Trainer.prototype.generatePositiveRules: newTag " + newTag);

  var newRules = new RuleSet(); // Exit if testTag already is the right tag --> will not result in positive rules

  if (oldTag === newTag) {
    return newRules;
  }

  this.templates.forEach(function (template) {
    if (template.windowFitsSite(sentence, j)) {
      if (template.meta.nrParameters === 1) {
        template.meta.parameter1Values(sentence, j).forEach(function (value) {
          newRules.addRule(new TransformationRule(oldTag, newTag, template.predicateName, value));
        });
      } else {
        if (template.meta.nrParameters === 2) {
          template.meta.parameter1Values(sentence, j).forEach(function (value1) {
            template.meta.parameter2Values(sentence, j).forEach(function (value2) {
              newRules.addRule(new TransformationRule(oldTag, newTag, template.predicateName, value1, value2));
            });
          });
        } else {
          // 0 paramaters
          newRules.addRule(new TransformationRule(oldTag, newTag, template.predicateName));
        }
      }
    }
  });
  return newRules;
}; // Finds all rules that are applicable at some site


Brill_POS_Trainer.prototype.scanForPositiveRules = function () {
  //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: entry");
  var that = this;
  this.corpus.sentences.forEach(function (sentence, i) {
    sentence.taggedWords.forEach(function (token, j) {
      //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: sentence no " + i);
      var newRules = that.generatePositiveRules(i, j);
      newRules.getRules().forEach(function (rule) {
        that.positiveRules.addRule(rule); //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: nrRules " + that.positiveRules.nrRules());
      });
    });
  }); //logger.debug("Brill_POS_Trainer.prototype.scanForPositiveRules: exit, number of rules: " + this.positiveRules.nrRules());
}; // Find all sites where the rules can be applied, register these sites and
// update the scores


Brill_POS_Trainer.prototype.scanForSites = function () {
  //logger.debug("Brill_POS_Trainer.prototype.scanForSites: entry");
  var that = this; // Scan the corpus

  this.corpus.sentences.forEach(function (sentence, i) {
    if (i % 100 === 0) {//logger.info("Brill_POS_Trainer.prototype.scanForSites: sentence " + i);
    }

    var taggedSentence = new Sentence();
    sentence.taggedWords.forEach(function (wordObject) {
      taggedSentence.addTaggedWord(wordObject.token, wordObject.testTag);
    });
    sentence.taggedWords.forEach(function (token, j) {
      that.positiveRules.getRules().forEach(function (rule) {
        if (rule.isApplicableAt(sentence, taggedSentence, j)) {
          that.associateSiteWithRule(i, j, rule);
          that.scoreRule(rule, i, j); //logger.debug("Brill_POS_Trainer.prototype.scanForSites: (sentence, token, rule): (" + i + ", " + j + ", " + rule.prettyPrint() + ")");
        }
      });
    });
  }); //logger.debug("Brill_POS_Trainer.prototype.scanForSites: exit");
}; // Returns a list of sites that may have been touched by a changing tag


Brill_POS_Trainer.prototype.neighbourhood = function (i, j) {
  var sentenceLength = this.corpus.sentences[i].length;
  var list = [];

  if (this.index > 2) {
    list.push([i, j - 3]);
  }

  if (this.index > 1) {
    list.push([i, j - 2]);
  }

  if (this.index > 0) {
    list.push([i, j - 1]);
  }

  if (this.index < sentenceLength - 1) {
    list.push([i, j + 1]);
  }

  if (this.index < sentenceLength - 2) {
    list.push([i, j + 2]);
  }

  if (this.index > sentenceLength - 3) {
    list.push([i, j + 3]);
  }

  return list;
}; // corpus: an array of token arrays
// templates: an array of rule templates
// lexicon: lexicon that provides method tagWord(word)


Brill_POS_Trainer.prototype.train = function (corpus, templates, lexicon) {
  this.corpus = corpus;
  this.templates = templates;
  this.positiveRules = new RuleSet();
  this.mapRuleToSites = {};
  this.mapSiteToRules = {}; //logger.debug("Brill_POS_Trainer.prototype.train: entry");

  this.corpus.tag(lexicon);
  this.scanForPositiveRules(); //logger.info("Brill_POS_Trainer.prototype.train: initial number of rules: " + this.positiveRules.nrRules());

  this.scanForSites();
  var highRule = this.selectHighRule();
  var iterationNumber = 0;
  var that = this;

  while (highRule !== null && highRule.score() > minScore) {
    if (iterationNumber % 5 === 0) {} //logger.info("Brill_POS_Trainer.prototype.train: training iteration: " + iterationNumber);
    //logger.debug("Brill_POS_Trainer.prototype.train: highRule selected: " + highRule.key());
    //logger.debug("Brill_POS_Trainer.prototype.train: number of rules: " + this.positiveRules.nrRules());
    //logger.debug("Brill_POS_Trainer.prototype.train: score of highRule: " + highRule.score());
    // Apply the high rule to each change site on its site list


    this.getSites(highRule).forEach(function (site) {
      //logger.debug("Brill_POS_Trainer.prototype.train: apply highRule to: " + site);
      //logger.debug("Brill_POS_Trainer.prototype.train: sentence length: " + that.corpus.sentences[site[0]].length);
      highRule.applyAt(that.corpus.sentences[site[0]], site[1]);
    });
    var unseenRules = new RuleSet();
    this.getSites(highRule).forEach(function (site) {
      that.neighbourhood(site[0], site[1]).forEach(function (testSite) {
        // Generate positive rules for testSite
        var newRules = that.generatePositiveRules(testSite[0], testSite[1]); // Disconnect test site from its rules
        // because highrule has been applied

        that.getRules(testSite[0], testSite[1]).forEach(function (rule) {
          if (!newRules.hasRule(rule)) {
            that.disconnectSiteFromRule(testSite[0], testSite[1], rule);
          }
        }); // Connect new rules not already connected to the test site

        newRules.getRules().forEach(function (rule) {
          if (!that.siteIsAssociatedWithRule(testSite[0].testSite[1], rule)) {
            if (that.positiveRules.hasRule(rule)) {
              that.associateSiteWithRule(testSite[0], testSite[1], rule);
            } else {
              unseenRules.addRule(rule);
            }
          }
        }); // Process unseen rules

        if (unseenRules.nrRules() > 0) {
          unseenRules.getRules().forEach(function (rule) {
            that.positiveRules.addRule(rule);
          });
          that.corpus.sentences.forEach(function (sentence, i) {
            var taggedSentence = sentence.map(function (token) {
              return [token.token, token.testTag];
            });
            sentence.forEach(function (token, j) {
              unseenRules.getRules().forEach(function (rule) {
                if (rule.isApplicableAt(sentence, taggedSentence, j)) {
                  that.associateSiteWithRule(i, j, rule);
                  that.scoreRule(rule, i, j);
                }
              });
            });
          });
        }
      });
    }); // Select next highest scoring rule

    highRule = this.selectHighRule();
    iterationNumber++;
  } //logger.info("Brill_POS_Trainer.prototype.train: number of iterations: " + iterationNumber);
  //logger.info("Brill_POS_Trainer.prototype.train: number of rules: " + this.positiveRules.nrRules());
  // Remove rules having a non-positive score


  this.positiveRules.getRules().forEach(function (rule) {
    if (rule.score() < that.ruleScoreThreshold) {
      that.positiveRules.removeRule(rule);
    }
  }); //logger.info("Brill_POS_Trainer.prototype.train: number of rules after pruning: " + this.positiveRules.nrRules());
  //logger.debug("Brill_POS_Trainer.prototype.train: exit");

  return this.positiveRules;
};

Brill_POS_Trainer.prototype.printRulesWithScores = function () {
  var that = this;
  var result = "";

  function compareRules(a, b) {
    if (a.score() > b.score()) {
      return -1;
    } else {
      if (a.score() < b.score()) {
        return 1;
      } else {
        return 0;
      }
    }
  }

  var rules = this.positiveRules.getRules();
  var sortedRules = rules.sort(compareRules);
  sortedRules.forEach(function (rule) {
    //if (rule.score() > 0) {
    result += rule.score() + '\t' + rule.positive + '\t' + rule.negative + '\t' + rule.neutral + '\t' + rule.prettyPrint() + "\n"; //}
  });
  return result;
};

module.exports = Brill_POS_Trainer;
},{"./TransformationRule":"RPrf","./RuleSet":"ffuA","./Sentence":"KDM0"}],"aFCJ":[function(require,module,exports) {
/*
  Brill's POS Testing class
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
function Brill_POS_Tester() {}

Brill_POS_Tester.prototype.test = function (corpus, tagger) {
  var totalWords = 0;
  var correctTagsLexicon = 0;
  var correctTagsAfterRules = 0; // Tag the corpus using the tagger

  corpus.sentences.forEach(function (sentence) {
    var s = sentence.taggedWords.map(function (token) {
      return token.token;
    }); // Use the lexicon to tag the sentence

    var taggedSentence = tagger.tagWithLexicon(s); // Count the right tags

    sentence.taggedWords.forEach(function (token, i) {
      totalWords++;

      if (token.tag === taggedSentence.taggedWords[i].tag) {
        correctTagsLexicon++;
      }
    }); // Use the rule set to tag the sentence

    var taggedSentenceAfterRules = tagger.applyRules(taggedSentence); // Count the right tags

    sentence.taggedWords.forEach(function (token, i) {
      if (token.tag === taggedSentenceAfterRules.taggedWords[i].tag) {
        correctTagsAfterRules++;
      }
    });
  }); // Return percentage right

  return [100 * correctTagsLexicon / totalWords, 100 * correctTagsAfterRules / totalWords];
};

module.exports = Brill_POS_Tester;
},{}],"OC82":[function(require,module,exports) {
/*
  Lexicon class
  Copyright (C) 2016 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var fs = require('fs'); // Parses a lexicon in JSON or text format


function Lexicon(filename, defaultCategory, defaultCategoryCapitalised) {
  this.lexicon = {}; //Object.create(null);

  if (filename) {
    this.defaultCategory = defaultCategory; // Read lexicon

    try {
      var data = fs.readFileSync(filename, 'utf8');

      if (data[0] === "{") {
        // Lexicon is in JSON format
        this.lexicon = JSON.parse(data);
      } else {
        // Lexicon is plain text
        this.parseLexicon(data);
      } //console.log('Brill_POS_Tagger.read_lexicon: number of lexicon entries read: ' + Object.keys(this.lexicon).length);

    } catch (error) {
      console.error(error);
    }

    if (defaultCategory) {
      this.defaultCategory = defaultCategory;

      if (defaultCategoryCapitalised) {
        this.defaultCategoryCapitalised = defaultCategoryCapitalised;
      }
    }
  }
} // Parses a lexicon in text format: word cat1 cat2 ... catn


Lexicon.prototype.parseLexicon = function (data) {
  // Split into an array of non-empty lines
  var arrayOfLines = data.match(/[^\r\n]+/g);
  this.lexicon = {}; //Object.create(null);

  var that = this;
  arrayOfLines.forEach(function (line) {
    // Split line by whitespace
    var elements = line.trim().split(/\s+/);

    if (elements.length > 0) {
      that.lexicon[elements[0]] = elements.slice(1);
    }
  });
};

Lexicon.prototype.tagWordWithDefaults = function (word) {
  if (/[A-Z]/.test(word[0]) && this.defaultCategoryCapitalised) {
    // Capitalised
    return this.defaultCategoryCapitalised;
  } else {
    // If not found assign default_category
    return this.defaultCategory;
  }
}; // Returns a list of categories for word


Lexicon.prototype.tagWord = function (word) {
  var categories = this.lexicon[word]; //console.log(categories);

  if (!categories || typeof categories == "function") {
    categories = this.lexicon[word.toLowerCase()];
  }

  if (!categories || typeof categories == "function") {
    categories = [this.tagWordWithDefaults(word)];
  }

  return categories;
}; // Adds a word to the lexicon. NB simply replaces the entry


Lexicon.prototype.addWord = function (word, categories) {
  this.lexicon[word] = categories;
};

Lexicon.prototype.prettyPrint = function () {
  var result = "";
  var that = this;
  Object.keys(this.lexicon).forEach(function (token) {
    result += token + "\t";
    that.lexicon[token].forEach(function (cat) {
      result += cat + "\t";
    });
    result += "\n";
  });
  return result;
};

Lexicon.prototype.nrEntries = function () {
  return Object.keys(this.lexicon).length;
};

Lexicon.prototype.size = function () {
  return this.nrEntries();
};

Lexicon.prototype.setDefaultCategories = function (category, categoryCapitalised) {
  this.defaultCategory = category;

  if (categoryCapitalised) {
    this.defaultCategoryCapitalised = categoryCapitalised;
  }
};

module.exports = Lexicon;
},{"fs":"rDCW"}],"SkzG":[function(require,module,exports) {
/*
  Rule Template class for deriving transformation rules.
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
function RuleTemplate(templateName, metadata) {
  this.predicateName = templateName;
  this.meta = metadata;
}

RuleTemplate.prototype.windowFitsSite = function (sentence, i) {
  return i + this.meta.window[0] >= 0 && i + this.meta.window[0] < sentence.taggedWords.length && i + this.meta.window[1] >= 0 && i + this.meta.window[1] < sentence.taggedWords.length;
};

module.exports = RuleTemplate;
},{}],"bYPC":[function(require,module,exports) {
/*
    Sample space of observed events
    Copyright (C) 2018 Hugo W.L. ter Doest

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var Context = require('./Context');

var fs = require('fs');

function Sample(elements) {
  this.frequencyOfContext = {};
  this.frequency = {};
  this.classes = [];

  if (elements) {
    this.elements = elements;
    this.analyse();
  } else {
    this.elements = [];
  }
} // Extracts classes and frequencies


Sample.prototype.analyse = function () {
  var that = this;
  this.elements.forEach(function (x) {
    if (this.classes.indexOf(x.a) === -1) {
      this.classes.push(x.a);
    }

    if (!that.frequencyOfContext[x.b.toString()]) {
      that.frequencyOfContext[x.b.toString()] = 0;
    }

    that.frequencyOfContext[x.b.toString()]++;

    if (!that.frequency[x.toString()]) {
      that.frequency[x.toString()] = 0;
    }

    that.frequency[x.toString()]++;
  });
};

Sample.prototype.addElement = function (x) {
  this.elements.push(x); // Update frequencies

  if (!this.frequencyOfContext[x.b.toString()]) {
    this.frequencyOfContext[x.b.toString()] = 0;
  }

  this.frequencyOfContext[x.b.toString()]++;

  if (!this.frequency[x.toString()]) {
    this.frequency[x.toString()] = 0;
  }

  this.frequency[x.toString()]++; // Update classes

  if (this.classes.indexOf(x.a) === -1) {
    this.classes.push(x.a);
  }
};

Sample.prototype.observedProbabilityOfContext = function (context) {
  if (this.frequencyOfContext[context.toString()]) {
    return this.frequencyOfContext[context.toString()] / this.elements.length;
  } else {
    return 0;
  }
};

Sample.prototype.observedProbability = function (x) {
  if (this.frequency[x.toString()]) {
    return this.frequency[x.toString()] / this.elements.length;
  } else {
    return 0;
  }
};

Sample.prototype.size = function () {
  return this.elements.length;
};

Sample.prototype.getClasses = function () {
  return this.classes;
};

Sample.prototype.generateFeatures = function (featureSet) {
  this.elements.forEach(function (x) {
    x.generateFeatures(featureSet);
  });
};

Sample.prototype.save = function (filename, callback) {
  var sample = this;
  var data = JSON.stringify(this, null, 2);
  fs.writeFile(filename, data, 'utf8', function (err) {
    //console.log('Sample written')
    if (callback) {
      callback(err, err ? null : sample);
    }
  });
}; // Loads a sample from file and revives the right classes, i.e. Sample and
// Element classes.


Sample.prototype.load = function (filename, elementClass, callback) {
  fs.readFile(filename, 'utf8', function (err, data) {
    if (!err) {
      var sampleData = JSON.parse(data);
      var sample = new Sample();
      sampleData.elements.forEach(function (elementData) {
        var elt = new elementClass(elementData.a, new Context(elementData.b.data));
        sample.addElement(elt);
      });

      if (!sample.frequency || !sample.frequencyOfContext) {
        sample.analyse();
      }

      if (callback) {
        callback(err, sample);
      }
    } else {
      if (callback) {
        callback(err);
      }
    }
  });
};

module.exports = Sample;
},{"./Context":"pyBO","fs":"rDCW"}],"OohD":[function(require,module,exports) {
/*
    Feature class for features that fire (or don't) on combinations of context
    and class
    Copyright (C) 2017 Hugo W.L. ter Doest

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
function Feature(f, name, parameters) {
  this.evaluate = f;
  this.name = name;
  this.parameters = parameters;
  var tmp = "";
  parameters.forEach(function (par) {
    tmp += par + "|";
  });
  this.parametersKey = tmp.substr(0, tmp.length - 1);
}

Feature.prototype.apply = function (x) {
  return this.evaluate(x);
};

Feature.prototype.expectationApprox = function (p, sample) {
  var totalSum = 0;
  var that = this;
  var sum = 0;
  var seen = {};
  var A = sample.getClasses();
  sample.elements.forEach(function (sampleElement) {
    var b_i = sampleElement.b;

    if (!seen[b_i.toString()]) {
      seen[b_i.toString()] = true;

      var Element = require('./Element');

      A.forEach(function (a) {
        var x = new Element(a, b_i);
        sum += sample.observedProbabilityOfContext(b_i) * p.calculateAPosteriori(x) * that.apply(x);
      });
    }
  });
  return sum;
}; // Diect calculation of expected value of this feature according to distribution p
// In real-life applications with a lot of features this is not tractable


Feature.prototype.expectation = function (p, A, B) {
  var sum = 0;
  var that = this;
  A.forEach(function (a) {
    B.forEach(function (b) {
      var x = new Element(a, b);
      sum += p.calculateAPriori(x) * that.apply(x);
    });
  });
  return sum;
}; // Observed expectation of this feature in the sample


Feature.prototype.observedExpectation = function (sample) {
  if (this.observedExpect) {
    return this.observedExpect;
  }

  var N = sample.size();
  var sum = 0;
  var that = this;
  sample.elements.forEach(function (x) {
    sum += that.apply(x);
  });
  this.observedExpect = sum / N;
  return this.observedExpect;
};

module.exports = Feature;
},{"./Element":"s74o"}],"s74o":[function(require,module,exports) {
/*
    Element class for elements in the event space
    Copyright (C) 2017 Hugo W.L. ter Doest

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var Feature = require('./Feature'); // a is class and b is context


function Element(a, b) {
  this.a = a;
  this.b = b;
}

Element.prototype.toString = function () {
  if (!this.key) {
    this.key = this.a + this.b.toString();
  }

  return this.key;
};

module.exports = Element;
},{"./Feature":"OohD"}],"hWGc":[function(require,module,exports) {
/*
  Element class for POS tagging
  Copyright (C) 2018 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var util = require('util');

var Element = require('../Element');

var Feature = require('../Feature');

function POS_Element(a, b) {
  POS_Element.super_.call(this, a, b);
}

util.inherits(POS_Element, Element);

POS_Element.prototype.generateFeatures = function (featureSet) {
  var context = this.b.data;
  var tag = this.a;
  var token = context.wordWindow["0"]; // Feature for the current word

  function currentWord(x) {
    if (x.b.data.wordWindow["0"] === token && x.a === tag) {
      return 1;
    }

    return 0;
  }

  featureSet.addFeature(new Feature(currentWord, "wordFeature", ["0", token, "0", tag])); // Feature for previous bigram (previous two tags), positions -2, -1

  if (context.tagWindow["-2"]) {
    var prevPrevTag = context.tagWindow["-2"];
    var prevTag = context.tagWindow["-1"];

    function prevBigram(x) {
      if (x.a === tag && x.b.data.tagWindow["-2"] === prevPrevTag && x.b.data.tagWindow["-1"] === prevTag) {
        return 1;
      }

      return 0;
    }

    featureSet.addFeature(new Feature(prevBigram, "prevBigram", ["0", tag, "-2", prevPrevTag, "-1", prevTag]));
  }
  /*
    // Feature for left bigram, positions -1, 0
    if (context.tagWindow["-1"]) {
      var prevTag = context.tagWindow["-1"];
      function leftBigram(x) {
        if ((x.b.data.tagWindow["-1"] === prevTag) &&
            (x.a === tag)) {
            return 1;
          }
        return 0;
      }
      featureSet.addFeature(new Feature(leftBigram, "leftBigram", ["0", tag, "-1", prevTag]));
    }
  */

  /*
  
    // Feature for right bigram, positions 0, 1
    if (context.tagWindow["1"]) {
      var nextTag = context.tagWindow["1"];
      function rightBigram(x) {
        if ((x.a === tag) &&
            (x.b.data.tagWindow["1"] === nextTag)) {
            return 1;
          }
        return 0;
      }
      featureSet.addFeature(new Feature(rightBigram, "rightBigram", ["0", tag, "1", nextTag]));
    }
  */

  /*
    // Feature for next bigram (next two tags), positions 1 and 2
    if (context.tagWindow["2"]) {
      var nextTag = context.tagWindow["1"];
      var nextNextTag = context.tagWindow["2"];
      function nextBigram(x) {
        if ((x.a === tag) &&
            (x.b.data.tagWindow["1"] === nextTag) &&
            (x.b.data.tagWindow["2"] === nextNextTag)) {
            return 1;
          }
        return 0;
      }
      featureSet.addFeature(new Feature(nextBigram, "nextBigram", ["0", tag, "1", nextTag, "2", nextNextTag]));
    }
  
    // Feature that looks at the left bigram words
    if (context.wordWindow["-1"]) {
      var prevWord = context.wordWindow["-1"];
      function leftBigramWords(x) {
        if ((x.a === tag) &&
            (x.b.data.wordWindow["0"] === token) &&
            (x.b.data.wordWindow["-1"] === prevWord)) {
            return 1;
          }
        return 0;
      }
      featureSet.addFeature(new Feature(leftBigramWords, "leftBigramWords", ["0", tag, "0", token, "-1", prevWord]));
    }
  
    // Feature that looks at the right bigram words
    if (context.wordWindow["1"]) {
      var nextWord = context.wordWindow["1"];
      function rightBigramWords(x) {
        if ((x.a === tag) &&
            (x.b.data.wordWindow["0"] === token) &&
            (x.b.data.wordWindow["1"] === nextWord)) {
            return 1;
          }
        return 0;
      }
      featureSet.addFeature(new Feature(rightBigramWords, "rightBigramWords", ["0", tag, "0", token, "1", nextWord]));
    }
  */
  // Feature that looks at the previous word and its category


  if (context.wordWindow["-1"]) {
    var prevWord = context.wordWindow["-1"];
    var prevTag = context.tagWindow["-1"];

    function prevWordAndCat(x) {
      if (x.a === tag && x.b.data.wordWindow["-1"] === prevWord && x.b.data.tagWindow["-1"] === prevTag) {
        return 1;
      }

      return 0;
    }

    featureSet.addFeature(new Feature(prevWordAndCat, "prevWordAndCat", ["0", tag, "-1", prevWord, "-1", prevTag]));
  }
  /*
    // Feature that looks at the next word and its category
    if (context.wordWindow["1"]) {
      var nextWord = context.wordWindow["1"];
      var nextTag = context.tagWindow["1"];
      function nextWordAndCat(x) {
        if ((x.a === tag) &&
            (x.b.data.wordWindow["1"] === nextWord) &&
            (x.b.data.tagWindow["1"] === nextTag)) {
            return 1;
          }
        return 0;
      }
      featureSet.addFeature(new Feature(nextWordAndCat, "nextWordAndCat", ["0", tag, "1", nextWord, "1", nextTag]));
    }
  */

};

module.exports = POS_Element;
},{"util":"nq70","../Element":"s74o","../Feature":"OohD"}],"j2YB":[function(require,module,exports) {
/*
  Corpus class for parsing and analysing corpora
  Copyright (C) 2018 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var Sample = require('../../classifiers/maxent/Sample');

var ElementClass = require('../../classifiers/maxent/POS/POS_Element');

var Lexicon = require('./Lexicon');

const BROWN = 1; // sentences: an array of annotated sentences
// A sentence is an array of annotated tokens
// A token is an object with (token, tag, testTag, ruleList)

function Corpus(data, typeOfCorpus, SentenceClass) {
  this.wordCount = 0;
  this.sentences = [];

  if (data && typeOfCorpus) {
    // For other types of corpora add a case here and supply a parsing method
    switch (typeOfCorpus) {
      case BROWN:
        this.parseBrownCorpus(data, SentenceClass);
        break;

      default:
        // Assume it is an array of tagged sentences
        this.sentences = data;
    }
  }
} // data is raw text
// A corpus parsing method should split the corpus in sentences each of which
// consist of an array of tokens.


Corpus.prototype.parseBrownCorpus = function (data, SentenceClass) {
  var that = this;
  var lines = data.split('\n');
  lines.forEach(function (line) {
    var trimmedLine = line.trim(); // Only parse lines that contain characters

    if (trimmedLine != "") {
      var taggedSentence = new SentenceClass();
      var tokens = line.trim().split(/\s+/);
      tokens.forEach(function (token) {
        that.wordCount++; // Create a tagged sentences consisting of tokens

        var wordPlusTag = token.split('_');
        taggedSentence.addTaggedWord(wordPlusTag[0], wordPlusTag[1]);
      }); // Add the sentence to the corpus

      that.sentences.push(taggedSentence);
    }
  });
}; // Returns an array of all POS tags used in the corpus


Corpus.prototype.getTags = function () {
  return Object.keys(this.posTags);
}; // Splits the corpus in a training and testing set.
// percentageTrain is the size of the training corpus in percent
// Returns an array with two elements: training corpus, testing corpus


Corpus.prototype.splitInTrainAndTest = function (percentageTrain) {
  var corpusTrain = new Corpus();
  var corpusTest = new Corpus();
  var p = percentageTrain / 100;
  this.sentences.forEach(function (sentence, i) {
    if (Math.random() < p) {
      corpusTrain.sentences.push(sentence);
    } else {
      corpusTest.sentences.push(sentence);
    }
  });
  return [corpusTrain, corpusTest];
}; // Analyses the corpus:
// - registers used POS tags
// - records the frequency of POS tag for each word


Corpus.prototype.analyse = function () {
  this.tagFrequencies = {};
  this.posTags = {};
  this.wordCount = 0;
  var that = this;
  this.sentences.forEach(function (sentence) {
    sentence.taggedWords.forEach(function (token) {
      that.wordCount++; // Register the tags used in the corpus

      that.posTags[token.tag] = true; // Register the frequency of the tag

      if (!that.tagFrequencies[token.token]) {
        that.tagFrequencies[token.token] = {};
      }

      if (!that.tagFrequencies[token.token][token.tag]) {
        that.tagFrequencies[token.token][token.tag] = 0;
      }

      that.tagFrequencies[token.token][token.tag]++;
    });
  });
}; // Creates a lexicon by taking the most frequently occurring tag of a word
// as the right tag


Corpus.prototype.buildLexicon = function () {
  var lexicon = new Lexicon();
  var that = this;
  this.analyse();
  Object.keys(this.tagFrequencies).forEach(function (token) {
    var catToFreq = that.tagFrequencies[token];
    var categories = Object.keys(catToFreq);

    function compareByFrequency(a, b) {
      if (catToFreq[a] > catToFreq[b]) {
        return -1;
      } else {
        if (catToFreq[a] < catToFreq[b]) {
          return 1;
        } else {
          return 0;
        }
      }
    }

    var sortedCategories = categories.sort(compareByFrequency);
    lexicon.addWord(token, sortedCategories);
  });
  return lexicon;
};

Corpus.prototype.tag = function (lexicon) {
  this.sentences.forEach(function (sentence) {
    sentence.taggedWords.forEach(function (token) {
      // tagWord returns a list of categories, take the first category
      token.testTag = lexicon.tagWord(token.token)[0];
    });
  });
};

Corpus.prototype.nrSentences = function () {
  return this.sentences.length;
};

Corpus.prototype.nrWords = function () {
  return this.wordCount;
};

Corpus.prototype.generateFeatures = function () {
  var features = [];
  this.sentences.forEach(function (sentence) {
    features = sentence.generateFeatures(features);
  }); //console.log(JSON.stringify(features));

  return features;
};

Corpus.prototype.prettyPrint = function () {
  this.sentences.forEach(function (sentence, index) {//logger.debug("sentence no " + index + "\n" +
    //  JSON.stringify(sentence, null, 2));
  });
};

module.exports = Corpus;
},{"../../classifiers/maxent/Sample":"bYPC","../../classifiers/maxent/POS/POS_Element":"hWGc","./Lexicon":"OC82"}],"IYO8":[function(require,module,exports) {
/*
    Distribution class for probability distributions
    Copyright (C) 2017 Hugo W.L. ter Doest

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var Element = require('./Element');

function Distribution(alpha, featureSet, sample) {
  this.alpha = alpha;
  this.featureSet = featureSet;
  this.sample = sample;
} // Returns the distribution as a string that can be stored for later usage


Distribution.prototype.toString = function () {};

Distribution.prototype.weight = function (x) {
  var product = 1;
  var that = this;
  this.alpha.forEach(function (alpha_j, j) {
    product *= Math.pow(alpha_j, that.featureSet.getFeatures()[j].apply(x));
  });
  return product;
};

Distribution.prototype.calculateAPriori = function (x) {
  if (!this.aPriorisBeforeNormalisation[x.toString()]) {
    this.aPriorisBeforeNormalisation[x.toString()] = this.weight(x);
  }

  return this.aPriorisBeforeNormalisation[x.toString()]; // / this.aPrioriNormalisationConstant;
}; // Memoize a priori probabilities of sample elements


Distribution.prototype.prepareWeights = function () {
  this.aPriorisBeforeNormalisation = {};
  this.aPrioriNormalisationConstant = 0;
  var sum = 0;
  var that = this;
  this.sample.elements.forEach(function (x) {
    that.aPriorisBeforeNormalisation[x.toString()] = that.weight(x);
    sum += that.aPriorisBeforeNormalisation[x.toString()];
  });
  this.aPrioriNormalisationConstant = sum;
};

Distribution.prototype.calculateAPosteriori = function (x) {
  if (!this.aPriorisBeforeNormalisation[x.toString()]) {
    this.aPriorisBeforeNormalisation[x.toString()] = this.weight(x);
  }

  if (!this.aPosterioriNormalisationConstants[x.b.toString()]) {
    this.aPosterioriNormalisationConstants[x.b.toString()] = this.aPosterioriNormalisation(x.b);
  }

  return this.aPriorisBeforeNormalisation[x] / this.aPosterioriNormalisationConstants[x.b.toString()];
};

Distribution.prototype.aPosterioriNormalisation = function (b) {
  var sum = 0;
  var that = this;
  this.sample.getClasses().forEach(function (a) {
    sum += that.weight(new Element(a, b));
  });
  return sum;
}; // Memoize a posteriori probabilities of sample elements


Distribution.prototype.prepareAPosterioris = function () {
  this.aPosterioriNormalisationConstants = {};
  var contextSeen = {};
  var that = this;
  this.sample.elements.forEach(function (sampleElement) {
    var context = sampleElement.b;

    if (!contextSeen[context]) {
      contextSeen[context] = true;
      that.aPosterioriNormalisationConstants[context] = that.aPosterioriNormalisation(context);
    }
  });
}; // Memoize all probabilities of sample elements


Distribution.prototype.prepare = function () {
  this.prepareWeights(); //console.log("Weights prepared");

  this.prepareAPosterioris();
}; // Relative entropy between observered distribution and derived distribution


Distribution.prototype.KullbackLieblerDistance = function () {
  var sum = 0;
  var that = this;
  this.sample.elements.forEach(function (x) {
    sum += that.sample.observedProbability(x) * Math.log(that.sample.observedProbability(x) / that.calculateAPriori(x));
  });
  return sum;
};

Distribution.prototype.logLikelihood = function () {
  var sum = 0;
  var that = this;
  this.sample.elements.forEach(function (x) {
    sum += that.sample.observedProbability(x) * Math.log(that.calculateAPriori(x));
  });
  return sum;
};

Distribution.prototype.entropy = function () {
  var sum = 0;
  var that = this;
  this.sample.elements.forEach(function (x) {
    var p = that.calculateAPriori(x);
    sum += p * Math.log(p);
  });
  return sum;
};

Distribution.prototype.checkSum = function () {
  var sum = 0;
  var that = this;
  this.sample.elements.forEach(function (x) {
    sum += that.calculateAPriori(x);
  }); //console.log("Distribution.checkSum is " + sum);

  return sum;
};

module.exports = Distribution;
},{"./Element":"s74o"}],"xzGg":[function(require,module,exports) {
/*
    GISScaler class that finds parameters of features
    Copyright (C) 2017 Hugo W.L. ter Doest

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var Element = require('./Element');

var Feature = require('./Feature');

var Distribution = require('./Distribution'); // classes is an array of classes
// features is an array of feature functions


function GISScaler(featureSet, sample) {
  this.featureSet = featureSet;
  this.sample = sample;
} // Returns true if a correction feature is necessary


GISScaler.prototype.calculateMaxSumOfFeatures = function () {
  var that = this;
  this.C = 0;
  this.featureSums = {};
  var listOfSumValues = []; // Since feature functions are derived from the sample
  // we can use the sample to calculate the max sum
  // We look at each sample element only once

  this.sample.elements.forEach(function (x) {
    if (!that.featureSums[x.toString()]) {
      var sum = 0;
      that.featureSet.getFeatures().forEach(function (f) {
        sum += f.apply(x);
      });

      if (sum > that.C) {
        that.C = sum;
      }

      that.featureSums[x.toString()] = sum;
      listOfSumValues.push(sum);
    }
  }); //console.log("GISScaler:calculateMaxSumOfFeatures:maxSum is " + this.C);
  // Check if a correction feature is necessary

  listOfSumValues.sort(function (a, b) {
    return a - b;
  });
  return listOfSumValues[0] !== listOfSumValues[listOfSumValues.length - 1];
};

GISScaler.prototype.addCorrectionFeature = function () {
  if (this.calculateMaxSumOfFeatures()) {
    //console.log("GISScaler:addCorrectionFeature:C is " + this.C);
    var that = this;

    function f(x) {
      if (that.featureSums[x.toString()] !== undefined) {
        return that.C - that.featureSums[x.toString()];
      }

      return 0;
    }

    var correctionFeature = new Feature(f, "Correction feature", []); //console.log("GISScaler:addCorrectionFeature:correctionFeature " + JSON.stringify(correctionFeature));

    this.featureSet.addFeature(correctionFeature);
  } else {//console.log("Correction feature not needed");
  }
}; // This is the Generalised Iterative Scaling algorithm
// It ends if the improvement in likelihood of the distribution does not
// improve more than minImprovement or if the maximum number of iterations is
// reached.


GISScaler.prototype.run = function (maxIterations, minImprovement) {
  this.iteration = 0;
  this.improvement = 0;
  this.addCorrectionFeature(); // Build up the distribution p

  var alpha = new Array(this.featureSet.size());

  for (var i = 0; i < alpha.length; i++) {
    alpha[i] = 1;
  }

  var p = new Distribution(alpha, this.featureSet, this.sample); //console.log("Distribution created");

  p.prepare(); //console.log("Distribution prepared");

  var likelihood = p.logLikelihood();
  var KLDistance = p.KullbackLieblerDistance();
  var newAlpha = new Array(this.featureSet.size());
  var observedExpectation = 0;
  var expectationApprox = 0;

  do {
    //console.log("Iteration " + this.iteration + " - Log likelihood of sample: " + likelihood + " - Entropy: " + p.entropy());
    for (var i = 0; i < this.featureSet.size(); i++) {
      observedExpectation = this.featureSet.getFeatures()[i].observedExpectation(this.sample);
      expectationApprox = this.featureSet.getFeatures()[i].expectationApprox(p, this.sample); //console.log("Iteration " + this.iteration + " - Feature " + i);

      newAlpha[i] = p.alpha[i] * Math.pow(observedExpectation / expectationApprox, 1 / this.C); //console.log("GISScaler.run: old alpha[" + i + "]: " + p.alpha[i]);
      //console.log("GISScaler.run: new alpha[" + i + "]: " + newAlpha[i]);
    } // Make the newly calculated parameters current parameters


    newAlpha.forEach(function (newAlpha_j, j) {
      p.alpha[j] = newAlpha_j;
    }); // Recalculate a priori and a posteriori probabilities

    p.prepare();
    this.iteration++;
    var newLikelihood = p.logLikelihood();
    var newKLDistance = p.KullbackLieblerDistance();
    this.improvement = KLDistance - newKLDistance; //console.log("Iteration " + this.iteration + " - Old likelihood: " + likelihood + " - New likelihood: " + newLikelihood);
    //console.log("Iteration " + this.iteration + " - Old KL: " + KLDistance + " - New KL: " + newKLDistance);

    likelihood = newLikelihood;
    KLDistance = newKLDistance;
  } while (this.iteration < maxIterations && this.improvement > minImprovement); //} while (iteration < maxIterations);

  /*
  var that = this;
  this.featureSet.getFeatures().forEach(function(f, j) {
    console.log("Observed expectation of feature " + j + ": " + f.observedExpectation(that.sample) +
      " - Expection of feature according to p: " + f.expectationApprox(p, that.sample));
  });
  */


  return p;
};

module.exports = GISScaler;
},{"./Element":"s74o","./Feature":"OohD","./Distribution":"IYO8"}],"Nh8R":[function(require,module,exports) {
/*
  Feature set class for administrating a set of unique feature
  Copyright (C) 2017 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
function FeatureSet() {
  this.features = [];
  this.map = {};
} // Returns true if the feature did not exist and was added


FeatureSet.prototype.addFeature = function (feature) {
  if (!this.featureExists(feature)) {
    this.map[feature.name + " | " + feature.parametersKey] = true;
    this.features.push(feature); //console.log("FeatureSet.addFeature: feature added: " + feature.name + " - " + feature.parametersKey);

    return true;
  } else {
    return false;
  }
};

FeatureSet.prototype.featureExists = function (feature) {
  if (this.map[feature.name + " | " + feature.parametersKey]) {
    //console.log("FeatureSet.featureExists: feature already exists: " +
    //  feature.name + " - " + feature.parameters);
    return true;
  } else {
    return false;
  }
}; // Returns an array of features
// If the available array this.features is up to date it is returned immediately


FeatureSet.prototype.getFeatures = function () {
  return this.features;
};

FeatureSet.prototype.size = function () {
  return this.features.length;
};

FeatureSet.prototype.prettyPrint = function () {
  var s = "";
  Object.keys(this.map).forEach(function (key) {
    s += key + "\n";
  });
  return s;
};

module.exports = FeatureSet;
},{}],"DEQJ":[function(require,module,exports) {
/*
    Classifier class that provides functionality for training and
    classification
    Copyright (C) 2017 Hugo W.L. ter Doest

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var fs = require('fs');

var Context = require('./Context');

var Element = require('./Element');

var Sample = require('./Sample');

var Scaler = require('./GISScaler');

var FeatureSet = require('./FeatureSet');

function Classifier(features, sample) {
  if (features) {
    this.features = features;
  } else {
    this.features = new featureSet();
  }

  this.features = features;

  if (sample) {
    this.sample = sample;
  } else {
    this.sample = new Sample();
  }
} // Loads a classifier from file.
// Caveat: feature functions are generated from the sample elements. You need
// to create your own specialisation of the Element class that can generate
// your own specific feature functions


Classifier.prototype.load = function (filename, elementClass, callback) {
  fs.readFile(filename, 'utf8', function (err, data) {
    if (!err) {
      classifierData = JSON.parse(data);
      var sample = new Sample();
      classifierData.sample.elements.forEach(function (elementData) {
        var elt = new elementClass(elementData.a, new Context(elementData.b.data));
        sample.addElement(elt);
      });
      var featureSet = new FeatureSet();
      sample.generateFeatures(featureSet);
      var classifier = new Classifier(featureSet, sample);
      callback(err, classifier);
    } else {
      if (callback) {
        callback(err);
      }
    }
  });
};

Classifier.prototype.save = function (filename, callback) {
  var data = JSON.stringify(this, null, 2);
  var classifier = this;
  fs.writeFile(filename, data, 'utf8', function (err) {
    if (callback) {
      callback(err, err ? null : classifier);
    }
  });
};

Classifier.prototype.addElement = function (x) {
  this.sample.addElement(x);
};

Classifier.prototype.addDocument = function (context, classification, elementClass) {
  Classifier.prototype.addElement(new elementClass(classification, context));
};

Classifier.prototype.train = function (maxIterations, minImprovement, approxExpectation) {
  this.scaler = new Scaler(this.features, this.sample);
  this.p = this.scaler.run(maxIterations, minImprovement, approxExpectation);
};

Classifier.prototype.getClassifications = function (b) {
  var scores = [];
  var that = this;
  this.sample.getClasses().forEach(function (a) {
    var x = new Element(a, b);
    scores.push({
      "label": a,
      "value": that.p.calculateAPriori(x)
    });
  });
  return scores;
};

Classifier.prototype.classify = function (b) {
  var scores = this.getClassifications(b); // Sort the scores in an array

  scores.sort(function (a, b) {
    return b.value - a.value;
  }); // Check if the classifier discriminates

  var min = scores[scores.length - 1].value;
  var max = scores[0].value;

  if (min === max) {
    return "";
  } else {
    // Return the highest scoring classes
    return scores[0].label;
  }
};

module.exports = Classifier;
},{"fs":"rDCW","./Context":"pyBO","./Element":"s74o","./Sample":"bYPC","./GISScaler":"xzGg","./FeatureSet":"Nh8R"}],"jZrX":[function(require,module,exports) {
/*
  Simple Example Element class
  Copyright (C) 2018 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var util = require('util');

var Element = require('../Element');

var Feature = require('../Feature');

function SE_Element(a, b) {
  SE_Element.super_.call(this, a, b);
}

util.inherits(SE_Element, Element);

SE_Element.prototype.generateFeatures = function (featureSet) {
  function isZero(x) {
    if (x.a === "x" && x.b.data === "0") {
      return 1;
    }

    return 0;
  }

  featureSet.addFeature(new Feature(isZero, "isZero", ["0"]));

  function isOne(x) {
    if (x.a === "y" && x.b.data === "1") {
      return 1;
    }

    return 0;
  }

  featureSet.addFeature(new Feature(isOne, "isOne", ["1"]));
};

module.exports = SE_Element;
},{"util":"nq70","../Element":"s74o","../Feature":"OohD"}],"YqO6":[function(require,module,exports) {
/*
  Sentence class specific for MaxEnt modeling
  Copyright (C) 2018 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var util = require('util');

var Context = require('../Context');

var Sentence = require('../../../brill_pos_tagger/lib/Sentence');

var Element = require('./POS_Element');

function ME_Sentence() {
  ME_Sentence.super_.call(this);
}

util.inherits(ME_Sentence, Sentence);

ME_Sentence.prototype.generateSampleElements = function (sample) {
  var sentence = this.taggedWords;
  sentence.forEach(function (token, index) {
    var x = new Element(token.tag, new Context({
      wordWindow: {},
      tagWindow: {}
    })); // Current word and tag

    x.b.data.wordWindow["0"] = token.token;
    x.b.data.tagWindow["0"] = sentence[index].tag; // Previous bigram

    if (index > 1) {
      x.b.data.tagWindow["-2"] = sentence[index - 2].tag;
      x.b.data.wordWindow["-2"] = sentence[index - 2].token;
    } // Left bigram


    if (index > 0) {
      x.b.data.tagWindow["-1"] = sentence[index - 1].tag;
      x.b.data.wordWindow["-1"] = sentence[index - 1].token;
    } // Right bigram


    if (index < sentence.length - 1) {
      x.b.data.tagWindow["1"] = sentence[index + 1].tag;
      x.b.data.wordWindow["1"] = sentence[index + 1].token;
    } // Next bigram


    if (index < sentence.length - 2) {
      x.b.data.tagWindow["2"] = sentence[index + 2].tag;
      x.b.data.wordWindow["2"] = sentence[index + 2].token;
    }

    sample.addElement(x);
  });
};

module.exports = ME_Sentence;
},{"util":"nq70","../Context":"pyBO","../../../brill_pos_tagger/lib/Sentence":"KDM0","./POS_Element":"hWGc"}],"dJNV":[function(require,module,exports) {
/*
  Corpus class specific for MaxEnt modeling
  Copyright (C) 2018 Hugo W.L. ter Doest

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
var util = require('util');

var Sample = require('../Sample');

var Corpus = require('../../../brill_pos_tagger/lib/Corpus');

function ME_Corpus(data, BROWN, SentenceClass) {
  ME_Corpus.super_.call(this, data, BROWN, SentenceClass);
}

util.inherits(ME_Corpus, Corpus);

ME_Corpus.prototype.generateSample = function () {
  var sample = new Sample([]);
  this.sentences.forEach(function (sentence) {
    sentence.generateSampleElements(sample);
  });
  return sample;
}; // Splits the corpus in a training and testing set.
// percentageTrain is the size of the training corpus in percent
// Returns an array with two elements: training corpus, testing corpus


ME_Corpus.prototype.splitInTrainAndTest = function (percentageTrain) {
  var corpusTrain = new ME_Corpus();
  var corpusTest = new ME_Corpus();
  var p = percentageTrain / 100;
  this.sentences.forEach(function (sentence, i) {
    if (Math.random() < p) {
      corpusTrain.sentences.push(sentence);
    } else {
      corpusTest.sentences.push(sentence);
    }
  });
  return [corpusTrain, corpusTest];
};

module.exports = ME_Corpus;
},{"util":"nq70","../Sample":"bYPC","../../../brill_pos_tagger/lib/Corpus":"j2YB"}],"vihp":[function(require,module,exports) {
/*
  Copyright (c) 2018, Domingo Martín Mancera, Hugo W.L. ter Doest (based on https://github.com/dmarman/lorca)

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
var languageFiles = {
  "afinn": {
    "English": ["afinn-165", "./English/negations_en.json"],
    "Spanish": ["./Spanish/afinnShortSortedSpanish", "./Spanish/negations_es.json"]
  },
  "senticon": {
    "Spanish": ["./Spanish/senticon_es.json", "./Spanish/negations_es.json"],
    "English": ["./English/senticon_en.json", "./English/negations_en.json"],
    "Galician": ["./Galician/senticon_gl.json", ""],
    "Catalan": ["./Catalan/senticon_ca.json", ""],
    "Basque": ["./Basque/senticon_eu.json", ""]
  },
  "pattern": {
    "Dutch": ["./Dutch/pattern-sentiment-nl.json", "./Dutch/negations_du.json"],
    "Italian": ["./Italian/pattern-sentiment-it.json", ""],
    "English": ["./English/pattern-sentiment-en.json", "./English/negations_en.json"],
    "French": ["./French/pattern-sentiment-fr", ""]
  }
};

class SentimentAnalyzer {
  constructor(language, stemmer, type) {
    this.language = language;
    this.stemmer = stemmer;
    this.vocabulary = require(languageFiles[type][language][0]);

    if (type === "senticon") {
      Object.keys(this.vocabulary).forEach(word => {
        this.vocabulary[word] = this.vocabulary[word].pol;
      });
    } else {
      if (type == "pattern") {
        Object.keys(this.vocabulary).forEach(word => {
          this.vocabulary[word] = this.vocabulary[word].polarity;
        }); //console.log(JSON.stringify(this.vocabulary, null, 2));
      }
    }

    this.negations = [];

    if (languageFiles[type][language][1] != "") {
      this.negations = require(languageFiles[type][language][1]).words;
    }

    if (stemmer) {
      var vocaStemmed = {};

      for (var token in this.vocabulary) {
        vocaStemmed[stemmer.stem(token)] = this.vocabulary[token];
      }

      this.vocabulary = vocaStemmed;
    }
  } // words is an array of words (strings)


  getSentiment(words) {
    var score = 0;
    var negator = 1;
    var nrHits = 0;
    words.forEach(token => {
      var lowerCased = token.toLowerCase();

      if (this.negations.indexOf(lowerCased) > -1) {
        negator = -1;
        nrHits++;
      } else {
        // First try without stemming
        if (this.vocabulary[lowerCased] != undefined) {
          score += negator * this.vocabulary[lowerCased];
          nrHits++;
        } else {
          if (this.stemmer) {
            var stemmedWord = this.stemmer.stem(lowerCased);

            if (this.vocabulary[stemmedWord] != undefined) {
              score += negator * this.vocabulary[stemmedWord];
              nrHits++;
            }
          }
        }
      }
    });
    score = score / words.length; //console.log("Number of hits: " + nrHits);

    return score;
  }

}

module.exports = SentimentAnalyzer;
},{}],"ruKG":[function(require,module,exports) {
/*
Copyright (c) 2011, Chris Umbel

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/
exports.SoundEx = require('./phonetics/soundex');
exports.Metaphone = require('./phonetics/metaphone');
exports.DoubleMetaphone = require('./phonetics/double_metaphone');
exports.SoundExDM = require('./phonetics/dm_soundex');
exports.PorterStemmer = require('./stemmers/porter_stemmer');
exports.PorterStemmerFa = require('./stemmers/porter_stemmer_fa');
exports.PorterStemmerFr = require('./stemmers/porter_stemmer_fr');
exports.PorterStemmerRu = require('./stemmers/porter_stemmer_ru');
exports.PorterStemmerEs = require('./stemmers/porter_stemmer_es');
exports.PorterStemmerIt = require('./stemmers/porter_stemmer_it');
exports.PorterStemmerNo = require('./stemmers/porter_stemmer_no');
exports.PorterStemmerSv = require('./stemmers/porter_stemmer_sv');
exports.PorterStemmerPt = require('./stemmers/porter_stemmer_pt');
exports.PorterStemmerNl = require('./stemmers/porter_stemmer_nl');
exports.LancasterStemmer = require('./stemmers/lancaster_stemmer'); // StemmerFr and StemmerPl are not stemmers. A Polish stemmer is
// not available, and for French PorterStemmerFr should be used.
//exports.StemmerFr = require('./stemmers/stemmer_fr');
//exports.StemmerPl = require('./stemmers/stemmer_pl');

exports.StemmerJa = require('./stemmers/stemmer_ja');
exports.StemmerId = require('./stemmers/indonesian/stemmer_id');
exports.AggressiveTokenizerNl = require('./tokenizers/aggressive_tokenizer_nl');
exports.AggressiveTokenizerFa = require('./tokenizers/aggressive_tokenizer_fa');
exports.AggressiveTokenizerFr = require('./tokenizers/aggressive_tokenizer_fr');
exports.AggressiveTokenizerRu = require('./tokenizers/aggressive_tokenizer_ru');
exports.AggressiveTokenizerEs = require('./tokenizers/aggressive_tokenizer_es');
exports.AggressiveTokenizerIt = require('./tokenizers/aggressive_tokenizer_it');
exports.AggressiveTokenizerPl = require('./tokenizers/aggressive_tokenizer_pl');
exports.AggressiveTokenizerPt = require('./tokenizers/aggressive_tokenizer_pt');
exports.AggressiveTokenizerNo = require('./tokenizers/aggressive_tokenizer_no');
exports.AggressiveTokenizerSv = require('./tokenizers/aggressive_tokenizer_sv');
exports.AggressiveTokenizerVi = require('./tokenizers/aggressive_tokenizer_vi');
exports.AggressiveTokenizer = require('./tokenizers/aggressive_tokenizer');
exports.CaseTokenizer = require('./tokenizers/tokenizer_case');
exports.RegexpTokenizer = require('./tokenizers/regexp_tokenizer').RegexpTokenizer;
exports.OrthographyTokenizer = require('./tokenizers/regexp_tokenizer').OrthographyTokenizer;
exports.WordTokenizer = require('./tokenizers/regexp_tokenizer').WordTokenizer;
exports.WordPunctTokenizer = require('./tokenizers/regexp_tokenizer').WordPunctTokenizer;
exports.TreebankWordTokenizer = require('./tokenizers/treebank_word_tokenizer');
exports.TokenizerJa = require('./tokenizers/tokenizer_ja');
exports.SentenceTokenizer = require('./tokenizers/sentence_tokenizer');
exports.BayesClassifier = require('./classifiers/bayes_classifier');
exports.LogisticRegressionClassifier = require('./classifiers/logistic_regression_classifier');
exports.NounInflector = require('./inflectors/noun_inflector');
exports.NounInflectorFr = require('./inflectors/fr/noun_inflector');
exports.NounInflectorJa = require('./inflectors/ja/noun_inflector');
exports.PresentVerbInflector = require('./inflectors/present_verb_inflector');
exports.CountInflector = require('./inflectors/count_inflector');
exports.WordNet = require('./wordnet/wordnet');
exports.TfIdf = require('./tfidf/tfidf');
exports.Trie = require('./trie/trie');
exports.SentenceAnalyzer = require('./analyzers/sentence_analyzer');
exports.stopwords = require('./util/stopwords').words;
exports.ShortestPathTree = require('./util/shortest_path_tree');
exports.Spellcheck = require('./spellcheck/spellcheck');
exports.LongestPathTree = require('./util/longest_path_tree');
exports.EdgeWeightedDigraph = require('./util/edge_weighted_digraph');
exports.NGrams = require('./ngrams/ngrams');
exports.NGramsZH = require('./ngrams/ngrams_zh');
exports.JaroWinklerDistance = require('./distance/jaro-winkler_distance');
exports.LevenshteinDistance = require('./distance/levenshtein_distance').LevenshteinDistance;
exports.DamerauLevenshteinDistance = require('./distance/levenshtein_distance').DamerauLevenshteinDistance;
exports.DiceCoefficient = require('./distance/dice_coefficient');
exports.HammingDistance = require('./distance/hamming_distance');
exports.normalize = require('./normalizers/normalizer').normalize_tokens;
exports.normalize_ja = require('./normalizers/normalizer_ja').normalize_ja;
exports.removeDiacritics = require('./normalizers/remove_diacritics');
exports.transliterate_ja = require('./transliterators/ja');
exports.BrillPOSTagger = require('./brill_pos_tagger/lib/Brill_POS_Tagger');
exports.BrillPOSTrainer = require('./brill_pos_tagger/lib/Brill_POS_Trainer');
exports.BrillPOSTester = require('./brill_pos_tagger/lib/Brill_POS_Tester');
exports.Lexicon = require('./brill_pos_tagger/lib/Lexicon');
exports.RuleSet = require('./brill_pos_tagger/lib/RuleSet');
exports.RuleTemplates = require('./brill_pos_tagger/lib/RuleTemplates');
exports.RuleTemplate = require('./brill_pos_tagger/lib/RuleTemplate');
exports.Corpus = require('./brill_pos_tagger/lib/Corpus');
exports.MaxEntClassifier = require('./classifiers/maxent/Classifier');
exports.Context = require('./classifiers/maxent/Context');
exports.Feature = require('./classifiers/maxent/Feature');
exports.FeatureSet = require('./classifiers/maxent/FeatureSet');
exports.Sample = require('./classifiers/maxent/Sample');
exports.Element = require('./classifiers/maxent/Element');
exports.SE_Element = require('./classifiers/maxent/SimpleExample/SE_Element');
exports.Sentence = require('./brill_pos_tagger/lib/Sentence');
exports.GISScaler = require('./classifiers/maxent/GISScaler');
exports.POS_Element = require('./classifiers/maxent/POS/POS_Element');
exports.ME_Sentence = require('./classifiers/maxent/POS/ME_Sentence');
exports.ME_Corpus = require('./classifiers/maxent/POS/ME_Corpus');
exports.SentimentAnalyzer = require('./sentiment/SentimentAnalyzer');
},{"./phonetics/soundex":"fHeJ","./phonetics/metaphone":"WElW","./phonetics/double_metaphone":"IUBO","./phonetics/dm_soundex":"yBLz","./stemmers/porter_stemmer":"hFgZ","./stemmers/porter_stemmer_fa":"xje2","./stemmers/porter_stemmer_fr":"q7pO","./stemmers/porter_stemmer_ru":"jwxo","./stemmers/porter_stemmer_es":"sT5O","./stemmers/porter_stemmer_it":"fYpG","./stemmers/porter_stemmer_no":"d9Kl","./stemmers/porter_stemmer_sv":"BtZF","./stemmers/porter_stemmer_pt":"vN4u","./stemmers/porter_stemmer_nl":"Bi3x","./stemmers/lancaster_stemmer":"QfRu","./stemmers/stemmer_ja":"DyXv","./stemmers/indonesian/stemmer_id":"IjLb","./tokenizers/aggressive_tokenizer_nl":"IKpd","./tokenizers/aggressive_tokenizer_fa":"q7Gk","./tokenizers/aggressive_tokenizer_fr":"CrSh","./tokenizers/aggressive_tokenizer_ru":"qWaQ","./tokenizers/aggressive_tokenizer_es":"WaGX","./tokenizers/aggressive_tokenizer_it":"v6r3","./tokenizers/aggressive_tokenizer_pl":"wCaQ","./tokenizers/aggressive_tokenizer_pt":"IWGI","./tokenizers/aggressive_tokenizer_no":"Cv9T","./tokenizers/aggressive_tokenizer_sv":"vQpl","./tokenizers/aggressive_tokenizer_vi":"XbBT","./tokenizers/aggressive_tokenizer":"nbJc","./tokenizers/tokenizer_case":"XDOC","./tokenizers/regexp_tokenizer":"LYyI","./tokenizers/treebank_word_tokenizer":"hvKR","./tokenizers/tokenizer_ja":"Fain","./tokenizers/sentence_tokenizer":"HOVZ","./classifiers/bayes_classifier":"kd1i","./classifiers/logistic_regression_classifier":"a582","./inflectors/noun_inflector":"cxDQ","./inflectors/fr/noun_inflector":"dbaX","./inflectors/ja/noun_inflector":"cA4I","./inflectors/present_verb_inflector":"HSgG","./inflectors/count_inflector":"AEFT","./wordnet/wordnet":"zjvV","./tfidf/tfidf":"KXVd","./trie/trie":"iysN","./analyzers/sentence_analyzer":"AQuo","./util/stopwords":"l7Q1","./util/shortest_path_tree":"ZNbZ","./spellcheck/spellcheck":"VpoG","./util/longest_path_tree":"NBgM","./util/edge_weighted_digraph":"FvoX","./ngrams/ngrams":"a1HV","./ngrams/ngrams_zh":"k7oS","./distance/jaro-winkler_distance":"Ls2c","./distance/levenshtein_distance":"dOpz","./distance/dice_coefficient":"yzYg","./distance/hamming_distance":"KQpg","./normalizers/normalizer":"Z5wq","./normalizers/normalizer_ja":"bYkY","./normalizers/remove_diacritics":"yWPV","./transliterators/ja":"cDO1","./brill_pos_tagger/lib/Brill_POS_Tagger":"Xres","./brill_pos_tagger/lib/Brill_POS_Trainer":"Qeg1","./brill_pos_tagger/lib/Brill_POS_Tester":"aFCJ","./brill_pos_tagger/lib/Lexicon":"OC82","./brill_pos_tagger/lib/RuleSet":"ffuA","./brill_pos_tagger/lib/RuleTemplates":"yvKV","./brill_pos_tagger/lib/RuleTemplate":"SkzG","./brill_pos_tagger/lib/Corpus":"j2YB","./classifiers/maxent/Classifier":"DEQJ","./classifiers/maxent/Context":"pyBO","./classifiers/maxent/Feature":"OohD","./classifiers/maxent/FeatureSet":"Nh8R","./classifiers/maxent/Sample":"bYPC","./classifiers/maxent/Element":"s74o","./classifiers/maxent/SimpleExample/SE_Element":"jZrX","./brill_pos_tagger/lib/Sentence":"KDM0","./classifiers/maxent/GISScaler":"xzGg","./classifiers/maxent/POS/POS_Element":"hWGc","./classifiers/maxent/POS/ME_Sentence":"YqO6","./classifiers/maxent/POS/ME_Corpus":"dJNV","./sentiment/SentimentAnalyzer":"vihp"}],"pT13":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dependencies = exports.devDependencies = exports.scripts = exports.files = exports.repository = exports.module = exports.jsdelivr = exports.unpkg = exports.main = exports.author = exports.license = exports.homepage = exports.keywords = exports.description = exports.version = exports.name = void 0;
var name = "d3";
exports.name = name;
var version = "5.15.0";
exports.version = version;
var description = "Data-Driven Documents";
exports.description = description;
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
exports.keywords = keywords;
var homepage = "https://d3js.org";
exports.homepage = homepage;
var license = "BSD-3-Clause";
exports.license = license;
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
exports.author = author;
var main = "dist/d3.node.js";
exports.main = main;
var unpkg = "dist/d3.min.js";
exports.unpkg = unpkg;
var jsdelivr = "dist/d3.min.js";
exports.jsdelivr = jsdelivr;
var _module = "index.js";
exports.module = _module;
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
exports.repository = repository;
var files = ["dist/**/*.js", "index.js"];
exports.files = files;
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \"${npm_package_version}\" && git tag -am \"${npm_package_version}\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
exports.scripts = scripts;
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "2",
  "rollup": "1",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "3",
  "rollup-plugin-terser": "5",
  "tape": "4"
};
exports.devDependencies = devDependencies;
var dependencies = {
  "d3-array": "1",
  "d3-axis": "1",
  "d3-brush": "1",
  "d3-chord": "1",
  "d3-collection": "1",
  "d3-color": "1",
  "d3-contour": "1",
  "d3-dispatch": "1",
  "d3-drag": "1",
  "d3-dsv": "1",
  "d3-ease": "1",
  "d3-fetch": "1",
  "d3-force": "1",
  "d3-format": "1",
  "d3-geo": "1",
  "d3-hierarchy": "1",
  "d3-interpolate": "1",
  "d3-path": "1",
  "d3-polygon": "1",
  "d3-quadtree": "1",
  "d3-random": "1",
  "d3-scale": "2",
  "d3-scale-chromatic": "1",
  "d3-selection": "1",
  "d3-shape": "1",
  "d3-time": "1",
  "d3-time-format": "2",
  "d3-timer": "1",
  "d3-transition": "1",
  "d3-voronoi": "1",
  "d3-zoom": "1"
};
exports.dependencies = dependencies;
},{}],"yJgn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{}],"CQHQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
      }

      return lo;
    },
    right: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
      }

      return lo;
    }
  };
}

function ascendingComparator(f) {
  return function (d, x) {
    return (0, _ascending.default)(f(d), x);
  };
}
},{"./ascending":"yJgn"}],"YrTP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.bisectLeft = exports.bisectRight = void 0;

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ascendingBisect = (0, _bisector.default)(_ascending.default);
var bisectRight = ascendingBisect.right;
exports.bisectRight = bisectRight;
var bisectLeft = ascendingBisect.left;
exports.bisectLeft = bisectLeft;
var _default = bisectRight;
exports.default = _default;
},{"./ascending":"yJgn","./bisector":"CQHQ"}],"DkXH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.pair = pair;

function _default(array, f) {
  if (f == null) f = pair;
  var i = 0,
      n = array.length - 1,
      p = array[0],
      pairs = new Array(n < 0 ? 0 : n);

  while (i < n) pairs[i] = f(p, p = array[++i]);

  return pairs;
}

function pair(a, b) {
  return [a, b];
}
},{}],"LKVk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pairs = require("./pairs");

function _default(values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;
  if (reduce == null) reduce = _pairs.pair;

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
}
},{"./pairs":"DkXH"}],"fBAz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"XWLP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x === null ? NaN : +x;
}
},{}],"Nh5Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
}
},{"./number":"XWLP"}],"WEAa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _variance = _interopRequireDefault(require("./variance"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(array, f) {
  var v = (0, _variance.default)(array, f);
  return v ? Math.sqrt(v) : v;
}
},{"./variance":"Nh5Q"}],"UaWb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
}
},{}],"RkzJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
var map = array.map;
exports.map = map;
},{}],"aCvo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"NNW9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"wcAU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}
},{}],"EUzg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function _default(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();
  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}
},{}],"J0XR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
}
},{}],"d5Tn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _bisect = _interopRequireDefault(require("./bisect"));

var _constant = _interopRequireDefault(require("./constant"));

var _extent = _interopRequireDefault(require("./extent"));

var _identity = _interopRequireDefault(require("./identity"));

var _range = _interopRequireDefault(require("./range"));

var _ticks = require("./ticks");

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      domain = _extent.default,
      threshold = _sturges.default;

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = (0, _ticks.tickStep)(x0, x1, tz);
      tz = (0, _range.default)(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) tz.shift(), --m;

    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
  };

  return histogram;
}
},{"./array":"RkzJ","./bisect":"YrTP","./constant":"aCvo","./extent":"UaWb","./identity":"NNW9","./range":"wcAU","./ticks":"EUzg","./threshold/sturges":"J0XR"}],"xM5B":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, p, valueof) {
  if (valueof == null) valueof = _number.default;
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}
},{"./number":"XWLP"}],"nJJ4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array");

var _ascending = _interopRequireDefault(require("../ascending"));

var _number = _interopRequireDefault(require("../number"));

var _quantile = _interopRequireDefault(require("../quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  values = _array.map.call(values, _number.default).sort(_ascending.default);
  return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow(values.length, -1 / 3)));
}
},{"../array":"RkzJ","../ascending":"yJgn","../number":"XWLP","../quantile":"xM5B"}],"Rqev":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _deviation = _interopRequireDefault(require("../deviation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  return Math.ceil((max - min) / (3.5 * (0, _deviation.default)(values) * Math.pow(values.length, -1 / 3)));
}
},{"../deviation":"WEAa"}],"Ougw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
}
},{}],"YY5N":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) sum += value;else --m;
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) sum += value;else --m;
    }
  }

  if (m) return sum / m;
}
},{"./number":"XWLP"}],"CxwF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

var _number = _interopRequireDefault(require("./number"));

var _quantile = _interopRequireDefault(require("./quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        numbers.push(value);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return (0, _quantile.default)(numbers.sort(_ascending.default), 0.5);
}
},{"./ascending":"yJgn","./number":"XWLP","./quantile":"xM5B"}],"Getd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;

  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;

    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
}
},{}],"kP8m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
}
},{}],"RhiG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, indexes) {
  var i = indexes.length,
      permutes = new Array(i);

  while (i--) permutes[i] = array[indexes[i]];

  return permutes;
}
},{}],"swlo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];
  if (compare == null) compare = _ascending.default;

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
}
},{"./ascending":"yJgn"}],"Xskt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
}
},{}],"uFmM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  } else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
}
},{}],"DmNI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _min = _interopRequireDefault(require("./min"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
}

function length(d) {
  return d.length;
}
},{"./min":"kP8m"}],"ciZM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _transpose = _interopRequireDefault(require("./transpose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _transpose.default)(arguments);
}
},{"./transpose":"DmNI"}],"K0bd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bisect", {
  enumerable: true,
  get: function () {
    return _bisect.default;
  }
});
Object.defineProperty(exports, "bisectRight", {
  enumerable: true,
  get: function () {
    return _bisect.bisectRight;
  }
});
Object.defineProperty(exports, "bisectLeft", {
  enumerable: true,
  get: function () {
    return _bisect.bisectLeft;
  }
});
Object.defineProperty(exports, "ascending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "bisector", {
  enumerable: true,
  get: function () {
    return _bisector.default;
  }
});
Object.defineProperty(exports, "cross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "descending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "deviation", {
  enumerable: true,
  get: function () {
    return _deviation.default;
  }
});
Object.defineProperty(exports, "extent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "histogram", {
  enumerable: true,
  get: function () {
    return _histogram.default;
  }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
  enumerable: true,
  get: function () {
    return _freedmanDiaconis.default;
  }
});
Object.defineProperty(exports, "thresholdScott", {
  enumerable: true,
  get: function () {
    return _scott.default;
  }
});
Object.defineProperty(exports, "thresholdSturges", {
  enumerable: true,
  get: function () {
    return _sturges.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "median", {
  enumerable: true,
  get: function () {
    return _median.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function () {
    return _pairs.default;
  }
});
Object.defineProperty(exports, "permute", {
  enumerable: true,
  get: function () {
    return _permute.default;
  }
});
Object.defineProperty(exports, "quantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function () {
    return _scan.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "ticks", {
  enumerable: true,
  get: function () {
    return _ticks.default;
  }
});
Object.defineProperty(exports, "tickIncrement", {
  enumerable: true,
  get: function () {
    return _ticks.tickIncrement;
  }
});
Object.defineProperty(exports, "tickStep", {
  enumerable: true,
  get: function () {
    return _ticks.tickStep;
  }
});
Object.defineProperty(exports, "transpose", {
  enumerable: true,
  get: function () {
    return _transpose.default;
  }
});
Object.defineProperty(exports, "variance", {
  enumerable: true,
  get: function () {
    return _variance.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});

var _bisect = _interopRequireWildcard(require("./bisect"));

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

var _cross = _interopRequireDefault(require("./cross"));

var _descending = _interopRequireDefault(require("./descending"));

var _deviation = _interopRequireDefault(require("./deviation"));

var _extent = _interopRequireDefault(require("./extent"));

var _histogram = _interopRequireDefault(require("./histogram"));

var _freedmanDiaconis = _interopRequireDefault(require("./threshold/freedmanDiaconis"));

var _scott = _interopRequireDefault(require("./threshold/scott"));

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

var _max = _interopRequireDefault(require("./max"));

var _mean = _interopRequireDefault(require("./mean"));

var _median = _interopRequireDefault(require("./median"));

var _merge = _interopRequireDefault(require("./merge"));

var _min = _interopRequireDefault(require("./min"));

var _pairs = _interopRequireDefault(require("./pairs"));

var _permute = _interopRequireDefault(require("./permute"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _range = _interopRequireDefault(require("./range"));

var _scan = _interopRequireDefault(require("./scan"));

var _shuffle = _interopRequireDefault(require("./shuffle"));

var _sum = _interopRequireDefault(require("./sum"));

var _ticks = _interopRequireWildcard(require("./ticks"));

var _transpose = _interopRequireDefault(require("./transpose"));

var _variance = _interopRequireDefault(require("./variance"));

var _zip = _interopRequireDefault(require("./zip"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./bisect":"YrTP","./ascending":"yJgn","./bisector":"CQHQ","./cross":"LKVk","./descending":"fBAz","./deviation":"WEAa","./extent":"UaWb","./histogram":"d5Tn","./threshold/freedmanDiaconis":"nJJ4","./threshold/scott":"Rqev","./threshold/sturges":"J0XR","./max":"Ougw","./mean":"YY5N","./median":"CxwF","./merge":"Getd","./min":"kP8m","./pairs":"DkXH","./permute":"RhiG","./quantile":"xM5B","./range":"wcAU","./scan":"swlo","./shuffle":"Xskt","./sum":"uFmM","./ticks":"EUzg","./transpose":"DmNI","./variance":"Nh5Q","./zip":"ciZM"}],"KXlw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"c1MF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axisTop = axisTop;
exports.axisRight = axisRight;
exports.axisBottom = axisBottom;
exports.axisLeft = axisLeft;

var _array = require("./array");

var _identity = _interopRequireDefault(require("./identity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return function (d) {
    return +scale(d);
  };
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.

  if (scale.round()) offset = Math.round(offset);
  return function (d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity.default : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d));
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array.slice.call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array.slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array.slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}
},{"./array":"KXlw","./identity":"NNW9"}],"mp0m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "axisTop", {
  enumerable: true,
  get: function () {
    return _axis.axisTop;
  }
});
Object.defineProperty(exports, "axisRight", {
  enumerable: true,
  get: function () {
    return _axis.axisRight;
  }
});
Object.defineProperty(exports, "axisBottom", {
  enumerable: true,
  get: function () {
    return _axis.axisBottom;
  }
});
Object.defineProperty(exports, "axisLeft", {
  enumerable: true,
  get: function () {
    return _axis.axisLeft;
  }
});

var _axis = require("./axis");
},{"./axis":"c1MF"}],"a3oC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var noop = {
  value: function () {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function (typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function () {
    var copy = {},
        _ = this._;

    for (var t in _) copy[t] = _[t].slice();

    return new Dispatch(copy);
  },
  call: function (type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function (type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

var _default = dispatch;
exports.default = _default;
},{}],"D3zY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dispatch", {
  enumerable: true,
  get: function () {
    return _dispatch.default;
  }
});

var _dispatch = _interopRequireDefault(require("./dispatch.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dispatch.js":"a3oC"}],"YeOr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.xhtml = void 0;
var xhtml = "http://www.w3.org/1999/xhtml";
exports.xhtml = xhtml;
var _default = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
exports.default = _default;
},{}],"U3j5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespaces = _interopRequireDefault(require("./namespaces"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces.default.hasOwnProperty(prefix) ? {
    space: _namespaces.default[prefix],
    local: name
  } : name;
}
},{"./namespaces":"YeOr"}],"z8hd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = require("./namespaces");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces.xhtml && document.documentElement.namespaceURI === _namespaces.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function _default(name) {
  var fullname = (0, _namespace.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
},{"./namespace":"U3j5","./namespaces":"YeOr"}],"vXaf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function none() {}

function _default(selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
}
},{}],"LlPS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selector.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"G2fv","../selector":"vXaf"}],"t3Ja":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function empty() {
  return [];
}

function _default(selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
}
},{}],"VXfp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selectorAll = _interopRequireDefault(require("../selectorAll"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selectorAll.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, parents);
}
},{"./index":"G2fv","../selectorAll":"t3Ja"}],"oB3r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(selector) {
  return function () {
    return this.matches(selector);
  };
}
},{}],"SSab":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _matcher = _interopRequireDefault(require("../matcher"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(match) {
  if (typeof match !== "function") match = (0, _matcher.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"G2fv","../matcher":"oB3r"}],"CH7j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(update) {
  return new Array(update.length);
}
},{}],"Bnlt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.EnterNode = EnterNode;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._enter || this._groups.map(_sparse.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};
},{"./sparse":"CH7j","./index":"G2fv"}],"qO0c":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _enter = require("./enter");

var _constant = _interopRequireDefault(require("../constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

function _default(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0, _constant.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
},{"./index":"G2fv","./enter":"Bnlt","../constant":"aCvo"}],"sLhL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._exit || this._groups.map(_sparse.default), this._parents);
}
},{"./sparse":"CH7j","./index":"G2fv"}],"Rskg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
},{}],"VSNx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Selection(merges, this._parents);
}
},{"./index":"G2fv"}],"z9O9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}
},{}],"Vwkw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{"./index":"G2fv"}],"fuyN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
},{}],"x3ma":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
}
},{}],"zOHW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}
},{}],"zFge":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
}
},{}],"ZnyY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return !this.node();
}
},{}],"ntqp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}
},{}],"KUPz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("../namespace"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function _default(name, value) {
  var fullname = (0, _namespace.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}
},{"../namespace":"U3j5"}],"iFwm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
}
},{}],"WecP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.styleValue = styleValue;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

function _default(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0, _window.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}
},{"../window":"iFwm"}],"Tr0z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

function _default(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}
},{}],"CVLA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function (name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function (name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function (name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function _default(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) if (!list.contains(names[i])) return false;

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
},{}],"wYBq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
}
},{}],"FDS0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
},{}],"AlDR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function _default() {
  return this.each(raise);
}
},{}],"wunq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function _default() {
  return this.each(lower);
}
},{}],"jPcQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}
},{"../creator":"z8hd"}],"NP4m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constantNull() {
  return null;
}

function _default(name, before) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0, _selector.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}
},{"../creator":"z8hd","../selector":"vXaf"}],"BhwP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function _default() {
  return this.each(remove);
}
},{}],"C0rN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function selection_cloneShallow() {
  var clone = this.cloneNode(false),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function _default(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
},{}],"dIrG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
},{}],"pgiW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.customEvent = customEvent;
exports.event = void 0;
var filterEvents = {};
var event = null;
exports.event = event;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    exports.event = event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      exports.event = event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

function _default(typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));

  return this;
}

function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  exports.event = event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    exports.event = event = event0;
  }
}
},{}],"YF1h":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dispatchEvent(node, type, params) {
  var window = (0, _window.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function _default(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}
},{"../window":"iFwm"}],"G2fv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = Selection;
exports.default = exports.root = void 0;

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _filter = _interopRequireDefault(require("./filter"));

var _data = _interopRequireDefault(require("./data"));

var _enter = _interopRequireDefault(require("./enter"));

var _exit = _interopRequireDefault(require("./exit"));

var _join = _interopRequireDefault(require("./join"));

var _merge = _interopRequireDefault(require("./merge"));

var _order = _interopRequireDefault(require("./order"));

var _sort = _interopRequireDefault(require("./sort"));

var _call = _interopRequireDefault(require("./call"));

var _nodes = _interopRequireDefault(require("./nodes"));

var _node = _interopRequireDefault(require("./node"));

var _size = _interopRequireDefault(require("./size"));

var _empty = _interopRequireDefault(require("./empty"));

var _each = _interopRequireDefault(require("./each"));

var _attr = _interopRequireDefault(require("./attr"));

var _style = _interopRequireDefault(require("./style"));

var _property = _interopRequireDefault(require("./property"));

var _classed = _interopRequireDefault(require("./classed"));

var _text = _interopRequireDefault(require("./text"));

var _html = _interopRequireDefault(require("./html"));

var _raise = _interopRequireDefault(require("./raise"));

var _lower = _interopRequireDefault(require("./lower"));

var _append = _interopRequireDefault(require("./append"));

var _insert = _interopRequireDefault(require("./insert"));

var _remove = _interopRequireDefault(require("./remove"));

var _clone = _interopRequireDefault(require("./clone"));

var _datum = _interopRequireDefault(require("./datum"));

var _on = _interopRequireDefault(require("./on"));

var _dispatch = _interopRequireDefault(require("./dispatch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = [null];
exports.root = root;

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  data: _data.default,
  enter: _enter.default,
  exit: _exit.default,
  join: _join.default,
  merge: _merge.default,
  order: _order.default,
  sort: _sort.default,
  call: _call.default,
  nodes: _nodes.default,
  node: _node.default,
  size: _size.default,
  empty: _empty.default,
  each: _each.default,
  attr: _attr.default,
  style: _style.default,
  property: _property.default,
  classed: _classed.default,
  text: _text.default,
  html: _html.default,
  raise: _raise.default,
  lower: _lower.default,
  append: _append.default,
  insert: _insert.default,
  remove: _remove.default,
  clone: _clone.default,
  datum: _datum.default,
  on: _on.default,
  dispatch: _dispatch.default
};
var _default = selection;
exports.default = _default;
},{"./select":"LlPS","./selectAll":"VXfp","./filter":"SSab","./data":"qO0c","./enter":"Bnlt","./exit":"sLhL","./join":"Rskg","./merge":"VSNx","./order":"z9O9","./sort":"Vwkw","./call":"fuyN","./nodes":"x3ma","./node":"zOHW","./size":"zFge","./empty":"ZnyY","./each":"ntqp","./attr":"KUPz","./style":"WecP","./property":"Tr0z","./classed":"CVLA","./text":"wYBq","./html":"FDS0","./raise":"AlDR","./lower":"wunq","./append":"jPcQ","./insert":"NP4m","./remove":"BhwP","./clone":"C0rN","./datum":"dIrG","./on":"pgiW","./dispatch":"YF1h"}],"RAQf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _index.Selection([[selector]], _index.root);
}
},{"./selection/index":"G2fv"}],"aaeJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("./creator"));

var _select = _interopRequireDefault(require("./select"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return (0, _select.default)((0, _creator.default)(name).call(document.documentElement));
}
},{"./creator":"z8hd","./select":"RAQf"}],"iml1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = local;
var nextId = 0;

function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function (node) {
    var id = this._;

    while (!(id in node)) if (!(node = node.parentNode)) return;

    return node[id];
  },
  set: function (node, value) {
    return node[this._] = value;
  },
  remove: function (node) {
    return this._ in node && delete node[this._];
  },
  toString: function () {
    return this._;
  }
};
},{}],"Tqn5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _on = require("./selection/on");

function _default() {
  var current = _on.event,
      source;

  while (source = current.sourceEvent) current = source;

  return current;
}
},{"./selection/on":"pgiW"}],"JEJ4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
}
},{}],"Y8Cy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node) {
  var event = (0, _sourceEvent.default)();
  if (event.changedTouches) event = event.changedTouches[0];
  return (0, _point.default)(node, event);
}
},{"./sourceEvent":"Tqn5","./point":"JEJ4"}],"zmwq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _index.Selection([selector == null ? [] : selector], _index.root);
}
},{"./selection/index":"G2fv"}],"SZFU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = (0, _sourceEvent.default)().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return (0, _point.default)(node, touch);
    }
  }

  return null;
}
},{"./sourceEvent":"Tqn5","./point":"JEJ4"}],"lhoo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches) {
  if (touches == null) touches = (0, _sourceEvent.default)().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = (0, _point.default)(node, touches[i]);
  }

  return points;
}
},{"./sourceEvent":"Tqn5","./point":"JEJ4"}],"ysDv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "creator", {
  enumerable: true,
  get: function () {
    return _creator.default;
  }
});
Object.defineProperty(exports, "local", {
  enumerable: true,
  get: function () {
    return _local.default;
  }
});
Object.defineProperty(exports, "matcher", {
  enumerable: true,
  get: function () {
    return _matcher.default;
  }
});
Object.defineProperty(exports, "mouse", {
  enumerable: true,
  get: function () {
    return _mouse.default;
  }
});
Object.defineProperty(exports, "namespace", {
  enumerable: true,
  get: function () {
    return _namespace.default;
  }
});
Object.defineProperty(exports, "namespaces", {
  enumerable: true,
  get: function () {
    return _namespaces.default;
  }
});
Object.defineProperty(exports, "clientPoint", {
  enumerable: true,
  get: function () {
    return _point.default;
  }
});
Object.defineProperty(exports, "select", {
  enumerable: true,
  get: function () {
    return _select.default;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function () {
    return _selectAll.default;
  }
});
Object.defineProperty(exports, "selection", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "selector", {
  enumerable: true,
  get: function () {
    return _selector.default;
  }
});
Object.defineProperty(exports, "selectorAll", {
  enumerable: true,
  get: function () {
    return _selectorAll.default;
  }
});
Object.defineProperty(exports, "style", {
  enumerable: true,
  get: function () {
    return _style.styleValue;
  }
});
Object.defineProperty(exports, "touch", {
  enumerable: true,
  get: function () {
    return _touch.default;
  }
});
Object.defineProperty(exports, "touches", {
  enumerable: true,
  get: function () {
    return _touches.default;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.default;
  }
});
Object.defineProperty(exports, "event", {
  enumerable: true,
  get: function () {
    return _on.event;
  }
});
Object.defineProperty(exports, "customEvent", {
  enumerable: true,
  get: function () {
    return _on.customEvent;
  }
});

var _create = _interopRequireDefault(require("./create"));

var _creator = _interopRequireDefault(require("./creator"));

var _local = _interopRequireDefault(require("./local"));

var _matcher = _interopRequireDefault(require("./matcher"));

var _mouse = _interopRequireDefault(require("./mouse"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = _interopRequireDefault(require("./namespaces"));

var _point = _interopRequireDefault(require("./point"));

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _index = _interopRequireDefault(require("./selection/index"));

var _selector = _interopRequireDefault(require("./selector"));

var _selectorAll = _interopRequireDefault(require("./selectorAll"));

var _style = require("./selection/style");

var _touch = _interopRequireDefault(require("./touch"));

var _touches = _interopRequireDefault(require("./touches"));

var _window = _interopRequireDefault(require("./window"));

var _on = require("./selection/on");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./create":"aaeJ","./creator":"z8hd","./local":"iml1","./matcher":"oB3r","./mouse":"Y8Cy","./namespace":"U3j5","./namespaces":"YeOr","./point":"JEJ4","./select":"RAQf","./selectAll":"zmwq","./selection/index":"G2fv","./selector":"vXaf","./selectorAll":"t3Ja","./selection/style":"WecP","./touch":"SZFU","./touches":"lhoo","./window":"iFwm","./selection/on":"pgiW"}],"BxLv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"ysDv"}],"m07T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.yesdrag = yesdrag;

var _d3Selection = require("d3-selection");

var _noevent = _interopRequireDefault(require("./noevent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(view) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", _noevent.default, true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent.default, true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}
},{"d3-selection":"ysDv","./noevent.js":"BxLv"}],"qb7E":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DragEvent;

function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch;
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};
},{}],"NgLN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Selection = require("d3-selection");

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {
    x: _d3Selection.event.x,
    y: _d3Selection.event.y
  } : d;
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function _default() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = (0, _d3Dispatch.dispatch)("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), _d3Selection.mouse, this, arguments);
    if (!gesture) return;
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    (0, _nodrag.default)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    mousemoving = false;
    mousedownx = _d3Selection.event.clientX;
    mousedowny = _d3Selection.event.clientY;
    gesture("start");
  }

  function mousemoved() {
    (0, _noevent.default)();

    if (!mousemoving) {
      var dx = _d3Selection.event.clientX - mousedownx,
          dy = _d3Selection.event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag");
  }

  function mouseupped() {
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag mouseup.drag", null);
    (0, _nodrag.yesdrag)(_d3Selection.event.view, mousemoving);
    (0, _noevent.default)();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.changedTouches,
        c = container.apply(this, arguments),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, _d3Selection.touch, this, arguments)) {
        (0, _noevent.nopropagation)();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.default)();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.nopropagation)();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id),
        s,
        dx,
        dy,
        sublisteners = listeners.copy();
    if (!(0, _d3Selection.customEvent)(new _event.default(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {
      if ((_d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;
    return function gesture(type) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[id] = gesture, n = active++;
          break;

        case "end":
          delete gestures[id], --active;
        // nobreak

        case "drag":
          p = point(container, id), n = active;
          break;
      }

      (0, _d3Selection.customEvent)(new _event.default(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}
},{"d3-dispatch":"D3zY","d3-selection":"ysDv","./nodrag.js":"m07T","./noevent.js":"BxLv","./constant.js":"aCvo","./event.js":"qb7E"}],"kkdU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "drag", {
  enumerable: true,
  get: function () {
    return _drag.default;
  }
});
Object.defineProperty(exports, "dragDisable", {
  enumerable: true,
  get: function () {
    return _nodrag.default;
  }
});
Object.defineProperty(exports, "dragEnable", {
  enumerable: true,
  get: function () {
    return _nodrag.yesdrag;
  }
});

var _drag = _interopRequireDefault(require("./drag.js"));

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./drag.js":"NgLN","./nodrag.js":"m07T"}],"fV2I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.extend = extend;

function _default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}
},{}],"LIaf":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? new Rgb(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"fV2I"}],"XzID":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rad2deg = exports.deg2rad = void 0;
var deg2rad = Math.PI / 180;
exports.deg2rad = deg2rad;
var rad2deg = 180 / Math.PI;
exports.rad2deg = rad2deg;
},{}],"f7Av":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.rad2deg;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.deg2rad;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"fV2I","./color.js":"LIaf","./math.js":"XzID"}],"CMX9":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.rad2deg - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.deg2rad,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"fV2I","./color.js":"LIaf","./math.js":"XzID"}],"Peej":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"LIaf","./lab.js":"f7Av","./cubehelix.js":"CMX9"}],"ElXH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.basis = basis;
exports.default = _default;

function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}

function _default(values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{}],"hnXz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function _default(values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{"./basis.js":"ElXH"}],"RhzI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hue = hue;
exports.gamma = gamma;
exports.default = nogamma;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}
},{"./constant.js":"aCvo"}],"rvVK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;

var _d3Color = require("d3-color");

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function rgbGamma(y) {
  var color = (0, _color.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0, _d3Color.rgb)(start)).r, (end = (0, _d3Color.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
}(1);

exports.default = _default;

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = (0, _d3Color.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis.default);
exports.rgbBasis = rgbBasis;
var rgbBasisClosed = rgbSpline(_basisClosed.default);
exports.rgbBasisClosed = rgbBasisClosed;
},{"d3-color":"Peej","./basis.js":"ElXH","./basisClosed.js":"hnXz","./color.js":"RhzI"}],"BOJ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.isNumberArray = isNumberArray;

function _default(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function (t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;

    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
},{}],"TYZM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.genericArray = genericArray;

var _value = _interopRequireDefault(require("./value.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0, _value.default)(a[i], b[i]);

  for (; i < nb; ++i) c[i] = b[i];

  return function (t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);

    return c;
  };
}
},{"./value.js":"gzcD","./numberArray.js":"BOJ5"}],"jEDF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  var d = new Date();
  return a = +a, b = +b, function (t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}
},{}],"YNf8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return a * (1 - t) + b * t;
  };
}
},{}],"iJdZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _value = _interopRequireDefault(require("./value.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0, _value.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) c[k] = i[k](t);

    return c;
  };
}
},{"./value.js":"gzcD"}],"nK0E":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

function _default(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: (0, _number.default)(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

    return s.join("");
  });
}
},{"./number.js":"YNf8"}],"gzcD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _rgb = _interopRequireDefault(require("./rgb.js"));

var _array = require("./array.js");

var _date = _interopRequireDefault(require("./date.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _d3Color.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _d3Color.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}
},{"d3-color":"Peej","./rgb.js":"rvVK","./array.js":"TYZM","./date.js":"jEDF","./number.js":"YNf8","./object.js":"iJdZ","./string.js":"nK0E","./constant.js":"aCvo","./numberArray.js":"BOJ5"}],"B1w8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}
},{}],"ZrPS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _color = require("./color.js");

function _default(a, b) {
  var i = (0, _color.hue)(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}
},{"./color.js":"RhzI"}],"nXvs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return Math.round(a * (1 - t) + b * t);
  };
}
},{}],"UXwK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
exports.identity = identity;

function _default(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}
},{}],"LVjk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;

var _decompose = _interopRequireWildcard(require("./decompose.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var cssNode, cssRoot, cssView, svgNode;

function parseCss(value) {
  if (value === "none") return _decompose.identity;
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return (0, _decompose.default)(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}

function parseSvg(value) {
  if (value == null) return _decompose.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
  value = value.matrix;
  return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}
},{"./decompose.js":"UXwK"}],"v4Xl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;

var _number = _interopRequireDefault(require("../number.js"));

var _parse = require("./parse.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
exports.interpolateTransformCss = interpolateTransformCss;
var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
exports.interpolateTransformSvg = interpolateTransformSvg;
},{"../number.js":"YNf8","./parse.js":"LVjk"}],"jU1v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
} // p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]


function _default(p0, p1) {
  var ux0 = p0[0],
      uy0 = p0[1],
      w0 = p0[2],
      ux1 = p1[0],
      uy1 = p1[1],
      w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S; // Special case for u0 ≅ u1.

  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;

    i = function (t) {
      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
    };
  } // General case.
  else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;

      i = function (t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }

  i.duration = S * 1000;
  return i;
}
},{}],"LdeI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hsl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hsl)(start)).h, (end = (0, _d3Color.hsl)(end)).h),
        s = (0, _color.default)(start.s, end.s),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hsl(_color.hue);

exports.default = _default;
var hslLong = hsl(_color.default);
exports.hslLong = hslLong;
},{"d3-color":"Peej","./color.js":"RhzI"}],"rghB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lab;

var _d3Color = require("d3-color");

var _color = _interopRequireDefault(require("./color.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lab(start, end) {
  var l = (0, _color.default)((start = (0, _d3Color.lab)(start)).l, (end = (0, _d3Color.lab)(end)).l),
      a = (0, _color.default)(start.a, end.a),
      b = (0, _color.default)(start.b, end.b),
      opacity = (0, _color.default)(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}
},{"d3-color":"Peej","./color.js":"RhzI"}],"dxPN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hclLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hcl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hcl)(start)).h, (end = (0, _d3Color.hcl)(end)).h),
        c = (0, _color.default)(start.c, end.c),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hcl(_color.hue);

exports.default = _default;
var hclLong = hcl(_color.default);
exports.hclLong = hclLong;
},{"d3-color":"Peej","./color.js":"RhzI"}],"X3VV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubehelixLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0, _d3Color.cubehelix)(start)).h, (end = (0, _d3Color.cubehelix)(end)).h),
          s = (0, _color.default)(start.s, end.s),
          l = (0, _color.default)(start.l, end.l),
          opacity = (0, _color.default)(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

var _default = cubehelix(_color.hue);

exports.default = _default;
var cubehelixLong = cubehelix(_color.default);
exports.cubehelixLong = cubehelixLong;
},{"d3-color":"Peej","./color.js":"RhzI"}],"xtkP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = piecewise;

function piecewise(interpolate, values) {
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) I[i] = interpolate(v, v = values[++i]);

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}
},{}],"Oe1t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));

  return samples;
}
},{}],"k9aH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "interpolate", {
  enumerable: true,
  get: function () {
    return _value.default;
  }
});
Object.defineProperty(exports, "interpolateArray", {
  enumerable: true,
  get: function () {
    return _array.default;
  }
});
Object.defineProperty(exports, "interpolateBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "interpolateDate", {
  enumerable: true,
  get: function () {
    return _date.default;
  }
});
Object.defineProperty(exports, "interpolateDiscrete", {
  enumerable: true,
  get: function () {
    return _discrete.default;
  }
});
Object.defineProperty(exports, "interpolateHue", {
  enumerable: true,
  get: function () {
    return _hue.default;
  }
});
Object.defineProperty(exports, "interpolateNumber", {
  enumerable: true,
  get: function () {
    return _number.default;
  }
});
Object.defineProperty(exports, "interpolateNumberArray", {
  enumerable: true,
  get: function () {
    return _numberArray.default;
  }
});
Object.defineProperty(exports, "interpolateObject", {
  enumerable: true,
  get: function () {
    return _object.default;
  }
});
Object.defineProperty(exports, "interpolateRound", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "interpolateString", {
  enumerable: true,
  get: function () {
    return _string.default;
  }
});
Object.defineProperty(exports, "interpolateTransformCss", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformCss;
  }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformSvg;
  }
});
Object.defineProperty(exports, "interpolateZoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "interpolateRgb", {
  enumerable: true,
  get: function () {
    return _rgb.default;
  }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasis;
  }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasisClosed;
  }
});
Object.defineProperty(exports, "interpolateHsl", {
  enumerable: true,
  get: function () {
    return _hsl.default;
  }
});
Object.defineProperty(exports, "interpolateHslLong", {
  enumerable: true,
  get: function () {
    return _hsl.hslLong;
  }
});
Object.defineProperty(exports, "interpolateLab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "interpolateHcl", {
  enumerable: true,
  get: function () {
    return _hcl.default;
  }
});
Object.defineProperty(exports, "interpolateHclLong", {
  enumerable: true,
  get: function () {
    return _hcl.hclLong;
  }
});
Object.defineProperty(exports, "interpolateCubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
  enumerable: true,
  get: function () {
    return _cubehelix.cubehelixLong;
  }
});
Object.defineProperty(exports, "piecewise", {
  enumerable: true,
  get: function () {
    return _piecewise.default;
  }
});
Object.defineProperty(exports, "quantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});

var _value = _interopRequireDefault(require("./value.js"));

var _array = _interopRequireDefault(require("./array.js"));

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _date = _interopRequireDefault(require("./date.js"));

var _discrete = _interopRequireDefault(require("./discrete.js"));

var _hue = _interopRequireDefault(require("./hue.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _numberArray = _interopRequireDefault(require("./numberArray.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _index = require("./transform/index.js");

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _rgb = _interopRequireWildcard(require("./rgb.js"));

var _hsl = _interopRequireWildcard(require("./hsl.js"));

var _lab = _interopRequireDefault(require("./lab.js"));

var _hcl = _interopRequireWildcard(require("./hcl.js"));

var _cubehelix = _interopRequireWildcard(require("./cubehelix.js"));

var _piecewise = _interopRequireDefault(require("./piecewise.js"));

var _quantize = _interopRequireDefault(require("./quantize.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./value.js":"gzcD","./array.js":"TYZM","./basis.js":"ElXH","./basisClosed.js":"hnXz","./date.js":"jEDF","./discrete.js":"B1w8","./hue.js":"ZrPS","./number.js":"YNf8","./numberArray.js":"BOJ5","./object.js":"iJdZ","./round.js":"nXvs","./string.js":"nK0E","./transform/index.js":"v4Xl","./zoom.js":"jU1v","./rgb.js":"rvVK","./hsl.js":"LdeI","./lab.js":"rghB","./hcl.js":"dxPN","./cubehelix.js":"X3VV","./piecewise.js":"xtkP","./quantize.js":"Oe1t"}],"ea66":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.now = now;
exports.Timer = Timer;
exports.timer = timer;
exports.timerFlush = timerFlush;
var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function (callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function () {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
},{}],"jIZm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer();
  delay = delay == null ? 0 : +delay;
  t.restart(function (elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}
},{"./timer.js":"ea66"}],"QZ3s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer(),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? (0, _timer.now)() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
}
},{"./timer.js":"ea66"}],"rdzS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _timer.now;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function () {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "timerFlush", {
  enumerable: true,
  get: function () {
    return _timer.timerFlush;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function () {
    return _timeout.default;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});

var _timer = require("./timer.js");

var _timeout = _interopRequireDefault(require("./timeout.js"));

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./timer.js":"ea66","./timeout.js":"jIZm","./interval.js":"QZ3s"}],"nqGJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.init = init;
exports.set = set;
exports.get = get;
exports.ENDED = exports.ENDING = exports.RUNNING = exports.STARTED = exports.STARTING = exports.SCHEDULED = exports.CREATED = void 0;

var _d3Dispatch = require("d3-dispatch");

var _d3Timer = require("d3-timer");

var emptyOn = (0, _d3Dispatch.dispatch)("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
exports.CREATED = CREATED;
var SCHEDULED = 1;
exports.SCHEDULED = SCHEDULED;
var STARTING = 2;
exports.STARTING = STARTING;
var STARTED = 3;
exports.STARTED = STARTED;
var RUNNING = 4;
exports.RUNNING = RUNNING;
var ENDING = 5;
exports.ENDING = ENDING;
var ENDED = 6;
exports.ENDED = ENDED;

function _default(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = (0, _d3Timer.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return (0, _d3Timer.timeout)(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    (0, _d3Timer.timeout)(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) return; // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}
},{"d3-dispatch":"D3zY","d3-timer":"rdzS"}],"fDNN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./transition/schedule.js");

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _schedule.STARTING && schedule.state < _schedule.ENDING;
    schedule.state = _schedule.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}
},{"./transition/schedule.js":"nqGJ"}],"cQLj":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _interrupt = _interopRequireDefault(require("../interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return this.each(function () {
    (0, _interrupt.default)(this, name);
  });
}
},{"../interrupt.js":"fDNN"}],"jGA0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tweenValue = tweenValue;

var _schedule = require("./schedule.js");

function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

function _default(name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = (0, _schedule.get)(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = (0, _schedule.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return (0, _schedule.get)(node, id).value[name];
  };
}
},{"./schedule.js":"nqGJ"}],"EwAl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

function _default(a, b) {
  var c;
  return (typeof b === "number" ? _d3Interpolate.interpolateNumber : b instanceof _d3Color.color ? _d3Interpolate.interpolateRgb : (c = (0, _d3Color.color)(b)) ? (b = c, _d3Interpolate.interpolateRgb) : _d3Interpolate.interpolateString)(a, b);
}
},{"d3-color":"Peej","d3-interpolate":"k9aH"}],"Edhf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function _default(name, value) {
  var fullname = (0, _d3Selection.namespace)(name),
      i = fullname === "transform" ? _d3Interpolate.interpolateTransformSvg : _interpolate.default;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0, _tween.tweenValue)(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}
},{"d3-interpolate":"k9aH","d3-selection":"ysDv","./tween.js":"jGA0","./interpolate.js":"EwAl"}],"bknt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = (0, _d3Selection.namespace)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
},{"d3-selection":"ysDv"}],"ln8e":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function delayFunction(id, value) {
  return function () {
    (0, _schedule.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.init)(this, id).delay = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : (0, _schedule.get)(this.node(), id).delay;
}
},{"./schedule.js":"nqGJ"}],"WWpH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function durationFunction(id, value) {
  return function () {
    (0, _schedule.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.set)(this, id).duration = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : (0, _schedule.get)(this.node(), id).duration;
}
},{"./schedule.js":"nqGJ"}],"AcgK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    (0, _schedule.set)(this, id).ease = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : (0, _schedule.get)(this.node(), id).ease;
}
},{"./schedule.js":"nqGJ"}],"MnwJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

function _default(match) {
  if (typeof match !== "function") match = (0, _d3Selection.matcher)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, this._name, this._id);
}
},{"d3-selection":"ysDv","./index.js":"OWOq"}],"cfNr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

function _default(transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Transition(merges, this._parents, this._name, this._id);
}
},{"./index.js":"OWOq"}],"ELQ0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule.init : _schedule.set;
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

function _default(name, listener) {
  var id = this._id;
  return arguments.length < 2 ? (0, _schedule.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
}
},{"./schedule.js":"nqGJ"}],"mXFz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) if (+i !== id) return;

    if (parent) parent.removeChild(this);
  };
}

function _default() {
  return this.on("end.remove", removeFunction(this._id));
}
},{}],"P4XU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selector)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0, _schedule.default)(subgroup[i], name, id, i, subgroup, (0, _schedule.get)(node, id));
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, name, id);
}
},{"d3-selection":"ysDv","./index.js":"OWOq","./schedule.js":"nqGJ"}],"BH5v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selectorAll)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0, _schedule.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0, _schedule.default)(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, parents, name, id);
}
},{"d3-selection":"ysDv","./index.js":"OWOq","./schedule.js":"nqGJ"}],"kIVv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var Selection = _d3Selection.selection.prototype.constructor;

function _default() {
  return new Selection(this._groups, this._parents);
}
},{"d3-selection":"ysDv"}],"xTYE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _schedule = require("./schedule.js");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        string1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

function _default(name, value, priority) {
  var i = (name += "") === "transform" ? _d3Interpolate.interpolateTransformCss : _interpolate.default;
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, (0, _tween.tweenValue)(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
}
},{"d3-interpolate":"k9aH","d3-selection":"ysDv","./schedule.js":"nqGJ","./tween.js":"jGA0","./interpolate.js":"EwAl"}],"PSnC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

function _default(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}
},{}],"JpCG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _tween = require("./tween.js");

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

function _default(value) {
  return this.tween("text", typeof value === "function" ? textFunction((0, _tween.tweenValue)(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
},{"./tween.js":"jGA0"}],"cW7v":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textInterpolate(i) {
  return function (t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, textTween(value));
}
},{}],"IPhv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var name = this._name,
      id0 = this._id,
      id1 = (0, _index.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0, _schedule.get)(node, id0);
        (0, _schedule.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id1);
}
},{"./index.js":"OWOq","./schedule.js":"nqGJ"}],"Q4LY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function _default() {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function () {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = (0, _schedule.set)(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    });
  });
}
},{"./schedule.js":"nqGJ"}],"OWOq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transition = Transition;
exports.default = transition;
exports.newId = newId;

var _d3Selection = require("d3-selection");

var _attr = _interopRequireDefault(require("./attr.js"));

var _attrTween = _interopRequireDefault(require("./attrTween.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _duration = _interopRequireDefault(require("./duration.js"));

var _ease = _interopRequireDefault(require("./ease.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _on = _interopRequireDefault(require("./on.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _select = _interopRequireDefault(require("./select.js"));

var _selectAll = _interopRequireDefault(require("./selectAll.js"));

var _selection = _interopRequireDefault(require("./selection.js"));

var _style = _interopRequireDefault(require("./style.js"));

var _styleTween = _interopRequireDefault(require("./styleTween.js"));

var _text = _interopRequireDefault(require("./text.js"));

var _textTween = _interopRequireDefault(require("./textTween.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

var _tween = _interopRequireDefault(require("./tween.js"));

var _end = _interopRequireDefault(require("./end.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition(name) {
  return (0, _d3Selection.selection)().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = _d3Selection.selection.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  merge: _merge.default,
  selection: _selection.default,
  transition: _transition.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on.default,
  attr: _attr.default,
  attrTween: _attrTween.default,
  style: _style.default,
  styleTween: _styleTween.default,
  text: _text.default,
  textTween: _textTween.default,
  remove: _remove.default,
  tween: _tween.default,
  delay: _delay.default,
  duration: _duration.default,
  ease: _ease.default,
  end: _end.default
};
},{"d3-selection":"ysDv","./attr.js":"Edhf","./attrTween.js":"bknt","./delay.js":"ln8e","./duration.js":"WWpH","./ease.js":"AcgK","./filter.js":"MnwJ","./merge.js":"cfNr","./on.js":"ELQ0","./remove.js":"mXFz","./select.js":"P4XU","./selectAll.js":"BH5v","./selection.js":"kIVv","./style.js":"xTYE","./styleTween.js":"PSnC","./text.js":"JpCG","./textTween.js":"cW7v","./transition.js":"IPhv","./tween.js":"jGA0","./end.js":"Q4LY"}],"VacQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linear = linear;

function linear(t) {
  return +t;
}
},{}],"EZNz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadIn = quadIn;
exports.quadOut = quadOut;
exports.quadInOut = quadInOut;

function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
},{}],"ropQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicIn = cubicIn;
exports.cubicOut = cubicOut;
exports.cubicInOut = cubicInOut;

function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
},{}],"rJoA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyInOut = exports.polyOut = exports.polyIn = void 0;
var exponent = 3;

var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);

exports.polyIn = polyIn;

var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);

exports.polyOut = polyOut;

var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

exports.polyInOut = polyInOut;
},{}],"XXPs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinIn = sinIn;
exports.sinOut = sinOut;
exports.sinInOut = sinInOut;
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
},{}],"PTZz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expIn = expIn;
exports.expOut = expOut;
exports.expInOut = expInOut;

function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}

function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
},{}],"qwy6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleIn = circleIn;
exports.circleOut = circleOut;
exports.circleInOut = circleInOut;

function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
},{}],"rEBC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounceIn = bounceIn;
exports.bounceOut = bounceOut;
exports.bounceInOut = bounceInOut;
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
},{}],"G5Mi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.backInOut = exports.backOut = exports.backIn = void 0;
var overshoot = 1.70158;

var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);

exports.backIn = backIn;

var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);

exports.backOut = backOut;

var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

exports.backInOut = backInOut;
},{}],"TN0k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elasticInOut = exports.elasticOut = exports.elasticIn = void 0;
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);

exports.elasticIn = elasticIn;

var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);

exports.elasticOut = elasticOut;

var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

exports.elasticInOut = elasticInOut;
},{}],"pJ11":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "easeLinear", {
  enumerable: true,
  get: function () {
    return _linear.linear;
  }
});
Object.defineProperty(exports, "easeQuad", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeQuadIn", {
  enumerable: true,
  get: function () {
    return _quad.quadIn;
  }
});
Object.defineProperty(exports, "easeQuadOut", {
  enumerable: true,
  get: function () {
    return _quad.quadOut;
  }
});
Object.defineProperty(exports, "easeQuadInOut", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeCubic", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easeCubicIn", {
  enumerable: true,
  get: function () {
    return _cubic.cubicIn;
  }
});
Object.defineProperty(exports, "easeCubicOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicOut;
  }
});
Object.defineProperty(exports, "easeCubicInOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easePoly", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easePolyIn", {
  enumerable: true,
  get: function () {
    return _poly.polyIn;
  }
});
Object.defineProperty(exports, "easePolyOut", {
  enumerable: true,
  get: function () {
    return _poly.polyOut;
  }
});
Object.defineProperty(exports, "easePolyInOut", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easeSin", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeSinIn", {
  enumerable: true,
  get: function () {
    return _sin.sinIn;
  }
});
Object.defineProperty(exports, "easeSinOut", {
  enumerable: true,
  get: function () {
    return _sin.sinOut;
  }
});
Object.defineProperty(exports, "easeSinInOut", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeExp", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeExpIn", {
  enumerable: true,
  get: function () {
    return _exp.expIn;
  }
});
Object.defineProperty(exports, "easeExpOut", {
  enumerable: true,
  get: function () {
    return _exp.expOut;
  }
});
Object.defineProperty(exports, "easeExpInOut", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeCircle", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeCircleIn", {
  enumerable: true,
  get: function () {
    return _circle.circleIn;
  }
});
Object.defineProperty(exports, "easeCircleOut", {
  enumerable: true,
  get: function () {
    return _circle.circleOut;
  }
});
Object.defineProperty(exports, "easeCircleInOut", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeBounce", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceIn", {
  enumerable: true,
  get: function () {
    return _bounce.bounceIn;
  }
});
Object.defineProperty(exports, "easeBounceOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceInOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceInOut;
  }
});
Object.defineProperty(exports, "easeBack", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeBackIn", {
  enumerable: true,
  get: function () {
    return _back.backIn;
  }
});
Object.defineProperty(exports, "easeBackOut", {
  enumerable: true,
  get: function () {
    return _back.backOut;
  }
});
Object.defineProperty(exports, "easeBackInOut", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeElastic", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticIn", {
  enumerable: true,
  get: function () {
    return _elastic.elasticIn;
  }
});
Object.defineProperty(exports, "easeElasticOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticInOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticInOut;
  }
});

var _linear = require("./linear.js");

var _quad = require("./quad.js");

var _cubic = require("./cubic.js");

var _poly = require("./poly.js");

var _sin = require("./sin.js");

var _exp = require("./exp.js");

var _circle = require("./circle.js");

var _bounce = require("./bounce.js");

var _back = require("./back.js");

var _elastic = require("./elastic.js");
},{"./linear.js":"VacQ","./quad.js":"EZNz","./cubic.js":"ropQ","./poly.js":"rJoA","./sin.js":"XXPs","./exp.js":"PTZz","./circle.js":"qwy6","./bounce.js":"rEBC","./back.js":"G5Mi","./elastic.js":"TN0k"}],"VKWr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("../transition/index.js");

var _schedule = _interopRequireDefault(require("../transition/schedule.js"));

var _d3Ease = require("d3-ease");

var _d3Timer = require("d3-timer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: _d3Ease.easeCubicInOut
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      return defaultTiming.time = (0, _d3Timer.now)(), defaultTiming;
    }
  }

  return timing;
}

function _default(name) {
  var id, timing;

  if (name instanceof _index.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0, _index.newId)(), (timing = defaultTiming).time = (0, _d3Timer.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0, _schedule.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id);
}
},{"../transition/index.js":"OWOq","../transition/schedule.js":"nqGJ","d3-ease":"pJ11","d3-timer":"rdzS"}],"vGqA":[function(require,module,exports) {
"use strict";

var _d3Selection = require("d3-selection");

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_d3Selection.selection.prototype.interrupt = _interrupt.default;
_d3Selection.selection.prototype.transition = _transition.default;
},{"d3-selection":"ysDv","./interrupt.js":"cQLj","./transition.js":"VKWr"}],"UWV3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./transition/index.js");

var _schedule = require("./transition/schedule.js");

var root = [null];

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _schedule.SCHEDULED && schedule.name === name) {
        return new _index.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}
},{"./transition/index.js":"OWOq","./transition/schedule.js":"nqGJ"}],"UqVV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "transition", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "active", {
  enumerable: true,
  get: function () {
    return _active.default;
  }
});
Object.defineProperty(exports, "interrupt", {
  enumerable: true,
  get: function () {
    return _interrupt.default;
  }
});

require("./selection/index.js");

var _index2 = _interopRequireDefault(require("./transition/index.js"));

var _active = _interopRequireDefault(require("./active.js"));

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./selection/index.js":"vGqA","./transition/index.js":"OWOq","./active.js":"UWV3","./interrupt.js":"fDNN"}],"Bo4j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(target, type, selection) {
  this.target = target;
  this.type = type;
  this.selection = selection;
}
},{}],"qu2I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.brushSelection = brushSelection;
exports.brushX = brushX;
exports.brushY = brushY;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

function toucher(identifier) {
  return function (target) {
    return (0, _d3Selection.touch)(target, _d3Selection.event.touches, identifier);
  };
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function (x, e) {
    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];
  },
  output: function (xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function (y, e) {
    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];
  },
  output: function (xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function (xy) {
    return xy == null ? null : number2(xy);
  },
  output: function (xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;

  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }

  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush(X);
}

function brushY() {
  return brush(Y);
}

function _default() {
  return brush(XY);
}

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = (0, _d3Dispatch.dispatch)("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      (0, _d3Selection.select)(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function (group, selection) {
    if (group.selection) {
      group.on("start.brush", function () {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function () {
        emitter(this, arguments).end();
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = (0, _d3Interpolate.interpolate)(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && selection1 === null ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        (0, _d3Transition.interrupt)(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  brush.clear = function (group) {
    brush.move(group, null);
  };

  function redraw() {
    var group = (0, _d3Selection.select)(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    return !clean && that.__brush.emitter || new Emitter(that, args);
  }

  function Emitter(that, args) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
  }

  Emitter.prototype = {
    beforestart: function () {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function () {
      if (this.starting) this.starting = false, this.emit("start");else this.emit("brush");
      return this;
    },
    brush: function () {
      this.emit("brush");
      return this;
    },
    end: function () {
      if (--this.active === 0) delete this.state.emitter, this.emit("end");
      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function started() {
    if (touchending && !_d3Selection.event.touches) return;
    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = _d3Selection.event.target.__data__.type,
        mode = (keys && _d3Selection.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : keys && _d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && _d3Selection.event.shiftKey,
        lockX,
        lockY,
        pointer = _d3Selection.event.touches ? toucher(_d3Selection.event.changedTouches[0].identifier) : _d3Selection.mouse,
        point0 = pointer(that),
        point = point0,
        emit = emitter(that, arguments, true).beforestart();

    if (type === "overlay") {
      if (selection) moving = true;
      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = (0, _d3Selection.select)(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);

    if (_d3Selection.event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys) view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    }

    (0, _noevent.nopropagation)();
    (0, _d3Transition.interrupt)(that);
    redraw.call(that);
    emit.start();

    function moved() {
      var point1 = pointer(that);

      if (shifting && !lockX && !lockY) {
        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;
      }

      point = point1;
      moving = true;
      (0, _noevent.default)();
      move();
    }

    function move() {
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush();
      }
    }

    function ended() {
      (0, _noevent.nopropagation)();

      if (_d3Selection.event.touches) {
        if (_d3Selection.event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!
      } else {
        (0, _d3Drag.dragEnable)(_d3Selection.event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end();
    }

    function keydowned() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }

    function keyupped() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (_d3Selection.event.altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }
  }

  function touchmoved() {
    emitter(this, arguments).moved();
  }

  function touchended() {
    emitter(this, arguments).ended();
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)(number2(_)), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : filter;
  };

  brush.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : touchable;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function (_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}
},{"d3-dispatch":"D3zY","d3-drag":"kkdU","d3-interpolate":"k9aH","d3-selection":"ysDv","d3-transition":"UqVV","./constant.js":"aCvo","./event.js":"Bo4j","./noevent.js":"BxLv"}],"tkh5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "brush", {
  enumerable: true,
  get: function () {
    return _brush.default;
  }
});
Object.defineProperty(exports, "brushX", {
  enumerable: true,
  get: function () {
    return _brush.brushX;
  }
});
Object.defineProperty(exports, "brushY", {
  enumerable: true,
  get: function () {
    return _brush.brushY;
  }
});
Object.defineProperty(exports, "brushSelection", {
  enumerable: true,
  get: function () {
    return _brush.brushSelection;
  }
});

var _brush = _interopRequireWildcard(require("./brush.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./brush.js":"qu2I"}],"nrzw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = exports.tau = exports.halfPi = exports.pi = exports.sin = exports.cos = void 0;
var cos = Math.cos;
exports.cos = cos;
var sin = Math.sin;
exports.sin = sin;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = pi * 2;
exports.tau = tau;
var max = Math.max;
exports.max = max;
},{}],"TnSC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _math = require("./math");

function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

function _default() {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = [],
        groupIndex = (0, _d3Array.range)(n),
        subgroupIndex = [],
        chords = [],
        groups = chords.groups = new Array(n),
        subgroups = new Array(n * n),
        k,
        x,
        x0,
        dx,
        i,
        j; // Compute the sum.

    k = 0, i = -1;

    while (++i < n) {
      x = 0, j = -1;

      while (++j < n) {
        x += matrix[i][j];
      }

      groupSums.push(x);
      subgroupIndex.push((0, _d3Array.range)(n));
      k += x;
    } // Sort groups…


    if (sortGroups) groupIndex.sort(function (a, b) {
      return sortGroups(groupSums[a], groupSums[b]);
    }); // Sort subgroups…

    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {
      d.sort(function (a, b) {
        return sortSubgroups(matrix[i][a], matrix[i][b]);
      });
    }); // Convert the sum to scaling factor for [0, 2pi].
    // TODO Allow start and end angle to be specified?
    // TODO Allow padding to be specified as percentage?

    k = (0, _math.max)(0, _math.tau - padAngle * n) / k;
    dx = k ? padAngle : _math.tau / n; // Compute the start and end angle for each group and subgroup.
    // Note: Opera has a bug reordering object literal properties!

    x = 0, i = -1;

    while (++i < n) {
      x0 = x, j = -1;

      while (++j < n) {
        var di = groupIndex[i],
            dj = subgroupIndex[di][j],
            v = matrix[di][dj],
            a0 = x,
            a1 = x += v * k;
        subgroups[dj * n + di] = {
          index: di,
          subindex: dj,
          startAngle: a0,
          endAngle: a1,
          value: v
        };
      }

      groups[di] = {
        index: di,
        startAngle: x0,
        endAngle: x,
        value: groupSums[di]
      };
      x += dx;
    } // Generate chords for each (non-empty) subgroup-subgroup link.


    i = -1;

    while (++i < n) {
      j = i - 1;

      while (++j < n) {
        var source = subgroups[j * n + i],
            target = subgroups[i * n + j];

        if (source.value || target.value) {
          chords.push(source.value < target.value ? {
            source: target,
            target: source
          } : {
            source: source,
            target: target
          });
        }
      }
    }

    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = (0, _math.max)(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}
},{"d3-array":"K0bd","./math":"nrzw"}],"hMob":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function (x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function () {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function (x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function (x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function (x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function (x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function (x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function () {
    return this._;
  }
};
var _default = path;
exports.default = _default;
},{}],"OTyq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "path", {
  enumerable: true,
  get: function () {
    return _path.default;
  }
});

var _path = _interopRequireDefault(require("./path.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./path.js":"hMob"}],"stmI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _math = require("./math");

var _d3Path = require("d3-path");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function _default() {
  var source = defaultSource,
      target = defaultTarget,
      radius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      context = null;

  function ribbon() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv),
        sr = +radius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math.halfPi,
        sa1 = endAngle.apply(this, argv) - _math.halfPi,
        sx0 = sr * (0, _math.cos)(sa0),
        sy0 = sr * (0, _math.sin)(sa0),
        tr = +radius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math.halfPi,
        ta1 = endAngle.apply(this, argv) - _math.halfPi;

    if (!context) context = buffer = (0, _d3Path.path)();
    context.moveTo(sx0, sy0);
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      // TODO sr !== tr?
      context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));
      context.arc(0, 0, tr, ta0, ta1);
    }

    context.quadraticCurveTo(0, 0, sx0, sy0);
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  ribbon.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : radius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : endAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
}
},{"./array":"KXlw","./constant":"aCvo","./math":"nrzw","d3-path":"OTyq"}],"Iy8J":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "chord", {
  enumerable: true,
  get: function () {
    return _chord.default;
  }
});
Object.defineProperty(exports, "ribbon", {
  enumerable: true,
  get: function () {
    return _ribbon.default;
  }
});

var _chord = _interopRequireDefault(require("./chord"));

var _ribbon = _interopRequireDefault(require("./ribbon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./chord":"TnSC","./ribbon":"stmI"}],"lDuF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.prefix = void 0;
var prefix = "$";
exports.prefix = prefix;

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function (key) {
    return prefix + key in this;
  },
  get: function (key) {
    return this[prefix + key];
  },
  set: function (key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function (key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function () {
    for (var property in this) if (property[0] === prefix) delete this[property];
  },
  keys: function () {
    var keys = [];

    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));

    return keys;
  },
  values: function () {
    var values = [];

    for (var property in this) if (property[0] === prefix) values.push(this[property]);

    return values;
  },
  entries: function () {
    var entries = [];

    for (var property in this) if (property[0] === prefix) entries.push({
      key: property.slice(1),
      value: this[property]
    });

    return entries;
  },
  size: function () {
    var size = 0;

    for (var property in this) if (property[0] === prefix) ++size;

    return size;
  },
  empty: function () {
    for (var property in this) if (property[0] === prefix) return false;

    return true;
  },
  each: function (f) {
    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f(o = object[i], i, object), o);
    } // Convert object to map.
    else if (object) for (var key in object) map.set(key, object[key]);
  return map;
}

var _default = map;
exports.default = _default;
},{}],"kDkA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _map = _interopRequireDefault(require("./map"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var keys = [],
      sortKeys = [],
      sortValues,
      rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (sortValues != null) array.sort(sortValues);
      return rollup != null ? rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = (0, _map.default)(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = sortKeys[depth - 1];
    if (rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function (array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function (array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function (array) {
      return entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function (d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function (order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function (order) {
      sortValues = order;
      return nest;
    },
    rollup: function (f) {
      rollup = f;
      return nest;
    }
  };
}

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return (0, _map.default)();
}

function setMap(map, key, value) {
  map.set(key, value);
}
},{"./map":"lDuF"}],"vFPv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _map = _interopRequireWildcard(require("./map"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Set() {}

var proto = _map.default.prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function (value) {
    value += "";
    this[_map.prefix + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) set.add(object[i]);else while (++i < n) set.add(f(object[i], i, object));
    }
  return set;
}

var _default = set;
exports.default = _default;
},{"./map":"lDuF"}],"DTc5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var keys = [];

  for (var key in map) keys.push(key);

  return keys;
}
},{}],"KaQc":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var values = [];

  for (var key in map) values.push(map[key]);

  return values;
}
},{}],"wnH6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var entries = [];

  for (var key in map) entries.push({
    key: key,
    value: map[key]
  });

  return entries;
}
},{}],"S3hn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "nest", {
  enumerable: true,
  get: function () {
    return _nest.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});

var _nest = _interopRequireDefault(require("./nest"));

var _set = _interopRequireDefault(require("./set"));

var _map = _interopRequireDefault(require("./map"));

var _keys = _interopRequireDefault(require("./keys"));

var _values = _interopRequireDefault(require("./values"));

var _entries = _interopRequireDefault(require("./entries"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./nest":"kDkA","./set":"vFPv","./map":"lDuF","./keys":"DTc5","./values":"KaQc","./entries":"wnH6"}],"TvZ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
},{}],"T6bn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a - b;
}
},{}],"TIuo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];

  return area;
}
},{}],"MoCi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) if (c = ringContains(ring, hole[i])) return c;

  return 0;
}

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}
},{}],"zOhu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"DT0k":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _ascending = _interopRequireDefault(require("./ascending"));

var _area = _interopRequireDefault(require("./area"));

var _constant = _interopRequireDefault(require("./constant"));

var _contains = _interopRequireDefault(require("./contains"));

var _noop = _interopRequireDefault(require("./noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];

function _default() {
  var dx = 1,
      dy = 1,
      threshold = _d3Array.thresholdSturges,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = (0, _d3Array.extent)(values),
          start = domain[0],
          stop = domain[1];
      tz = (0, _d3Array.tickStep)(start, stop, tz);
      tz = (0, _d3Array.range)(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending.default);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if ((0, _area.default)(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if ((0, _contains.default)((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop.default, contours) : smooth === smoothLinear;
  };

  return contours;
}
},{"d3-array":"K0bd","./array":"TvZ5","./ascending":"T6bn","./area":"TIuo","./constant":"aCvo","./contains":"MoCi","./noop":"zOhu"}],"DGMp":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blurX = blurX;
exports.blurY = blurY;

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.


function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}
},{}],"NV0r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _blur = require("./blur");

var _constant = _interopRequireDefault(require("./constant"));

var _contours = _interopRequireDefault(require("./contours"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

function _default() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = (0, _constant.default)(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = (0, _d3Array.max)(values0);
      tz = (0, _d3Array.tickStep)(0, stop, tz);
      tz = (0, _d3Array.range)(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return (0, _contours.default)().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}
},{"d3-array":"K0bd","./array":"TvZ5","./blur":"DGMp","./constant":"aCvo","./contours":"DT0k"}],"SiBy":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "contours", {
  enumerable: true,
  get: function () {
    return _contours.default;
  }
});
Object.defineProperty(exports, "contourDensity", {
  enumerable: true,
  get: function () {
    return _density.default;
  }
});

var _contours = _interopRequireDefault(require("./contours"));

var _density = _interopRequireDefault(require("./density"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./contours":"DT0k","./density":"NV0r"}],"uRW4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "] || \"\"";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

function _default(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) row.push(t), t = token();

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows,
    formatRow: formatRow,
    formatValue: formatValue
  };
}
},{}],"yGbu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.csvFormatValue = exports.csvFormatRow = exports.csvFormatRows = exports.csvFormatBody = exports.csvFormat = exports.csvParseRows = exports.csvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var csv = (0, _dsv.default)(",");
var csvParse = csv.parse;
exports.csvParse = csvParse;
var csvParseRows = csv.parseRows;
exports.csvParseRows = csvParseRows;
var csvFormat = csv.format;
exports.csvFormat = csvFormat;
var csvFormatBody = csv.formatBody;
exports.csvFormatBody = csvFormatBody;
var csvFormatRows = csv.formatRows;
exports.csvFormatRows = csvFormatRows;
var csvFormatRow = csv.formatRow;
exports.csvFormatRow = csvFormatRow;
var csvFormatValue = csv.formatValue;
exports.csvFormatValue = csvFormatValue;
},{"./dsv.js":"uRW4"}],"Rica":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tsvFormatValue = exports.tsvFormatRow = exports.tsvFormatRows = exports.tsvFormatBody = exports.tsvFormat = exports.tsvParseRows = exports.tsvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tsv = (0, _dsv.default)("\t");
var tsvParse = tsv.parse;
exports.tsvParse = tsvParse;
var tsvParseRows = tsv.parseRows;
exports.tsvParseRows = tsvParseRows;
var tsvFormat = tsv.format;
exports.tsvFormat = tsvFormat;
var tsvFormatBody = tsv.formatBody;
exports.tsvFormatBody = tsvFormatBody;
var tsvFormatRows = tsv.formatRows;
exports.tsvFormatRows = tsvFormatRows;
var tsvFormatRow = tsv.formatRow;
exports.tsvFormatRow = tsvFormatRow;
var tsvFormatValue = tsv.formatValue;
exports.tsvFormatValue = tsvFormatValue;
},{"./dsv.js":"uRW4"}],"hdSA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = autoType;

function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number,
        m;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
      value = new Date(value);
    } else continue;
    object[key] = value;
  }

  return object;
} // https://github.com/d3/d3-dsv/issues/45


var fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();
},{}],"EC2w":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dsvFormat", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csvParse", {
  enumerable: true,
  get: function () {
    return _csv.csvParse;
  }
});
Object.defineProperty(exports, "csvParseRows", {
  enumerable: true,
  get: function () {
    return _csv.csvParseRows;
  }
});
Object.defineProperty(exports, "csvFormat", {
  enumerable: true,
  get: function () {
    return _csv.csvFormat;
  }
});
Object.defineProperty(exports, "csvFormatBody", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatBody;
  }
});
Object.defineProperty(exports, "csvFormatRows", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRows;
  }
});
Object.defineProperty(exports, "csvFormatRow", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRow;
  }
});
Object.defineProperty(exports, "csvFormatValue", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatValue;
  }
});
Object.defineProperty(exports, "tsvParse", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParse;
  }
});
Object.defineProperty(exports, "tsvParseRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParseRows;
  }
});
Object.defineProperty(exports, "tsvFormat", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormat;
  }
});
Object.defineProperty(exports, "tsvFormatBody", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatBody;
  }
});
Object.defineProperty(exports, "tsvFormatRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRows;
  }
});
Object.defineProperty(exports, "tsvFormatRow", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRow;
  }
});
Object.defineProperty(exports, "tsvFormatValue", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatValue;
  }
});
Object.defineProperty(exports, "autoType", {
  enumerable: true,
  get: function () {
    return _autoType.default;
  }
});

var _dsv = _interopRequireDefault(require("./dsv.js"));

var _csv = require("./csv.js");

var _tsv = require("./tsv.js");

var _autoType = _interopRequireDefault(require("./autoType.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dsv.js":"uRW4","./csv.js":"yGbu","./tsv.js":"Rica","./autoType.js":"hdSA"}],"qUE6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

function _default(input, init) {
  return fetch(input, init).then(responseBlob);
}
},{}],"G9Fv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

function _default(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}
},{}],"bNd6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

function _default(input, init) {
  return fetch(input, init).then(responseText);
}
},{}],"Ul8d":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dsv;
exports.tsv = exports.csv = void 0;

var _d3Dsv = require("d3-dsv");

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return (0, _text.default)(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = (0, _d3Dsv.dsvFormat)(delimiter);
  return (0, _text.default)(input, init).then(function (response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(_d3Dsv.csvParse);
exports.csv = csv;
var tsv = dsvParse(_d3Dsv.tsvParse);
exports.tsv = tsv;
},{"d3-dsv":"EC2w","./text":"bNd6"}],"cIzq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) image[key] = init[key];

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
}
},{}],"VDYt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

function _default(input, init) {
  return fetch(input, init).then(responseJson);
}
},{}],"NUeg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svg = exports.html = exports.default = void 0;

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parser(type) {
  return function (input, init) {
    return (0, _text.default)(input, init).then(function (text) {
      return new DOMParser().parseFromString(text, type);
    });
  };
}

var _default = parser("application/xml");

exports.default = _default;
var html = parser("text/html");
exports.html = html;
var svg = parser("image/svg+xml");
exports.svg = svg;
},{"./text":"bNd6"}],"grWT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "blob", {
  enumerable: true,
  get: function () {
    return _blob.default;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function () {
    return _buffer.default;
  }
});
Object.defineProperty(exports, "dsv", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csv", {
  enumerable: true,
  get: function () {
    return _dsv.csv;
  }
});
Object.defineProperty(exports, "tsv", {
  enumerable: true,
  get: function () {
    return _dsv.tsv;
  }
});
Object.defineProperty(exports, "image", {
  enumerable: true,
  get: function () {
    return _image.default;
  }
});
Object.defineProperty(exports, "json", {
  enumerable: true,
  get: function () {
    return _json.default;
  }
});
Object.defineProperty(exports, "text", {
  enumerable: true,
  get: function () {
    return _text.default;
  }
});
Object.defineProperty(exports, "xml", {
  enumerable: true,
  get: function () {
    return _xml.default;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _xml.html;
  }
});
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _xml.svg;
  }
});

var _blob = _interopRequireDefault(require("./blob"));

var _buffer = _interopRequireDefault(require("./buffer"));

var _dsv = _interopRequireWildcard(require("./dsv"));

var _image = _interopRequireDefault(require("./image"));

var _json = _interopRequireDefault(require("./json"));

var _text = _interopRequireDefault(require("./text"));

var _xml = _interopRequireWildcard(require("./xml"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./blob":"qUE6","./buffer":"G9Fv","./dsv":"Ul8d","./image":"cIzq","./json":"VDYt","./text":"bNd6","./xml":"NUeg"}],"i73m":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  var nodes;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{}],"Efbf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return (Math.random() - 0.5) * 1e-6;
}
},{}],"ALzt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.addAll = addAll;

function _default(d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}
},{}],"YvH0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}
},{}],"uVl3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do data.push(node.data); while (node = node.next);
  });
  return data;
}
},{}],"wciv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}
},{}],"HTh0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}
},{}],"NXzM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad.default(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad.default(node[3], xm, ym, x2, y2), new _quad.default(node[2], x1, ym, xm, y2), new _quad.default(node[1], xm, y1, x2, ym), new _quad.default(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
}
},{"./quad.js":"HTh0"}],"qMQE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.removeAll = removeAll;

function _default(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) if (!(previous = node, node = node.next)) return this;

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);

  return this;
}
},{}],"f6UW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return this._root;
}
},{}],"hpwG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do ++size; while (node = node.next);
  });
  return size;
}
},{}],"NlIW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad.default(node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
    }
  }

  return this;
}
},{"./quad.js":"HTh0"}],"mFQa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad.default(this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
}
},{"./quad.js":"HTh0"}],"zEre":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultX = defaultX;
exports.default = _default;

function defaultX(d) {
  return d[0];
}

function _default(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}
},{}],"C58w":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultY = defaultY;
exports.default = _default;

function defaultY(d) {
  return d[1];
}

function _default(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}
},{}],"e6a1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quadtree;

var _add = _interopRequireWildcard(require("./add.js"));

var _cover = _interopRequireDefault(require("./cover.js"));

var _data = _interopRequireDefault(require("./data.js"));

var _extent = _interopRequireDefault(require("./extent.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _remove = _interopRequireWildcard(require("./remove.js"));

var _root = _interopRequireDefault(require("./root.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _visit = _interopRequireDefault(require("./visit.js"));

var _visitAfter = _interopRequireDefault(require("./visitAfter.js"));

var _x = _interopRequireWildcard(require("./x.js"));

var _y = _interopRequireWildcard(require("./y.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x.defaultX : x, y == null ? _y.defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) next = next.next = {
    data: leaf.data
  };

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add.default;
treeProto.addAll = _add.addAll;
treeProto.cover = _cover.default;
treeProto.data = _data.default;
treeProto.extent = _extent.default;
treeProto.find = _find.default;
treeProto.remove = _remove.default;
treeProto.removeAll = _remove.removeAll;
treeProto.root = _root.default;
treeProto.size = _size.default;
treeProto.visit = _visit.default;
treeProto.visitAfter = _visitAfter.default;
treeProto.x = _x.default;
treeProto.y = _y.default;
},{"./add.js":"ALzt","./cover.js":"YvH0","./data.js":"uVl3","./extent.js":"wciv","./find.js":"NXzM","./remove.js":"qMQE","./root.js":"f6UW","./size.js":"hpwG","./visit.js":"NlIW","./visitAfter.js":"mFQa","./x.js":"zEre","./y.js":"C58w"}],"lUbg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "quadtree", {
  enumerable: true,
  get: function () {
    return _quadtree.default;
  }
});

var _quadtree = _interopRequireDefault(require("./quadtree.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./quadtree.js":"e6a1"}],"vmaP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

function _default(radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = (0, _constant.default)(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = (0, _d3Quadtree.quadtree)(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = (0, _jiggle.default)(), l += x * x;
            if (y === 0) y = (0, _jiggle.default)(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  return force;
}
},{"./constant":"aCvo","./jiggle":"Efbf","d3-quadtree":"lUbg"}],"zZLJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Collection = require("d3-collection");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

function _default(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = (0, _constant.default)(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || (0, _jiggle.default)();
        y = target.y + target.vy - source.y - source.vy || (0, _jiggle.default)();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = (0, _d3Collection.map)(nodes, id),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeDistance(), force) : distance;
  };

  return force;
}
},{"./constant":"aCvo","./jiggle":"Efbf","d3-collection":"S3hn"}],"Jr7D":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Collection = require("d3-collection");

var _d3Timer = require("d3-timer");

function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

function _default(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = (0, _d3Collection.map)(),
      stepper = (0, _d3Timer.timer)(step),
      event = (0, _d3Dispatch.dispatch)("tick", "end");
  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;
      forces.each(function (force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function () {
      return stepper.restart(step), simulation;
    },
    stop: function () {
      return stepper.stop(), simulation;
    },
    nodes: function (_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
    },
    alpha: function (_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },
    alphaMin: function (_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },
    alphaDecay: function (_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },
    alphaTarget: function (_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },
    velocityDecay: function (_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },
    force: function (name, _) {
      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function (x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function (name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}
},{"d3-dispatch":"D3zY","d3-collection":"S3hn","d3-timer":"rdzS"}],"i5c4":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

var _simulation = require("./simulation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var nodes,
      node,
      alpha,
      strength = (0, _constant.default)(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = (0, _d3Quadtree.quadtree)(nodes, _simulation.x, _simulation.y).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do strength += strengths[q.data.index]; while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = (0, _jiggle.default)(), l += x * x;
        if (y === 0) y = (0, _jiggle.default)(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = (0, _jiggle.default)(), l += x * x;
      if (y === 0) y = (0, _jiggle.default)(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}
},{"./constant":"aCvo","./jiggle":"Efbf","d3-quadtree":"lUbg","./simulation":"Jr7D"}],"UAq1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius, x, y) {
  var nodes,
      strength = (0, _constant.default)(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = (0, _constant.default)(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{"./constant":"aCvo"}],"ossL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = (0, _constant.default)(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : x;
  };

  return force;
}
},{"./constant":"aCvo"}],"GLsE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(y) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = (0, _constant.default)(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : y;
  };

  return force;
}
},{"./constant":"aCvo"}],"oYRE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "forceCenter", {
  enumerable: true,
  get: function () {
    return _center.default;
  }
});
Object.defineProperty(exports, "forceCollide", {
  enumerable: true,
  get: function () {
    return _collide.default;
  }
});
Object.defineProperty(exports, "forceLink", {
  enumerable: true,
  get: function () {
    return _link.default;
  }
});
Object.defineProperty(exports, "forceManyBody", {
  enumerable: true,
  get: function () {
    return _manyBody.default;
  }
});
Object.defineProperty(exports, "forceRadial", {
  enumerable: true,
  get: function () {
    return _radial.default;
  }
});
Object.defineProperty(exports, "forceSimulation", {
  enumerable: true,
  get: function () {
    return _simulation.default;
  }
});
Object.defineProperty(exports, "forceX", {
  enumerable: true,
  get: function () {
    return _x.default;
  }
});
Object.defineProperty(exports, "forceY", {
  enumerable: true,
  get: function () {
    return _y.default;
  }
});

var _center = _interopRequireDefault(require("./center"));

var _collide = _interopRequireDefault(require("./collide"));

var _link = _interopRequireDefault(require("./link"));

var _manyBody = _interopRequireDefault(require("./manyBody"));

var _radial = _interopRequireDefault(require("./radial"));

var _simulation = _interopRequireDefault(require("./simulation"));

var _x = _interopRequireDefault(require("./x"));

var _y = _interopRequireDefault(require("./y"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./center":"i73m","./collide":"vmaP","./link":"zZLJ","./manyBody":"i5c4","./radial":"UAq1","./simulation":"Jr7D","./x":"ossL","./y":"GLsE"}],"GAUC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
function _default(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}
},{}],"tXBB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  return x = (0, _formatDecimal.default)(Math.abs(x)), x ? x[1] : NaN;
}
},{"./formatDecimal.js":"GAUC"}],"rbAM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}
},{}],"hTcF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}
},{}],"aibL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatSpecifier;
exports.FormatSpecifier = FormatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
},{}],"SUnU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (!+s[i]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}
},{}],"fBpa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.prefixExponent = void 0;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixExponent;
exports.prefixExponent = prefixExponent;

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.default)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}
},{"./formatDecimal.js":"GAUC"}],"UDrw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}
},{"./formatDecimal.js":"GAUC"}],"Wavi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatPrefixAuto = _interopRequireDefault(require("./formatPrefixAuto.js"));

var _formatRounded = _interopRequireDefault(require("./formatRounded.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  "%": function (x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function (x) {
    return Math.round(x).toString(2);
  },
  "c": function (x) {
    return x + "";
  },
  "d": function (x) {
    return Math.round(x).toString(10);
  },
  "e": function (x, p) {
    return x.toExponential(p);
  },
  "f": function (x, p) {
    return x.toFixed(p);
  },
  "g": function (x, p) {
    return x.toPrecision(p);
  },
  "o": function (x) {
    return Math.round(x).toString(8);
  },
  "p": function (x, p) {
    return (0, _formatRounded.default)(x * 100, p);
  },
  "r": _formatRounded.default,
  "s": _formatPrefixAuto.default,
  "X": function (x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function (x) {
    return Math.round(x).toString(16);
  }
};
exports.default = _default;
},{"./formatPrefixAuto.js":"fBpa","./formatRounded.js":"UDrw"}],"IVmM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

var _formatGroup = _interopRequireDefault(require("./formatGroup.js"));

var _formatNumerals = _interopRequireDefault(require("./formatNumerals.js"));

var _formatSpecifier = _interopRequireDefault(require("./formatSpecifier.js"));

var _formatTrim = _interopRequireDefault(require("./formatTrim.js"));

var _formatTypes = _interopRequireDefault(require("./formatTypes.js"));

var _formatPrefixAuto = require("./formatPrefixAuto.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

function _default(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "-" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0, _formatSpecifier.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Perform the initial formatting.

        var valueNegative = value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero during formatting, treat as positive.

        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}
},{"./exponent.js":"tXBB","./formatGroup.js":"rbAM","./formatNumerals.js":"hTcF","./formatSpecifier.js":"aibL","./formatTrim.js":"SUnU","./formatTypes.js":"Wavi","./formatPrefixAuto.js":"fBpa","./identity.js":"NNW9"}],"KaMm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.format = format = locale.format;
  exports.formatPrefix = formatPrefix = locale.formatPrefix;
  return locale;
}
},{"./locale.js":"IVmM"}],"EyKk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step) {
  return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"tXBB"}],"VPkn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"tXBB"}],"DMyZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}
},{"./exponent.js":"tXBB"}],"VuZR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "formatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function () {
    return _defaultLocale.format;
  }
});
Object.defineProperty(exports, "formatPrefix", {
  enumerable: true,
  get: function () {
    return _defaultLocale.formatPrefix;
  }
});
Object.defineProperty(exports, "formatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "formatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.default;
  }
});
Object.defineProperty(exports, "FormatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.FormatSpecifier;
  }
});
Object.defineProperty(exports, "precisionFixed", {
  enumerable: true,
  get: function () {
    return _precisionFixed.default;
  }
});
Object.defineProperty(exports, "precisionPrefix", {
  enumerable: true,
  get: function () {
    return _precisionPrefix.default;
  }
});
Object.defineProperty(exports, "precisionRound", {
  enumerable: true,
  get: function () {
    return _precisionRound.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _formatSpecifier = _interopRequireWildcard(require("./formatSpecifier.js"));

var _precisionFixed = _interopRequireDefault(require("./precisionFixed.js"));

var _precisionPrefix = _interopRequireDefault(require("./precisionPrefix.js"));

var _precisionRound = _interopRequireDefault(require("./precisionRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"KaMm","./locale.js":"IVmM","./formatSpecifier.js":"aibL","./precisionFixed.js":"EyKk","./precisionPrefix.js":"VPkn","./precisionRound.js":"DMyZ"}],"fG8A":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
function _default() {
  return new Adder();
}

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function () {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function (y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;else this.s = temp.t;
  },
  valueOf: function () {
    return this.s;
  }
};
var temp = new Adder();

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = a - av + (b - bv);
}
},{}],"JQgf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.haversin = haversin;
exports.tan = exports.sqrt = exports.sign = exports.sin = exports.pow = exports.log = exports.floor = exports.exp = exports.ceil = exports.cos = exports.atan2 = exports.atan = exports.abs = exports.radians = exports.degrees = exports.tau = exports.quarterPi = exports.halfPi = exports.pi = exports.epsilon2 = exports.epsilon = void 0;
var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var quarterPi = pi / 4;
exports.quarterPi = quarterPi;
var tau = pi * 2;
exports.tau = tau;
var degrees = 180 / pi;
exports.degrees = degrees;
var radians = pi / 180;
exports.radians = radians;
var abs = Math.abs;
exports.abs = abs;
var atan = Math.atan;
exports.atan = atan;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var ceil = Math.ceil;
exports.ceil = ceil;
var exp = Math.exp;
exports.exp = exp;
var floor = Math.floor;
exports.floor = floor;
var log = Math.log;
exports.log = log;
var pow = Math.pow;
exports.pow = pow;
var sin = Math.sin;
exports.sin = sin;

var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};

exports.sign = sign;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var tan = Math.tan;
exports.tan = tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}
},{}],"DUih":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;

function noop() {}
},{}],"XQuq":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function (object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function (object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};
var streamGeometryType = {
  Sphere: function (object, stream) {
    stream.sphere();
  },
  Point: function (object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function (object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function (object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function (object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) streamLine(coordinates[i], stream, 1);

  stream.polygonEnd();
}

function _default(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}
},{}],"rKta":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.areaStream = exports.areaRingSum = void 0;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaRingSum = (0, _adder.default)();
exports.areaRingSum = areaRingSum;
var areaSum = (0, _adder.default)(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math.tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop.default;
  },
  sphere: function () {
    areaSum.add(_math.tau);
  }
};
exports.areaStream = areaStream;

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, cosPhi0 = (0, _math.cos)(phi = phi / 2 + _math.quarterPi), sinPhi0 = (0, _math.sin)(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  phi = phi / 2 + _math.quarterPi; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = (0, _math.cos)(phi),
      sinPhi = (0, _math.sin)(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * (0, _math.cos)(adLambda),
      v = k * sdLambda * (0, _math.sin)(adLambda);
  areaRingSum.add((0, _math.atan2)(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

function _default(object) {
  areaSum.reset();
  (0, _stream.default)(object, areaStream);
  return areaSum * 2;
}
},{"./adder.js":"fG8A","./math.js":"JQgf","./noop.js":"DUih","./stream.js":"XQuq"}],"V83Q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spherical = spherical;
exports.cartesian = cartesian;
exports.cartesianDot = cartesianDot;
exports.cartesianCross = cartesianCross;
exports.cartesianAddInPlace = cartesianAddInPlace;
exports.cartesianScale = cartesianScale;
exports.cartesianNormalizeInPlace = cartesianNormalizeInPlace;

var _math = require("./math.js");

function spherical(cartesian) {
  return [(0, _math.atan2)(cartesian[1], cartesian[0]), (0, _math.asin)(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = (0, _math.cos)(phi);
  return [cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a


function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d


function cartesianNormalizeInPlace(d) {
  var l = (0, _math.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}
},{"./math.js":"JQgf"}],"rw3L":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _area = require("./area.js");

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lambda0,
    phi0,
    lambda1,
    phi1,
    // bounds
lambda2,
    // previous lambda-coordinate
lambda00,
    phi00,
    // first point
p0,
    // previous 3D point
deltaSum = (0, _adder.default)(),
    ranges,
    range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function () {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();

    _area.areaStream.polygonStart();
  },
  polygonEnd: function () {
    _area.areaStream.polygonEnd();

    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math.epsilon) phi1 = 90;else if (deltaSum < -_math.epsilon) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function () {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = (0, _cartesian.cartesian)([lambda * _math.radians, phi * _math.radians]);

  if (p0) {
    var normal = (0, _cartesian.cartesianCross)(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = (0, _cartesian.cartesianCross)(equatorial, normal);
    (0, _cartesian.cartesianNormalizeInPlace)(inflection);
    inflection = (0, _cartesian.spherical)(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math.degrees * sign,
        phii,
        antimeridian = (0, _math.abs)(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math.degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math.degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add((0, _math.abs)(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area.areaStream.point(lambda, phi);

  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area.areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);

  _area.areaStream.lineEnd();

  if ((0, _math.abs)(deltaSum) > _math.epsilon) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

function _default(feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  (0, _stream.default)(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
}
},{"./adder.js":"fG8A","./area.js":"rKta","./cartesian.js":"V83Q","./math.js":"JQgf","./stream.js":"XQuq"}],"GCsQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop.default,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  centroidPointCartesian(cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      w = (0, _math.atan2)((0, _math.sqrt)((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = (0, _math.sqrt)(cx * cx + cy * cy + cz * cz),
      w = (0, _math.asin)(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function _default(object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
  (0, _stream.default)(object, centroidStream);
  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math.epsilon2) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math.epsilon) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.

    if (m < _math.epsilon2) return [NaN, NaN];
  }

  return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.asin)(z / (0, _math.sqrt)(m)) * _math.degrees];
}
},{"./math.js":"JQgf","./noop.js":"DUih","./stream.js":"XQuq"}],"tY9i":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
}
},{}],"LqUY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateRadians = rotateRadians;
exports.default = _default;

var _compose = _interopRequireDefault(require("./compose.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rotationIdentity(lambda, phi) {
  return [(0, _math.abs)(lambda) > _math.pi ? lambda + Math.round(-lambda / _math.tau) * _math.tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math.tau) ? deltaPhi || deltaGamma ? (0, _compose.default)(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math.pi ? lambda - _math.tau : lambda < -_math.pi ? lambda + _math.tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = (0, _math.cos)(deltaPhi),
      sinDeltaPhi = (0, _math.sin)(deltaPhi),
      cosDeltaGamma = (0, _math.cos)(deltaGamma),
      sinDeltaGamma = (0, _math.sin)(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [(0, _math.atan2)(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), (0, _math.asin)(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [(0, _math.atan2)(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), (0, _math.asin)(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

function _default(rotate) {
  rotate = rotateRadians(rotate[0] * _math.radians, rotate[1] * _math.radians, rotate.length > 2 ? rotate[2] * _math.radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  };

  return forward;
}
},{"./compose.js":"tY9i","./math.js":"JQgf"}],"KcOR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleStream = circleStream;
exports.default = _default;

var _cartesian = require("./cartesian.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

var _rotation = require("./rotation.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = (0, _math.cos)(radius),
      sinRadius = (0, _math.sin)(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math.tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math.tau;
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = (0, _cartesian.spherical)([cosRadius, -sinRadius * (0, _math.cos)(t), -sinRadius * (0, _math.sin)(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].


function circleRadius(cosRadius, point) {
  point = (0, _cartesian.cartesian)(point), point[0] -= cosRadius;
  (0, _cartesian.cartesianNormalizeInPlace)(point);
  var radius = (0, _math.acos)(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math.tau - _math.epsilon) % _math.tau;
}

function _default() {
  var center = (0, _constant.default)([0, 0]),
      radius = (0, _constant.default)(90),
      precision = (0, _constant.default)(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math.degrees, x[1] *= _math.degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math.radians,
        p = precision.apply(this, arguments) * _math.radians;

    ring = [];
    rotate = (0, _rotation.rotateRadians)(-c[0] * _math.radians, -c[1] * _math.radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : (0, _constant.default)([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : precision;
  };

  return circle;
}
},{"./cartesian.js":"V83Q","./constant.js":"aCvo","./math.js":"JQgf","./rotation.js":"LqUY"}],"jFd0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var lines = [],
      line;
  return {
    point: function (x, y) {
      line.push([x, y]);
    },
    lineStart: function () {
      lines.push(line = []);
    },
    lineEnd: _noop.default,
    rejoin: function () {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function () {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
},{"../noop.js":"DUih"}],"yH90":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  return (0, _math.abs)(a[0] - b[0]) < _math.epsilon && (0, _math.abs)(a[1] - b[1]) < _math.epsilon;
}
},{"./math.js":"JQgf"}],"Nr15":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


function _default(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x; // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.

    if ((0, _pointEqual.default)(p0, p1)) {
      stream.lineStart();

      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);

      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) if ((current = current.n) === start) return;

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}
},{"../pointEqual.js":"yH90"}],"GrwB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sum = (0, _adder.default)();

function longitude(point) {
  if ((0, _math.abs)(point[0]) <= _math.pi) return point[0];else return (0, _math.sign)(point[0]) * (((0, _math.abs)(point[0]) + _math.pi) % _math.tau - _math.pi);
}

function _default(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = (0, _math.sin)(phi),
      normal = [(0, _math.sin)(lambda), -(0, _math.cos)(lambda), 0],
      angle = 0,
      winding = 0;
  sum.reset();
  if (sinPhi === 1) phi = _math.halfPi + _math.epsilon;else if (sinPhi === -1) phi = -_math.halfPi - _math.epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math.quarterPi,
        sinPhi0 = (0, _math.sin)(phi0),
        cosPhi0 = (0, _math.cos)(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math.quarterPi,
          sinPhi1 = (0, _math.sin)(phi1),
          cosPhi1 = (0, _math.cos)(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math.pi,
          k = sinPhi0 * sinPhi1;
      sum.add((0, _math.atan2)(k * sign * (0, _math.sin)(absDelta), cosPhi0 * cosPhi1 + k * (0, _math.cos)(absDelta)));
      angle += antimeridian ? delta + sign * _math.tau : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = (0, _cartesian.cartesianCross)((0, _cartesian.cartesian)(point0), (0, _cartesian.cartesian)(point1));
        (0, _cartesian.cartesianNormalizeInPlace)(arc);
        var intersection = (0, _cartesian.cartesianCross)(normal, arc);
        (0, _cartesian.cartesianNormalizeInPlace)(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * (0, _math.asin)(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math.epsilon || angle < _math.epsilon && sum < -_math.epsilon) ^ winding & 1;
}
},{"./adder.js":"fG8A","./cartesian.js":"V83Q","./math.js":"JQgf"}],"J6h6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _math = require("../math.js");

var _polygonContains = _interopRequireDefault(require("../polygonContains.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = (0, _buffer.default)(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function () {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = (0, _d3Array.merge)(segments);
        var startInside = (0, _polygonContains.default)(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function () {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math.halfPi - _math.epsilon : _math.halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math.halfPi - _math.epsilon : _math.halfPi - b[1]);
}
},{"./buffer.js":"jFd0","./rejoin.js":"Nr15","../math.js":"JQgf","../polygonContains.js":"GrwB","d3-array":"K0bd"}],"Gots":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _index.default)(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math.pi, -_math.halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.


exports.default = _default;

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function () {
      stream.lineStart();
      clean = 1;
    },
    point: function (lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math.pi : -_math.pi,
          delta = (0, _math.abs)(lambda1 - lambda0);

      if ((0, _math.abs)(delta - _math.pi) < _math.epsilon) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math.halfPi : -_math.halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math.pi) {
        // line crosses antimeridian
        if ((0, _math.abs)(lambda0 - sign0) < _math.epsilon) lambda0 -= sign0 * _math.epsilon; // handle degeneracies

        if ((0, _math.abs)(lambda1 - sign1) < _math.epsilon) lambda1 -= sign1 * _math.epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function () {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function () {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = (0, _math.sin)(lambda0 - lambda1);
  return (0, _math.abs)(sinLambda0Lambda1) > _math.epsilon ? (0, _math.atan)(((0, _math.sin)(phi0) * (cosPhi1 = (0, _math.cos)(phi1)) * (0, _math.sin)(lambda1) - (0, _math.sin)(phi1) * (cosPhi0 = (0, _math.cos)(phi0)) * (0, _math.sin)(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math.halfPi;
    stream.point(-_math.pi, phi);
    stream.point(0, phi);
    stream.point(_math.pi, phi);
    stream.point(_math.pi, 0);
    stream.point(_math.pi, -phi);
    stream.point(0, -phi);
    stream.point(-_math.pi, -phi);
    stream.point(-_math.pi, 0);
    stream.point(-_math.pi, phi);
  } else if ((0, _math.abs)(from[0] - to[0]) > _math.epsilon) {
    var lambda = from[0] < to[0] ? _math.pi : -_math.pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
},{"./index.js":"J6h6","../math.js":"JQgf"}],"lcCJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _circle = require("../circle.js");

var _math = require("../math.js");

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius) {
  var cr = (0, _math.cos)(radius),
      delta = 6 * _math.radians,
      smallRadius = cr > 0,
      notHemisphere = (0, _math.abs)(cr) > _math.epsilon; // TODO optimise for this common case


  function interpolate(from, to, direction, stream) {
    (0, _circle.circleStream)(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return (0, _math.cos)(lambda) * (0, _math.cos)(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    clean; // no intersections

    return {
      lineStart: function () {
        v00 = v0 = false;
        clean = 1;
      },
      point: function (lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math.pi : -_math.pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.
        // TODO ignore if not clipping polygons.

        if (v !== v0) {
          point2 = intersect(point0, point1);

          if (!point2 || (0, _pointEqual.default)(point0, point2) || (0, _pointEqual.default)(point1, point2)) {
            point1[0] += _math.epsilon;
            point1[1] += _math.epsilon;
            v = visible(point1[0], point1[1]);
          }
        }

        if (v !== v0) {
          clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }

        if (v && (!point0 || !(0, _pointEqual.default)(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function () {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function () {
        return clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = (0, _cartesian.cartesian)(a),
        pb = (0, _cartesian.cartesian)(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = (0, _cartesian.cartesianCross)(pa, pb),
        n2n2 = (0, _cartesian.cartesianDot)(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = (0, _cartesian.cartesianCross)(n1, n2),
        A = (0, _cartesian.cartesianScale)(n1, c1),
        B = (0, _cartesian.cartesianScale)(n2, c2);
    (0, _cartesian.cartesianAddInPlace)(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = (0, _cartesian.cartesianDot)(A, u),
        uu = (0, _cartesian.cartesianDot)(u, u),
        t2 = w * w - uu * ((0, _cartesian.cartesianDot)(A, A) - 1);
    if (t2 < 0) return;
    var t = (0, _math.sqrt)(t2),
        q = (0, _cartesian.cartesianScale)(u, (-w - t) / uu);
    (0, _cartesian.cartesianAddInPlace)(q, A);
    q = (0, _cartesian.spherical)(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = (0, _math.abs)(delta - _math.pi) < _math.epsilon,
        meridian = polar || delta < _math.epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < ((0, _math.abs)(q[0] - lambda0) < _math.epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = (0, _cartesian.cartesianScale)(u, (-w + t) / uu);
      (0, _cartesian.cartesianAddInPlace)(q1, A);
      return [q, (0, _cartesian.spherical)(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math.pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return (0, _index.default)(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math.pi, radius - _math.pi]);
}
},{"../cartesian.js":"V83Q","../circle.js":"KcOR","../math.js":"JQgf","../pointEqual.js":"yH90","./index.js":"J6h6"}],"w1ni":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}
},{}],"jRQA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = clipRectangle;

var _math = require("../math.js");

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return (0, _math.abs)(p[0] - x0) < _math.epsilon ? direction > 0 ? 0 : 3 : (0, _math.abs)(p[0] - x1) < _math.epsilon ? direction > 0 ? 2 : 1 : (0, _math.abs)(p[1] - y0) < _math.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = (0, _buffer.default)(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = (0, _d3Array.merge)(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if ((0, _line.default)(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}
},{"../math.js":"JQgf","./buffer.js":"jFd0","./line.js":"w1ni","./rejoin.js":"Nr15","d3-array":"K0bd"}],"EodF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("./rectangle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = (0, _rectangle.default)(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function (_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}
},{"./rectangle.js":"jRQA"}],"bXUe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lambda0,
    sinPhi0,
    cosPhi0;
var lengthStream = {
  sphere: _noop.default,
  point: _noop.default,
  lineStart: lengthLineStart,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop.default;
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, sinPhi0 = (0, _math.sin)(phi), cosPhi0 = (0, _math.cos)(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var sinPhi = (0, _math.sin)(phi),
      cosPhi = (0, _math.cos)(phi),
      delta = (0, _math.abs)(lambda - lambda0),
      cosDelta = (0, _math.cos)(delta),
      sinDelta = (0, _math.sin)(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add((0, _math.atan2)((0, _math.sqrt)(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

function _default(object) {
  lengthSum.reset();
  (0, _stream.default)(object, lengthStream);
  return +lengthSum;
}
},{"./adder.js":"fG8A","./math.js":"JQgf","./noop.js":"DUih","./stream.js":"XQuq"}],"hTgK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};

function _default(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return (0, _length.default)(object);
}
},{"./length.js":"bXUe"}],"tRhb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _polygonContains = _interopRequireDefault(require("./polygonContains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var containsObjectType = {
  Feature: function (object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function (object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;

    return false;
  }
};
var containsGeometryType = {
  Sphere: function () {
    return true;
  },
  Point: function (object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPoint(coordinates[i], point)) return true;

    return false;
  },
  LineString: function (object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsLine(coordinates[i], point)) return true;

    return false;
  },
  Polygon: function (object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;

    return false;
  },
  GeometryCollection: function (object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) if (containsGeometry(geometries[i], point)) return true;

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return (0, _distance.default)(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;

  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = (0, _distance.default)(coordinates[i], point);
    if (bo === 0) return true;

    if (i > 0) {
      ab = (0, _distance.default)(coordinates[i], coordinates[i - 1]);
      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math.epsilon2 * ab) return true;
    }

    ao = bo;
  }

  return false;
}

function containsPolygon(coordinates, point) {
  return !!(0, _polygonContains.default)(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math.radians, point[1] * _math.radians];
}

function _default(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
}
},{"./polygonContains.js":"GrwB","./distance.js":"hTgK","./math.js":"JQgf"}],"IdZ0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = graticule;
exports.graticule10 = graticule10;

var _d3Array = require("d3-array");

var _math = require("./math.js");

function graticuleX(y0, y1, dy) {
  var y = (0, _d3Array.range)(y0, y1 - _math.epsilon, dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = (0, _d3Array.range)(x0, x1 - _math.epsilon, dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return (0, _d3Array.range)((0, _math.ceil)(X0 / DX) * DX, X1, DX).map(X).concat((0, _d3Array.range)((0, _math.ceil)(Y0 / DY) * DY, Y1, DY).map(Y)).concat((0, _d3Array.range)((0, _math.ceil)(x0 / dx) * dx, x1, dx).filter(function (x) {
      return (0, _math.abs)(x % DX) > _math.epsilon;
    }).map(x)).concat((0, _d3Array.range)((0, _math.ceil)(y0 / dy) * dy, y1, dy).filter(function (y) {
      return (0, _math.abs)(y % DY) > _math.epsilon;
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math.epsilon], [180, 90 - _math.epsilon]]).extentMinor([[-180, -80 - _math.epsilon], [180, 80 + _math.epsilon]]);
}

function graticule10() {
  return graticule()();
}
},{"d3-array":"K0bd","./math.js":"JQgf"}],"uuLr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  var x0 = a[0] * _math.radians,
      y0 = a[1] * _math.radians,
      x1 = b[0] * _math.radians,
      y1 = b[1] * _math.radians,
      cy0 = (0, _math.cos)(y0),
      sy0 = (0, _math.sin)(y0),
      cy1 = (0, _math.cos)(y1),
      sy1 = (0, _math.sin)(y1),
      kx0 = cy0 * (0, _math.cos)(x0),
      ky0 = cy0 * (0, _math.sin)(x0),
      kx1 = cy1 * (0, _math.cos)(x1),
      ky1 = cy1 * (0, _math.sin)(x1),
      d = 2 * (0, _math.asin)((0, _math.sqrt)((0, _math.haversin)(y1 - y0) + cy0 * cy1 * (0, _math.haversin)(x1 - x0))),
      k = (0, _math.sin)(d);
  var interpolate = d ? function (t) {
    var B = (0, _math.sin)(t *= d) / k,
        A = (0, _math.sin)(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.atan2)(z, (0, _math.sqrt)(x * x + y * y)) * _math.degrees];
  } : function () {
    return [x0 * _math.degrees, y0 * _math.degrees];
  };
  interpolate.distance = d;
  return interpolate;
}
},{"./math.js":"JQgf"}],"ueEe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaSum = (0, _adder.default)(),
    areaRingSum = (0, _adder.default)(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop.default;
    areaSum.add((0, _math.abs)(areaRingSum));
    areaRingSum.reset();
  },
  result: function () {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

var _default = areaStream;
exports.default = _default;
},{"../adder.js":"fG8A","../math.js":"JQgf","../noop.js":"DUih"}],"tL3W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default,
  result: function () {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

var _default = boundsStream;
exports.default = _default;
},{"../noop.js":"DUih"}],"PA8j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

// TODO Enforce positive area for exterior, negative area for interior?
var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function () {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

var _default = centroidStream;
exports.default = _default;
},{"../math.js":"JQgf"}],"r69t":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathContext;

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function (_) {
    return this._radius = _, this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math.tau);

          break;
        }
    }
  },
  result: _noop.default
};
},{"../math.js":"JQgf","../noop.js":"DUih"}],"SjQK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop.default,
  lineStart: function () {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function () {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop.default;
  },
  polygonStart: function () {
    lengthRing = true;
  },
  polygonEnd: function () {
    lengthRing = null;
  },
  result: function () {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

var _default = lengthStream;
exports.default = _default;
},{"../adder.js":"fG8A","../math.js":"JQgf","../noop.js":"DUih"}],"cxj1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathString;

function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function (_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function () {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
},{}],"JRMk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _identity = _interopRequireDefault(require("../identity.js"));

var _stream = _interopRequireDefault(require("../stream.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _context = _interopRequireDefault(require("./context.js"));

var _measure = _interopRequireDefault(require("./measure.js"));

var _string = _interopRequireDefault(require("./string.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      (0, _stream.default)(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    (0, _stream.default)(object, projectionStream(_area.default));
    return _area.default.result();
  };

  path.measure = function (object) {
    (0, _stream.default)(object, projectionStream(_measure.default));
    return _measure.default.result();
  };

  path.bounds = function (object) {
    (0, _stream.default)(object, projectionStream(_bounds.default));
    return _bounds.default.result();
  };

  path.centroid = function (object) {
    (0, _stream.default)(object, projectionStream(_centroid.default));
    return _centroid.default.result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity.default) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string.default()) : new _context.default(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}
},{"../identity.js":"NNW9","../stream.js":"XQuq","./area.js":"ueEe","./bounds.js":"tL3W","./centroid.js":"PA8j","./context.js":"r69t","./measure.js":"SjQK","./string.js":"cxj1"}],"pfKH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.transformer = transformer;

function _default(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) s[key] = methods[key];

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function (x, y) {
    this.stream.point(x, y);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  }
};
},{}],"Ycma":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fitExtent = fitExtent;
exports.fitSize = fitSize;
exports.fitWidth = fitWidth;
exports.fitHeight = fitHeight;

var _stream = _interopRequireDefault(require("../stream.js"));

var _bounds = _interopRequireDefault(require("../path/bounds.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  (0, _stream.default)(object, projection.stream(_bounds.default));
  fitBounds(_bounds.default.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
},{"../stream.js":"XQuq","../path/bounds.js":"tL3W"}],"nAh8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _math = require("../math.js");

var _transform = require("../transform.js");

var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = (0, _math.cos)(30 * _math.radians); // cos(minimum angular distance)

function _default(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = (0, _math.sqrt)(a * a + b * b + c * c),
          phi2 = (0, _math.asin)(c /= m),
          lambda2 = (0, _math.abs)((0, _math.abs)(c) - 1) < _math.epsilon || (0, _math.abs)(lambda0 - lambda1) < _math.epsilon ? (lambda0 + lambda1) / 2 : (0, _math.atan2)(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || (0, _math.abs)((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function () {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = (0, _cartesian.cartesian)([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}
},{"../cartesian.js":"V83Q","../math.js":"JQgf","../transform.js":"pfKH"}],"Ktpb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = projection;
exports.projectionMutator = projectionMutator;

var _antimeridian = _interopRequireDefault(require("../clip/antimeridian.js"));

var _circle = _interopRequireDefault(require("../clip/circle.js"));

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _compose = _interopRequireDefault(require("../compose.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _math = require("../math.js");

var _rotation = require("../rotation.js");

var _transform = require("../transform.js");

var _fit = require("./fit.js");

var _resample = _interopRequireDefault(require("./resample.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transformRadians = (0, _transform.transformer)({
  point: function (x, y) {
    this.stream.point(x * _math.radians, y * _math.radians);
  }
});

function transformRotate(rotate) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy) {
  function transform(x, y) {
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k, (dy - y) / k];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, alpha) {
  var cosAlpha = (0, _math.cos)(alpha),
      sinAlpha = (0, _math.sin)(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [ai * x - bi * y + ci, fi - bi * x - ai * y];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate
  theta = null,
      preclip = _antimeridian.default,
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity.default,
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math.radians, point[1] * _math.radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math.degrees, point[1] * _math.degrees];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? (0, _circle.default)(theta = _ * _math.radians) : (theta = null, _antimeridian.default), reset()) : theta * _math.degrees;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math.radians, phi = _[1] % 360 * _math.radians, recenter()) : [lambda * _math.degrees, phi * _math.degrees];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math.radians, deltaPhi = _[1] % 360 * _math.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _math.radians : 0, recenter()) : [deltaLambda * _math.degrees, deltaPhi * _math.degrees, deltaGamma * _math.degrees];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, recenter()) : alpha * _math.degrees;
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = (0, _resample.default)(projectTransform, delta2 = _ * _), reset()) : (0, _math.sqrt)(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
    rotate = (0, _rotation.rotateRadians)(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = (0, _compose.default)(project, transform);
    projectRotateTransform = (0, _compose.default)(rotate, projectTransform);
    projectResample = (0, _resample.default)(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}
},{"../clip/antimeridian.js":"Gots","../clip/circle.js":"lcCJ","../clip/rectangle.js":"jRQA","../compose.js":"tY9i","../identity.js":"NNW9","../math.js":"JQgf","../rotation.js":"LqUY","../transform.js":"pfKH","./fit.js":"Ycma","./resample.js":"nAh8"}],"Q2ed":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicProjection = conicProjection;

var _math = require("../math.js");

var _index = require("./index.js");

function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math.pi / 3,
      m = (0, _index.projectionMutator)(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math.radians, phi1 = _[1] * _math.radians) : [phi0 * _math.degrees, phi1 * _math.degrees];
  };

  return p;
}
},{"../math.js":"JQgf","./index.js":"Ktpb"}],"JFau":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;

var _math = require("../math.js");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = (0, _math.cos)(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];
  };

  return forward;
}
},{"../math.js":"JQgf"}],"TNCf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEqualAreaRaw = conicEqualAreaRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _cylindricalEqualArea = require("./cylindricalEqualArea.js");

function conicEqualAreaRaw(y0, y1) {
  var sy0 = (0, _math.sin)(y0),
      n = (sy0 + (0, _math.sin)(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if ((0, _math.abs)(n) < _math.epsilon) return (0, _cylindricalEqualArea.cylindricalEqualAreaRaw)(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = (0, _math.sqrt)(c) / n;

  function project(x, y) {
    var r = (0, _math.sqrt)(c - 2 * n * (0, _math.sin)(y)) / n;
    return [r * (0, _math.sin)(x *= n), r0 - r * (0, _math.cos)(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(r0y)) / n * (0, _math.sign)(r0y), (0, _math.asin)((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
}
},{"../math.js":"JQgf","./conic.js":"Q2ed","./cylindricalEqualArea.js":"JFau"}],"cpQd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _conicEqualArea.default)().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
}
},{"./conicEqualArea.js":"TNCf"}],"RPZI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("../math.js");

var _albers = _interopRequireDefault(require("./albers.js"));

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function (x, y) {
      var i = -1;

      while (++i < n) streams[i].point(x, y);
    },
    sphere: function () {
      var i = -1;

      while (++i < n) streams[i].sphere();
    },
    lineStart: function () {
      var i = -1;

      while (++i < n) streams[i].lineStart();
    },
    lineEnd: function () {
      var i = -1;

      while (++i < n) streams[i].lineEnd();
    },
    polygonStart: function () {
      var i = -1;

      while (++i < n) streams[i].polygonStart();
    },
    polygonEnd: function () {
      var i = -1;

      while (++i < n) streams[i].polygonEnd();
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


function _default() {
  var cache,
      cacheStream,
      lower48 = (0, _albers.default)(),
      lower48Point,
      alaska = (0, _conicEqualArea.default)().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = (0, _conicEqualArea.default)().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  point,
      pointStream = {
    point: function (x, y) {
      point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math.epsilon, y + 0.120 * k + _math.epsilon], [x - 0.214 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math.epsilon, y + 0.166 * k + _math.epsilon], [x - 0.115 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return (0, _fit.fitSize)(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}
},{"../math.js":"JQgf","./albers.js":"cpQd","./conicEqualArea.js":"TNCf","./fit.js":"Ycma"}],"WksQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.azimuthalRaw = azimuthalRaw;
exports.azimuthalInvert = azimuthalInvert;

var _math = require("../math.js");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = (0, _math.cos)(x),
        cy = (0, _math.cos)(y),
        k = scale(cx * cy);
    return [k * cy * (0, _math.sin)(x), k * (0, _math.sin)(y)];
  };
}

function azimuthalInvert(angle) {
  return function (x, y) {
    var z = (0, _math.sqrt)(x * x + y * y),
        c = angle(z),
        sc = (0, _math.sin)(c),
        cc = (0, _math.cos)(c);
    return [(0, _math.atan2)(x * sc, z * cc), (0, _math.asin)(z && y * sc / z)];
  };
}
},{"../math.js":"JQgf"}],"OyGo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEqualAreaRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEqualAreaRaw = (0, _azimuthal.azimuthalRaw)(function (cxcy) {
  return (0, _math.sqrt)(2 / (1 + cxcy));
});
exports.azimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
azimuthalEqualAreaRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.asin)(z / 2);
});

function _default() {
  return (0, _index.default)(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"mwct":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEquidistantRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEquidistantRaw = (0, _azimuthal.azimuthalRaw)(function (c) {
  return (c = (0, _math.acos)(c)) && c / (0, _math.sin)(c);
});
exports.azimuthalEquidistantRaw = azimuthalEquidistantRaw;
azimuthalEquidistantRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return z;
});

function _default() {
  return (0, _index.default)(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"n0Ot":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mercatorRaw = mercatorRaw;
exports.default = _default;
exports.mercatorProjection = mercatorProjection;

var _math = require("../math.js");

var _rotation = _interopRequireDefault(require("../rotation.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mercatorRaw(lambda, phi) {
  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];
};

function _default() {
  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);
}

function mercatorProjection(project) {
  var m = (0, _index.default)(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math.pi * scale(),
        t = m((0, _rotation.default)(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}
},{"../math.js":"JQgf","../rotation.js":"LqUY","./index.js":"Ktpb"}],"kVD1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicConformalRaw = conicConformalRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _mercator = require("./mercator.js");

function tany(y) {
  return (0, _math.tan)((_math.halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (0, _math.log)(cy0 / (0, _math.cos)(y1)) / (0, _math.log)(tany(y1) / tany(y0)),
      f = cy0 * (0, _math.pow)(tany(y0), n) / n;
  if (!n) return _mercator.mercatorRaw;

  function project(x, y) {
    if (f > 0) {
      if (y < -_math.halfPi + _math.epsilon) y = -_math.halfPi + _math.epsilon;
    } else {
      if (y > _math.halfPi - _math.epsilon) y = _math.halfPi - _math.epsilon;
    }

    var r = f / (0, _math.pow)(tany(y), n);
    return [r * (0, _math.sin)(n * x), f - r * (0, _math.cos)(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = (0, _math.sign)(n) * (0, _math.sqrt)(x * x + fy * fy);
    return [(0, _math.atan2)(x, (0, _math.abs)(fy)) / n * (0, _math.sign)(fy), 2 * (0, _math.atan)((0, _math.pow)(f / r, 1 / n)) - _math.halfPi];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicConformalRaw).scale(109.5).parallels([30, 30]);
}
},{"../math.js":"JQgf","./conic.js":"Q2ed","./mercator.js":"n0Ot"}],"RMXQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equirectangularRaw = equirectangularRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

function _default() {
  return (0, _index.default)(equirectangularRaw).scale(152.63);
}
},{"./index.js":"Ktpb"}],"TJ85":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEquidistantRaw = conicEquidistantRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _equirectangular = require("./equirectangular.js");

function conicEquidistantRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (cy0 - (0, _math.cos)(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if ((0, _math.abs)(n) < _math.epsilon) return _equirectangular.equirectangularRaw;

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * (0, _math.sin)(nx), g - gy * (0, _math.cos)(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(gy)) / n * (0, _math.sign)(gy), g - (0, _math.sign)(n) * (0, _math.sqrt)(x * x + gy * gy)];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
}
},{"../math.js":"JQgf","./conic.js":"Q2ed","./equirectangular.js":"RMXQ"}],"qrWJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equalEarthRaw = equalEarthRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = (0, _math.sqrt)(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = (0, _math.asin)(M * (0, _math.sin)(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * (0, _math.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if ((0, _math.abs)(delta) < _math.epsilon2) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0, _math.cos)(l), (0, _math.asin)((0, _math.sin)(l) / M)];
};

function _default() {
  return (0, _index.default)(equalEarthRaw).scale(177.158);
}
},{"./index.js":"Ktpb","../math.js":"JQgf"}],"KVOo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gnomonicRaw = gnomonicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function gnomonicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

gnomonicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.atan);

function _default() {
  return (0, _index.default)(gnomonicRaw).scale(144.049).clipAngle(60);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"XK0T":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _transform = require("../transform.js");

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scaleTranslate(kx, ky, tx, ty) {
  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity.default : (0, _transform.transformer)({
    point: function (x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }
  });
}

function _default() {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      transform = _identity.default,
      // scale, translate and reflect
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  postclip = _identity.default,
      cache,
      cacheStream,
      projection;

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return projection = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
    },
    postclip: function (_) {
      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    },
    clipExtent: function (_) {
      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
    },
    scale: function (_) {
      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    },
    translate: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    },
    reflectX: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;
    },
    reflectY: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;
    },
    fitExtent: function (extent, object) {
      return (0, _fit.fitExtent)(projection, extent, object);
    },
    fitSize: function (size, object) {
      return (0, _fit.fitSize)(projection, size, object);
    },
    fitWidth: function (width, object) {
      return (0, _fit.fitWidth)(projection, width, object);
    },
    fitHeight: function (height, object) {
      return (0, _fit.fitHeight)(projection, height, object);
    }
  };
}
},{"../clip/rectangle.js":"jRQA","../identity.js":"NNW9","../transform.js":"pfKH","./fit.js":"Ycma"}],"Y5z7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naturalEarth1Raw = naturalEarth1Raw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while ((0, _math.abs)(delta) > _math.epsilon && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

function _default() {
  return (0, _index.default)(naturalEarth1Raw).scale(175.295);
}
},{"./index.js":"Ktpb","../math.js":"JQgf"}],"UMbg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orthographicRaw = orthographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function orthographicRaw(x, y) {
  return [(0, _math.cos)(y) * (0, _math.sin)(x), (0, _math.sin)(y)];
}

orthographicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.asin);

function _default() {
  return (0, _index.default)(orthographicRaw).scale(249.5).clipAngle(90 + _math.epsilon);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"vfE9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stereographicRaw = stereographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stereographicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = 1 + (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

stereographicRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.atan)(z);
});

function _default() {
  return (0, _index.default)(stereographicRaw).scale(250).clipAngle(142);
}
},{"../math.js":"JQgf","./azimuthal.js":"WksQ","./index.js":"Ktpb"}],"o0eF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transverseMercatorRaw = transverseMercatorRaw;
exports.default = _default;

var _math = require("../math.js");

var _mercator = require("./mercator.js");

function transverseMercatorRaw(lambda, phi) {
  return [(0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * (0, _math.atan)((0, _math.exp)(x)) - _math.halfPi];
};

function _default() {
  var m = (0, _mercator.mercatorProjection)(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
}
},{"../math.js":"JQgf","./mercator.js":"n0Ot"}],"Ah6W":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "geoArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "geoBounds", {
  enumerable: true,
  get: function () {
    return _bounds.default;
  }
});
Object.defineProperty(exports, "geoCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "geoCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "geoClipAntimeridian", {
  enumerable: true,
  get: function () {
    return _antimeridian.default;
  }
});
Object.defineProperty(exports, "geoClipCircle", {
  enumerable: true,
  get: function () {
    return _circle2.default;
  }
});
Object.defineProperty(exports, "geoClipExtent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "geoClipRectangle", {
  enumerable: true,
  get: function () {
    return _rectangle.default;
  }
});
Object.defineProperty(exports, "geoContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "geoDistance", {
  enumerable: true,
  get: function () {
    return _distance.default;
  }
});
Object.defineProperty(exports, "geoGraticule", {
  enumerable: true,
  get: function () {
    return _graticule.default;
  }
});
Object.defineProperty(exports, "geoGraticule10", {
  enumerable: true,
  get: function () {
    return _graticule.graticule10;
  }
});
Object.defineProperty(exports, "geoInterpolate", {
  enumerable: true,
  get: function () {
    return _interpolate.default;
  }
});
Object.defineProperty(exports, "geoLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});
Object.defineProperty(exports, "geoPath", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "geoAlbers", {
  enumerable: true,
  get: function () {
    return _albers.default;
  }
});
Object.defineProperty(exports, "geoAlbersUsa", {
  enumerable: true,
  get: function () {
    return _albersUsa.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualArea", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.azimuthalEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistant", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.azimuthalEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoConicConformal", {
  enumerable: true,
  get: function () {
    return _conicConformal.default;
  }
});
Object.defineProperty(exports, "geoConicConformalRaw", {
  enumerable: true,
  get: function () {
    return _conicConformal.conicConformalRaw;
  }
});
Object.defineProperty(exports, "geoConicEqualArea", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.default;
  }
});
Object.defineProperty(exports, "geoConicEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.conicEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoConicEquidistant", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.default;
  }
});
Object.defineProperty(exports, "geoConicEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.conicEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoEqualEarth", {
  enumerable: true,
  get: function () {
    return _equalEarth.default;
  }
});
Object.defineProperty(exports, "geoEqualEarthRaw", {
  enumerable: true,
  get: function () {
    return _equalEarth.equalEarthRaw;
  }
});
Object.defineProperty(exports, "geoEquirectangular", {
  enumerable: true,
  get: function () {
    return _equirectangular.default;
  }
});
Object.defineProperty(exports, "geoEquirectangularRaw", {
  enumerable: true,
  get: function () {
    return _equirectangular.equirectangularRaw;
  }
});
Object.defineProperty(exports, "geoGnomonic", {
  enumerable: true,
  get: function () {
    return _gnomonic.default;
  }
});
Object.defineProperty(exports, "geoGnomonicRaw", {
  enumerable: true,
  get: function () {
    return _gnomonic.gnomonicRaw;
  }
});
Object.defineProperty(exports, "geoIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "geoProjection", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "geoProjectionMutator", {
  enumerable: true,
  get: function () {
    return _index2.projectionMutator;
  }
});
Object.defineProperty(exports, "geoMercator", {
  enumerable: true,
  get: function () {
    return _mercator.default;
  }
});
Object.defineProperty(exports, "geoMercatorRaw", {
  enumerable: true,
  get: function () {
    return _mercator.mercatorRaw;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1", {
  enumerable: true,
  get: function () {
    return _naturalEarth.default;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1Raw", {
  enumerable: true,
  get: function () {
    return _naturalEarth.naturalEarth1Raw;
  }
});
Object.defineProperty(exports, "geoOrthographic", {
  enumerable: true,
  get: function () {
    return _orthographic.default;
  }
});
Object.defineProperty(exports, "geoOrthographicRaw", {
  enumerable: true,
  get: function () {
    return _orthographic.orthographicRaw;
  }
});
Object.defineProperty(exports, "geoStereographic", {
  enumerable: true,
  get: function () {
    return _stereographic.default;
  }
});
Object.defineProperty(exports, "geoStereographicRaw", {
  enumerable: true,
  get: function () {
    return _stereographic.stereographicRaw;
  }
});
Object.defineProperty(exports, "geoTransverseMercator", {
  enumerable: true,
  get: function () {
    return _transverseMercator.default;
  }
});
Object.defineProperty(exports, "geoTransverseMercatorRaw", {
  enumerable: true,
  get: function () {
    return _transverseMercator.transverseMercatorRaw;
  }
});
Object.defineProperty(exports, "geoRotation", {
  enumerable: true,
  get: function () {
    return _rotation.default;
  }
});
Object.defineProperty(exports, "geoStream", {
  enumerable: true,
  get: function () {
    return _stream.default;
  }
});
Object.defineProperty(exports, "geoTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _circle = _interopRequireDefault(require("./circle.js"));

var _antimeridian = _interopRequireDefault(require("./clip/antimeridian.js"));

var _circle2 = _interopRequireDefault(require("./clip/circle.js"));

var _extent = _interopRequireDefault(require("./clip/extent.js"));

var _rectangle = _interopRequireDefault(require("./clip/rectangle.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _graticule = _interopRequireWildcard(require("./graticule.js"));

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

var _length = _interopRequireDefault(require("./length.js"));

var _index = _interopRequireDefault(require("./path/index.js"));

var _albers = _interopRequireDefault(require("./projection/albers.js"));

var _albersUsa = _interopRequireDefault(require("./projection/albersUsa.js"));

var _azimuthalEqualArea = _interopRequireWildcard(require("./projection/azimuthalEqualArea.js"));

var _azimuthalEquidistant = _interopRequireWildcard(require("./projection/azimuthalEquidistant.js"));

var _conicConformal = _interopRequireWildcard(require("./projection/conicConformal.js"));

var _conicEqualArea = _interopRequireWildcard(require("./projection/conicEqualArea.js"));

var _conicEquidistant = _interopRequireWildcard(require("./projection/conicEquidistant.js"));

var _equalEarth = _interopRequireWildcard(require("./projection/equalEarth.js"));

var _equirectangular = _interopRequireWildcard(require("./projection/equirectangular.js"));

var _gnomonic = _interopRequireWildcard(require("./projection/gnomonic.js"));

var _identity = _interopRequireDefault(require("./projection/identity.js"));

var _index2 = _interopRequireWildcard(require("./projection/index.js"));

var _mercator = _interopRequireWildcard(require("./projection/mercator.js"));

var _naturalEarth = _interopRequireWildcard(require("./projection/naturalEarth1.js"));

var _orthographic = _interopRequireWildcard(require("./projection/orthographic.js"));

var _stereographic = _interopRequireWildcard(require("./projection/stereographic.js"));

var _transverseMercator = _interopRequireWildcard(require("./projection/transverseMercator.js"));

var _rotation = _interopRequireDefault(require("./rotation.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"rKta","./bounds.js":"rw3L","./centroid.js":"GCsQ","./circle.js":"KcOR","./clip/antimeridian.js":"Gots","./clip/circle.js":"lcCJ","./clip/extent.js":"EodF","./clip/rectangle.js":"jRQA","./contains.js":"tRhb","./distance.js":"hTgK","./graticule.js":"IdZ0","./interpolate.js":"uuLr","./length.js":"bXUe","./path/index.js":"JRMk","./projection/albers.js":"cpQd","./projection/albersUsa.js":"RPZI","./projection/azimuthalEqualArea.js":"OyGo","./projection/azimuthalEquidistant.js":"mwct","./projection/conicConformal.js":"kVD1","./projection/conicEqualArea.js":"TNCf","./projection/conicEquidistant.js":"TJ85","./projection/equalEarth.js":"qrWJ","./projection/equirectangular.js":"RMXQ","./projection/gnomonic.js":"KVOo","./projection/identity.js":"XK0T","./projection/index.js":"Ktpb","./projection/mercator.js":"n0Ot","./projection/naturalEarth1.js":"Y5z7","./projection/orthographic.js":"UMbg","./projection/stereographic.js":"vfE9","./projection/transverseMercator.js":"o0eF","./rotation.js":"LqUY","./stream.js":"XQuq","./transform.js":"pfKH"}],"JRxK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) node = children[0];

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) node = children[children.length - 1];

  return node;
}

function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
}
},{}],"FbP8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

function _default() {
  return this.eachAfter(count);
}
},{}],"aoO7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);

  return this;
}
},{}],"vU7q":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      children,
      i;

  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }

  return this;
}
},{}],"bidz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n;

  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }

  while (node = next.pop()) {
    callback(node);
  }

  return this;
}
},{}],"tYQG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) sum += children[i].value;

    node.value = sum;
  });
}
},{}],"l55u":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
},{}],"Rfs8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}
},{}],"iENO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
}
},{}],"b4YN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = [];
  this.each(function (node) {
    nodes.push(node);
  });
  return nodes;
}
},{}],"A1Sr":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
},{}],"NfF5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
}
},{}],"xn1B":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hierarchy;
exports.computeHeight = computeHeight;
exports.Node = Node;

var _count = _interopRequireDefault(require("./count.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachBefore = _interopRequireDefault(require("./eachBefore.js"));

var _eachAfter = _interopRequireDefault(require("./eachAfter.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

var _path = _interopRequireDefault(require("./path.js"));

var _ancestors = _interopRequireDefault(require("./ancestors.js"));

var _descendants = _interopRequireDefault(require("./descendants.js"));

var _leaves = _interopRequireDefault(require("./leaves.js"));

var _links = _interopRequireDefault(require("./links.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;
  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;

    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do node.height = height; while ((node = node.parent) && node.height < ++height);
}

function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count.default,
  each: _each.default,
  eachAfter: _eachAfter.default,
  eachBefore: _eachBefore.default,
  sum: _sum.default,
  sort: _sort.default,
  path: _path.default,
  ancestors: _ancestors.default,
  descendants: _descendants.default,
  leaves: _leaves.default,
  links: _links.default,
  copy: node_copy
};
},{"./count.js":"FbP8","./each.js":"aoO7","./eachBefore.js":"vU7q","./eachAfter.js":"bidz","./sum.js":"tYQG","./sort.js":"l55u","./path.js":"Rfs8","./ancestors.js":"iENO","./descendants.js":"b4YN","./leaves.js":"A1Sr","./links.js":"NfF5"}],"aDgv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shuffle = shuffle;
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}
},{}],"H7R8":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array.js");

function _default(circles) {
  var i = 0,
      n = (circles = (0, _array.shuffle)(_array.slice.call(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}
},{"../array.js":"aDgv"}],"ObEg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packEnclose = packEnclose;
exports.default = _default;

var _enclose = _interopRequireDefault(require("./enclose.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) a.push(c._);

  c = (0, _enclose.default)(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

function _default(circles) {
  packEnclose(circles);
  return circles;
}
},{"./enclose.js":"H7R8"}],"kxuB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.optional = optional;
exports.required = required;

function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}
},{}],"JuqG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constantZero = constantZero;
exports.default = _default;

function constantZero() {
  return 0;
}

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"fIYd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _siblings = require("./siblings.js");

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function defaultRadius(d) {
  return Math.sqrt(d.value);
}

function _default() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant.constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = (0, _accessors.optional)(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : (0, _constant.default)(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = (0, _siblings.packEnclose)(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}
},{"./siblings.js":"ObEg","../accessors.js":"kxuB","../constant.js":"JuqG"}],"kcDz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}
},{}],"Z1AK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}
},{}],"ekbw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./treemap/round.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        (0, _dice.default)(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}
},{"./treemap/round.js":"kcDz","./treemap/dice.js":"Z1AK"}],"fM3r":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _accessors = require("./accessors.js");

var _index = require("./hierarchy/index.js");

var keyPrefix = "$",
    // Protect against keys like “__proto__”.
preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

function _default() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _index.Node(d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);

      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_index.computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = (0, _accessors.required)(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = (0, _accessors.required)(x), stratify) : parentId;
  };

  return stratify;
}
},{"./accessors.js":"kxuB","./hierarchy/index.js":"xn1B"}],"xQqP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./hierarchy/index.js");

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_index.Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
}
},{"./hierarchy/index.js":"xn1B"}],"XP76":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}
},{}],"sjir":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.squarifyRatio = squarifyRatio;
exports.default = exports.phi = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var phi = (1 + Math.sqrt(5)) / 2;
exports.phi = phi;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

var _default = function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
}(phi);

exports.default = _default;
},{"./dice.js":"Z1AK","./slice.js":"XP76"}],"dRX5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./round.js"));

var _squarify = _interopRequireDefault(require("./squarify.js"));

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var tile = _squarify.default,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant.constantZero,
      paddingTop = _constant.constantZero,
      paddingRight = _constant.constantZero,
      paddingBottom = _constant.constantZero,
      paddingLeft = _constant.constantZero;

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = (0, _accessors.required)(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingLeft;
  };

  return treemap;
}
},{"./round.js":"kcDz","./squarify.js":"sjir","../accessors.js":"kxuB","../constant.js":"JuqG"}],"dNVH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}
},{}],"rOuR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice.default : _dice.default)(parent, x0, y0, x1, y1);
}
},{"./dice.js":"Z1AK","./slice.js":"XP76"}],"XhZ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _squarify = require("./squarify.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;

        if (row.dice) (0, _dice.default)(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else (0, _slice.default)(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = (0, _squarify.squarifyRatio)(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
}(_squarify.phi);

exports.default = _default;
},{"./dice.js":"Z1AK","./slice.js":"XP76","./squarify.js":"sjir"}],"Kps6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "cluster", {
  enumerable: true,
  get: function () {
    return _cluster.default;
  }
});
Object.defineProperty(exports, "hierarchy", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "pack", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "packSiblings", {
  enumerable: true,
  get: function () {
    return _siblings.default;
  }
});
Object.defineProperty(exports, "packEnclose", {
  enumerable: true,
  get: function () {
    return _enclose.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "stratify", {
  enumerable: true,
  get: function () {
    return _stratify.default;
  }
});
Object.defineProperty(exports, "tree", {
  enumerable: true,
  get: function () {
    return _tree.default;
  }
});
Object.defineProperty(exports, "treemap", {
  enumerable: true,
  get: function () {
    return _index3.default;
  }
});
Object.defineProperty(exports, "treemapBinary", {
  enumerable: true,
  get: function () {
    return _binary.default;
  }
});
Object.defineProperty(exports, "treemapDice", {
  enumerable: true,
  get: function () {
    return _dice.default;
  }
});
Object.defineProperty(exports, "treemapSlice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "treemapSliceDice", {
  enumerable: true,
  get: function () {
    return _sliceDice.default;
  }
});
Object.defineProperty(exports, "treemapSquarify", {
  enumerable: true,
  get: function () {
    return _squarify.default;
  }
});
Object.defineProperty(exports, "treemapResquarify", {
  enumerable: true,
  get: function () {
    return _resquarify.default;
  }
});

var _cluster = _interopRequireDefault(require("./cluster.js"));

var _index = _interopRequireDefault(require("./hierarchy/index.js"));

var _index2 = _interopRequireDefault(require("./pack/index.js"));

var _siblings = _interopRequireDefault(require("./pack/siblings.js"));

var _enclose = _interopRequireDefault(require("./pack/enclose.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _stratify = _interopRequireDefault(require("./stratify.js"));

var _tree = _interopRequireDefault(require("./tree.js"));

var _index3 = _interopRequireDefault(require("./treemap/index.js"));

var _binary = _interopRequireDefault(require("./treemap/binary.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

var _slice = _interopRequireDefault(require("./treemap/slice.js"));

var _sliceDice = _interopRequireDefault(require("./treemap/sliceDice.js"));

var _squarify = _interopRequireDefault(require("./treemap/squarify.js"));

var _resquarify = _interopRequireDefault(require("./treemap/resquarify.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./cluster.js":"JRxK","./hierarchy/index.js":"xn1B","./pack/index.js":"fIYd","./pack/siblings.js":"ObEg","./pack/enclose.js":"H7R8","./partition.js":"ekbw","./stratify.js":"fM3r","./tree.js":"xQqP","./treemap/index.js":"dRX5","./treemap/binary.js":"dNVH","./treemap/dice.js":"Z1AK","./treemap/slice.js":"XP76","./treemap/sliceDice.js":"rOuR","./treemap/squarify.js":"sjir","./treemap/resquarify.js":"XhZ5"}],"lAFu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}
},{}],"CP3F":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}
},{}],"zVqT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
function _default(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}
},{}],"Q16x":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cross = _interopRequireDefault(require("./cross.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  var n = points.length,
      indexes = [0, 1],
      size = 2;

  for (var i = 2; i < n; ++i) {
    while (size > 1 && (0, _cross.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

function _default(points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}
},{"./cross.js":"zVqT"}],"tuiT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}
},{}],"AReD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }

  return perimeter;
}
},{}],"H15P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "polygonArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "polygonCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "polygonHull", {
  enumerable: true,
  get: function () {
    return _hull.default;
  }
});
Object.defineProperty(exports, "polygonContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "polygonLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _hull = _interopRequireDefault(require("./hull.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"lAFu","./centroid.js":"CP3F","./hull.js":"Q16x","./contains.js":"tuiT","./length.js":"AReD"}],"m3Qw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return Math.random();
}
},{}],"j5my":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"rHsL":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"egwl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _normal = _interopRequireDefault(require("./normal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomLogNormal(source) {
  function randomLogNormal() {
    var randomNormal = _normal.default.source(source).apply(this, arguments);

    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw","./normal":"rHsL"}],"xpLv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    return function () {
      for (var sum = 0, i = 0; i < n; ++i) sum += source();

      return sum;
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"th5P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBates(source) {
  function randomBates(n) {
    var randomIrwinHall = _irwinHall.default.source(source)(n);

    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw","./irwinHall":"xpLv"}],"r4q1":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log(1 - source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"m3Qw"}],"Gz2j":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "randomUniform", {
  enumerable: true,
  get: function () {
    return _uniform.default;
  }
});
Object.defineProperty(exports, "randomNormal", {
  enumerable: true,
  get: function () {
    return _normal.default;
  }
});
Object.defineProperty(exports, "randomLogNormal", {
  enumerable: true,
  get: function () {
    return _logNormal.default;
  }
});
Object.defineProperty(exports, "randomBates", {
  enumerable: true,
  get: function () {
    return _bates.default;
  }
});
Object.defineProperty(exports, "randomIrwinHall", {
  enumerable: true,
  get: function () {
    return _irwinHall.default;
  }
});
Object.defineProperty(exports, "randomExponential", {
  enumerable: true,
  get: function () {
    return _exponential.default;
  }
});

var _uniform = _interopRequireDefault(require("./uniform"));

var _normal = _interopRequireDefault(require("./normal"));

var _logNormal = _interopRequireDefault(require("./logNormal"));

var _bates = _interopRequireDefault(require("./bates"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

var _exponential = _interopRequireDefault(require("./exponential"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./uniform":"j5my","./normal":"rHsL","./logNormal":"egwl","./bates":"th5P","./irwinHall":"xpLv","./exponential":"r4q1"}],"buZa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initRange = initRange;
exports.initInterpolator = initInterpolator;

function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.interpolator(domain);
      break;

    default:
      this.interpolator(interpolator).domain(domain);
      break;
  }

  return this;
}
},{}],"qoMs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = exports.map = void 0;
var array = Array.prototype;
var map = array.map;
exports.map = map;
var slice = array.slice;
exports.slice = slice;
},{}],"GjLX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ordinal;
exports.implicit = void 0;

var _d3Collection = require("d3-collection");

var _array = require("./array");

var _init = require("./init");

var implicit = {
  name: "implicit"
};
exports.implicit = implicit;

function ordinal() {
  var index = (0, _d3Collection.map)(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = (0, _d3Collection.map)();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-collection":"S3hn","./array":"qoMs","./init":"buZa"}],"BAgl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = band;
exports.point = point;

var _d3Array = require("d3-array");

var _init = require("./init");

var _ordinal = _interopRequireDefault(require("./ordinal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function band() {
  var scale = (0, _ordinal.default)().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse];
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = (0, _d3Array.range)(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = [+_[0], +_[1]], round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init.initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}
},{"d3-array":"K0bd","./init":"buZa","./ordinal":"GjLX"}],"FNaI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return +x;
}
},{}],"CjJ5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;
exports.copy = copy;
exports.transformer = transformer;
exports.default = continuous;

var _d3Array = require("d3-array");

var _d3Interpolate = require("d3-interpolate");

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0],
      b = domain[domain.length - 1],
      t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = (0, _d3Array.bisect)(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = _d3Interpolate.interpolate,
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _d3Interpolate.interpolateNumber)))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = _array.slice.call(_), interpolate = _d3Interpolate.interpolateRound, rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}
},{"d3-array":"K0bd","d3-interpolate":"k9aH","./array":"qoMs","./constant":"aCvo","./number":"FNaI"}],"qjRa":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

function _default(start, stop, count, specifier) {
  var step = (0, _d3Array.tickStep)(start, stop, count),
      precision;
  specifier = (0, _d3Format.formatSpecifier)(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionPrefix)(step, value))) specifier.precision = precision;
        return (0, _d3Format.formatPrefix)(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return (0, _d3Format.format)(specifier);
}
},{"d3-array":"K0bd","d3-format":"VuZR"}],"LIJk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linearish = linearish;
exports.default = linear;

var _d3Array = require("d3-array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return (0, _d3Array.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = (0, _d3Array.tickIncrement)(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, linear());
  };

  _init.initRange.apply(scale, arguments);

  return linearish(scale);
}
},{"d3-array":"K0bd","./continuous":"CjJ5","./init":"buZa","./tickFormat":"qjRa"}],"FKHe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = identity;

var _array = require("./array");

var _linear = require("./linear");

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? _array.map.call(domain, _number.default) : [0, 1];
  return (0, _linear.linearish)(scale);
}
},{"./array":"qoMs","./linear":"LIJk","./number":"FNaI"}],"eMTM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}
},{}],"ea59":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loggish = loggish;
exports.default = log;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

var _nice = _interopRequireDefault(require("./nice"));

var _continuous = require("./continuous");

var _init = require("./init");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = (0, _d3Array.ticks)(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = (0, _d3Format.format)(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain((0, _nice.default)(domain(), {
      floor: function (x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function (x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish((0, _continuous.transformer)()).domain([1, 10]);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, log()).base(scale.base());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-array":"K0bd","d3-format":"VuZR","./nice":"eMTM","./continuous":"CjJ5","./init":"buZa"}],"nanU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.symlogish = symlogish;
exports.default = symlog;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return (0, _linear.linearish)(scale);
}

function symlog() {
  var scale = symlogish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
  };

  return _init.initRange.apply(scale, arguments);
}
},{"./linear":"LIJk","./continuous":"CjJ5","./init":"buZa"}],"xeRN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.powish = powish;
exports.default = pow;
exports.sqrt = sqrt;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous.identity, _continuous.identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return (0, _linear.linearish)(scale);
}

function pow() {
  var scale = powish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}
},{"./linear":"LIJk","./continuous":"CjJ5","./init":"buZa"}],"AGCd":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantile;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) thresholds[i - 1] = (0, _d3Array.quantile)(domain, i / n);

    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[(0, _d3Array.bisect)(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"K0bd","./array":"qoMs","./init":"buZa"}],"d6Xk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantize;

var _d3Array = require("d3-array");

var _array = require("./array");

var _linear = require("./linear");

var _init = require("./init");

function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = _array.slice.call(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}
},{"d3-array":"K0bd","./array":"qoMs","./linear":"LIJk","./init":"buZa"}],"I63C":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = threshold;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"K0bd","./array":"qoMs","./init":"buZa"}],"QFUQ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = newInterval;
var t0 = new Date(),
    t1 = new Date();

function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
  }

  interval.floor = function (date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}
},{}],"WVmH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.milliseconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var millisecond = (0, _interval.default)(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return (0, _interval.default)(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

var _default = millisecond;
exports.default = _default;
var milliseconds = millisecond.range;
exports.milliseconds = milliseconds;
},{"./interval.js":"QFUQ"}],"Vnta":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.durationWeek = exports.durationDay = exports.durationHour = exports.durationMinute = exports.durationSecond = void 0;
var durationSecond = 1e3;
exports.durationSecond = durationSecond;
var durationMinute = 6e4;
exports.durationMinute = durationMinute;
var durationHour = 36e5;
exports.durationHour = durationHour;
var durationDay = 864e5;
exports.durationDay = durationDay;
var durationWeek = 6048e5;
exports.durationWeek = durationWeek;
},{}],"AYLw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var second = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration.durationSecond);
}, function (start, end) {
  return (end - start) / _duration.durationSecond;
}, function (date) {
  return date.getUTCSeconds();
});
var _default = second;
exports.default = _default;
var seconds = second.range;
exports.seconds = seconds;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"etD9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var minute = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getMinutes();
});
var _default = minute;
exports.default = _default;
var minutes = minute.range;
exports.minutes = minutes;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"py4n":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hour = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getHours();
});
var _default = hour;
exports.default = _default;
var hours = hour.range;
exports.hours = hours;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"LWrz":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.days = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var day = (0, _interval.default)(function (date) {
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay;
}, function (date) {
  return date.getDate() - 1;
});
var _default = day;
exports.default = _default;
var days = day.range;
exports.days = days;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"Dweu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saturdays = exports.fridays = exports.thursdays = exports.wednesdays = exports.tuesdays = exports.mondays = exports.sundays = exports.saturday = exports.friday = exports.thursday = exports.wednesday = exports.tuesday = exports.monday = exports.sunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function weekday(i) {
  return (0, _interval.default)(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
  });
}

var sunday = weekday(0);
exports.sunday = sunday;
var monday = weekday(1);
exports.monday = monday;
var tuesday = weekday(2);
exports.tuesday = tuesday;
var wednesday = weekday(3);
exports.wednesday = wednesday;
var thursday = weekday(4);
exports.thursday = thursday;
var friday = weekday(5);
exports.friday = friday;
var saturday = weekday(6);
exports.saturday = saturday;
var sundays = sunday.range;
exports.sundays = sundays;
var mondays = monday.range;
exports.mondays = mondays;
var tuesdays = tuesday.range;
exports.tuesdays = tuesdays;
var wednesdays = wednesday.range;
exports.wednesdays = wednesdays;
var thursdays = thursday.range;
exports.thursdays = thursdays;
var fridays = friday.range;
exports.fridays = fridays;
var saturdays = saturday.range;
exports.saturdays = saturdays;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"gOAO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.months = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var month = (0, _interval.default)(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
var _default = month;
exports.default = _default;
var months = month.range;
exports.months = months;
},{"./interval.js":"QFUQ"}],"kReM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.years = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var year = (0, _interval.default)(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var _default = year;
exports.default = _default;
var years = year.range;
exports.years = years;
},{"./interval.js":"QFUQ"}],"O6lW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMinutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMinute = (0, _interval.default)(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getUTCMinutes();
});
var _default = utcMinute;
exports.default = _default;
var utcMinutes = utcMinute.range;
exports.utcMinutes = utcMinutes;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"qnVA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcHours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcHour = (0, _interval.default)(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getUTCHours();
});
var _default = utcHour;
exports.default = _default;
var utcHours = utcHour.range;
exports.utcHours = utcHours;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"HXiV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcDays = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcDay = (0, _interval.default)(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration.durationDay;
}, function (date) {
  return date.getUTCDate() - 1;
});
var _default = utcDay;
exports.default = _default;
var utcDays = utcDay.range;
exports.utcDays = utcDays;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"CRXo":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcSaturdays = exports.utcFridays = exports.utcThursdays = exports.utcWednesdays = exports.utcTuesdays = exports.utcMondays = exports.utcSundays = exports.utcSaturday = exports.utcFriday = exports.utcThursday = exports.utcWednesday = exports.utcTuesday = exports.utcMonday = exports.utcSunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function utcWeekday(i) {
  return (0, _interval.default)(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration.durationWeek;
  });
}

var utcSunday = utcWeekday(0);
exports.utcSunday = utcSunday;
var utcMonday = utcWeekday(1);
exports.utcMonday = utcMonday;
var utcTuesday = utcWeekday(2);
exports.utcTuesday = utcTuesday;
var utcWednesday = utcWeekday(3);
exports.utcWednesday = utcWednesday;
var utcThursday = utcWeekday(4);
exports.utcThursday = utcThursday;
var utcFriday = utcWeekday(5);
exports.utcFriday = utcFriday;
var utcSaturday = utcWeekday(6);
exports.utcSaturday = utcSaturday;
var utcSundays = utcSunday.range;
exports.utcSundays = utcSundays;
var utcMondays = utcMonday.range;
exports.utcMondays = utcMondays;
var utcTuesdays = utcTuesday.range;
exports.utcTuesdays = utcTuesdays;
var utcWednesdays = utcWednesday.range;
exports.utcWednesdays = utcWednesdays;
var utcThursdays = utcThursday.range;
exports.utcThursdays = utcThursdays;
var utcFridays = utcFriday.range;
exports.utcFridays = utcFridays;
var utcSaturdays = utcSaturday.range;
exports.utcSaturdays = utcSaturdays;
},{"./interval.js":"QFUQ","./duration.js":"Vnta"}],"EphR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMonths = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMonth = (0, _interval.default)(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
var _default = utcMonth;
exports.default = _default;
var utcMonths = utcMonth.range;
exports.utcMonths = utcMonths;
},{"./interval.js":"QFUQ"}],"Abfv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcYears = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcYear = (0, _interval.default)(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

var _default = utcYear;
exports.default = _default;
var utcYears = utcYear.range;
exports.utcYears = utcYears;
},{"./interval.js":"QFUQ"}],"hQYG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});
Object.defineProperty(exports, "timeMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "timeMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "utcMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "utcMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "timeSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "timeSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "utcSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "utcSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "timeMinute", {
  enumerable: true,
  get: function () {
    return _minute.default;
  }
});
Object.defineProperty(exports, "timeMinutes", {
  enumerable: true,
  get: function () {
    return _minute.minutes;
  }
});
Object.defineProperty(exports, "timeHour", {
  enumerable: true,
  get: function () {
    return _hour.default;
  }
});
Object.defineProperty(exports, "timeHours", {
  enumerable: true,
  get: function () {
    return _hour.hours;
  }
});
Object.defineProperty(exports, "timeDay", {
  enumerable: true,
  get: function () {
    return _day.default;
  }
});
Object.defineProperty(exports, "timeDays", {
  enumerable: true,
  get: function () {
    return _day.days;
  }
});
Object.defineProperty(exports, "timeWeek", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeWeeks", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeSunday", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeSundays", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeMonday", {
  enumerable: true,
  get: function () {
    return _week.monday;
  }
});
Object.defineProperty(exports, "timeMondays", {
  enumerable: true,
  get: function () {
    return _week.mondays;
  }
});
Object.defineProperty(exports, "timeTuesday", {
  enumerable: true,
  get: function () {
    return _week.tuesday;
  }
});
Object.defineProperty(exports, "timeTuesdays", {
  enumerable: true,
  get: function () {
    return _week.tuesdays;
  }
});
Object.defineProperty(exports, "timeWednesday", {
  enumerable: true,
  get: function () {
    return _week.wednesday;
  }
});
Object.defineProperty(exports, "timeWednesdays", {
  enumerable: true,
  get: function () {
    return _week.wednesdays;
  }
});
Object.defineProperty(exports, "timeThursday", {
  enumerable: true,
  get: function () {
    return _week.thursday;
  }
});
Object.defineProperty(exports, "timeThursdays", {
  enumerable: true,
  get: function () {
    return _week.thursdays;
  }
});
Object.defineProperty(exports, "timeFriday", {
  enumerable: true,
  get: function () {
    return _week.friday;
  }
});
Object.defineProperty(exports, "timeFridays", {
  enumerable: true,
  get: function () {
    return _week.fridays;
  }
});
Object.defineProperty(exports, "timeSaturday", {
  enumerable: true,
  get: function () {
    return _week.saturday;
  }
});
Object.defineProperty(exports, "timeSaturdays", {
  enumerable: true,
  get: function () {
    return _week.saturdays;
  }
});
Object.defineProperty(exports, "timeMonth", {
  enumerable: true,
  get: function () {
    return _month.default;
  }
});
Object.defineProperty(exports, "timeMonths", {
  enumerable: true,
  get: function () {
    return _month.months;
  }
});
Object.defineProperty(exports, "timeYear", {
  enumerable: true,
  get: function () {
    return _year.default;
  }
});
Object.defineProperty(exports, "timeYears", {
  enumerable: true,
  get: function () {
    return _year.years;
  }
});
Object.defineProperty(exports, "utcMinute", {
  enumerable: true,
  get: function () {
    return _utcMinute.default;
  }
});
Object.defineProperty(exports, "utcMinutes", {
  enumerable: true,
  get: function () {
    return _utcMinute.utcMinutes;
  }
});
Object.defineProperty(exports, "utcHour", {
  enumerable: true,
  get: function () {
    return _utcHour.default;
  }
});
Object.defineProperty(exports, "utcHours", {
  enumerable: true,
  get: function () {
    return _utcHour.utcHours;
  }
});
Object.defineProperty(exports, "utcDay", {
  enumerable: true,
  get: function () {
    return _utcDay.default;
  }
});
Object.defineProperty(exports, "utcDays", {
  enumerable: true,
  get: function () {
    return _utcDay.utcDays;
  }
});
Object.defineProperty(exports, "utcWeek", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcWeeks", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcSunday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcSundays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcMonday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMonday;
  }
});
Object.defineProperty(exports, "utcMondays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMondays;
  }
});
Object.defineProperty(exports, "utcTuesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesday;
  }
});
Object.defineProperty(exports, "utcTuesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesdays;
  }
});
Object.defineProperty(exports, "utcWednesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesday;
  }
});
Object.defineProperty(exports, "utcWednesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesdays;
  }
});
Object.defineProperty(exports, "utcThursday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursday;
  }
});
Object.defineProperty(exports, "utcThursdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursdays;
  }
});
Object.defineProperty(exports, "utcFriday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFriday;
  }
});
Object.defineProperty(exports, "utcFridays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFridays;
  }
});
Object.defineProperty(exports, "utcSaturday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturday;
  }
});
Object.defineProperty(exports, "utcSaturdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturdays;
  }
});
Object.defineProperty(exports, "utcMonth", {
  enumerable: true,
  get: function () {
    return _utcMonth.default;
  }
});
Object.defineProperty(exports, "utcMonths", {
  enumerable: true,
  get: function () {
    return _utcMonth.utcMonths;
  }
});
Object.defineProperty(exports, "utcYear", {
  enumerable: true,
  get: function () {
    return _utcYear.default;
  }
});
Object.defineProperty(exports, "utcYears", {
  enumerable: true,
  get: function () {
    return _utcYear.utcYears;
  }
});

var _interval = _interopRequireDefault(require("./interval.js"));

var _millisecond = _interopRequireWildcard(require("./millisecond.js"));

var _second = _interopRequireWildcard(require("./second.js"));

var _minute = _interopRequireWildcard(require("./minute.js"));

var _hour = _interopRequireWildcard(require("./hour.js"));

var _day = _interopRequireWildcard(require("./day.js"));

var _week = require("./week.js");

var _month = _interopRequireWildcard(require("./month.js"));

var _year = _interopRequireWildcard(require("./year.js"));

var _utcMinute = _interopRequireWildcard(require("./utcMinute.js"));

var _utcHour = _interopRequireWildcard(require("./utcHour.js"));

var _utcDay = _interopRequireWildcard(require("./utcDay.js"));

var _utcWeek = require("./utcWeek.js");

var _utcMonth = _interopRequireWildcard(require("./utcMonth.js"));

var _utcYear = _interopRequireWildcard(require("./utcYear.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./interval.js":"QFUQ","./millisecond.js":"WVmH","./second.js":"AYLw","./minute.js":"etD9","./hour.js":"py4n","./day.js":"LWrz","./week.js":"Dweu","./month.js":"gOAO","./year.js":"kReM","./utcMinute.js":"O6lW","./utcHour.js":"qnVA","./utcDay.js":"HXiV","./utcWeek.js":"CRXo","./utcMonth.js":"EphR","./utcYear.js":"Abfv"}],"UbHU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatLocale;

var _d3Time = require("d3-time");

function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {
    y: y,
    m: m,
    d: d,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function (string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.

      if (Z && !("Z" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.

      if (d.m === undefined) d.m = "q" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? _d3Time.utcMonday.ceil(week) : (0, _d3Time.utcMonday)(week);
          week = _d3Time.utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? _d3Time.timeMonday.ceil(week) : (0, _d3Time.timeMonday)(week);
          week = _d3Time.timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function (specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function (specifier) {
      var p = newParse(specifier += "", false);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function (specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function (specifier) {
      var p = newParse(specifier += "", true);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}

var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {},
      i = -1,
      n = names.length;

  while (++i < n) map[names[i].toLowerCase()] = i;

  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + _d3Time.timeDay.count((0, _d3Time.timeYear)(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(_d3Time.timeSunday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.timeThursday)(d) : _d3Time.timeThursday.ceil(d);
  return pad(_d3Time.timeThursday.count((0, _d3Time.timeYear)(d), d) + ((0, _d3Time.timeYear)(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(_d3Time.timeMonday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + _d3Time.utcDay.count((0, _d3Time.utcYear)(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(_d3Time.utcSunday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.utcThursday)(d) : _d3Time.utcThursday.ceil(d);
  return pad(_d3Time.utcThursday.count((0, _d3Time.utcYear)(d), d) + ((0, _d3Time.utcYear)(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(_d3Time.utcMonday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}
},{"d3-time":"hQYG"}],"csjH":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var timeFormat;
exports.timeFormat = timeFormat;
var timeParse;
exports.timeParse = timeParse;
var utcFormat;
exports.utcFormat = utcFormat;
var utcParse;
exports.utcParse = utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.timeFormat = timeFormat = locale.format;
  exports.timeParse = timeParse = locale.parse;
  exports.utcFormat = utcFormat = locale.utcFormat;
  exports.utcParse = utcParse = locale.utcParse;
  return locale;
}
},{"./locale.js":"UbHU"}],"PKKZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isoSpecifier = void 0;

var _defaultLocale = require("./defaultLocale.js");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
exports.isoSpecifier = isoSpecifier;

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = formatIso;
exports.default = _default;
},{"./defaultLocale.js":"csjH"}],"d4jk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isoFormat = require("./isoFormat.js");

var _defaultLocale = require("./defaultLocale.js");

function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = parseIso;
exports.default = _default;
},{"./isoFormat.js":"PKKZ","./defaultLocale.js":"csjH"}],"UYpZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "timeFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeFormat;
  }
});
Object.defineProperty(exports, "timeParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeParse;
  }
});
Object.defineProperty(exports, "utcFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcFormat;
  }
});
Object.defineProperty(exports, "utcParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcParse;
  }
});
Object.defineProperty(exports, "timeFormatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "isoFormat", {
  enumerable: true,
  get: function () {
    return _isoFormat.default;
  }
});
Object.defineProperty(exports, "isoParse", {
  enumerable: true,
  get: function () {
    return _isoParse.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _isoFormat = _interopRequireDefault(require("./isoFormat.js"));

var _isoParse = _interopRequireDefault(require("./isoParse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"csjH","./locale.js":"UbHU","./isoFormat.js":"PKKZ","./isoParse.js":"d4jk"}],"kVXt":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calendar = calendar;
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Time = require("d3-time");

var _d3TimeFormat = require("d3-time-format");

var _array = require("./array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _nice = _interopRequireDefault(require("./nice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");
  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.

    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = (0, _d3Array.bisector)(function (i) {
        return i[2];
      }).right(tickIntervals, target);

      if (i === tickIntervals.length) {
        step = (0, _d3Array.tickStep)(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max((0, _d3Array.tickStep)(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(_array.map.call(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop

    return r ? t.reverse() : t;
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain((0, _nice.default)(d, interval)) : scale;
  };

  scale.copy = function () {
    return (0, _continuous.copy)(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}

function _default() {
  return _init.initRange.apply(calendar(_d3Time.timeYear, _d3Time.timeMonth, _d3Time.timeWeek, _d3Time.timeDay, _d3Time.timeHour, _d3Time.timeMinute, _d3Time.timeSecond, _d3Time.timeMillisecond, _d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}
},{"d3-array":"K0bd","d3-time":"hQYG","d3-time-format":"UYpZ","./array":"qoMs","./continuous":"CjJ5","./init":"buZa","./nice":"eMTM"}],"WrbA":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _time = require("./time");

var _d3TimeFormat = require("d3-time-format");

var _d3Time = require("d3-time");

var _init = require("./init");

function _default() {
  return _init.initRange.apply((0, _time.calendar)(_d3Time.utcYear, _d3Time.utcMonth, _d3Time.utcWeek, _d3Time.utcDay, _d3Time.utcHour, _d3Time.utcMinute, _d3Time.utcSecond, _d3Time.utcMillisecond, _d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}
},{"./time":"kVXt","d3-time-format":"UYpZ","d3-time":"hQYG","./init":"buZa"}],"J7VY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialSymlog = sequentialSymlog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous.identity,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}

function sequential() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = (0, _log.loggish)(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"CjJ5","./init":"buZa","./linear":"LIJk","./log":"ea59","./symlog":"nanU","./pow":"xeRN"}],"XYTZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sequentialQuantile;

var _d3Array = require("d3-array");

var _continuous = require("./continuous");

var _init = require("./init");

function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous.identity;

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator(((0, _d3Array.bisect)(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init.initInterpolator.apply(scale, arguments);
}
},{"d3-array":"K0bd","./continuous":"CjJ5","./init":"buZa"}],"CLse":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingSymlog = divergingSymlog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _sequential = require("./sequential");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous.identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return (0, _sequential.copy)(scale, diverging());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = (0, _log.loggish)(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"CjJ5","./init":"buZa","./linear":"LIJk","./log":"ea59","./sequential":"J7VY","./symlog":"nanU","./pow":"xeRN"}],"zL2z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "scaleBand", {
  enumerable: true,
  get: function () {
    return _band.default;
  }
});
Object.defineProperty(exports, "scalePoint", {
  enumerable: true,
  get: function () {
    return _band.point;
  }
});
Object.defineProperty(exports, "scaleIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "scaleLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "scaleLog", {
  enumerable: true,
  get: function () {
    return _log.default;
  }
});
Object.defineProperty(exports, "scaleSymlog", {
  enumerable: true,
  get: function () {
    return _symlog.default;
  }
});
Object.defineProperty(exports, "scaleOrdinal", {
  enumerable: true,
  get: function () {
    return _ordinal.default;
  }
});
Object.defineProperty(exports, "scaleImplicit", {
  enumerable: true,
  get: function () {
    return _ordinal.implicit;
  }
});
Object.defineProperty(exports, "scalePow", {
  enumerable: true,
  get: function () {
    return _pow.default;
  }
});
Object.defineProperty(exports, "scaleSqrt", {
  enumerable: true,
  get: function () {
    return _pow.sqrt;
  }
});
Object.defineProperty(exports, "scaleQuantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "scaleQuantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});
Object.defineProperty(exports, "scaleThreshold", {
  enumerable: true,
  get: function () {
    return _threshold.default;
  }
});
Object.defineProperty(exports, "scaleTime", {
  enumerable: true,
  get: function () {
    return _time.default;
  }
});
Object.defineProperty(exports, "scaleUtc", {
  enumerable: true,
  get: function () {
    return _utcTime.default;
  }
});
Object.defineProperty(exports, "scaleSequential", {
  enumerable: true,
  get: function () {
    return _sequential.default;
  }
});
Object.defineProperty(exports, "scaleSequentialLog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialLog;
  }
});
Object.defineProperty(exports, "scaleSequentialPow", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialPow;
  }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSqrt;
  }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSymlog;
  }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
  enumerable: true,
  get: function () {
    return _sequentialQuantile.default;
  }
});
Object.defineProperty(exports, "scaleDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "scaleDivergingLog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingLog;
  }
});
Object.defineProperty(exports, "scaleDivergingPow", {
  enumerable: true,
  get: function () {
    return _diverging.divergingPow;
  }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSqrt;
  }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSymlog;
  }
});
Object.defineProperty(exports, "tickFormat", {
  enumerable: true,
  get: function () {
    return _tickFormat.default;
  }
});

var _band = _interopRequireWildcard(require("./band"));

var _identity = _interopRequireDefault(require("./identity"));

var _linear = _interopRequireDefault(require("./linear"));

var _log = _interopRequireDefault(require("./log"));

var _symlog = _interopRequireDefault(require("./symlog"));

var _ordinal = _interopRequireWildcard(require("./ordinal"));

var _pow = _interopRequireWildcard(require("./pow"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _quantize = _interopRequireDefault(require("./quantize"));

var _threshold = _interopRequireDefault(require("./threshold"));

var _time = _interopRequireDefault(require("./time"));

var _utcTime = _interopRequireDefault(require("./utcTime"));

var _sequential = _interopRequireWildcard(require("./sequential"));

var _sequentialQuantile = _interopRequireDefault(require("./sequentialQuantile"));

var _diverging = _interopRequireWildcard(require("./diverging"));

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./band":"BAgl","./identity":"FKHe","./linear":"LIJk","./log":"ea59","./symlog":"nanU","./ordinal":"GjLX","./pow":"xeRN","./quantile":"AGCd","./quantize":"d6Xk","./threshold":"I63C","./time":"kVXt","./utcTime":"WrbA","./sequential":"J7VY","./sequentialQuantile":"XYTZ","./diverging":"CLse","./tickFormat":"qjRa"}],"xz73":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);

  return colors;
}
},{}],"dTYe":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

exports.default = _default;
},{"../colors.js":"xz73"}],"o8vx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

exports.default = _default;
},{"../colors.js":"xz73"}],"regV":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

exports.default = _default;
},{"../colors.js":"xz73"}],"E9sC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

exports.default = _default;
},{"../colors.js":"xz73"}],"RCRU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

exports.default = _default;
},{"../colors.js":"xz73"}],"QfGF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

exports.default = _default;
},{"../colors.js":"xz73"}],"IldB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

exports.default = _default;
},{"../colors.js":"xz73"}],"KR9o":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

exports.default = _default;
},{"../colors.js":"xz73"}],"XNXw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

exports.default = _default;
},{"../colors.js":"xz73"}],"FyyB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

exports.default = _default;
},{"../colors.js":"xz73"}],"MNyl":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

function _default(scheme) {
  return (0, _d3Interpolate.interpolateRgbBasis)(scheme[scheme.length - 1]);
}
},{"d3-interpolate":"k9aH"}],"ArEB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"kzYK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"PI8x":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"h8TC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"i3rG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"WaJg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"JvsS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"K9lw":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"rXym":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"KGBO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"lAoh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"ZoIf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"SiOD":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"vp6S":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"Wfss":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"NZPG":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"fzkB":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"fL1Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"xEGO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"BmdO":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"SHo5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"jpg6":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"rjqF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"x8Iu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"MJdW":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"DiEh":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"O9hI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"xz73","../ramp.js":"MNyl"}],"SaPT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";
}
},{}],"cI87":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var _default = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(300, 0.5, 0.0), (0, _d3Color.cubehelix)(-240, 0.5, 1.0));

exports.default = _default;
},{"d3-color":"Peej","d3-interpolate":"k9aH"}],"BkJF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.cool = exports.warm = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var warm = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(-100, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.warm = warm;
var cool = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(260, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.cool = cool;
var c = (0, _d3Color.cubehelix)();

function _default(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}
},{"d3-color":"Peej","d3-interpolate":"k9aH"}],"ZXMu":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var c = (0, _d3Color.rgb)(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

function _default(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
}
},{"d3-color":"Peej"}],"PX18":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";
}
},{}],"SfG7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plasma = exports.inferno = exports.magma = exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

var _default = ramp((0, _colors.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

exports.default = _default;
var magma = ramp((0, _colors.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
exports.magma = magma;
var inferno = ramp((0, _colors.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
exports.inferno = inferno;
var plasma = ramp((0, _colors.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
exports.plasma = plasma;
},{"../colors.js":"xz73"}],"ado2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "schemeCategory10", {
  enumerable: true,
  get: function () {
    return _category.default;
  }
});
Object.defineProperty(exports, "schemeAccent", {
  enumerable: true,
  get: function () {
    return _Accent.default;
  }
});
Object.defineProperty(exports, "schemeDark2", {
  enumerable: true,
  get: function () {
    return _Dark.default;
  }
});
Object.defineProperty(exports, "schemePaired", {
  enumerable: true,
  get: function () {
    return _Paired.default;
  }
});
Object.defineProperty(exports, "schemePastel1", {
  enumerable: true,
  get: function () {
    return _Pastel.default;
  }
});
Object.defineProperty(exports, "schemePastel2", {
  enumerable: true,
  get: function () {
    return _Pastel2.default;
  }
});
Object.defineProperty(exports, "schemeSet1", {
  enumerable: true,
  get: function () {
    return _Set.default;
  }
});
Object.defineProperty(exports, "schemeSet2", {
  enumerable: true,
  get: function () {
    return _Set2.default;
  }
});
Object.defineProperty(exports, "schemeSet3", {
  enumerable: true,
  get: function () {
    return _Set3.default;
  }
});
Object.defineProperty(exports, "schemeTableau10", {
  enumerable: true,
  get: function () {
    return _Tableau.default;
  }
});
Object.defineProperty(exports, "interpolateBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.default;
  }
});
Object.defineProperty(exports, "schemeBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.default;
  }
});
Object.defineProperty(exports, "schemePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.default;
  }
});
Object.defineProperty(exports, "schemePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.default;
  }
});
Object.defineProperty(exports, "schemePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.default;
  }
});
Object.defineProperty(exports, "schemeRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.default;
  }
});
Object.defineProperty(exports, "schemeRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.default;
  }
});
Object.defineProperty(exports, "schemeRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.default;
  }
});
Object.defineProperty(exports, "schemeRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.default;
  }
});
Object.defineProperty(exports, "schemeSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.default;
  }
});
Object.defineProperty(exports, "schemeBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.default;
  }
});
Object.defineProperty(exports, "schemeBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.default;
  }
});
Object.defineProperty(exports, "schemeGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.default;
  }
});
Object.defineProperty(exports, "schemeOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.default;
  }
});
Object.defineProperty(exports, "schemePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.default;
  }
});
Object.defineProperty(exports, "schemePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.default;
  }
});
Object.defineProperty(exports, "schemePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.default;
  }
});
Object.defineProperty(exports, "schemeRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.default;
  }
});
Object.defineProperty(exports, "schemeYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.default;
  }
});
Object.defineProperty(exports, "schemeYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.default;
  }
});
Object.defineProperty(exports, "schemeYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.default;
  }
});
Object.defineProperty(exports, "schemeYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateBlues", {
  enumerable: true,
  get: function () {
    return _Blues.default;
  }
});
Object.defineProperty(exports, "schemeBlues", {
  enumerable: true,
  get: function () {
    return _Blues.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreens", {
  enumerable: true,
  get: function () {
    return _Greens.default;
  }
});
Object.defineProperty(exports, "schemeGreens", {
  enumerable: true,
  get: function () {
    return _Greens.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreys", {
  enumerable: true,
  get: function () {
    return _Greys.default;
  }
});
Object.defineProperty(exports, "schemeGreys", {
  enumerable: true,
  get: function () {
    return _Greys.scheme;
  }
});
Object.defineProperty(exports, "interpolatePurples", {
  enumerable: true,
  get: function () {
    return _Purples.default;
  }
});
Object.defineProperty(exports, "schemePurples", {
  enumerable: true,
  get: function () {
    return _Purples.scheme;
  }
});
Object.defineProperty(exports, "interpolateReds", {
  enumerable: true,
  get: function () {
    return _Reds.default;
  }
});
Object.defineProperty(exports, "schemeReds", {
  enumerable: true,
  get: function () {
    return _Reds.scheme;
  }
});
Object.defineProperty(exports, "interpolateOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.default;
  }
});
Object.defineProperty(exports, "schemeOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.scheme;
  }
});
Object.defineProperty(exports, "interpolateCividis", {
  enumerable: true,
  get: function () {
    return _cividis.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixDefault", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateRainbow", {
  enumerable: true,
  get: function () {
    return _rainbow.default;
  }
});
Object.defineProperty(exports, "interpolateWarm", {
  enumerable: true,
  get: function () {
    return _rainbow.warm;
  }
});
Object.defineProperty(exports, "interpolateCool", {
  enumerable: true,
  get: function () {
    return _rainbow.cool;
  }
});
Object.defineProperty(exports, "interpolateSinebow", {
  enumerable: true,
  get: function () {
    return _sinebow.default;
  }
});
Object.defineProperty(exports, "interpolateTurbo", {
  enumerable: true,
  get: function () {
    return _turbo.default;
  }
});
Object.defineProperty(exports, "interpolateViridis", {
  enumerable: true,
  get: function () {
    return _viridis.default;
  }
});
Object.defineProperty(exports, "interpolateMagma", {
  enumerable: true,
  get: function () {
    return _viridis.magma;
  }
});
Object.defineProperty(exports, "interpolateInferno", {
  enumerable: true,
  get: function () {
    return _viridis.inferno;
  }
});
Object.defineProperty(exports, "interpolatePlasma", {
  enumerable: true,
  get: function () {
    return _viridis.plasma;
  }
});

var _category = _interopRequireDefault(require("./categorical/category10.js"));

var _Accent = _interopRequireDefault(require("./categorical/Accent.js"));

var _Dark = _interopRequireDefault(require("./categorical/Dark2.js"));

var _Paired = _interopRequireDefault(require("./categorical/Paired.js"));

var _Pastel = _interopRequireDefault(require("./categorical/Pastel1.js"));

var _Pastel2 = _interopRequireDefault(require("./categorical/Pastel2.js"));

var _Set = _interopRequireDefault(require("./categorical/Set1.js"));

var _Set2 = _interopRequireDefault(require("./categorical/Set2.js"));

var _Set3 = _interopRequireDefault(require("./categorical/Set3.js"));

var _Tableau = _interopRequireDefault(require("./categorical/Tableau10.js"));

var _BrBG = _interopRequireWildcard(require("./diverging/BrBG.js"));

var _PRGn = _interopRequireWildcard(require("./diverging/PRGn.js"));

var _PiYG = _interopRequireWildcard(require("./diverging/PiYG.js"));

var _PuOr = _interopRequireWildcard(require("./diverging/PuOr.js"));

var _RdBu = _interopRequireWildcard(require("./diverging/RdBu.js"));

var _RdGy = _interopRequireWildcard(require("./diverging/RdGy.js"));

var _RdYlBu = _interopRequireWildcard(require("./diverging/RdYlBu.js"));

var _RdYlGn = _interopRequireWildcard(require("./diverging/RdYlGn.js"));

var _Spectral = _interopRequireWildcard(require("./diverging/Spectral.js"));

var _BuGn = _interopRequireWildcard(require("./sequential-multi/BuGn.js"));

var _BuPu = _interopRequireWildcard(require("./sequential-multi/BuPu.js"));

var _GnBu = _interopRequireWildcard(require("./sequential-multi/GnBu.js"));

var _OrRd = _interopRequireWildcard(require("./sequential-multi/OrRd.js"));

var _PuBuGn = _interopRequireWildcard(require("./sequential-multi/PuBuGn.js"));

var _PuBu = _interopRequireWildcard(require("./sequential-multi/PuBu.js"));

var _PuRd = _interopRequireWildcard(require("./sequential-multi/PuRd.js"));

var _RdPu = _interopRequireWildcard(require("./sequential-multi/RdPu.js"));

var _YlGnBu = _interopRequireWildcard(require("./sequential-multi/YlGnBu.js"));

var _YlGn = _interopRequireWildcard(require("./sequential-multi/YlGn.js"));

var _YlOrBr = _interopRequireWildcard(require("./sequential-multi/YlOrBr.js"));

var _YlOrRd = _interopRequireWildcard(require("./sequential-multi/YlOrRd.js"));

var _Blues = _interopRequireWildcard(require("./sequential-single/Blues.js"));

var _Greens = _interopRequireWildcard(require("./sequential-single/Greens.js"));

var _Greys = _interopRequireWildcard(require("./sequential-single/Greys.js"));

var _Purples = _interopRequireWildcard(require("./sequential-single/Purples.js"));

var _Reds = _interopRequireWildcard(require("./sequential-single/Reds.js"));

var _Oranges = _interopRequireWildcard(require("./sequential-single/Oranges.js"));

var _cividis = _interopRequireDefault(require("./sequential-multi/cividis.js"));

var _cubehelix = _interopRequireDefault(require("./sequential-multi/cubehelix.js"));

var _rainbow = _interopRequireWildcard(require("./sequential-multi/rainbow.js"));

var _sinebow = _interopRequireDefault(require("./sequential-multi/sinebow.js"));

var _turbo = _interopRequireDefault(require("./sequential-multi/turbo.js"));

var _viridis = _interopRequireWildcard(require("./sequential-multi/viridis.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./categorical/category10.js":"dTYe","./categorical/Accent.js":"o8vx","./categorical/Dark2.js":"regV","./categorical/Paired.js":"E9sC","./categorical/Pastel1.js":"RCRU","./categorical/Pastel2.js":"QfGF","./categorical/Set1.js":"IldB","./categorical/Set2.js":"KR9o","./categorical/Set3.js":"XNXw","./categorical/Tableau10.js":"FyyB","./diverging/BrBG.js":"ArEB","./diverging/PRGn.js":"kzYK","./diverging/PiYG.js":"PI8x","./diverging/PuOr.js":"h8TC","./diverging/RdBu.js":"i3rG","./diverging/RdGy.js":"WaJg","./diverging/RdYlBu.js":"JvsS","./diverging/RdYlGn.js":"K9lw","./diverging/Spectral.js":"rXym","./sequential-multi/BuGn.js":"KGBO","./sequential-multi/BuPu.js":"lAoh","./sequential-multi/GnBu.js":"ZoIf","./sequential-multi/OrRd.js":"SiOD","./sequential-multi/PuBuGn.js":"vp6S","./sequential-multi/PuBu.js":"Wfss","./sequential-multi/PuRd.js":"NZPG","./sequential-multi/RdPu.js":"fzkB","./sequential-multi/YlGnBu.js":"fL1Z","./sequential-multi/YlGn.js":"xEGO","./sequential-multi/YlOrBr.js":"BmdO","./sequential-multi/YlOrRd.js":"SHo5","./sequential-single/Blues.js":"jpg6","./sequential-single/Greens.js":"rjqF","./sequential-single/Greys.js":"x8Iu","./sequential-single/Purples.js":"MJdW","./sequential-single/Reds.js":"DiEh","./sequential-single/Oranges.js":"O9hI","./sequential-multi/cividis.js":"SaPT","./sequential-multi/cubehelix.js":"cI87","./sequential-multi/rainbow.js":"BkJF","./sequential-multi/sinebow.js":"ZXMu","./sequential-multi/turbo.js":"PX18","./sequential-multi/viridis.js":"SfG7"}],"ezXE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function constant() {
    return x;
  };
}
},{}],"kIKs":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.halfPi = exports.pi = exports.epsilon = exports.sqrt = exports.sin = exports.min = exports.max = exports.cos = exports.atan2 = exports.abs = void 0;
var abs = Math.abs;
exports.abs = abs;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var max = Math.max;
exports.max = max;
var min = Math.min;
exports.min = min;
var sin = Math.sin;
exports.sin = sin;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var epsilon = 1e-12;
exports.epsilon = epsilon;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = 2 * pi;
exports.tau = tau;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}
},{}],"BL7I":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math.epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

function _default() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = (0, _constant.default)(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math.halfPi,
        a1 = endAngle.apply(this, arguments) - _math.halfPi,
        da = (0, _math.abs)(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = (0, _d3Path.path)(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math.epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math.tau - _math.epsilon) {
        context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math.epsilon) {
          context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)),
              rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math.epsilon) {
            var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)),
                p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
            if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * (0, _math.cos)(a01),
              y01 = r1 * (0, _math.sin)(a01),
              x10 = r0 * (0, _math.cos)(a10),
              y10 = r0 * (0, _math.sin)(a10); // Apply rounded corners?

          if (rc > _math.epsilon) {
            var x11 = r1 * (0, _math.cos)(a11),
                y11 = r1 * (0, _math.sin)(a11),
                x00 = r0 * (0, _math.cos)(a00),
                y00 = r0 * (0, _math.sin)(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2),
                  lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
              rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math.epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math.epsilon) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math.epsilon) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
    return [(0, _math.cos)(a) * r, (0, _math.sin)(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
}
},{"d3-path":"OTyq","./constant.js":"ezXE","./math.js":"kIKs"}],"L3Qx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};

function _default(context) {
  return new Linear(context);
}
},{}],"LnI9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}
},{}],"KhHE":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}
},{"d3-path":"OTyq","./constant.js":"ezXE","./curve/linear.js":"L3Qx","./point.js":"LnI9"}],"IYvJ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = _point.x,
      x1 = null,
      y0 = (0, _constant.default)(0),
      y1 = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return (0, _line.default)().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}
},{"d3-path":"OTyq","./constant.js":"ezXE","./curve/linear.js":"L3Qx","./line.js":"KhHE","./point.js":"LnI9"}],"idkR":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(d) {
  return d;
}
},{}],"bAZU":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

var _descending = _interopRequireDefault(require("./descending.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      sortValues = _descending.default,
      sort = null,
      startAngle = (0, _constant.default)(0),
      endAngle = (0, _constant.default)(_math.tau),
      padAngle = (0, _constant.default)(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
  };

  return pie;
}
},{"./constant.js":"ezXE","./descending.js":"fBAz","./identity.js":"idkR","./math.js":"kIKs"}],"LARK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = curveRadial;
exports.curveRadialLinear = void 0;

var _linear = _interopRequireDefault(require("./linear.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var curveRadialLinear = curveRadial(_linear.default);
exports.curveRadialLinear = curveRadialLinear;

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function () {
    this._curve.areaStart();
  },
  areaEnd: function () {
    this._curve.areaEnd();
  },
  lineStart: function () {
    this._curve.lineStart();
  },
  lineEnd: function () {
    this._curve.lineEnd();
  },
  point: function (a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}
},{"./linear.js":"L3Qx"}],"faWF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lineRadial = lineRadial;
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _line = _interopRequireDefault(require("./line.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return l;
}

function _default() {
  return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}
},{"./curve/radial.js":"LARK","./line.js":"KhHE"}],"T5gn":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _lineRadial = require("./lineRadial.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var a = (0, _area.default)().curve(_radial.curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return (0, _lineRadial.lineRadial)(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return (0, _lineRadial.lineRadial)(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return (0, _lineRadial.lineRadial)(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return (0, _lineRadial.lineRadial)(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return a;
}
},{"./curve/radial.js":"LARK","./area.js":"IYvJ","./lineRadial.js":"faWF"}],"vzjT":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}
},{}],"npGN":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkHorizontal = linkHorizontal;
exports.linkVertical = linkVertical;
exports.linkRadial = linkRadial;

var _d3Path = require("d3-path");

var _array = require("../array.js");

var _constant = _interopRequireDefault(require("../constant.js"));

var _point = require("../point.js");

var _pointRadial = _interopRequireDefault(require("../pointRadial.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point.x,
      y = _point.y,
      context = null;

  function link() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);

    if (!context) context = buffer = (0, _d3Path.path)();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = (0, _pointRadial.default)(x0, y0),
      p1 = (0, _pointRadial.default)(x0, y0 = (y0 + y1) / 2),
      p2 = (0, _pointRadial.default)(x1, y0),
      p3 = (0, _pointRadial.default)(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}
},{"d3-path":"OTyq","../array.js":"KXlw","../constant.js":"ezXE","../point.js":"LnI9","../pointRadial.js":"vzjT"}],"zjv7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / _math.pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math.tau);
  }
};
exports.default = _default;
},{"../math.js":"kIKs"}],"PTh9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
};
exports.default = _default;
},{}],"fuDX":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
var _default = {
  draw: function (context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
};
exports.default = _default;
},{}],"L5Ql":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math.pi / 10) / Math.sin(7 * _math.pi / 10),
    kx = Math.sin(_math.tau / 10) * kr,
    ky = -Math.cos(_math.tau / 10) * kr;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math.tau * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
};
exports.default = _default;
},{"../math.js":"kIKs"}],"bj9s":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
};
exports.default = _default;
},{}],"owZx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var sqrt3 = Math.sqrt(3);
var _default = {
  draw: function (context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
};
exports.default = _default;
},{}],"UZQY":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
};
exports.default = _default;
},{}],"bBhM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.symbols = void 0;

var _d3Path = require("d3-path");

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var symbols = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default];
exports.symbols = symbols;

function _default() {
  var type = (0, _constant.default)(_circle.default),
      size = (0, _constant.default)(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = (0, _d3Path.path)();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}
},{"d3-path":"OTyq","./symbol/circle.js":"zjv7","./symbol/cross.js":"PTh9","./symbol/diamond.js":"fuDX","./symbol/star.js":"L5Ql","./symbol/square.js":"bj9s","./symbol/triangle.js":"owZx","./symbol/wye.js":"UZQY","./constant.js":"ezXE"}],"cx05":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Basis = Basis;
exports.default = _default;

function point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new Basis(context);
}
},{}],"FS5M":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

var _basis = require("./basis.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisClosed(context);
}
},{"../noop.js":"zOhu","./basis.js":"cx05"}],"feGb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisOpen(context);
}
},{"./basis.js":"cx05"}],"iAgm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basis = require("./basis.js");

function Bundle(context, beta) {
  this._basis = new _basis.Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function () {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};

var _default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
}(0.85);

exports.default = _default;
},{"./basis.js":"cx05"}],"DORS":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Cardinal = Cardinal;
exports.default = void 0;

function point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        point(this, this._x1, this._y1);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{}],"FUQi":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

var _cardinal = require("./cardinal.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"../noop.js":"zOhu","./cardinal.js":"DORS"}],"iWbK":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;

var _cardinal = require("./cardinal.js");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"./cardinal.js":"DORS"}],"oFi9":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.default = void 0;

var _math = require("../math.js");

var _cardinal = require("./cardinal.js");

function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math.epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math.epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"../math.js":"kIKs","./cardinal.js":"DORS"}],"AW0P":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalClosed = require("./cardinalClosed.js");

var _noop = _interopRequireDefault(require("../noop.js"));

var _catmullRom = require("./catmullRom.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalClosed.js":"FUQi","../noop.js":"zOhu","./catmullRom.js":"oFi9"}],"PGVM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalOpen = require("./cardinalOpen.js");

var _catmullRom = require("./catmullRom.js");

function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalOpen.js":"iWbK","./catmullRom.js":"oFi9"}],"c2vC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._point) this._context.closePath();
  },
  point: function (x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};

function _default(context) {
  return new LinearClosed(context);
}
},{"../noop.js":"zOhu"}],"DNx2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;

function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        point(this, this._t0, slope2(this, this._t0));
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        point(this, slope2(this, t1 = slope3(this, x, y)), t1);
        break;

      default:
        point(this, this._t0, t1 = slope3(this, x, y));
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function (x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function () {
    this._context.closePath();
  },
  lineTo: function (x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}
},{}],"qyH2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = [];
    this._y = [];
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];

  return [a, b];
}

function _default(context) {
  return new Natural(context);
}
},{}],"SIad":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.stepBefore = stepBefore;
exports.stepAfter = stepAfter;

function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};

function _default(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}
},{}],"jW6Y":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}
},{}],"NTwk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) o[n] = n;

  return o;
}
},{}],"k9Ur":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stackValue(d, key) {
  return d[key];
}

function _default() {
  var keys = (0, _constant.default)([]),
      order = _none2.default,
      offset = _none.default,
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }

      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
  };

  return stack;
}
},{"./array.js":"KXlw","./constant.js":"ezXE","./offset/none.js":"jW6Y","./order/none.js":"NTwk"}],"WOsM":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;

    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"jW6Y"}],"PS7K":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}
},{}],"UGaf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;

    s0[j][1] += s0[j][0] = -y / 2;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"jW6Y"}],"zv8R":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  (0, _none.default)(series, order);
}
},{"./none.js":"jW6Y"}],"Uz9Z":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var peaks = series.map(peak);
  return (0, _none.default)(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
}

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;

  return j;
}
},{"./none.js":"NTwk"}],"Z1jP":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.sum = sum;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var sums = series.map(sum);
  return (0, _none.default)(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
}

function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) if (v = +series[i][1]) s += v;

  return s;
}
},{"./none.js":"NTwk"}],"oyxb":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _ascending.default)(series).reverse();
}
},{"./ascending.js":"Z1jP"}],"cmz2":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _appearance = _interopRequireDefault(require("./appearance.js"));

var _ascending = require("./ascending.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending.sum),
      order = (0, _appearance.default)(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}
},{"./appearance.js":"Uz9Z","./ascending.js":"Z1jP"}],"MoW7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _none.default)(series).reverse();
}
},{"./none.js":"NTwk"}],"maww":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "arc", {
  enumerable: true,
  get: function () {
    return _arc.default;
  }
});
Object.defineProperty(exports, "area", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "line", {
  enumerable: true,
  get: function () {
    return _line.default;
  }
});
Object.defineProperty(exports, "pie", {
  enumerable: true,
  get: function () {
    return _pie.default;
  }
});
Object.defineProperty(exports, "areaRadial", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "radialArea", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "lineRadial", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "radialLine", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "pointRadial", {
  enumerable: true,
  get: function () {
    return _pointRadial.default;
  }
});
Object.defineProperty(exports, "linkHorizontal", {
  enumerable: true,
  get: function () {
    return _index.linkHorizontal;
  }
});
Object.defineProperty(exports, "linkVertical", {
  enumerable: true,
  get: function () {
    return _index.linkVertical;
  }
});
Object.defineProperty(exports, "linkRadial", {
  enumerable: true,
  get: function () {
    return _index.linkRadial;
  }
});
Object.defineProperty(exports, "symbol", {
  enumerable: true,
  get: function () {
    return _symbol.default;
  }
});
Object.defineProperty(exports, "symbols", {
  enumerable: true,
  get: function () {
    return _symbol.symbols;
  }
});
Object.defineProperty(exports, "symbolCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "symbolCross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "symbolDiamond", {
  enumerable: true,
  get: function () {
    return _diamond.default;
  }
});
Object.defineProperty(exports, "symbolSquare", {
  enumerable: true,
  get: function () {
    return _square.default;
  }
});
Object.defineProperty(exports, "symbolStar", {
  enumerable: true,
  get: function () {
    return _star.default;
  }
});
Object.defineProperty(exports, "symbolTriangle", {
  enumerable: true,
  get: function () {
    return _triangle.default;
  }
});
Object.defineProperty(exports, "symbolWye", {
  enumerable: true,
  get: function () {
    return _wye.default;
  }
});
Object.defineProperty(exports, "curveBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "curveBasisOpen", {
  enumerable: true,
  get: function () {
    return _basisOpen.default;
  }
});
Object.defineProperty(exports, "curveBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "curveBundle", {
  enumerable: true,
  get: function () {
    return _bundle.default;
  }
});
Object.defineProperty(exports, "curveCardinalClosed", {
  enumerable: true,
  get: function () {
    return _cardinalClosed.default;
  }
});
Object.defineProperty(exports, "curveCardinalOpen", {
  enumerable: true,
  get: function () {
    return _cardinalOpen.default;
  }
});
Object.defineProperty(exports, "curveCardinal", {
  enumerable: true,
  get: function () {
    return _cardinal.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
  enumerable: true,
  get: function () {
    return _catmullRomClosed.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
  enumerable: true,
  get: function () {
    return _catmullRomOpen.default;
  }
});
Object.defineProperty(exports, "curveCatmullRom", {
  enumerable: true,
  get: function () {
    return _catmullRom.default;
  }
});
Object.defineProperty(exports, "curveLinearClosed", {
  enumerable: true,
  get: function () {
    return _linearClosed.default;
  }
});
Object.defineProperty(exports, "curveLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "curveMonotoneX", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneX;
  }
});
Object.defineProperty(exports, "curveMonotoneY", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneY;
  }
});
Object.defineProperty(exports, "curveNatural", {
  enumerable: true,
  get: function () {
    return _natural.default;
  }
});
Object.defineProperty(exports, "curveStep", {
  enumerable: true,
  get: function () {
    return _step.default;
  }
});
Object.defineProperty(exports, "curveStepAfter", {
  enumerable: true,
  get: function () {
    return _step.stepAfter;
  }
});
Object.defineProperty(exports, "curveStepBefore", {
  enumerable: true,
  get: function () {
    return _step.stepBefore;
  }
});
Object.defineProperty(exports, "stack", {
  enumerable: true,
  get: function () {
    return _stack.default;
  }
});
Object.defineProperty(exports, "stackOffsetExpand", {
  enumerable: true,
  get: function () {
    return _expand.default;
  }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "stackOffsetNone", {
  enumerable: true,
  get: function () {
    return _none.default;
  }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
  enumerable: true,
  get: function () {
    return _silhouette.default;
  }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
  enumerable: true,
  get: function () {
    return _wiggle.default;
  }
});
Object.defineProperty(exports, "stackOrderAppearance", {
  enumerable: true,
  get: function () {
    return _appearance.default;
  }
});
Object.defineProperty(exports, "stackOrderAscending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "stackOrderDescending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
  enumerable: true,
  get: function () {
    return _insideOut.default;
  }
});
Object.defineProperty(exports, "stackOrderNone", {
  enumerable: true,
  get: function () {
    return _none2.default;
  }
});
Object.defineProperty(exports, "stackOrderReverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});

var _arc = _interopRequireDefault(require("./arc.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _pie = _interopRequireDefault(require("./pie.js"));

var _areaRadial = _interopRequireDefault(require("./areaRadial.js"));

var _lineRadial = _interopRequireDefault(require("./lineRadial.js"));

var _pointRadial = _interopRequireDefault(require("./pointRadial.js"));

var _index = require("./link/index.js");

var _symbol = _interopRequireWildcard(require("./symbol.js"));

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _basisClosed = _interopRequireDefault(require("./curve/basisClosed.js"));

var _basisOpen = _interopRequireDefault(require("./curve/basisOpen.js"));

var _basis = _interopRequireDefault(require("./curve/basis.js"));

var _bundle = _interopRequireDefault(require("./curve/bundle.js"));

var _cardinalClosed = _interopRequireDefault(require("./curve/cardinalClosed.js"));

var _cardinalOpen = _interopRequireDefault(require("./curve/cardinalOpen.js"));

var _cardinal = _interopRequireDefault(require("./curve/cardinal.js"));

var _catmullRomClosed = _interopRequireDefault(require("./curve/catmullRomClosed.js"));

var _catmullRomOpen = _interopRequireDefault(require("./curve/catmullRomOpen.js"));

var _catmullRom = _interopRequireDefault(require("./curve/catmullRom.js"));

var _linearClosed = _interopRequireDefault(require("./curve/linearClosed.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _monotone = require("./curve/monotone.js");

var _natural = _interopRequireDefault(require("./curve/natural.js"));

var _step = _interopRequireWildcard(require("./curve/step.js"));

var _stack = _interopRequireDefault(require("./stack.js"));

var _expand = _interopRequireDefault(require("./offset/expand.js"));

var _diverging = _interopRequireDefault(require("./offset/diverging.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _silhouette = _interopRequireDefault(require("./offset/silhouette.js"));

var _wiggle = _interopRequireDefault(require("./offset/wiggle.js"));

var _appearance = _interopRequireDefault(require("./order/appearance.js"));

var _ascending = _interopRequireDefault(require("./order/ascending.js"));

var _descending = _interopRequireDefault(require("./order/descending.js"));

var _insideOut = _interopRequireDefault(require("./order/insideOut.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

var _reverse = _interopRequireDefault(require("./order/reverse.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./arc.js":"BL7I","./area.js":"IYvJ","./line.js":"KhHE","./pie.js":"bAZU","./areaRadial.js":"T5gn","./lineRadial.js":"faWF","./pointRadial.js":"vzjT","./link/index.js":"npGN","./symbol.js":"bBhM","./symbol/circle.js":"zjv7","./symbol/cross.js":"PTh9","./symbol/diamond.js":"fuDX","./symbol/square.js":"bj9s","./symbol/star.js":"L5Ql","./symbol/triangle.js":"owZx","./symbol/wye.js":"UZQY","./curve/basisClosed.js":"FS5M","./curve/basisOpen.js":"feGb","./curve/basis.js":"cx05","./curve/bundle.js":"iAgm","./curve/cardinalClosed.js":"FUQi","./curve/cardinalOpen.js":"iWbK","./curve/cardinal.js":"DORS","./curve/catmullRomClosed.js":"AW0P","./curve/catmullRomOpen.js":"PGVM","./curve/catmullRom.js":"oFi9","./curve/linearClosed.js":"c2vC","./curve/linear.js":"L3Qx","./curve/monotone.js":"DNx2","./curve/natural.js":"qyH2","./curve/step.js":"SIad","./stack.js":"k9Ur","./offset/expand.js":"WOsM","./offset/diverging.js":"PS7K","./offset/none.js":"jW6Y","./offset/silhouette.js":"UGaf","./offset/wiggle.js":"zv8R","./order/appearance.js":"Uz9Z","./order/ascending.js":"Z1jP","./order/descending.js":"oyxb","./order/insideOut.js":"cmz2","./order/none.js":"NTwk","./order/reverse.js":"MoW7"}],"Xind":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(d) {
  return d[0];
}

function y(d) {
  return d[1];
}
},{}],"getm":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RedBlackNode = RedBlackNode;
exports.default = void 0;

function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}

RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function (after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;

      if (after.R) {
        after = after.R;

        while (after.L) after = after.L;

        after.L = node;
      } else {
        after.R = node;
      }

      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }

    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;

    while (parent && parent.C) {
      grandpa = parent.U;

      if (parent === grandpa.L) {
        uncle = grandpa.R;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }

      parent = after.U;
    }

    this._.C = false;
  },
  remove: function (node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;
    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;

      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;

    if (node && node.C) {
      node.C = false;
      return;
    }

    do {
      if (node === this._) break;

      if (node === parent.L) {
        sibling = parent.R;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }

          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }

          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }

      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) node = node.L;

  return node;
}

var _default = RedBlackTree;
exports.default = _default;
},{}],"R6Hk":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createEdge = createEdge;
exports.createBorderEdge = createBorderEdge;
exports.setEdgeEnd = setEdgeEnd;
exports.clipEdges = clipEdges;

var _Diagram = require("./Diagram");

function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram.edges.push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);

  _Diagram.cells[left.index].halfedges.push(index);

  _Diagram.cells[right.index].halfedges.push(index);

  return edge;
}

function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}

function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
} // Liang–Barsky line clipping.


function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;
  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;

    if (lx > rx) {
      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;

    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram.edges.length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram.edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram.epsilon || Math.abs(edge[0][1] - edge[1][1]) > _Diagram.epsilon)) {
      delete _Diagram.edges[i];
    }
  }
}
},{"./Diagram":"ZmLv"}],"bFev":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCell = createCell;
exports.cellHalfedgeStart = cellHalfedgeStart;
exports.cellHalfedgeEnd = cellHalfedgeEnd;
exports.sortCellHalfedges = sortCellHalfedges;
exports.clipCells = clipCells;

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

function createCell(site) {
  return _Diagram.cells[site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}

function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}

function sortCellHalfedges() {
  for (var i = 0, n = _Diagram.cells.length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram.cells[i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);

      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram.edges[halfedges[j]]);

      index.sort(function (i, j) {
        return array[j] - array[i];
      });

      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];

      for (j = 0; j < m; ++j) halfedges[j] = array[j];
    }
  }
}

function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram.cells.length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length; // Remove any dangling clipped edges.

      while (iHalfedge--) {
        if (!_Diagram.edges[halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      } // Insert any border edges as necessary.


      iHalfedge = 0, nHalfedges = halfedges.length;

      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram.edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram.edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];

        if (Math.abs(endX - startX) > _Diagram.epsilon || Math.abs(endY - startY) > _Diagram.epsilon) {
          halfedges.splice(iHalfedge, 0, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, end, Math.abs(endX - x0) < _Diagram.epsilon && y1 - endY > _Diagram.epsilon ? [x0, Math.abs(startX - x0) < _Diagram.epsilon ? startY : y1] : Math.abs(endY - y1) < _Diagram.epsilon && x1 - endX > _Diagram.epsilon ? [Math.abs(startY - y1) < _Diagram.epsilon ? startX : x1, y1] : Math.abs(endX - x1) < _Diagram.epsilon && endY - y0 > _Diagram.epsilon ? [x1, Math.abs(startX - x1) < _Diagram.epsilon ? startY : y0] : Math.abs(endY - y0) < _Diagram.epsilon && endX - x0 > _Diagram.epsilon ? [Math.abs(startY - y0) < _Diagram.epsilon ? startX : x0, y0] : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  } // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!


  if (cover) {
    var dx,
        dy,
        d2,
        dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram.cells[iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0],
          v01 = [x0, y1],
          v11 = [x1, y1],
          v10 = [x1, y0];
      cover.halfedges.push(_Diagram.edges.push((0, _Edge.createBorderEdge)(site = cover.site, v00, v01)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v01, v11)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v11, v10)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v10, v00)) - 1);
    }
  } // Lastly delete any cells with no edges; these were entirely clipped.


  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram.cells[iCell];
      }
    }
  }
}
},{"./Edge":"R6Hk","./Diagram":"ZmLv"}],"Nay5":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachCircle = attachCircle;
exports.detachCircle = detachCircle;
exports.firstCircle = void 0;

var _RedBlackTree = require("./RedBlackTree");

var _Diagram = require("./Diagram");

var circlePool = [];
var firstCircle;
exports.firstCircle = firstCircle;

function Circle() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;
  if (!lArc || !rArc) return;
  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;
  if (lSite === rSite) return;
  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;
  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram.epsilon2) return;
  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;
  var circle = circlePool.pop() || new Circle();
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;
  var before = null,
      node = _Diagram.circles._;

  while (node) {
    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
      if (node.L) node = node.L;else {
        before = node.P;
        break;
      }
    } else {
      if (node.R) node = node.R;else {
        before = node;
        break;
      }
    }
  }

  _Diagram.circles.insert(before, circle);

  if (!before) exports.firstCircle = firstCircle = circle;
}

function detachCircle(arc) {
  var circle = arc.circle;

  if (circle) {
    if (!circle.P) exports.firstCircle = firstCircle = circle.N;

    _Diagram.circles.remove(circle);

    circlePool.push(circle);
    (0, _RedBlackTree.RedBlackNode)(circle);
    arc.circle = null;
  }
}
},{"./RedBlackTree":"getm","./Diagram":"ZmLv"}],"YRKg":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeBeach = removeBeach;
exports.addBeach = addBeach;

var _RedBlackTree = require("./RedBlackTree");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

var beachPool = [];

function Beach() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.edge = this.site = this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  (0, _Circle.detachCircle)(beach);

  _Diagram.beaches.remove(beach);

  beachPool.push(beach);
  (0, _RedBlackTree.RedBlackNode)(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;

  while (lArc.circle && Math.abs(x - lArc.circle.x) < _Diagram.epsilon && Math.abs(y - lArc.circle.cy) < _Diagram.epsilon) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  (0, _Circle.detachCircle)(lArc);
  var rArc = next;

  while (rArc.circle && Math.abs(x - rArc.circle.x) < _Diagram.epsilon && Math.abs(y - rArc.circle.cy) < _Diagram.epsilon) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  (0, _Circle.detachCircle)(rArc);
  var nArcs = disappearing.length,
      iArc;

  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    (0, _Edge.setEdgeEnd)(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = (0, _Edge.createEdge)(lArc.site, rArc.site, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram.beaches._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram.epsilon) node = node.L;else {
      dxr = x - rightBreakPoint(node, directrix);

      if (dxr > _Diagram.epsilon) {
        if (!node.R) {
          lArc = node;
          break;
        }

        node = node.R;
      } else {
        if (dxl > -_Diagram.epsilon) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram.epsilon) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }

        break;
      }
    }
  }

  (0, _Cell.createCell)(site);
  var newArc = createBeach(site);

  _Diagram.beaches.insert(lArc, newArc);

  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    (0, _Circle.detachCircle)(lArc);
    rArc = createBeach(lArc.site);

    _Diagram.beaches.insert(newArc, rArc);

    newArc.edge = rArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    (0, _Circle.attachCircle)(lArc);
    (0, _Circle.attachCircle)(rArc);
    return;
  }

  if (!rArc) {
    // && lArc
    newArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    return;
  } // else lArc !== rArc


  (0, _Circle.detachCircle)(lArc);
  (0, _Circle.detachCircle)(rArc);
  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
  (0, _Edge.setEdgeEnd)(rArc.edge, lSite, rSite, vertex);
  newArc.edge = (0, _Edge.createEdge)(lSite, site, null, vertex);
  rArc.edge = (0, _Edge.createEdge)(site, rSite, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;
  if (!pby2) return rfocx;
  var lArc = arc.P;
  if (!lArc) return -Infinity;
  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;
  if (!plby2) return lfocx;
  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;
  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}
},{"./RedBlackTree":"getm","./Cell":"bFev","./Circle":"Nay5","./Edge":"R6Hk","./Diagram":"ZmLv"}],"ZmLv":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Diagram;
exports.edges = exports.circles = exports.cells = exports.beaches = exports.epsilon2 = exports.epsilon = void 0;

var _Beach = require("./Beach");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _RedBlackTree = _interopRequireDefault(require("./RedBlackTree"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var beaches;
exports.beaches = beaches;
var cells;
exports.cells = cells;
var circles;
exports.circles = circles;
var edges;
exports.edges = edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1] || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;
  exports.edges = edges = [];
  exports.cells = cells = new Array(sites.length);
  exports.beaches = beaches = new _RedBlackTree.default();
  exports.circles = circles = new _RedBlackTree.default();

  while (true) {
    circle = _Circle.firstCircle;

    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
      if (site[0] !== x || site[1] !== y) {
        (0, _Beach.addBeach)(site);
        x = site[0], y = site[1];
      }

      site = sites.pop();
    } else if (circle) {
      (0, _Beach.removeBeach)(circle.arc);
    } else {
      break;
    }
  }

  (0, _Cell.sortCellHalfedges)();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    (0, _Edge.clipEdges)(x0, y0, x1, y1);
    (0, _Cell.clipCells)(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;
  exports.beaches = beaches = exports.circles = circles = exports.edges = edges = exports.cells = cells = null;
}

Diagram.prototype = {
  constructor: Diagram,
  polygons: function () {
    var edges = this.edges;
    return this.cells.map(function (cell) {
      var polygon = cell.halfedges.map(function (i) {
        return (0, _Cell.cellHalfedgeStart)(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function () {
    var triangles = [],
        edges = this.edges;
    this.cells.forEach(function (cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;

        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function () {
    return this.edges.filter(function (edge) {
      return edge.right;
    }).map(function (edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function (x, y, radius) {
    var that = this,
        i0,
        i1 = that._found || 0,
        n = that.cells.length,
        cell; // Use the previously-found cell, or start with an arbitrary one.

    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;

    var dx = x - cell.site[0],
        dy = y - cell.site[1],
        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.

    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function (e) {
        var edge = that.edges[e],
            v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0],
            vy = y - v[1],
            v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};
},{"./Beach":"YRKg","./Cell":"bFev","./Circle":"Nay5","./Edge":"R6Hk","./RedBlackTree":"getm"}],"huq3":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _point = require("./point");

var _Diagram = _interopRequireWildcard(require("./Diagram"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      extent = null;

  function voronoi(data) {
    return new _Diagram.default(data.map(function (d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon, Math.round(y(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function (data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function (data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function (data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : x;
  };

  voronoi.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : y;
  };

  voronoi.extent = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
}
},{"./constant":"aCvo","./point":"Xind","./Diagram":"ZmLv"}],"rLIC":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "voronoi", {
  enumerable: true,
  get: function () {
    return _voronoi.default;
  }
});

var _voronoi = _interopRequireDefault(require("./voronoi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./voronoi":"huq3"}],"UMU7":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZoomEvent;

function ZoomEvent(target, type, transform) {
  this.target = target;
  this.type = type;
  this.transform = transform;
}
},{}],"OLQI":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transform = Transform;
exports.default = transform;
exports.identity = void 0;

function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function (k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function (x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function (point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function (x) {
    return x * this.k + this.x;
  },
  applyY: function (y) {
    return y * this.k + this.y;
  },
  invert: function (location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function (x) {
    return (x - this.x) / this.k;
  },
  invertY: function (y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function (x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function (y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function () {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
exports.identity = identity;
transform.prototype = Transform.prototype;

function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;

  return node.__zoom;
}
},{}],"LZWf":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _transform = require("./transform.js");

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var e = this;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;

    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }

    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }

  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform.identity;
}

function defaultWheelDelta() {
  return -_d3Selection.event.deltaY * (_d3Selection.event.deltaMode === 1 ? 0.05 : _d3Selection.event.deltaMode ? 1 : 0.002);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

function _default() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = _d3Interpolate.interpolateZoom,
      listeners = (0, _d3Dispatch.dispatch)("start", "zoom", "end"),
      touchstarting,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform, point) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform, point);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k, p) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p);
  };

  zoom.scaleTo = function (selection, k, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p);
  };

  zoom.translateBy = function (selection, x, y) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    });
  };

  zoom.translateTo = function (selection, x, y, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args),
          e = extent.apply(that, args),
          p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    start: function () {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }

      return this;
    },
    zoom: function (key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function () {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }

      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function wheeled() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0, _d3Selection.mouse)(this); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          (0, _d3Transition.interrupt)(this);
          g.start();
        }

    (0, _noevent.default)();
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, arguments, true),
        v = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0, _d3Selection.mouse)(this),
        x0 = _d3Selection.event.clientX,
        y0 = _d3Selection.event.clientY;
    (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    g.mouse = [p, this.__zoom.invert(p)];
    (0, _d3Transition.interrupt)(this);
    g.start();

    function mousemoved() {
      (0, _noevent.default)();

      if (!g.moved) {
        var dx = _d3Selection.event.clientX - x0,
            dy = _d3Selection.event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0, _d3Selection.mouse)(g.that), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped() {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0, _d3Drag.dragEnable)(_d3Selection.event.view, g.moved);
      (0, _noevent.default)();
      g.end();
    }
  }

  function dblclicked() {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0, _d3Selection.mouse)(this),
        p1 = t0.invert(p0),
        k1 = t0.k * (_d3Selection.event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);
    (0, _noevent.default)();
    if (duration > 0) (0, _d3Selection.select)(this).transition().duration(duration).call(schedule, t1, p0);else (0, _d3Selection.select)(this).call(zoom.transform, t1);
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.touches,
        n = touches.length,
        g = gesture(this, arguments, _d3Selection.event.changedTouches.length === n),
        started,
        i,
        t,
        p;
    (0, _noevent.nopropagation)();

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      (0, _d3Transition.interrupt)(this);
      g.start();
    }
  }

  function touchmoved() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    (0, _noevent.default)();
    if (touchstarting) touchstarting = clearTimeout(touchstarting);
    g.taps = 0;

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t;
    (0, _noevent.nopropagation)();
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {
      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.

      if (g.taps === 2) {
        var p = (0, _d3Selection.select)(this).on("dblclick.zoom");
        if (p) p.apply(this, arguments);
      }
    }
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0, _constant.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  return zoom;
}
},{"d3-dispatch":"D3zY","d3-drag":"kkdU","d3-interpolate":"k9aH","d3-selection":"ysDv","d3-transition":"UqVV","./constant.js":"aCvo","./event.js":"UMU7","./transform.js":"OLQI","./noevent.js":"BxLv"}],"MHdZ":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "zoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "zoomTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "zoomIdentity", {
  enumerable: true,
  get: function () {
    return _transform.identity;
  }
});

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _transform = _interopRequireWildcard(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./zoom.js":"LZWf","./transform.js":"OLQI"}],"UzF0":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  version: true
};
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _package.version;
  }
});

var _package = require("./dist/package.js");

var _d3Array = require("d3-array");

Object.keys(_d3Array).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Array[key];
    }
  });
});

var _d3Axis = require("d3-axis");

Object.keys(_d3Axis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Axis[key];
    }
  });
});

var _d3Brush = require("d3-brush");

Object.keys(_d3Brush).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Brush[key];
    }
  });
});

var _d3Chord = require("d3-chord");

Object.keys(_d3Chord).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Chord[key];
    }
  });
});

var _d3Collection = require("d3-collection");

Object.keys(_d3Collection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Collection[key];
    }
  });
});

var _d3Color = require("d3-color");

Object.keys(_d3Color).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Color[key];
    }
  });
});

var _d3Contour = require("d3-contour");

Object.keys(_d3Contour).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Contour[key];
    }
  });
});

var _d3Dispatch = require("d3-dispatch");

Object.keys(_d3Dispatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dispatch[key];
    }
  });
});

var _d3Drag = require("d3-drag");

Object.keys(_d3Drag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Drag[key];
    }
  });
});

var _d3Dsv = require("d3-dsv");

Object.keys(_d3Dsv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dsv[key];
    }
  });
});

var _d3Ease = require("d3-ease");

Object.keys(_d3Ease).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Ease[key];
    }
  });
});

var _d3Fetch = require("d3-fetch");

Object.keys(_d3Fetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Fetch[key];
    }
  });
});

var _d3Force = require("d3-force");

Object.keys(_d3Force).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Force[key];
    }
  });
});

var _d3Format = require("d3-format");

Object.keys(_d3Format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Format[key];
    }
  });
});

var _d3Geo = require("d3-geo");

Object.keys(_d3Geo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Geo[key];
    }
  });
});

var _d3Hierarchy = require("d3-hierarchy");

Object.keys(_d3Hierarchy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Hierarchy[key];
    }
  });
});

var _d3Interpolate = require("d3-interpolate");

Object.keys(_d3Interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Interpolate[key];
    }
  });
});

var _d3Path = require("d3-path");

Object.keys(_d3Path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Path[key];
    }
  });
});

var _d3Polygon = require("d3-polygon");

Object.keys(_d3Polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Polygon[key];
    }
  });
});

var _d3Quadtree = require("d3-quadtree");

Object.keys(_d3Quadtree).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Quadtree[key];
    }
  });
});

var _d3Random = require("d3-random");

Object.keys(_d3Random).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Random[key];
    }
  });
});

var _d3Scale = require("d3-scale");

Object.keys(_d3Scale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Scale[key];
    }
  });
});

var _d3ScaleChromatic = require("d3-scale-chromatic");

Object.keys(_d3ScaleChromatic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3ScaleChromatic[key];
    }
  });
});

var _d3Selection = require("d3-selection");

Object.keys(_d3Selection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Selection[key];
    }
  });
});

var _d3Shape = require("d3-shape");

Object.keys(_d3Shape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Shape[key];
    }
  });
});

var _d3Time = require("d3-time");

Object.keys(_d3Time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Time[key];
    }
  });
});

var _d3TimeFormat = require("d3-time-format");

Object.keys(_d3TimeFormat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3TimeFormat[key];
    }
  });
});

var _d3Timer = require("d3-timer");

Object.keys(_d3Timer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Timer[key];
    }
  });
});

var _d3Transition = require("d3-transition");

Object.keys(_d3Transition).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Transition[key];
    }
  });
});

var _d3Voronoi = require("d3-voronoi");

Object.keys(_d3Voronoi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Voronoi[key];
    }
  });
});

var _d3Zoom = require("d3-zoom");

Object.keys(_d3Zoom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Zoom[key];
    }
  });
});
},{"./dist/package.js":"pT13","d3-array":"K0bd","d3-axis":"mp0m","d3-brush":"tkh5","d3-chord":"Iy8J","d3-collection":"S3hn","d3-color":"Peej","d3-contour":"SiBy","d3-dispatch":"D3zY","d3-drag":"kkdU","d3-dsv":"EC2w","d3-ease":"pJ11","d3-fetch":"grWT","d3-force":"oYRE","d3-format":"VuZR","d3-geo":"Ah6W","d3-hierarchy":"Kps6","d3-interpolate":"k9aH","d3-path":"OTyq","d3-polygon":"H15P","d3-quadtree":"lUbg","d3-random":"Gz2j","d3-scale":"zL2z","d3-scale-chromatic":"ado2","d3-selection":"ysDv","d3-shape":"maww","d3-time":"hQYG","d3-time-format":"UYpZ","d3-timer":"rdzS","d3-transition":"UqVV","d3-voronoi":"rLIC","d3-zoom":"MHdZ"}],"GqTT":[function(require,module,exports) {
'use strict';
/**
 * Font RegExp helpers.
 */

var weights = 'bold|bolder|lighter|[1-9]00',
    styles = 'italic|oblique',
    variants = 'small-caps',
    stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded',
    units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q',
    string = '\'([^\']+)\'|"([^"]+)"|[\\w\\s-]+'; // [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?
//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]
// https://drafts.csswg.org/css-fonts-3/#font-prop

var weightRe = new RegExp('(' + weights + ') +', 'i');
var styleRe = new RegExp('(' + styles + ') +', 'i');
var variantRe = new RegExp('(' + variants + ') +', 'i');
var stretchRe = new RegExp('(' + stretches + ') +', 'i');
var sizeFamilyRe = new RegExp('([\\d\\.]+)(' + units + ') *' + '((?:' + string + ')( *, *(?:' + string + '))*)');
/**
 * Cache font parsing.
 */

var cache = {};
var defaultHeight = 16; // pt, common browser default

/**
 * Parse font `str`.
 *
 * @param {String} str
 * @return {Object} Parsed font. `size` is in device units. `unit` is the unit
 *   appearing in the input string.
 * @api private
 */

module.exports = function (str) {
  // Cached
  if (cache[str]) return cache[str]; // Try for required properties first.

  var sizeFamily = sizeFamilyRe.exec(str);
  if (!sizeFamily) return; // invalid
  // Default values and required properties

  var font = {
    weight: 'normal',
    style: 'normal',
    stretch: 'normal',
    variant: 'normal',
    size: parseFloat(sizeFamily[1]),
    unit: sizeFamily[2],
    family: sizeFamily[3].replace(/["']/g, '').replace(/ *, */g, ',')
  }; // Optional, unordered properties.

  var weight, style, variant, stretch; // Stop search at `sizeFamily.index`

  var substr = str.substring(0, sizeFamily.index);
  if (weight = weightRe.exec(substr)) font.weight = weight[1];
  if (style = styleRe.exec(substr)) font.style = style[1];
  if (variant = variantRe.exec(substr)) font.variant = variant[1];
  if (stretch = stretchRe.exec(substr)) font.stretch = stretch[1]; // Convert to device units. (`font.unit` is the original unit)
  // TODO: ch, ex

  switch (font.unit) {
    case 'pt':
      font.size /= 0.75;
      break;

    case 'pc':
      font.size *= 16;
      break;

    case 'in':
      font.size *= 96;
      break;

    case 'cm':
      font.size *= 96.0 / 2.54;
      break;

    case 'mm':
      font.size *= 96.0 / 25.4;
      break;

    case '%':
      // TODO disabled because existing unit tests assume 100
      // font.size *= defaultHeight / 100 / 0.75
      break;

    case 'em':
    case 'rem':
      font.size *= defaultHeight / 0.75;
      break;

    case 'q':
      font.size *= 96 / 25.4 / 4;
      break;
  }

  return cache[str] = font;
};
},{}],"MHvi":[function(require,module,exports) {
/* globals document, ImageData */
var parseFont = require('./lib/parse-font');

exports.parseFont = parseFont;

exports.createCanvas = function (width, height) {
  return Object.assign(document.createElement('canvas'), {
    width: width,
    height: height
  });
};

exports.createImageData = function (array, width, height) {
  // Browser implementation of ImageData looks at the number of arguments passed
  switch (arguments.length) {
    case 0:
      return new ImageData();

    case 1:
      return new ImageData(array);

    case 2:
      return new ImageData(array, width);

    default:
      return new ImageData(array, width, height);
  }
};

exports.loadImage = function (src, options) {
  return new Promise(function (resolve, reject) {
    var image = Object.assign(document.createElement('img'), options);

    function cleanup() {
      image.onload = null;
      image.onerror = null;
    }

    image.onload = function () {
      cleanup();
      resolve(image);
    };

    image.onerror = function () {
      cleanup();
      reject(new Error('Failed to load the image "' + src + '"'));
    };

    image.src = src;
  });
};
},{"./lib/parse-font":"GqTT"}],"UHLA":[function(require,module,exports) {
// Word cloud layout by Jason Davies, http://www.jasondavies.com/word-cloud/
// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf
(function (exports) {
  function cloud() {
    var size = [256, 256],
        text = cloudText,
        font = cloudFont,
        fontSize = cloudFontSize,
        fontStyle = cloudFontNormal,
        fontWeight = cloudFontNormal,
        rotate = cloudRotate,
        padding = cloudPadding,
        spiral = archimedeanSpiral,
        words = [],
        timeInterval = Infinity,
        event = d3.dispatch("word", "end"),
        timer = null,
        cloud = {};

    cloud.start = function () {
      var board = zeroArray((size[0] >> 5) * size[1]),
          bounds = null,
          n = words.length,
          i = -1,
          tags = [],
          data = words.map(function (d, i) {
        d.text = text.call(this, d, i);
        d.font = font.call(this, d, i);
        d.style = fontStyle.call(this, d, i);
        d.weight = fontWeight.call(this, d, i);
        d.rotate = rotate.call(this, d, i);
        d.size = ~~fontSize.call(this, d, i);
        d.padding = padding.call(this, d, i);
        return d;
      }).sort(function (a, b) {
        return b.size - a.size;
      });
      if (timer) clearInterval(timer);
      timer = setInterval(step, 0);
      step();
      return cloud;

      function step() {
        var start = +new Date(),
            d;

        while (+new Date() - start < timeInterval && ++i < n && timer) {
          d = data[i];
          d.x = size[0] * (Math.random() + .5) >> 1;
          d.y = size[1] * (Math.random() + .5) >> 1;
          cloudSprite(d, data, i);

          if (d.hasText && place(board, d, bounds)) {
            tags.push(d);
            event.word(d);
            if (bounds) cloudBounds(bounds, d);else bounds = [{
              x: d.x + d.x0,
              y: d.y + d.y0
            }, {
              x: d.x + d.x1,
              y: d.y + d.y1
            }]; // Temporary hack

            d.x -= size[0] >> 1;
            d.y -= size[1] >> 1;
          }
        }

        if (i >= n) {
          cloud.stop();
          event.end(tags, bounds);
        }
      }
    };

    cloud.stop = function () {
      if (timer) {
        clearInterval(timer);
        timer = null;
      }

      return cloud;
    };

    cloud.timeInterval = function (x) {
      if (!arguments.length) return timeInterval;
      timeInterval = x == null ? Infinity : x;
      return cloud;
    };

    function place(board, tag, bounds) {
      var perimeter = [{
        x: 0,
        y: 0
      }, {
        x: size[0],
        y: size[1]
      }],
          startX = tag.x,
          startY = tag.y,
          maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),
          s = spiral(size),
          dt = Math.random() < .5 ? 1 : -1,
          t = -dt,
          dxdy,
          dx,
          dy;

      while (dxdy = s(t += dt)) {
        dx = ~~dxdy[0];
        dy = ~~dxdy[1];
        if (Math.min(dx, dy) > maxDelta) break;
        tag.x = startX + dx;
        tag.y = startY + dy;
        if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue; // TODO only check for collisions within current bounds.

        if (!bounds || !cloudCollide(tag, board, size[0])) {
          if (!bounds || collideRects(tag, bounds)) {
            var sprite = tag.sprite,
                w = tag.width >> 5,
                sw = size[0] >> 5,
                lx = tag.x - (w << 4),
                sx = lx & 0x7f,
                msx = 32 - sx,
                h = tag.y1 - tag.y0,
                x = (tag.y + tag.y0) * sw + (lx >> 5),
                last;

            for (var j = 0; j < h; j++) {
              last = 0;

              for (var i = 0; i <= w; i++) {
                board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);
              }

              x += sw;
            }

            delete tag.sprite;
            return true;
          }
        }
      }

      return false;
    }

    cloud.words = function (x) {
      if (!arguments.length) return words;
      words = x;
      return cloud;
    };

    cloud.size = function (x) {
      if (!arguments.length) return size;
      size = [+x[0], +x[1]];
      return cloud;
    };

    cloud.font = function (x) {
      if (!arguments.length) return font;
      font = d3.functor(x);
      return cloud;
    };

    cloud.fontStyle = function (x) {
      if (!arguments.length) return fontStyle;
      fontStyle = d3.functor(x);
      return cloud;
    };

    cloud.fontWeight = function (x) {
      if (!arguments.length) return fontWeight;
      fontWeight = d3.functor(x);
      return cloud;
    };

    cloud.rotate = function (x) {
      if (!arguments.length) return rotate;
      rotate = d3.functor(x);
      return cloud;
    };

    cloud.text = function (x) {
      if (!arguments.length) return text;
      text = d3.functor(x);
      return cloud;
    };

    cloud.spiral = function (x) {
      if (!arguments.length) return spiral;
      spiral = spirals[x + ""] || x;
      return cloud;
    };

    cloud.fontSize = function (x) {
      if (!arguments.length) return fontSize;
      fontSize = d3.functor(x);
      return cloud;
    };

    cloud.padding = function (x) {
      if (!arguments.length) return padding;
      padding = d3.functor(x);
      return cloud;
    };

    return d3.rebind(cloud, event, "on");
  }

  function cloudText(d) {
    return d.text;
  }

  function cloudFont() {
    return "serif";
  }

  function cloudFontNormal() {
    return "normal";
  }

  function cloudFontSize(d) {
    return Math.sqrt(d.value);
  }

  function cloudRotate() {
    return (~~(Math.random() * 6) - 3) * 30;
  }

  function cloudPadding() {
    return 1;
  } // Fetches a monochrome sprite bitmap for the specified text.
  // Load in batches for speed.


  function cloudSprite(d, data, di) {
    if (d.sprite) return;
    c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);
    var x = 0,
        y = 0,
        maxh = 0,
        n = data.length;
    --di;

    while (++di < n) {
      d = data[di];
      c.save();
      c.font = d.style + " " + d.weight + " " + ~~((d.size + 1) / ratio) + "px " + d.font;
      var w = c.measureText(d.text + "m").width * ratio,
          h = d.size << 1;

      if (d.rotate) {
        var sr = Math.sin(d.rotate * cloudRadians),
            cr = Math.cos(d.rotate * cloudRadians),
            wcr = w * cr,
            wsr = w * sr,
            hcr = h * cr,
            hsr = h * sr;
        w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f >> 5 << 5;
        h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));
      } else {
        w = w + 0x1f >> 5 << 5;
      }

      if (h > maxh) maxh = h;

      if (x + w >= cw << 5) {
        x = 0;
        y += maxh;
        maxh = 0;
      }

      if (y + h >= ch) break;
      c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);
      if (d.rotate) c.rotate(d.rotate * cloudRadians);
      c.fillText(d.text, 0, 0);
      if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);
      c.restore();
      d.width = w;
      d.height = h;
      d.xoff = x;
      d.yoff = y;
      d.x1 = w >> 1;
      d.y1 = h >> 1;
      d.x0 = -d.x1;
      d.y0 = -d.y1;
      d.hasText = true;
      x += w;
    }

    var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,
        sprite = [];

    while (--di >= 0) {
      d = data[di];
      if (!d.hasText) continue;
      var w = d.width,
          w32 = w >> 5,
          h = d.y1 - d.y0; // Zero the buffer

      for (var i = 0; i < h * w32; i++) {
        sprite[i] = 0;
      }

      x = d.xoff;
      if (x == null) return;
      y = d.yoff;
      var seen = 0,
          seenRow = -1;

      for (var j = 0; j < h; j++) {
        for (var i = 0; i < w; i++) {
          var k = w32 * j + (i >> 5),
              m = pixels[(y + j) * (cw << 5) + (x + i) << 2] ? 1 << 31 - i % 32 : 0;
          sprite[k] |= m;
          seen |= m;
        }

        if (seen) seenRow = j;else {
          d.y0++;
          h--;
          j--;
          y++;
        }
      }

      d.y1 = d.y0 + seenRow;
      d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);
    }
  } // Use mask-based collision detection.


  function cloudCollide(tag, board, sw) {
    sw >>= 5;
    var sprite = tag.sprite,
        w = tag.width >> 5,
        lx = tag.x - (w << 4),
        sx = lx & 0x7f,
        msx = 32 - sx,
        h = tag.y1 - tag.y0,
        x = (tag.y + tag.y0) * sw + (lx >> 5),
        last;

    for (var j = 0; j < h; j++) {
      last = 0;

      for (var i = 0; i <= w; i++) {
        if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;
      }

      x += sw;
    }

    return false;
  }

  function cloudBounds(bounds, d) {
    var b0 = bounds[0],
        b1 = bounds[1];
    if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;
    if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;
    if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;
    if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;
  }

  function collideRects(a, b) {
    return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;
  }

  function archimedeanSpiral(size) {
    var e = size[0] / size[1];
    return function (t) {
      return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];
    };
  }

  function rectangularSpiral(size) {
    var dy = 4,
        dx = dy * size[0] / size[1],
        x = 0,
        y = 0;
    return function (t) {
      var sign = t < 0 ? -1 : 1; // See triangular numbers: T_n = n * (n + 1) / 2.

      switch (Math.sqrt(1 + 4 * sign * t) - sign & 3) {
        case 0:
          x += dx;
          break;

        case 1:
          y += dy;
          break;

        case 2:
          x -= dx;
          break;

        default:
          y -= dy;
          break;
      }

      return [x, y];
    };
  } // TODO reuse arrays?


  function zeroArray(n) {
    var a = [],
        i = -1;

    while (++i < n) {
      a[i] = 0;
    }

    return a;
  }

  var cloudRadians = Math.PI / 180,
      cw = 1 << 11 >> 5,
      ch = 1 << 11,
      canvas,
      ratio = 1;

  if (typeof document !== "undefined") {
    canvas = document.createElement("canvas");
    canvas.width = 1;
    canvas.height = 1;
    ratio = Math.sqrt(canvas.getContext("2d").getImageData(0, 0, 1, 1).data.length >> 2);
    canvas.width = (cw << 5) / ratio;
    canvas.height = ch / ratio;
  } else {
    // node-canvas support
    var Canvas = require("canvas");

    canvas = new Canvas(cw << 5, ch);
  }

  var c = canvas.getContext("2d"),
      spirals = {
    archimedean: archimedeanSpiral,
    rectangular: rectangularSpiral
  };
  c.fillStyle = c.strokeStyle = "red";
  c.textAlign = "center";
  exports.cloud = cloud;
})(typeof exports === "undefined" ? d3.layout || (d3.layout = {}) : exports);
},{"canvas":"MHvi"}],"v7RF":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createWordEntries = createWordEntries;
exports.draw = draw;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var natural = require('natural');

var fs = require('fs');

var d3 = require('d3');

var cloud = require('./d3.layout.cloud.js'); // CONSTANTS


var language = "EN";
var defaultCategory = 'N';
var defaultCategoryCapitalized = 'NNP';
var unimportantTags = new Set(['VB', 'VBD', 'VBG', 'VBN', 'VBP', 'VBP', 'IN', 'CC', 'CD', 'DT', 'EX', 'LS', 'MD', 'PDT', 'POS', 'PRP', 'PRP$', 'TO', 'WP', 'WP$', 'WRB', 'WDT', 'RP']);
var throwaways = new Set(['then', 'had', 'they', 'didn', 'how', 'couldn', 'don', 'isn', 'from', 'you', 'just', 'get', 'are', 'will', 'but', 'and', 'all', 'this', 'that', 'what', 'the', 'his', 'her', 'was', 'also', 'there', 'yet', 'not', 'with', 'for', 'its', 'say']);
var lexicon = new natural.Lexicon(language, defaultCategory, defaultCategoryCapitalized);
var ruleSet = new natural.RuleSet('EN');
var tagger = new natural.BrillPOSTagger(lexicon, ruleSet);

function createWordEntries(asin) {
  document.getElementById("wordcloud").innerHTML = ""; // Step 1. open csv corresponding to that asin
  // Step 2. collect 'reviewText' field from each review in the csv

  var reviewTexts = [];
  d3.csv('new_asin/' + asin + '.csv').then(function (data) {
    data.forEach(function (d) {
      reviewTexts.push(d.reviewText);
    });

    if (reviewTexts.length == 0) {
      return;
    }

    ; // Step 3. POS tag each word

    var taggedReviews = [];
    reviewTexts.forEach(function (r) {
      var tokenizer = new natural.WordTokenizer();
      var review_array = tokenizer.tokenize(r);
      var tagged_words = tagger.tag(review_array);
      taggedReviews.push(tagged_words);
    }); // Step 4. Throw out inconsequential words
    // Step 5. create a dictionary of word --> count

    var word_count = new Map();
    var num_words = 0;
    var counted = 0;
    taggedReviews.forEach(function (r) {
      r.taggedWords.forEach(function (w) {
        if (!unimportantTags.has(w.tag) && w.token.length > 2 && !throwaways.has(w.token.toLowerCase())) {
          var token = w.token.toLowerCase();
          num_words += 1;

          if (word_count[token]) {
            word_count[token]++;
          } else {
            word_count[token] = 1;
          }
        }
      });
    });
    var word_array = [];
    Object.entries(word_count).forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      var new_word = [];
      new_word.push(key); // new_word.push(((1.0 * value) / (1.0 * num_words)));
      // new_word.push(value);

      new_word.push(1.0 * value / 10);
      word_array.push(new_word);
    });
    cloud.cloud().size([600, 600]).words(word_array.map(function (d) {
      return {
        text: d[0],
        size: d[1] * 100
      };
    })).padding(5).rotate(function () {
      return ~~(Math.random() * 0) * 90;
    }).font("Impact").fontSize(function (d) {
      return d.size;
    }).on("end", draw).start();
  });
}

function draw(words) {
  var color = d3.scaleLinear().domain([1, words.length]).interpolate(d3.interpolateHcl).range([d3.rgb("#DA4165"), d3.rgb('#06D6A0')]);
  d3.select("#wordcloud").append("svg").attr("width", 750).attr("height", 750).append("g").attr("transform", "translate(300,300)").selectAll("text").data(words).enter().append("text").style("font-size", function (d) {
    return d.size + "px";
  }).style("font-family", "Impact").style("fill", function (d, i) {
    return color(i);
  }).attr("text-anchor", "middle").attr("transform", function (d) {
    return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
  }).text(function (d) {
    return d.text;
  });
}
},{"natural":"ruKG","fs":"rDCW","d3":"UzF0","./d3.layout.cloud.js":"UHLA"}]},{},["v7RF"], null)
//# sourceMappingURL=https://uw-cse442-wi20.github.io/FP-explore-college-majors/word_cloud.16658cb2.js.map